/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 18);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(19);
} else {
  module.exports = __webpack_require__(20);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 1 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (process.env.NODE_ENV !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (process.env.NODE_ENV === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(22);
} else {
  module.exports = __webpack_require__(25);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.timeArray = undefined;
exports.getSelectedYear = getSelectedYear;
exports.getSelectedMonth = getSelectedMonth;
exports.getDisplayedDates = getDisplayedDates;
exports.getEmptyNodes = getEmptyNodes;
exports.getDisplayedColors = getDisplayedColors;
exports.displayFullDayData = displayFullDayData;
exports.displayFullDayNodes = displayFullDayNodes;
exports.getCombinedColors = getCombinedColors;
exports.getSelectedDay = getSelectedDay;
exports.splitDate = splitDate;
exports.getTimeFromPercent = getTimeFromPercent;
exports.format = format;
exports.findGaps = findGaps;
exports.format2 = format2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var timeArray = exports.timeArray = ['00:00', '00:10', '00:20', '00:30', '00:40', '00:50', '01:00', '01:10', '01:20', '01:30', '01:40', '01:50', '02:00', '02:10', '02:20', '02:30', '02:40', '02:50', '03:00', '03:10', '03:20', '03:30', '03:40', '03:50', '04:00', '04:10', '04:20', '04:30', '04:40', '04:50', '05:00', '05:10', '05:20', '05:30', '05:40', '05:50', '06:00', '06:10', '06:20', '06:30', '06:40', '06:50', '07:00', '07:10', '07:20', '07:30', '07:40', '07:50', '08:00', '08:10', '08:20', '08:30', '08:40', '08:50', '09:00', '09:10', '09:20', '09:30', '09:40', '09:50', '10:00', '10:10', '10:20', '10:30', '10:40', '10:50', '11:00', '11:10', '11:20', '11:30', '11:40', '11:50', '12:00', '12:10', '12:20', '12:30', '12:40', '12:50', '13:00', '13:10', '13:20', '13:30', '13:40', '13:50', '14:00', '14:10', '14:20', '14:30', '14:40', '14:50', '15:00', '15:10', '15:20', '15:30', '15:40', '15:50', '16:00', '16:10', '16:20', '16:30', '16:40', '16:50', '17:00', '17:10', '17:20', '17:30', '17:40', '17:50', '18:00', '18:10', '18:20', '18:30', '18:40', '18:50', '19:00', '19:10', '19:20', '19:30', '19:40', '19:50', '20:00', '20:10', '20:20', '20:30', '20:40', '20:50', '21:00', '21:10', '21:20', '21:30', '21:40', '21:50', '22:00', '22:10', '22:20', '22:30', '22:40', '22:50', '23:00', '23:10', '23:20', '23:30', '23:40', '23:50'];

var monthArr = [{ 'month': 'january', 'monthNum': '01', 'monthLen': 31 }, { 'month': 'february', 'monthNum': '02', 'monthLen': 28 }, { 'month': 'march', 'monthNum': '03', 'monthLen': 31 }, { 'month': 'april', 'monthNum': '04', 'monthLen': 30 }, { 'month': 'may', 'monthNum': '05', 'monthLen': 31 }, { 'month': 'june', 'monthNum': '06', 'monthLen': 30 }, { 'month': 'july', 'monthNum': '07', 'monthLen': 31 }, { 'month': 'august', 'monthNum': '08', 'monthLen': 31 }, { 'month': 'september', 'monthNum': '09', 'monthLen': 30 }, { 'month': 'october', 'monthNum': '10', 'monthLen': 31 }, { 'month': 'november', 'monthNum': '11', 'monthLen': 30 }, { 'month': 'december', 'monthNum': '12', 'monthLen': 31 }];
// return correct data for the select year, takes in data as an array of year objects,
// and the selected year
function getSelectedYear(data, year) {

	// find index of year

	for (var i = 0; i < data.length; i++) {

		if (data[i].year == year) {
			// return data at this year
			return data[i].data;
		}
	}

	// if function reaches this there is an issue
	// and the year doesnt exist and shouldn't be selectable
	throw 'Error: Selected year does not exist and should not be selectable';
}

// takes the years data as an object of months, containing an array of months 
// returns the array of days from the month
function getSelectedMonth(data, month) {
	// extract months
	var monthArr = data.months;
	// find index of month
	for (var i = 0; i < monthArr.length; i++) {

		if (monthArr[i].month == month) {
			// return array of days from month
			return monthArr[i].data;
		}
	}
	// if function reaches this there is an issue
	// and the year doesnt exist and shouldn't be selectable
	throw 'Error: Selected month does not exist and should not be selectable';
}

// takes in a display mode, month, week, day, as well as the data, 
// the array of days in the month, and the selected day, month, and year
function getDisplayedDates(data, displayMode, day, month, year) {

	var rawData = data;
	var dataLen = data.length;
	var monthNumber = -1;

	var monthObj = monthArr.find(function (singleMonth) {
		if (singleMonth.month == month) {
			return singleMonth.month;
		}
	});

	if (monthObj != undefined) {
		monthNumber = monthObj.monthNum;
	} else {
		throw 'Error: Trying to match an incorrect month';
	}

	var selectedDate = day + '.' + monthNumber + '.' + year;
	var selectedDateIdx = -1;

	for (var i = 0; i < dataLen; i++) {
		if (data[i].day == selectedDate) {
			selectedDateIdx = i;
		}
	}

	if (displayMode == 'week') {

		if (selectedDateIdx + 7 <= dataLen) {
			var endIdx = selectedDateIdx + 7;
			return data.slice(selectedDateIdx, endIdx);
			return data.slice(startIdx, endIdx);
		} else if (selectedDateIdx + 7 > dataLen && dataLen > 7) {
			var diff = dataLen - (selectedDateIdx + 7);
			var endIdx = 7 + diff;
			endIdx = endIdx + selectedDateIdx;
			var startIdx = selectedDateIdx + diff;

			if (startIdx >= 0) {

				return data.slice(startIdx, endIdx);
			}
		} else {
			var diff = dataLen - (selectedDateIdx + 7);
			var endIdx = 7 + diff;
			endIdx = endIdx + selectedDateIdx;
			var startIdx = selectedDateIdx + diff;
			var dat = data.slice(startIdx, dataLen);

			if (startIdx < 0) {
				var dataWithEmpty = getEmptyNodes(data);
				return dataWithEmpty;
			}
			return dat;

			// TODO: fix this case
		};
	} else if (displayMode == 'day') {

		return [data[selectedDateIdx]];
	}
}

function getEmptyNodes(data) {
	var dataLen = data.length;
	var diff = 7 - dataLen;
	var lastDayIdx = data[dataLen - 1].day;
	var dateObj = splitDate(lastDayIdx);
	var lastDayNum = parseInt(lastDayIdx);

	var monthLen = -1;
	for (var i = 0; i < monthArr.length; i++) {

		if (monthArr[i].monthNum == dateObj.month) {
			monthLen = monthArr[i].monthLen;
		}
	}

	for (var i = 0; i < diff; i++) {
		if (diff + 7 > monthLen) {

			data = data;
		} else {

			lastDayNum = lastDayNum + 1;
			var dayDate = lastDayNum < 10 ? '0' + lastDayNum : lastDayNum;
			var day = dayDate + '.' + dateObj.month + '.' + dateObj.year;
			var emptyObj = { 'day': day, 'times': [] };

			data.push(emptyObj);
		}
	}

	return data;
}

// return the day's colors at the selected time
function getDisplayedColors(data, time) {
	for (var i = 0; i < data.length; i++) {
		if (data[i].time == time) {
			return data[i].colors;
		}
	}
	return [];
}

function displayFullDayData(day) {
	var dataLen = day.times.length;
	var startIdx = 0;
	var endIdx = dataLen - 1;
	var startTime = day.times[startIdx].time;
	var endTime = day.times[endIdx].time;
	var startTimeIdx = timeArray.indexOf(startTime);
	var endTimeIdx = timeArray.indexOf(endTime);
	var diff = endTimeIdx - startTimeIdx;
	var timeLength = timeArray.length;

	if (endIdx == diff) {
		var startChunk = startTimeIdx / timeLength;
		var endChunk = (144 - endTimeIdx) / timeLength;
		var colorChunk = 100 - (startChunk + endChunk) * 100;
		var startPercent = startChunk * 100;
		var endPercent = endChunk * 100;
		var colorPercent = colorChunk;
		var colors = getCombinedColors(day.times);

		return [{ percent: startPercent, missingData: true }, { percent: colorPercent, missingData: false, colors: colors }, { percent: endPercent, missingData: true }];
	} else if (endIdx != diff) {

		var gapsArr = findGaps(day.times);
		var colors = getCombinedColors(day.times);
		var dataArr = [];
		var times = day.times;
		var idx = startTimeIdx;
		var startChunk = startTimeIdx / timeLength;
		var startPercent = startChunk * 100;

		dataArr.push({ percent: startPercent, missingData: true });

		for (var i = 0; i < gapsArr.length; i++) {

			var start = i == 0 ? startTimeIdx / timeLength : gapsArr[i].time1 / timeLength;
			start = start * 100 + '';

			var end = gapsArr[i].time2 / timeLength;
			var size = (gapsArr[i].time2 - gapsArr[i].time1) / timeLength * 100;
			var slice = times.slice(idx, gapsArr[i].time1);
			var size2 = gapsArr[i].time1 - idx + '%';
			var size3 = (gapsArr[i].time1 - idx) / timeLength * 100;
			var size4 = (gapsArr[i].time2 - gapsArr[i].time1) / timeLength * 100;
			var colors = getCombinedColors(slice);

			if (colors.length == 0) {

				var sliceIdx1 = gapsArr[i].gapEnd;
				slice = times.slice(sliceIdx1, idx);
				colors = getCombinedColors(slice);
			}

			dataArr.push({ percent: size3, missingData: false, colors: colors });
			dataArr.push({ percent: size4, missingData: true });

			idx = gapsArr[i].time2;
		}

		if (gapsArr[gapsArr.length - 1].gapEndTime != timeArray[timeLength - 1]) {

			var lastTime = gapsArr[gapsArr.length - 1].gapEndTime;
			var lastTimeIdx = timeArray.indexOf(lastTime);
			var diff = timeLength - lastTimeIdx;
			var size = diff / timeLength * 100;
			var sliceIdx1 = gapsArr[gapsArr.length - 1].gapEnd;
			var sliceIdx2 = times.length - 1;
			var slice = times.slice(sliceIdx1, sliceIdx2);

			var colors = getCombinedColors(slice);

			dataArr.push({ percent: size, missingData: false, colors: colors });

			// dataArr.push({ percent : size, missingData : true })
		}

		return dataArr;
	} else {
		// no gaps, return whole chunk'
		var colors = getCombinedColors(day.times);
		return [{ percent: '100%', missingData: false, colors: colors }];
	}
}

function displayFullDayNodes(fullDayData) {
	var prevPercent = 0;
	var chunkLen = fullDayData.length - 1;

	var nodes = fullDayData.map(function (chunk, i) {
		if (chunk.missingData) {
			var styles = chunkLen == i ? { bottom: 0,
				height: chunk.percent + '%' } : { top: prevPercent + '%',
				height: chunk.percent + '%' };
			prevPercent = prevPercent + chunk.percent;

			return _react2.default.createElement('div', { className: 'tile-chunk empty-chunk', key: 'key-' + i, style: styles });
		} else {
			var styles = chunkLen == i ? { bottom: 0,
				height: chunk.percent + '%' } : { top: prevPercent + '%',
				height: chunk.percent + '%' };

			prevPercent = prevPercent + chunk.percent;

			var gradient1 = 'linear-gradient(' + chunk.colors[0] + ')';
			var gradient2 = 'linear-gradient(' + chunk.colors[1] + ')';
			var gradient3 = 'linear-gradient(' + chunk.colors[2] + ')';
			var gradient4 = 'linear-gradient(' + chunk.colors[3] + ')';

			return _react2.default.createElement(
				'div',
				{ className: 'tile-chunk', key: 'key-' + i, style: styles },
				_react2.default.createElement('div', { className: 'tile-gradient', style: { background: gradient1 } }),
				_react2.default.createElement('div', { className: 'tile-gradient', style: { background: gradient2 } }),
				_react2.default.createElement('div', { className: 'tile-gradient', style: { background: gradient3 } }),
				_react2.default.createElement('div', { className: 'tile-gradient', style: { background: gradient4 } })
			);
		}
	});

	return nodes;
}

function getCombinedColors(timesArr) {
	var colorsArr = [];

	for (var i = 0; i < timesArr.length; i++) {
		var x1 = timesArr[i].colors[0];
		var x2 = timesArr[i].colors[1];
		var x3 = timesArr[i].colors[2];
		var x4 = timesArr[i].colors[3];

		if (i > 0) {
			colorsArr[0] = colorsArr[0] + ', ' + x1;
			colorsArr[1] = colorsArr[1] + ', ' + x2;
			colorsArr[2] = colorsArr[2] + ', ' + x3;
			colorsArr[3] = colorsArr[3] + ', ' + x4;
		} else {
			colorsArr[0] = x1;
			colorsArr[1] = x2;
			colorsArr[2] = x3;
			colorsArr[3] = x4;
		}
	}

	return colorsArr;
}

function getSelectedDay(data, day) {
	var selectedDateIdx = -1;
	for (var i = 0; i < data.length; i++) {
		var dateObj = splitDate(data[i].day);
		if (dateObj.day == day) {
			selectedDateIdx = i;
		}
	}
	return data[selectedDateIdx];
}

// take date in form of dd.mm.yy and split it into a date object
function splitDate(date) {

	var dateArr = date.split('.');
	var dateObj = { "day": dateArr[0], "month": dateArr[1], "year": dateArr[2] };

	return dateObj;
}

function getTimeFromPercent(percent) {
	var timeIdx = Math.floor(percent * 144);
	var time = timeArray[timeIdx];

	return time;
}

function format(data) {
	var objArr = [];
	var day;
	var index = -1;
	for (var i = 0; i < data.length; i++) {
		201712211630;

		var day2 = data[i].date[6] + '' + data[i].date[7];
		var month = data[i].date[4] + '' + data[i].date[5];
		var year = data[i].date[0] + '' + data[i].date[1] + '' + data[i].date[2] + '' + data[i].date[3];
		var time = data[i].date[8] + '' + data[i].date[9] + ':' + data[i].date[10] + "" + data[i].date[11];
		day2 = day2 + '.' + month + '.' + year;

		if (day2 != day) {
			var dayObj = { 'day': day2, times: [] };
			day = day2;
			index = index + 1;
			var colorArr = [];
			for (var j = 0; j < data[i].rgb.length; j++) {

				var arr = data[i].rgb[j];
				var r = Math.floor(arr[0] * 255);
				var g = Math.floor(arr[1] * 255);
				var b = Math.floor(arr[2] * 255);
				var color = 'rgb(' + r + ',' + g + ',' + b + ')';

				colorArr.push(color);
			}

			var colorArr2 = [];
			for (var j = 0; j < 4; j++) {
				var newColor = colorArr[j] + ',' + colorArr[j + 4] + ',' + colorArr[j + 8] + ',' + colorArr[j + 12];
				colorArr2.push(newColor);
			}

			var timeObj = { 'time': time, 'colors': colorArr2 };
			dayObj.times.push(timeObj);
			objArr.push(dayObj);
		} else if (day2 == day) {
			var colorArr = [];
			for (var j = 0; j < data[i].rgb.length; j++) {

				var arr = data[i].rgb[j];
				var r = Math.floor(arr[0] * 255);
				var g = Math.floor(arr[1] * 255);
				var b = Math.floor(arr[2] * 255);
				var color = 'rgb(' + r + ',' + g + ',' + b + ')';

				colorArr.push(color);
			}

			var colorArr2 = [];
			for (var j = 0; j < 4; j++) {
				var newColor = colorArr[j] + ',' + colorArr[j + 4] + ',' + colorArr[j + 8] + ',' + colorArr[j + 12];
				colorArr2.push(newColor);
			}

			var timeObj = { 'time': time, 'colors': colorArr2 };
			objArr[index].times.push(timeObj);
		}
	}
	return objArr;
}

function findGaps(times) {

	var gapsArr = [];
	var foundGap = false;
	var lastIdx = -1;
	var idxOffset = timeArray.indexOf(times[0].time);
	var inGap = false;
	var gapStartIdx = -1;
	var gapCount = -1;
	var ugh = -1;

	for (var i = 0; i < times.length; i++) {
		var offsetI = idxOffset;
		if (times[i].time != timeArray[offsetI] && !inGap) {
			var idx = i - 1;
			var idx2 = offsetI - 1;
			ugh = times[idx].time;
			var gapObject = { 'gapStart': idx,
				'gapEnd': '',
				'gapStartTime': times[idx].time,
				'gapEndTime': '',
				'time1': idx2,
				'time2': '',
				'time3': timeArray[idx2],
				'time4': ''
			};

			gapsArr.push(gapObject);
			gapStartIdx = i;
			gapCount = gapCount + 1;
			inGap = true;
		} else if (times[gapStartIdx] != undefined && times[gapStartIdx].time == timeArray[idxOffset] && inGap) {

			gapsArr[gapCount].gapEnd = gapStartIdx;
			gapsArr[gapCount].gapEndTime = times[gapStartIdx].time;
			gapsArr[gapCount].time2 = offsetI;
			gapsArr[gapCount].time4 = timeArray[offsetI];
			inGap = false;
			i = gapStartIdx;
		} else if (i == times.length - 1 && inGap) {
			i = i - (times.length - 1);
		}

		idxOffset = idxOffset + 1;
	}

	return gapsArr;
}

function format2(data) {
	var arr = [];

	for (var i = 0; i < data.length; i++) {

		if (data[i].date == '201801092040') {

			var dat1 = data.slice(0, i - 1);
			var dat2 = data.slice(i, data.length - 1);

			return [{ 'data': dat1 }, { 'data': dat2 }];
		}
	}
}

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyFunction = __webpack_require__(3);

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(2);

var _App = __webpack_require__(30);

var _App2 = _interopRequireDefault(_App);

var _imageTest = __webpack_require__(39);

var _imageTest2 = _interopRequireDefault(_imageTest);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

__webpack_require__(40);

(0, _reactDom.render)(_react2.default.createElement(_App2.default, null), document.getElementById('app-container'));

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== 'production') {
  var invariant = __webpack_require__(7);
  var warning = __webpack_require__(8);
  var ReactPropTypesSecret = __webpack_require__(21);
  var loggedTypeFailures = {};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var emptyFunction = __webpack_require__(3);

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if (process.env.NODE_ENV !== 'production') {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 *
 * @param {?DOMDocument} doc Defaults to current document.
 * @return {?DOMElement}
 */
function getActiveElement(doc) /*?DOMElement*/{
  doc = doc || (typeof document !== 'undefined' ? document : undefined);
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

module.exports = getActiveElement;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */



var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

var isTextNode = __webpack_require__(23);

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "img/bg1.b5fdec544522887fa5bd3808454cee2b.jpg";

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(9);
__webpack_require__(9);
module.exports = __webpack_require__(46);


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.2.0
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var m=__webpack_require__(4),n=__webpack_require__(5),p=__webpack_require__(3),q="function"===typeof Symbol&&Symbol["for"],r=q?Symbol["for"]("react.element"):60103,t=q?Symbol["for"]("react.call"):60104,u=q?Symbol["for"]("react.return"):60105,v=q?Symbol["for"]("react.portal"):60106,w=q?Symbol["for"]("react.fragment"):60107,x="function"===typeof Symbol&&Symbol.iterator;
function y(a){for(var b=arguments.length-1,e="Minified React error #"+a+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d"+a,c=0;c<b;c++)e+="\x26args[]\x3d"+encodeURIComponent(arguments[c+1]);b=Error(e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name="Invariant Violation";b.framesToPop=1;throw b;}
var z={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function A(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}A.prototype.isReactComponent={};A.prototype.setState=function(a,b){"object"!==typeof a&&"function"!==typeof a&&null!=a?y("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};A.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};
function B(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}function C(){}C.prototype=A.prototype;var D=B.prototype=new C;D.constructor=B;m(D,A.prototype);D.isPureReactComponent=!0;function E(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}var F=E.prototype=new C;F.constructor=E;m(F,A.prototype);F.unstable_isAsyncReactComponent=!0;F.render=function(){return this.props.children};var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};
function J(a,b,e){var c,d={},g=null,k=null;if(null!=b)for(c in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=""+b.key),b)H.call(b,c)&&!I.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var h=Array(f),l=0;l<f;l++)h[l]=arguments[l+2];d.children=h}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:r,type:a,key:g,ref:k,props:d,_owner:G.current}}function K(a){return"object"===typeof a&&null!==a&&a.$$typeof===r}
function escape(a){var b={"\x3d":"\x3d0",":":"\x3d2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var L=/\/+/g,M=[];function N(a,b,e,c){if(M.length){var d=M.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function O(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>M.length&&M.push(a)}
function P(a,b,e,c){var d=typeof a;if("undefined"===d||"boolean"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case r:case t:case u:case v:g=!0}}if(g)return e(c,a,""===b?"."+Q(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+Q(d,k);g+=P(d,f,e,c)}else if(null===a||"undefined"===typeof a?f=null:(f=x&&a[x]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=
f.call(a),k=0;!(d=a.next()).done;)d=d.value,f=b+Q(d,k++),g+=P(d,f,e,c);else"object"===d&&(e=""+a,y("31","[object Object]"===e?"object with keys {"+Object.keys(a).join(", ")+"}":e,""));return g}function Q(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function R(a,b){a.func.call(a.context,b,a.count++)}
function S(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?T(a,c,e,p.thatReturnsArgument):null!=a&&(K(a)&&(b=d+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(L,"$\x26/")+"/")+e,a={$$typeof:r,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function T(a,b,e,c,d){var g="";null!=e&&(g=(""+e).replace(L,"$\x26/")+"/");b=N(b,g,c,d);null==a||P(a,"",S,b);O(b)}
var U={Children:{map:function(a,b,e){if(null==a)return a;var c=[];T(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=N(null,null,b,e);null==a||P(a,"",R,b);O(b)},count:function(a){return null==a?0:P(a,"",p.thatReturnsNull,null)},toArray:function(a){var b=[];T(a,b,null,p.thatReturnsArgument);return b},only:function(a){K(a)?void 0:y("143");return a}},Component:A,PureComponent:B,unstable_AsyncComponent:E,Fragment:w,createElement:J,cloneElement:function(a,b,e){var c=m({},a.props),
d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=G.current);void 0!==b.key&&(d=""+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)H.call(b,h)&&!I.hasOwnProperty(h)&&(c[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)c.children=e;else if(1<h){f=Array(h);for(var l=0;l<h;l++)f[l]=arguments[l+2];c.children=f}return{$$typeof:r,type:a.type,key:d,ref:g,props:c,_owner:k}},createFactory:function(a){var b=J.bind(null,a);b.type=a;return b},
isValidElement:K,version:"16.2.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:G,assign:m}},V=Object.freeze({default:U}),W=V&&U||V;module.exports=W["default"]?W["default"]:W;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.2.0
 * react.development.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var _assign = __webpack_require__(4);
var emptyObject = __webpack_require__(5);
var invariant = __webpack_require__(7);
var warning = __webpack_require__(8);
var emptyFunction = __webpack_require__(3);
var checkPropTypes = __webpack_require__(10);

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.2.0';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol['for'];

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol['for']('react.element') : 0xeac7;
var REACT_CALL_TYPE = hasSymbol ? Symbol['for']('react.call') : 0xeac8;
var REACT_RETURN_TYPE = hasSymbol ? Symbol['for']('react.return') : 0xeac9;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol['for']('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol['for']('react.fragment') : 0xeacb;

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';

function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
    return null;
  }
  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }
  return null;
}

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var constructor = publicInstance.constructor;
    var componentName = constructor && (constructor.displayName || constructor.name) || 'ReactClass';
    var warningKey = componentName + '.' + callerName;
    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }
    warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op.\n\nPlease check the code for the %s component.', callerName, callerName, componentName);
    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

/**
 * Base class helpers for the updating state of a component.
 */
function Component(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
Component.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
        return undefined;
      }
    });
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

/**
 * Base class helpers for the updating state of a component.
 */
function PureComponent(props, context, updater) {
  // Duplicated from Component.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = Component.prototype;
var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent;
// Avoid an extra prototype jump for these methods.
_assign(pureComponentPrototype, Component.prototype);
pureComponentPrototype.isPureReactComponent = true;

function AsyncComponent(props, context, updater) {
  // Duplicated from Component.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

var asyncComponentPrototype = AsyncComponent.prototype = new ComponentDummy();
asyncComponentPrototype.constructor = AsyncComponent;
// Avoid an extra prototype jump for these methods.
_assign(asyncComponentPrototype, Component.prototype);
asyncComponentPrototype.unstable_isAsyncReactComponent = true;
asyncComponentPrototype.render = function () {
  return this.props.children;
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var hasOwnProperty = Object.prototype.hasOwnProperty;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown;
var specialPropRefWarningShown;

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    });
    // self and source are DEV only properties.
    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    });
    // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.
    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */
function createElement(type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}

/**
 * Return a function that produces ReactElements of a given type.
 * See https://reactjs.org/docs/react-api.html#createfactory
 */


function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
}

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */
function cloneElement(element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}

/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var ReactDebugCurrentFrame = {};

{
  // Component that is being worked on
  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var impl = ReactDebugCurrentFrame.getCurrentStack;
    if (impl) {
      return impl();
    }
    return null;
  };
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */
function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

var POOL_SIZE = 10;
var traverseContextPool = [];
function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
  if (traverseContextPool.length) {
    var traverseContext = traverseContextPool.pop();
    traverseContext.result = mapResult;
    traverseContext.keyPrefix = keyPrefix;
    traverseContext.func = mapFunction;
    traverseContext.context = mapContext;
    traverseContext.count = 0;
    return traverseContext;
  } else {
    return {
      result: mapResult,
      keyPrefix: keyPrefix,
      func: mapFunction,
      context: mapContext,
      count: 0
    };
  }
}

function releaseTraverseContext(traverseContext) {
  traverseContext.result = null;
  traverseContext.keyPrefix = null;
  traverseContext.func = null;
  traverseContext.context = null;
  traverseContext.count = 0;
  if (traverseContextPool.length < POOL_SIZE) {
    traverseContextPool.push(traverseContext);
  }
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;
      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_CALL_TYPE:
          case REACT_RETURN_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }
    }
  }

  if (invokeCallback) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (typeof iteratorFn === 'function') {
      {
        // Warn about using Maps as children
        if (iteratorFn === children.entries) {
          warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum());
          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(children);
      var step;
      var ii = 0;
      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getComponentKey(child, ii++);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else if (type === 'object') {
      var addendum = '';
      {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
      }
      var childrenString = '' + children;
      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof component === 'object' && component !== null && component.key != null) {
    // Explicit key
    return escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  releaseTraverseContext(traverseContext);
}

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (isValidElement(mappedChild)) {
      mappedChild = cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  releaseTraverseContext(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
  return children;
}

var describeComponentFrame = function (name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
};

function getComponentName(fiber) {
  var type = fiber.type;

  if (typeof type === 'string') {
    return type;
  }
  if (typeof type === 'function') {
    return type.displayName || type.name;
  }
  return null;
}

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

{
  var currentlyValidatingElement = null;

  var propTypesMisspellWarningShown = false;

  var getDisplayName = function (element) {
    if (element == null) {
      return '#empty';
    } else if (typeof element === 'string' || typeof element === 'number') {
      return '#text';
    } else if (typeof element.type === 'string') {
      return element.type;
    } else if (element.type === REACT_FRAGMENT_TYPE) {
      return 'React.Fragment';
    } else {
      return element.type.displayName || element.type.name || 'Unknown';
    }
  };

  var getStackAddendum = function () {
    var stack = '';
    if (currentlyValidatingElement) {
      var name = getDisplayName(currentlyValidatingElement);
      var owner = currentlyValidatingElement._owner;
      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));
    }
    stack += ReactDebugCurrentFrame.getStackAddendum() || '';
    return stack;
  };

  var VALID_FRAGMENT_PROPS = new Map([['children', true], ['key', true]]);
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current);
    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = '\n\nCheck the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';
  }

  currentlyValidatingElement = element;
  {
    warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());
  }
  currentlyValidatingElement = null;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  var propTypes = componentClass.propTypes;
  if (propTypes) {
    currentlyValidatingElement = element;
    checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);
    currentlyValidatingElement = null;
  } else if (componentClass.PropTypes !== undefined && !propTypesMisspellWarningShown) {
    propTypesMisspellWarningShown = true;
    warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
  }
}

/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */
function validateFragmentProps(fragment) {
  currentlyValidatingElement = fragment;

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = Object.keys(fragment.props)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var key = _step.value;

      if (!VALID_FRAGMENT_PROPS.has(key)) {
        warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());
        break;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator['return']) {
        _iterator['return']();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  if (fragment.ref !== null) {
    warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());
  }

  currentlyValidatingElement = null;
}

function createElementWithValidation(type, props, children) {
  var validType = typeof type === 'string' || typeof type === 'function' || typeof type === 'symbol' || typeof type === 'number';
  // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.
  if (!validType) {
    var info = '';
    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendum(props);
    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    info += getStackAddendum() || '';

    warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info);
  }

  var element = createElement.apply(this, arguments);

  // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.
  if (element == null) {
    return element;
  }

  // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)
  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (typeof type === 'symbol' && type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}

function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  // Legacy hook TODO: Warn if this is accessed
  validatedFactory.type = type;

  {
    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}

function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);
  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }
  validatePropTypes(newElement);
  return newElement;
}

var React = {
  Children: {
    map: mapChildren,
    forEach: forEachChildren,
    count: countChildren,
    toArray: toArray,
    only: onlyChild
  },

  Component: Component,
  PureComponent: PureComponent,
  unstable_AsyncComponent: AsyncComponent,

  Fragment: REACT_FRAGMENT_TYPE,

  createElement: createElementWithValidation,
  cloneElement: cloneElementWithValidation,
  createFactory: createFactoryWithValidation,
  isValidElement: isValidElement,

  version: ReactVersion,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    ReactCurrentOwner: ReactCurrentOwner,
    // Used by renderers to avoid bundling object-assign twice in UMD bundles:
    assign: _assign
  }
};

{
  _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
    // These should not be included in production.
    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
    // TODO: remove in React 17.0.
    ReactComponentTreeHook: {}
  });
}



var React$2 = Object.freeze({
	default: React
});

var React$3 = ( React$2 && React ) || React$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var react = React$3['default'] ? React$3['default'] : React$3;

module.exports = react;
  })();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.2.0
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
var aa=__webpack_require__(0),l=__webpack_require__(11),B=__webpack_require__(4),C=__webpack_require__(3),ba=__webpack_require__(12),da=__webpack_require__(13),ea=__webpack_require__(14),fa=__webpack_require__(15),ia=__webpack_require__(16),D=__webpack_require__(5);
function E(a){for(var b=arguments.length-1,c="Minified React error #"+a+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d"+a,d=0;d<b;d++)c+="\x26args[]\x3d"+encodeURIComponent(arguments[d+1]);b=Error(c+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name="Invariant Violation";b.framesToPop=1;throw b;}aa?void 0:E("227");
var oa={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function pa(a,b){return(a&b)===b}
var ta={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(a){var b=ta,c=a.Properties||{},d=a.DOMAttributeNamespaces||{},e=a.DOMAttributeNames||{};a=a.DOMMutationMethods||{};for(var f in c){ua.hasOwnProperty(f)?E("48",f):void 0;var g=f.toLowerCase(),h=c[f];g={attributeName:g,attributeNamespace:null,propertyName:f,mutationMethod:null,mustUseProperty:pa(h,b.MUST_USE_PROPERTY),
hasBooleanValue:pa(h,b.HAS_BOOLEAN_VALUE),hasNumericValue:pa(h,b.HAS_NUMERIC_VALUE),hasPositiveNumericValue:pa(h,b.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:pa(h,b.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:pa(h,b.HAS_STRING_BOOLEAN_VALUE)};1>=g.hasBooleanValue+g.hasNumericValue+g.hasOverloadedBooleanValue?void 0:E("50",f);e.hasOwnProperty(f)&&(g.attributeName=e[f]);d.hasOwnProperty(f)&&(g.attributeNamespace=d[f]);a.hasOwnProperty(f)&&(g.mutationMethod=a[f]);ua[f]=g}}},ua={};
function va(a,b){if(oa.hasOwnProperty(a)||2<a.length&&("o"===a[0]||"O"===a[0])&&("n"===a[1]||"N"===a[1]))return!1;if(null===b)return!0;switch(typeof b){case "boolean":return oa.hasOwnProperty(a)?a=!0:(b=wa(a))?a=b.hasBooleanValue||b.hasStringBooleanValue||b.hasOverloadedBooleanValue:(a=a.toLowerCase().slice(0,5),a="data-"===a||"aria-"===a),a;case "undefined":case "number":case "string":case "object":return!0;default:return!1}}function wa(a){return ua.hasOwnProperty(a)?ua[a]:null}
var xa=ta,ya=xa.MUST_USE_PROPERTY,K=xa.HAS_BOOLEAN_VALUE,za=xa.HAS_NUMERIC_VALUE,Aa=xa.HAS_POSITIVE_NUMERIC_VALUE,Ba=xa.HAS_OVERLOADED_BOOLEAN_VALUE,Ca=xa.HAS_STRING_BOOLEAN_VALUE,Da={Properties:{allowFullScreen:K,async:K,autoFocus:K,autoPlay:K,capture:Ba,checked:ya|K,cols:Aa,contentEditable:Ca,controls:K,"default":K,defer:K,disabled:K,download:Ba,draggable:Ca,formNoValidate:K,hidden:K,loop:K,multiple:ya|K,muted:ya|K,noValidate:K,open:K,playsInline:K,readOnly:K,required:K,reversed:K,rows:Aa,rowSpan:za,
scoped:K,seamless:K,selected:ya|K,size:Aa,start:za,span:Aa,spellCheck:Ca,style:0,tabIndex:0,itemScope:K,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:Ca},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMMutationMethods:{value:function(a,b){if(null==b)return a.removeAttribute("value");"number"!==a.type||!1===a.hasAttribute("value")?a.setAttribute("value",""+b):a.validity&&!a.validity.badInput&&a.ownerDocument.activeElement!==a&&
a.setAttribute("value",""+b)}}},Ea=xa.HAS_STRING_BOOLEAN_VALUE,M={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},Ga={Properties:{autoReverse:Ea,externalResourcesRequired:Ea,preserveAlpha:Ea},DOMAttributeNames:{autoReverse:"autoReverse",externalResourcesRequired:"externalResourcesRequired",preserveAlpha:"preserveAlpha"},DOMAttributeNamespaces:{xlinkActuate:M.xlink,xlinkArcrole:M.xlink,xlinkHref:M.xlink,xlinkRole:M.xlink,xlinkShow:M.xlink,xlinkTitle:M.xlink,xlinkType:M.xlink,
xmlBase:M.xml,xmlLang:M.xml,xmlSpace:M.xml}},Ha=/[\-\:]([a-z])/g;function Ia(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space".split(" ").forEach(function(a){var b=a.replace(Ha,
Ia);Ga.Properties[b]=0;Ga.DOMAttributeNames[b]=a});xa.injectDOMPropertyConfig(Da);xa.injectDOMPropertyConfig(Ga);
var P={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(a){"function"!==typeof a.invokeGuardedCallback?E("197"):void 0;Ja=a.invokeGuardedCallback}},invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){Ja.apply(P,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){P.invokeGuardedCallback.apply(this,arguments);if(P.hasCaughtError()){var q=P.clearCaughtError();P._hasRethrowError||(P._hasRethrowError=!0,P._rethrowError=
q)}},rethrowCaughtError:function(){return Ka.apply(P,arguments)},hasCaughtError:function(){return P._hasCaughtError},clearCaughtError:function(){if(P._hasCaughtError){var a=P._caughtError;P._caughtError=null;P._hasCaughtError=!1;return a}E("198")}};function Ja(a,b,c,d,e,f,g,h,k){P._hasCaughtError=!1;P._caughtError=null;var q=Array.prototype.slice.call(arguments,3);try{b.apply(c,q)}catch(v){P._caughtError=v,P._hasCaughtError=!0}}
function Ka(){if(P._hasRethrowError){var a=P._rethrowError;P._rethrowError=null;P._hasRethrowError=!1;throw a;}}var La=null,Ma={};
function Na(){if(La)for(var a in Ma){var b=Ma[a],c=La.indexOf(a);-1<c?void 0:E("96",a);if(!Oa[c]){b.extractEvents?void 0:E("97",a);Oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;Pa.hasOwnProperty(h)?E("99",h):void 0;Pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&Qa(k[e],g,h);e=!0}else f.registrationName?(Qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:E("98",d,a)}}}}
function Qa(a,b,c){Ra[a]?E("100",a):void 0;Ra[a]=b;Sa[a]=b.eventTypes[c].dependencies}var Oa=[],Pa={},Ra={},Sa={};function Ta(a){La?E("101"):void 0;La=Array.prototype.slice.call(a);Na()}function Ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];Ma.hasOwnProperty(c)&&Ma[c]===d||(Ma[c]?E("102",c):void 0,Ma[c]=d,b=!0)}b&&Na()}
var Va=Object.freeze({plugins:Oa,eventNameDispatchConfigs:Pa,registrationNameModules:Ra,registrationNameDependencies:Sa,possibleRegistrationNames:null,injectEventPluginOrder:Ta,injectEventPluginsByName:Ua}),Wa=null,Xa=null,Ya=null;function Za(a,b,c,d){b=a.type||"unknown-event";a.currentTarget=Ya(d);P.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}
function $a(a,b){null==b?E("30"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function ab(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var bb=null;
function cb(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Za(a,b,c[e],d[e]);else c&&Za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function db(a){return cb(a,!0)}function gb(a){return cb(a,!1)}var hb={injectEventPluginOrder:Ta,injectEventPluginsByName:Ua};
function ib(a,b){var c=a.stateNode;if(!c)return null;var d=Wa(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;c&&"function"!==typeof c?E("231",b,typeof c):void 0;
return c}function jb(a,b,c,d){for(var e,f=0;f<Oa.length;f++){var g=Oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=$a(e,g))}return e}function kb(a){a&&(bb=$a(bb,a))}function lb(a){var b=bb;bb=null;b&&(a?ab(b,db):ab(b,gb),bb?E("95"):void 0,P.rethrowCaughtError())}var mb=Object.freeze({injection:hb,getListener:ib,extractEvents:jb,enqueueEvents:kb,processEventQueue:lb}),nb=Math.random().toString(36).slice(2),Q="__reactInternalInstance$"+nb,ob="__reactEventHandlers$"+nb;
function pb(a){if(a[Q])return a[Q];for(var b=[];!a[Q];)if(b.push(a),a.parentNode)a=a.parentNode;else return null;var c=void 0,d=a[Q];if(5===d.tag||6===d.tag)return d;for(;a&&(d=a[Q]);a=b.pop())c=d;return c}function qb(a){if(5===a.tag||6===a.tag)return a.stateNode;E("33")}function rb(a){return a[ob]||null}
var sb=Object.freeze({precacheFiberNode:function(a,b){b[Q]=a},getClosestInstanceFromNode:pb,getInstanceFromNode:function(a){a=a[Q];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:qb,getFiberCurrentPropsFromNode:rb,updateFiberProps:function(a,b){a[ob]=b}});function tb(a){do a=a["return"];while(a&&5!==a.tag);return a?a:null}function ub(a,b,c){for(var d=[];a;)d.push(a),a=tb(a);for(a=d.length;0<a--;)b(d[a],"captured",c);for(a=0;a<d.length;a++)b(d[a],"bubbled",c)}
function vb(a,b,c){if(b=ib(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=$a(c._dispatchListeners,b),c._dispatchInstances=$a(c._dispatchInstances,a)}function wb(a){a&&a.dispatchConfig.phasedRegistrationNames&&ub(a._targetInst,vb,a)}function xb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?tb(b):null;ub(b,vb,a)}}
function yb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=ib(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=$a(c._dispatchListeners,b),c._dispatchInstances=$a(c._dispatchInstances,a))}function zb(a){a&&a.dispatchConfig.registrationName&&yb(a._targetInst,null,a)}function Ab(a){ab(a,wb)}
function Bb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=tb(h))g++;h=0;for(var k=f;k;k=tb(k))h++;for(;0<g-h;)e=tb(e),g--;for(;0<h-g;)f=tb(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=tb(e);f=tb(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=tb(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=tb(d)}for(d=0;d<e.length;d++)yb(e[d],"bubbled",a);for(a=c.length;0<a--;)yb(c[a],"captured",b)}
var Cb=Object.freeze({accumulateTwoPhaseDispatches:Ab,accumulateTwoPhaseDispatchesSkipTarget:function(a){ab(a,xb)},accumulateEnterLeaveDispatches:Bb,accumulateDirectDispatches:function(a){ab(a,zb)}}),Db=null;function Eb(){!Db&&l.canUseDOM&&(Db="textContent"in document.documentElement?"textContent":"innerText");return Db}var S={_root:null,_startText:null,_fallbackText:null};
function Fb(){if(S._fallbackText)return S._fallbackText;var a,b=S._startText,c=b.length,d,e=Gb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);S._fallbackText=e.slice(a,1<d?1-d:void 0);return S._fallbackText}function Gb(){return"value"in S._root?S._root.value:S._root[Eb()]}
var Hb="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),Ib={type:null,target:null,currentTarget:C.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
function T(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?C.thatReturnsTrue:C.thatReturnsFalse;this.isPropagationStopped=C.thatReturnsFalse;return this}
B(T.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=C.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=C.thatReturnsTrue)},persist:function(){this.isPersistent=C.thatReturnsTrue},isPersistent:C.thatReturnsFalse,
destructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<Hb.length;a++)this[Hb[a]]=null}});T.Interface=Ib;T.augmentClass=function(a,b){function c(){}c.prototype=this.prototype;var d=new c;B(d,a.prototype);a.prototype=d;a.prototype.constructor=a;a.Interface=B({},this.Interface,b);a.augmentClass=this.augmentClass;Jb(a)};Jb(T);function Kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}
function Lb(a){a instanceof this?void 0:E("223");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Jb(a){a.eventPool=[];a.getPooled=Kb;a.release=Lb}function Mb(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Mb,{data:null});function Nb(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Nb,{data:null});var Pb=[9,13,27,32],Vb=l.canUseDOM&&"CompositionEvent"in window,Wb=null;l.canUseDOM&&"documentMode"in document&&(Wb=document.documentMode);var Xb;
if(Xb=l.canUseDOM&&"TextEvent"in window&&!Wb){var Yb=window.opera;Xb=!("object"===typeof Yb&&"function"===typeof Yb.version&&12>=parseInt(Yb.version(),10))}
var Zb=Xb,$b=l.canUseDOM&&(!Vb||Wb&&8<Wb&&11>=Wb),ac=String.fromCharCode(32),bc={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["topCompositionEnd","topKeyPress","topTextInput","topPaste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
captured:"onCompositionStartCapture"},dependencies:"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")}},cc=!1;
function dc(a,b){switch(a){case "topKeyUp":return-1!==Pb.indexOf(b.keyCode);case "topKeyDown":return 229!==b.keyCode;case "topKeyPress":case "topMouseDown":case "topBlur":return!0;default:return!1}}function ec(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var fc=!1;function gc(a,b){switch(a){case "topCompositionEnd":return ec(b);case "topKeyPress":if(32!==b.which)return null;cc=!0;return ac;case "topTextInput":return a=b.data,a===ac&&cc?null:a;default:return null}}
function hc(a,b){if(fc)return"topCompositionEnd"===a||!Vb&&dc(a,b)?(a=Fb(),S._root=null,S._startText=null,S._fallbackText=null,fc=!1,a):null;switch(a){case "topPaste":return null;case "topKeyPress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "topCompositionEnd":return $b?null:b.data;default:return null}}
var ic={eventTypes:bc,extractEvents:function(a,b,c,d){var e;if(Vb)b:{switch(a){case "topCompositionStart":var f=bc.compositionStart;break b;case "topCompositionEnd":f=bc.compositionEnd;break b;case "topCompositionUpdate":f=bc.compositionUpdate;break b}f=void 0}else fc?dc(a,c)&&(f=bc.compositionEnd):"topKeyDown"===a&&229===c.keyCode&&(f=bc.compositionStart);f?($b&&(fc||f!==bc.compositionStart?f===bc.compositionEnd&&fc&&(e=Fb()):(S._root=d,S._startText=Gb(),fc=!0)),f=Mb.getPooled(f,b,c,d),e?f.data=
e:(e=ec(c),null!==e&&(f.data=e)),Ab(f),e=f):e=null;(a=Zb?gc(a,c):hc(a,c))?(b=Nb.getPooled(bc.beforeInput,b,c,d),b.data=a,Ab(b)):b=null;return[e,b]}},jc=null,kc=null,lc=null;function mc(a){if(a=Xa(a)){jc&&"function"===typeof jc.restoreControlledState?void 0:E("194");var b=Wa(a.stateNode);jc.restoreControlledState(a.stateNode,a.type,b)}}var nc={injectFiberControlledHostComponent:function(a){jc=a}};function oc(a){kc?lc?lc.push(a):lc=[a]:kc=a}
function pc(){if(kc){var a=kc,b=lc;lc=kc=null;mc(a);if(b)for(a=0;a<b.length;a++)mc(b[a])}}var qc=Object.freeze({injection:nc,enqueueStateRestore:oc,restoreStateIfNeeded:pc});function rc(a,b){return a(b)}var sc=!1;function tc(a,b){if(sc)return rc(a,b);sc=!0;try{return rc(a,b)}finally{sc=!1,pc()}}var uc={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};
function vc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!uc[a.type]:"textarea"===b?!0:!1}function wc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var xc;l.canUseDOM&&(xc=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature("",""));
function yc(a,b){if(!l.canUseDOM||b&&!("addEventListener"in document))return!1;b="on"+a;var c=b in document;c||(c=document.createElement("div"),c.setAttribute(b,"return;"),c="function"===typeof c[b]);!c&&xc&&"wheel"===a&&(c=document.implementation.hasFeature("Events.wheel","3.0"));return c}function zc(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function Ac(a){var b=zc(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"function"===typeof c.get&&"function"===typeof c.set)return Object.defineProperty(a,b,{enumerable:c.enumerable,configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=""+a;c.set.call(this,a)}}),{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}
function Bc(a){a._valueTracker||(a._valueTracker=Ac(a))}function Cc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=zc(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Dc={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange".split(" ")}};
function Ec(a,b,c){a=T.getPooled(Dc.change,a,b,c);a.type="change";oc(c);Ab(a);return a}var Fc=null,Gc=null;function Hc(a){kb(a);lb(!1)}function Ic(a){var b=qb(a);if(Cc(b))return a}function Jc(a,b){if("topChange"===a)return b}var Kc=!1;l.canUseDOM&&(Kc=yc("input")&&(!document.documentMode||9<document.documentMode));function Lc(){Fc&&(Fc.detachEvent("onpropertychange",Mc),Gc=Fc=null)}function Mc(a){"value"===a.propertyName&&Ic(Gc)&&(a=Ec(Gc,a,wc(a)),tc(Hc,a))}
function Nc(a,b,c){"topFocus"===a?(Lc(),Fc=b,Gc=c,Fc.attachEvent("onpropertychange",Mc)):"topBlur"===a&&Lc()}function Oc(a){if("topSelectionChange"===a||"topKeyUp"===a||"topKeyDown"===a)return Ic(Gc)}function Pc(a,b){if("topClick"===a)return Ic(b)}function $c(a,b){if("topInput"===a||"topChange"===a)return Ic(b)}
var ad={eventTypes:Dc,_isInputEventSupported:Kc,extractEvents:function(a,b,c,d){var e=b?qb(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if("select"===f||"input"===f&&"file"===e.type)var g=Jc;else if(vc(e))if(Kc)g=$c;else{g=Oc;var h=Nc}else f=e.nodeName,!f||"input"!==f.toLowerCase()||"checkbox"!==e.type&&"radio"!==e.type||(g=Pc);if(g&&(g=g(a,b)))return Ec(g,c,d);h&&h(a,e,b);"topBlur"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&"number"===e.type&&(a=""+e.value,e.getAttribute("value")!==
a&&e.setAttribute("value",a))}};function bd(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(bd,{view:null,detail:null});var cd={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}function fd(a,b,c,d){return T.call(this,a,b,c,d)}
bd.augmentClass(fd,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}});
var gd={mouseEnter:{registrationName:"onMouseEnter",dependencies:["topMouseOut","topMouseOver"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["topMouseOut","topMouseOver"]}},hd={eventTypes:gd,extractEvents:function(a,b,c,d){if("topMouseOver"===a&&(c.relatedTarget||c.fromElement)||"topMouseOut"!==a&&"topMouseOver"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;"topMouseOut"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?pb(b):null):a=null;if(a===
b)return null;var f=null==a?e:qb(a);e=null==b?e:qb(b);var g=fd.getPooled(gd.mouseLeave,a,c,d);g.type="mouseleave";g.target=f;g.relatedTarget=e;c=fd.getPooled(gd.mouseEnter,b,c,d);c.type="mouseenter";c.target=e;c.relatedTarget=f;Bb(g,c,a,b);return[g,c]}},id=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function jd(a){a=a.type;return"string"===typeof a?a:"function"===typeof a?a.displayName||a.name:null}
function kd(a){var b=a;if(a.alternate)for(;b["return"];)b=b["return"];else{if(0!==(b.effectTag&2))return 1;for(;b["return"];)if(b=b["return"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){return(a=a._reactInternalFiber)?2===kd(a):!1}function md(a){2!==kd(a)?E("188"):void 0}
function nd(a){var b=a.alternate;if(!b)return b=kd(a),3===b?E("188"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c["return"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return md(e),a;if(g===d)return md(e),b;g=g.sibling}E("188")}if(c["return"]!==d["return"])c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?
void 0:E("189")}}c.alternate!==d?E("190"):void 0}3!==c.tag?E("188"):void 0;return c.stateNode.current===c?a:b}function od(a){a=nd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child["return"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b["return"]||b["return"]===a)return null;b=b["return"]}b.sibling["return"]=b["return"];b=b.sibling}}return null}
function pd(a){a=nd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child["return"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b["return"]||b["return"]===a)return null;b=b["return"]}b.sibling["return"]=b["return"];b=b.sibling}}return null}var qd=[];
function rd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c["return"];)c=c["return"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=pb(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],sd(a.topLevelType,b,a.nativeEvent,wc(a.nativeEvent))}var td=!0,sd=void 0;function ud(a){td=!!a}function U(a,b,c){return c?ba.listen(c,b,vd.bind(null,a)):null}function wd(a,b,c){return c?ba.capture(c,b,vd.bind(null,a)):null}
function vd(a,b){if(td){var c=wc(b);c=pb(c);null===c||"number"!==typeof c.tag||2===kd(c)||(c=null);if(qd.length){var d=qd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{tc(rd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>qd.length&&qd.push(a)}}}
var xd=Object.freeze({get _enabled(){return td},get _handleTopLevel(){return sd},setHandleTopLevel:function(a){sd=a},setEnabled:ud,isEnabled:function(){return td},trapBubbledEvent:U,trapCapturedEvent:wd,dispatchEvent:vd});function yd(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;c["ms"+a]="MS"+b;c["O"+a]="o"+b.toLowerCase();return c}
var zd={animationend:yd("Animation","AnimationEnd"),animationiteration:yd("Animation","AnimationIteration"),animationstart:yd("Animation","AnimationStart"),transitionend:yd("Transition","TransitionEnd")},Ad={},Bd={};l.canUseDOM&&(Bd=document.createElement("div").style,"AnimationEvent"in window||(delete zd.animationend.animation,delete zd.animationiteration.animation,delete zd.animationstart.animation),"TransitionEvent"in window||delete zd.transitionend.transition);
function Cd(a){if(Ad[a])return Ad[a];if(!zd[a])return a;var b=zd[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Bd)return Ad[a]=b[c];return""}
var Dd={topAbort:"abort",topAnimationEnd:Cd("animationend")||"animationend",topAnimationIteration:Cd("animationiteration")||"animationiteration",topAnimationStart:Cd("animationstart")||"animationstart",topBlur:"blur",topCancel:"cancel",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topClose:"close",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",
topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoad:"load",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",
topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topToggle:"toggle",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",
topTouchStart:"touchstart",topTransitionEnd:Cd("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},Ed={},Fd=0,Gd="_reactListenersID"+(""+Math.random()).slice(2);function Hd(a){Object.prototype.hasOwnProperty.call(a,Gd)||(a[Gd]=Fd++,Ed[a[Gd]]={});return Ed[a[Gd]]}function Id(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
function Jd(a,b){var c=Id(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Id(c)}}function Kd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&"text"===a.type||"textarea"===b||"true"===a.contentEditable)}
var Ld=l.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Md={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange".split(" ")}},Nd=null,Od=null,Pd=null,Qd=!1;
function Rd(a,b){if(Qd||null==Nd||Nd!==da())return null;var c=Nd;"selectionStart"in c&&Kd(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Pd&&ea(Pd,c)?null:(Pd=c,a=T.getPooled(Md.select,Od,a,b),a.type="select",a.target=Nd,Ab(a),a)}
var Sd={eventTypes:Md,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Hd(e);f=Sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?qb(b):window;switch(a){case "topFocus":if(vc(e)||"true"===e.contentEditable)Nd=e,Od=b,Pd=null;break;case "topBlur":Pd=Od=Nd=null;break;case "topMouseDown":Qd=!0;break;case "topContextMenu":case "topMouseUp":return Qd=!1,Rd(c,d);case "topSelectionChange":if(Ld)break;
case "topKeyDown":case "topKeyUp":return Rd(c,d)}return null}};function Td(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Td,{animationName:null,elapsedTime:null,pseudoElement:null});function Ud(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Ud,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}});function Vd(a,b,c,d){return T.call(this,a,b,c,d)}bd.augmentClass(Vd,{relatedTarget:null});
function Wd(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;return 32<=a||13===a?a:0}
var Xd={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Yd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};function Zd(a,b,c,d){return T.call(this,a,b,c,d)}
bd.augmentClass(Zd,{key:function(a){if(a.key){var b=Xd[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=Wd(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Yd[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return"keypress"===a.type?Wd(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===
a.type?Wd(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}});function $d(a,b,c,d){return T.call(this,a,b,c,d)}fd.augmentClass($d,{dataTransfer:null});function ae(a,b,c,d){return T.call(this,a,b,c,d)}bd.augmentClass(ae,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed});function be(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(be,{propertyName:null,elapsedTime:null,pseudoElement:null});
function ce(a,b,c,d){return T.call(this,a,b,c,d)}fd.augmentClass(ce,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null});var de={},ee={};
"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel".split(" ").forEach(function(a){var b=a[0].toUpperCase()+
a.slice(1),c="on"+b;b="top"+b;c={phasedRegistrationNames:{bubbled:c,captured:c+"Capture"},dependencies:[b]};de[a]=c;ee[b]=c});
var fe={eventTypes:de,extractEvents:function(a,b,c,d){var e=ee[a];if(!e)return null;switch(a){case "topKeyPress":if(0===Wd(c))return null;case "topKeyDown":case "topKeyUp":a=Zd;break;case "topBlur":case "topFocus":a=Vd;break;case "topClick":if(2===c.button)return null;case "topDoubleClick":case "topMouseDown":case "topMouseMove":case "topMouseUp":case "topMouseOut":case "topMouseOver":case "topContextMenu":a=fd;break;case "topDrag":case "topDragEnd":case "topDragEnter":case "topDragExit":case "topDragLeave":case "topDragOver":case "topDragStart":case "topDrop":a=
$d;break;case "topTouchCancel":case "topTouchEnd":case "topTouchMove":case "topTouchStart":a=ae;break;case "topAnimationEnd":case "topAnimationIteration":case "topAnimationStart":a=Td;break;case "topTransitionEnd":a=be;break;case "topScroll":a=bd;break;case "topWheel":a=ce;break;case "topCopy":case "topCut":case "topPaste":a=Ud;break;default:a=T}b=a.getPooled(e,b,c,d);Ab(b);return b}};sd=function(a,b,c,d){a=jb(a,b,c,d);kb(a);lb(!1)};hb.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));
Wa=sb.getFiberCurrentPropsFromNode;Xa=sb.getInstanceFromNode;Ya=sb.getNodeFromInstance;hb.injectEventPluginsByName({SimpleEventPlugin:fe,EnterLeaveEventPlugin:hd,ChangeEventPlugin:ad,SelectEventPlugin:Sd,BeforeInputEventPlugin:ic});var ge=[],he=-1;function V(a){0>he||(a.current=ge[he],ge[he]=null,he--)}function W(a,b){he++;ge[he]=a.current;a.current=b}new Set;var ie={current:D},X={current:!1},je=D;function ke(a){return le(a)?je:ie.current}
function me(a,b){var c=a.type.contextTypes;if(!c)return D;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function le(a){return 2===a.tag&&null!=a.type.childContextTypes}function ne(a){le(a)&&(V(X,a),V(ie,a))}
function oe(a,b,c){null!=ie.cursor?E("168"):void 0;W(ie,b,a);W(X,c,a)}function pe(a,b){var c=a.stateNode,d=a.type.childContextTypes;if("function"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:E("108",jd(a)||"Unknown",e);return B({},b,c)}function qe(a){if(!le(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||D;je=ie.current;W(ie,b,a);W(X,X.current,a);return!0}
function re(a,b){var c=a.stateNode;c?void 0:E("169");if(b){var d=pe(a,je);c.__reactInternalMemoizedMergedChildContext=d;V(X,a);V(ie,a);W(ie,d,a)}else V(X,a);W(X,b,a)}
function Y(a,b,c){this.tag=a;this.key=b;this.stateNode=this.type=null;this.sibling=this.child=this["return"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=c;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}
function se(a,b,c){var d=a.alternate;null===d?(d=new Y(a.tag,a.key,a.internalContextTag),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.pendingProps=b;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}
function te(a,b,c){var d=void 0,e=a.type,f=a.key;"function"===typeof e?(d=e.prototype&&e.prototype.isReactComponent?new Y(2,f,b):new Y(0,f,b),d.type=e,d.pendingProps=a.props):"string"===typeof e?(d=new Y(5,f,b),d.type=e,d.pendingProps=a.props):"object"===typeof e&&null!==e&&"number"===typeof e.tag?(d=e,d.pendingProps=a.props):E("130",null==e?e:typeof e,"");d.expirationTime=c;return d}function ue(a,b,c,d){b=new Y(10,d,b);b.pendingProps=a;b.expirationTime=c;return b}
function ve(a,b,c){b=new Y(6,null,b);b.pendingProps=a;b.expirationTime=c;return b}function we(a,b,c){b=new Y(7,a.key,b);b.type=a.handler;b.pendingProps=a;b.expirationTime=c;return b}function xe(a,b,c){a=new Y(9,null,b);a.expirationTime=c;return a}function ye(a,b,c){b=new Y(4,a.key,b);b.pendingProps=a.children||[];b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var ze=null,Ae=null;
function Be(a){return function(b){try{return a(b)}catch(c){}}}function Ce(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);ze=Be(function(a){return b.onCommitFiberRoot(c,a)});Ae=Be(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function De(a){"function"===typeof ze&&ze(a)}function Ee(a){"function"===typeof Ae&&Ae(a)}
function Fe(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function Ge(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}
function He(a,b){var c=a.alternate,d=a.updateQueue;null===d&&(d=a.updateQueue=Fe(null));null!==c?(a=c.updateQueue,null===a&&(a=c.updateQueue=Fe(null))):a=null;a=a!==d?a:null;null===a?Ge(d,b):null===d.last||null===a.last?(Ge(d,b),Ge(a,b)):(Ge(d,b),a.last=b)}function Ie(a,b,c,d){a=a.partialState;return"function"===typeof a?a.call(b,c,d):a}
function Je(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var g=!0,h=c.first,k=!1;null!==h;){var q=h.expirationTime;if(q>f){var v=c.expirationTime;if(0===v||v>q)c.expirationTime=q;k||(k=!0,c.baseState=a)}else{k||(c.first=h.next,null===
c.first&&(c.last=null));if(h.isReplace)a=Ie(h,d,a,e),g=!0;else if(q=Ie(h,d,a,e))a=g?B({},a,q):B(a,q),g=!1;h.isForced&&(c.hasForceUpdate=!0);null!==h.callback&&(q=c.callbackList,null===q&&(q=c.callbackList=[]),q.push(h))}h=h.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||(b.updateQueue=null);k||(c.baseState=a);return a}
function Ke(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;"function"!==typeof e?E("191",e):void 0;e.call(b)}}
function Le(a,b,c,d){function e(a,b){b.updater=f;a.stateNode=b;b._reactInternalFiber=a}var f={isMounted:ld,enqueueSetState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);He(c,{expirationTime:g,partialState:d,callback:e,isReplace:!1,isForced:!1,nextCallback:null,next:null});a(c,g)},enqueueReplaceState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);He(c,{expirationTime:g,partialState:d,callback:e,isReplace:!0,isForced:!1,nextCallback:null,next:null});
a(c,g)},enqueueForceUpdate:function(c,d){c=c._reactInternalFiber;d=void 0===d?null:d;var e=b(c);He(c,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,nextCallback:null,next:null});a(c,e)}};return{adoptClassInstance:e,constructClassInstance:function(a,b){var c=a.type,d=ke(a),f=2===a.tag&&null!=a.type.contextTypes,g=f?me(a,d):D;b=new c(b,g);e(a,b);f&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=d,a.__reactInternalMemoizedMaskedChildContext=g);return b},mountClassInstance:function(a,
b){var c=a.alternate,d=a.stateNode,e=d.state||null,g=a.pendingProps;g?void 0:E("158");var h=ke(a);d.props=g;d.state=a.memoizedState=e;d.refs=D;d.context=me(a,h);null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent&&(a.internalContextTag|=1);"function"===typeof d.componentWillMount&&(e=d.state,d.componentWillMount(),e!==d.state&&f.enqueueReplaceState(d,d.state,null),e=a.updateQueue,null!==e&&(d.state=Je(c,a,e,d,g,b)));"function"===typeof d.componentDidMount&&(a.effectTag|=
4)},updateClassInstance:function(a,b,e){var g=b.stateNode;g.props=b.memoizedProps;g.state=b.memoizedState;var h=b.memoizedProps,k=b.pendingProps;k||(k=h,null==k?E("159"):void 0);var u=g.context,z=ke(b);z=me(b,z);"function"!==typeof g.componentWillReceiveProps||h===k&&u===z||(u=g.state,g.componentWillReceiveProps(k,z),g.state!==u&&f.enqueueReplaceState(g,g.state,null));u=b.memoizedState;e=null!==b.updateQueue?Je(a,b,b.updateQueue,g,k,e):u;if(!(h!==k||u!==e||X.current||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return"function"!==
typeof g.componentDidUpdate||h===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),!1;var G=k;if(null===h||null!==b.updateQueue&&b.updateQueue.hasForceUpdate)G=!0;else{var I=b.stateNode,L=b.type;G="function"===typeof I.shouldComponentUpdate?I.shouldComponentUpdate(G,e,z):L.prototype&&L.prototype.isPureReactComponent?!ea(h,G)||!ea(u,e):!0}G?("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(k,e,z),"function"===typeof g.componentDidUpdate&&(b.effectTag|=4)):("function"!==typeof g.componentDidUpdate||
h===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),c(b,k),d(b,e));g.props=k;g.state=e;g.context=z;return G}}}var Qe="function"===typeof Symbol&&Symbol["for"],Re=Qe?Symbol["for"]("react.element"):60103,Se=Qe?Symbol["for"]("react.call"):60104,Te=Qe?Symbol["for"]("react.return"):60105,Ue=Qe?Symbol["for"]("react.portal"):60106,Ve=Qe?Symbol["for"]("react.fragment"):60107,We="function"===typeof Symbol&&Symbol.iterator;
function Xe(a){if(null===a||"undefined"===typeof a)return null;a=We&&a[We]||a["@@iterator"];return"function"===typeof a?a:null}var Ye=Array.isArray;
function Ze(a,b){var c=b.ref;if(null!==c&&"function"!==typeof c){if(b._owner){b=b._owner;var d=void 0;b&&(2!==b.tag?E("110"):void 0,d=b.stateNode);d?void 0:E("147",c);var e=""+c;if(null!==a&&null!==a.ref&&a.ref._stringRef===e)return a.ref;a=function(a){var b=d.refs===D?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};a._stringRef=e;return a}"string"!==typeof c?E("148"):void 0;b._owner?void 0:E("149",c)}return c}
function $e(a,b){"textarea"!==a.type&&E("31","[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,"")}
function af(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=se(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=ve(c,a.internalContextTag,d),b["return"]=a,b;b=e(b,c,d);b["return"]=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Ze(b,c),d["return"]=a,d;d=te(c,a.internalContextTag,d);d.ref=Ze(b,c);d["return"]=a;return d}function q(a,b,c,d){if(null===b||7!==b.tag)return b=we(c,a.internalContextTag,d),b["return"]=a,b;b=e(b,c,d);
b["return"]=a;return b}function v(a,b,c,d){if(null===b||9!==b.tag)return b=xe(c,a.internalContextTag,d),b.type=c.value,b["return"]=a,b;b=e(b,null,d);b.type=c.value;b["return"]=a;return b}function y(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=ye(c,a.internalContextTag,d),b["return"]=a,b;b=e(b,c.children||[],d);b["return"]=a;return b}function u(a,b,c,d,f){if(null===b||10!==b.tag)return b=ue(c,a.internalContextTag,
d,f),b["return"]=a,b;b=e(b,c,d);b["return"]=a;return b}function z(a,b,c){if("string"===typeof b||"number"===typeof b)return b=ve(""+b,a.internalContextTag,c),b["return"]=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case Re:if(b.type===Ve)return b=ue(b.props.children,a.internalContextTag,c,b.key),b["return"]=a,b;c=te(b,a.internalContextTag,c);c.ref=Ze(null,b);c["return"]=a;return c;case Se:return b=we(b,a.internalContextTag,c),b["return"]=a,b;case Te:return c=xe(b,a.internalContextTag,
c),c.type=b.value,c["return"]=a,c;case Ue:return b=ye(b,a.internalContextTag,c),b["return"]=a,b}if(Ye(b)||Xe(b))return b=ue(b,a.internalContextTag,c,null),b["return"]=a,b;$e(a,b)}return null}function G(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case Re:return c.key===e?c.type===Ve?u(a,b,c.props.children,d,e):k(a,b,c,d):null;case Se:return c.key===e?q(a,b,c,d):null;case Te:return null===
e?v(a,b,c,d):null;case Ue:return c.key===e?y(a,b,c,d):null}if(Ye(c)||Xe(c))return null!==e?null:u(a,b,c,d,null);$e(a,c)}return null}function I(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case Re:return a=a.get(null===d.key?c:d.key)||null,d.type===Ve?u(b,a,d.props.children,e,d.key):k(b,a,d,e);case Se:return a=a.get(null===d.key?c:d.key)||null,q(b,a,d,e);case Te:return a=a.get(c)||null,v(b,a,d,e);case Ue:return a=
a.get(null===d.key?c:d.key)||null,y(b,a,d,e)}if(Ye(d)||Xe(d))return a=a.get(c)||null,u(b,a,d,e,null);$e(b,d)}return null}function L(e,g,m,A){for(var h=null,r=null,n=g,w=g=0,k=null;null!==n&&w<m.length;w++){n.index>w?(k=n,n=null):k=n.sibling;var x=G(e,n,m[w],A);if(null===x){null===n&&(n=k);break}a&&n&&null===x.alternate&&b(e,n);g=f(x,g,w);null===r?h=x:r.sibling=x;r=x;n=k}if(w===m.length)return c(e,n),h;if(null===n){for(;w<m.length;w++)if(n=z(e,m[w],A))g=f(n,g,w),null===r?h=n:r.sibling=n,r=n;return h}for(n=
d(e,n);w<m.length;w++)if(k=I(n,e,w,m[w],A)){if(a&&null!==k.alternate)n["delete"](null===k.key?w:k.key);g=f(k,g,w);null===r?h=k:r.sibling=k;r=k}a&&n.forEach(function(a){return b(e,a)});return h}function N(e,g,m,A){var h=Xe(m);"function"!==typeof h?E("150"):void 0;m=h.call(m);null==m?E("151"):void 0;for(var r=h=null,n=g,w=g=0,k=null,x=m.next();null!==n&&!x.done;w++,x=m.next()){n.index>w?(k=n,n=null):k=n.sibling;var J=G(e,n,x.value,A);if(null===J){n||(n=k);break}a&&n&&null===J.alternate&&b(e,n);g=f(J,
g,w);null===r?h=J:r.sibling=J;r=J;n=k}if(x.done)return c(e,n),h;if(null===n){for(;!x.done;w++,x=m.next())x=z(e,x.value,A),null!==x&&(g=f(x,g,w),null===r?h=x:r.sibling=x,r=x);return h}for(n=d(e,n);!x.done;w++,x=m.next())if(x=I(n,e,w,x.value,A),null!==x){if(a&&null!==x.alternate)n["delete"](null===x.key?w:x.key);g=f(x,g,w);null===r?h=x:r.sibling=x;r=x}a&&n.forEach(function(a){return b(e,a)});return h}return function(a,d,f,h){"object"===typeof f&&null!==f&&f.type===Ve&&null===f.key&&(f=f.props.children);
var m="object"===typeof f&&null!==f;if(m)switch(f.$$typeof){case Re:a:{var r=f.key;for(m=d;null!==m;){if(m.key===r)if(10===m.tag?f.type===Ve:m.type===f.type){c(a,m.sibling);d=e(m,f.type===Ve?f.props.children:f.props,h);d.ref=Ze(m,f);d["return"]=a;a=d;break a}else{c(a,m);break}else b(a,m);m=m.sibling}f.type===Ve?(d=ue(f.props.children,a.internalContextTag,h,f.key),d["return"]=a,a=d):(h=te(f,a.internalContextTag,h),h.ref=Ze(d,f),h["return"]=a,a=h)}return g(a);case Se:a:{for(m=f.key;null!==d;){if(d.key===
m)if(7===d.tag){c(a,d.sibling);d=e(d,f,h);d["return"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=we(f,a.internalContextTag,h);d["return"]=a;a=d}return g(a);case Te:a:{if(null!==d)if(9===d.tag){c(a,d.sibling);d=e(d,null,h);d.type=f.value;d["return"]=a;a=d;break a}else c(a,d);d=xe(f,a.internalContextTag,h);d.type=f.value;d["return"]=a;a=d}return g(a);case Ue:a:{for(m=f.key;null!==d;){if(d.key===m)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===
f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d["return"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=ye(f,a.internalContextTag,h);d["return"]=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h)):(c(a,d),d=ve(f,a.internalContextTag,h)),d["return"]=a,a=d,g(a);if(Ye(f))return L(a,d,f,h);if(Xe(f))return N(a,d,f,h);m&&$e(a,f);if("undefined"===typeof f)switch(a.tag){case 2:case 1:h=a.type,E("152",h.displayName||
h.name||"Component")}return c(a,d)}}var bf=af(!0),cf=af(!1);
function df(a,b,c,d,e){function f(a,b,c){var d=b.expirationTime;b.child=null===a?cf(b,null,c,d):bf(b,a.child,c,d)}function g(a,b){var c=b.ref;null===c||a&&a.ref===c||(b.effectTag|=128)}function h(a,b,c,d){g(a,b);if(!c)return d&&re(b,!1),q(a,b);c=b.stateNode;id.current=b;var e=c.render();b.effectTag|=1;f(a,b,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&re(b,!0);return b.child}function k(a){var b=a.stateNode;b.pendingContext?oe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&oe(a,
b.context,!1);I(a,b.containerInfo)}function q(a,b){null!==a&&b.child!==a.child?E("153"):void 0;if(null!==b.child){a=b.child;var c=se(a,a.pendingProps,a.expirationTime);b.child=c;for(c["return"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=se(a,a.pendingProps,a.expirationTime),c["return"]=b;c.sibling=null}return b.child}function v(a,b){switch(b.tag){case 3:k(b);break;case 2:qe(b);break;case 4:I(b,b.stateNode.containerInfo)}return null}var y=a.shouldSetTextContent,u=a.useSyncScheduling,z=a.shouldDeprioritizeSubtree,
G=b.pushHostContext,I=b.pushHostContainer,L=c.enterHydrationState,N=c.resetHydrationState,J=c.tryToClaimNextHydratableInstance;a=Le(d,e,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var w=a.adoptClassInstance,m=a.constructClassInstance,A=a.mountClassInstance,Ob=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c)return v(a,b);switch(b.tag){case 0:null!==a?E("155"):void 0;var d=b.type,e=b.pendingProps,r=ke(b);r=me(b,r);d=d(e,r);b.effectTag|=
1;"object"===typeof d&&null!==d&&"function"===typeof d.render?(b.tag=2,e=qe(b),w(b,d),A(b,c),b=h(a,b,!0,e)):(b.tag=1,f(a,b,d),b.memoizedProps=e,b=b.child);return b;case 1:a:{e=b.type;c=b.pendingProps;d=b.memoizedProps;if(X.current)null===c&&(c=d);else if(null===c||d===c){b=q(a,b);break a}d=ke(b);d=me(b,d);e=e(c,d);b.effectTag|=1;f(a,b,e);b.memoizedProps=c;b=b.child}return b;case 2:return e=qe(b),d=void 0,null===a?b.stateNode?E("153"):(m(b,b.pendingProps),A(b,c),d=!0):d=Ob(a,b,c),h(a,b,d,e);case 3:return k(b),
e=b.updateQueue,null!==e?(d=b.memoizedState,e=Je(a,b,e,null,null,c),d===e?(N(),b=q(a,b)):(d=e.element,r=b.stateNode,(null===a||null===a.child)&&r.hydrate&&L(b)?(b.effectTag|=2,b.child=cf(b,null,d,c)):(N(),f(a,b,d)),b.memoizedState=e,b=b.child)):(N(),b=q(a,b)),b;case 5:G(b);null===a&&J(b);e=b.type;var n=b.memoizedProps;d=b.pendingProps;null===d&&(d=n,null===d?E("154"):void 0);r=null!==a?a.memoizedProps:null;X.current||null!==d&&n!==d?(n=d.children,y(e,d)?n=null:r&&y(e,r)&&(b.effectTag|=16),g(a,b),
2147483647!==c&&!u&&z(e,d)?(b.expirationTime=2147483647,b=null):(f(a,b,n),b.memoizedProps=d,b=b.child)):b=q(a,b);return b;case 6:return null===a&&J(b),a=b.pendingProps,null===a&&(a=b.memoizedProps),b.memoizedProps=a,null;case 8:b.tag=7;case 7:e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null===e?E("154"):void 0);else if(null===e||b.memoizedProps===e)e=b.memoizedProps;d=e.children;b.stateNode=null===a?cf(b,b.stateNode,d,c):bf(b,b.stateNode,d,c);b.memoizedProps=e;return b.stateNode;
case 9:return null;case 4:a:{I(b,b.stateNode.containerInfo);e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null==e?E("154"):void 0);else if(null===e||b.memoizedProps===e){b=q(a,b);break a}null===a?b.child=bf(b,null,e,c):f(a,b,e);b.memoizedProps=e;b=b.child}return b;case 10:a:{c=b.pendingProps;if(X.current)null===c&&(c=b.memoizedProps);else if(null===c||b.memoizedProps===c){b=q(a,b);break a}f(a,b,c);b.memoizedProps=c;b=b.child}return b;default:E("156")}},beginFailedWork:function(a,b,
c){switch(b.tag){case 2:qe(b);break;case 3:k(b);break;default:E("157")}b.effectTag|=64;null===a?b.child=null:b.child!==a.child&&(b.child=a.child);if(0===b.expirationTime||b.expirationTime>c)return v(a,b);b.firstEffect=null;b.lastEffect=null;b.child=null===a?cf(b,null,null,c):bf(b,a.child,null,c);2===b.tag&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}
function ef(a,b,c){function d(a){a.effectTag|=4}var e=a.createInstance,f=a.createTextInstance,g=a.appendInitialChild,h=a.finalizeInitialChildren,k=a.prepareUpdate,q=a.persistence,v=b.getRootHostContainer,y=b.popHostContext,u=b.getHostContext,z=b.popHostContainer,G=c.prepareToHydrateHostInstance,I=c.prepareToHydrateHostTextInstance,L=c.popHydrationState,N=void 0,J=void 0,w=void 0;a.mutation?(N=function(){},J=function(a,b,c){(b.updateQueue=c)&&d(b)},w=function(a,b,c,e){c!==e&&d(b)}):q?E("235"):E("236");
return{completeWork:function(a,b,c){var m=b.pendingProps;if(null===m)m=b.memoizedProps;else if(2147483647!==b.expirationTime||2147483647===c)b.pendingProps=null;switch(b.tag){case 1:return null;case 2:return ne(b),null;case 3:z(b);V(X,b);V(ie,b);m=b.stateNode;m.pendingContext&&(m.context=m.pendingContext,m.pendingContext=null);if(null===a||null===a.child)L(b),b.effectTag&=-3;N(b);return null;case 5:y(b);c=v();var A=b.type;if(null!==a&&null!=b.stateNode){var p=a.memoizedProps,q=b.stateNode,x=u();q=
k(q,A,p,m,c,x);J(a,b,q,A,p,m,c);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!m)return null===b.stateNode?E("166"):void 0,null;a=u();if(L(b))G(b,c,a)&&d(b);else{a=e(A,m,c,a,b);a:for(p=b.child;null!==p;){if(5===p.tag||6===p.tag)g(a,p.stateNode);else if(4!==p.tag&&null!==p.child){p.child["return"]=p;p=p.child;continue}if(p===b)break;for(;null===p.sibling;){if(null===p["return"]||p["return"]===b)break a;p=p["return"]}p.sibling["return"]=p["return"];p=p.sibling}h(a,A,m,c)&&d(b);b.stateNode=a}null!==b.ref&&
(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)w(a,b,a.memoizedProps,m);else{if("string"!==typeof m)return null===b.stateNode?E("166"):void 0,null;a=v();c=u();L(b)?I(b)&&d(b):b.stateNode=f(m,a,c,b)}return null;case 7:(m=b.memoizedProps)?void 0:E("165");b.tag=8;A=[];a:for((p=b.stateNode)&&(p["return"]=b);null!==p;){if(5===p.tag||6===p.tag||4===p.tag)E("247");else if(9===p.tag)A.push(p.type);else if(null!==p.child){p.child["return"]=p;p=p.child;continue}for(;null===p.sibling;){if(null===
p["return"]||p["return"]===b)break a;p=p["return"]}p.sibling["return"]=p["return"];p=p.sibling}p=m.handler;m=p(m.props,A);b.child=bf(b,null!==a?a.child:null,m,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 10:return null;case 4:return z(b),N(b),null;case 0:E("167");default:E("156")}}}}
function ff(a,b){function c(a){var c=a.ref;if(null!==c)try{c(null)}catch(A){b(a,A)}}function d(a){"function"===typeof Ee&&Ee(a);switch(a.tag){case 2:c(a);var d=a.stateNode;if("function"===typeof d.componentWillUnmount)try{d.props=a.memoizedProps,d.state=a.memoizedState,d.componentWillUnmount()}catch(A){b(a,A)}break;case 5:c(a);break;case 7:e(a.stateNode);break;case 4:k&&g(a)}}function e(a){for(var b=a;;)if(d(b),null===b.child||k&&4===b.tag){if(b===a)break;for(;null===b.sibling;){if(null===b["return"]||
b["return"]===a)return;b=b["return"]}b.sibling["return"]=b["return"];b=b.sibling}else b.child["return"]=b,b=b.child}function f(a){return 5===a.tag||3===a.tag||4===a.tag}function g(a){for(var b=a,c=!1,f=void 0,g=void 0;;){if(!c){c=b["return"];a:for(;;){null===c?E("160"):void 0;switch(c.tag){case 5:f=c.stateNode;g=!1;break a;case 3:f=c.stateNode.containerInfo;g=!0;break a;case 4:f=c.stateNode.containerInfo;g=!0;break a}c=c["return"]}c=!0}if(5===b.tag||6===b.tag)e(b),g?J(f,b.stateNode):N(f,b.stateNode);
else if(4===b.tag?f=b.stateNode.containerInfo:d(b),null!==b.child){b.child["return"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b["return"]||b["return"]===a)return;b=b["return"];4===b.tag&&(c=!1)}b.sibling["return"]=b["return"];b=b.sibling}}var h=a.getPublicInstance,k=a.mutation;a=a.persistence;k||(a?E("235"):E("236"));var q=k.commitMount,v=k.commitUpdate,y=k.resetTextContent,u=k.commitTextUpdate,z=k.appendChild,G=k.appendChildToContainer,I=k.insertBefore,L=k.insertInContainerBefore,
N=k.removeChild,J=k.removeChildFromContainer;return{commitResetTextContent:function(a){y(a.stateNode)},commitPlacement:function(a){a:{for(var b=a["return"];null!==b;){if(f(b)){var c=b;break a}b=b["return"]}E("160");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:E("161")}c.effectTag&16&&(y(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c["return"]||f(c["return"])){c=
null;break a}c=c["return"]}c.sibling["return"]=c["return"];for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child["return"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?L(b,e.stateNode,c):I(b,e.stateNode,c):d?G(b,e.stateNode):z(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child["return"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e["return"]||e["return"]===
a)return;e=e["return"]}e.sibling["return"]=e["return"];e=e.sibling}},commitDeletion:function(a){g(a);a["return"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate["return"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&v(c,f,e,a,d,b)}break;case 6:null===b.stateNode?E("162"):void 0;c=b.memoizedProps;u(b.stateNode,null!==a?a.memoizedProps:
c,c);break;case 3:break;default:E("163")}},commitLifeCycles:function(a,b){switch(b.tag){case 2:var c=b.stateNode;if(b.effectTag&4)if(null===a)c.props=b.memoizedProps,c.state=b.memoizedState,c.componentDidMount();else{var d=a.memoizedProps;a=a.memoizedState;c.props=b.memoizedProps;c.state=b.memoizedState;c.componentDidUpdate(d,a)}b=b.updateQueue;null!==b&&Ke(b,c);break;case 3:c=b.updateQueue;null!==c&&Ke(c,null!==b.child?b.child.stateNode:null);break;case 5:c=b.stateNode;null===a&&b.effectTag&4&&q(c,
b.type,b.memoizedProps,b);break;case 6:break;case 4:break;default:E("163")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:b(h(c));break;default:b(c)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var gf={};
function hf(a){function b(a){a===gf?E("174"):void 0;return a}var c=a.getChildHostContext,d=a.getRootHostContext,e={current:gf},f={current:gf},g={current:gf};return{getHostContext:function(){return b(e.current)},getRootHostContainer:function(){return b(g.current)},popHostContainer:function(a){V(e,a);V(f,a);V(g,a)},popHostContext:function(a){f.current===a&&(V(e,a),V(f,a))},pushHostContainer:function(a,b){W(g,b,a);b=d(b);W(f,a,a);W(e,b,a)},pushHostContext:function(a){var d=b(g.current),h=b(e.current);
d=c(h,a.type,d);h!==d&&(W(f,a,a),W(e,d,a))},resetHostContainer:function(){e.current=gf;g.current=gf}}}
function jf(a){function b(a,b){var c=new Y(5,null,0);c.type="DELETED";c.stateNode=b;c["return"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=g(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a["return"];null!==a&&5!==a.tag&&3!==a.tag;)a=a["return"];y=a}var e=a.shouldSetTextContent;
a=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){E("175")},prepareToHydrateHostTextInstance:function(){E("176")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,g=a.canHydrateTextInstance,h=a.getNextHydratableSibling,k=a.getFirstHydratableChild,q=a.hydrateInstance,v=a.hydrateTextInstance,y=null,u=null,z=!1;return{enterHydrationState:function(a){u=
k(a.stateNode.containerInfo);y=a;return z=!0},resetHydrationState:function(){u=y=null;z=!1},tryToClaimNextHydratableInstance:function(a){if(z){var d=u;if(d){if(!c(a,d)){d=h(d);if(!d||!c(a,d)){a.effectTag|=2;z=!1;y=a;return}b(y,u)}y=a;u=k(d)}else a.effectTag|=2,z=!1,y=a}},prepareToHydrateHostInstance:function(a,b,c){b=q(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return v(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==
y)return!1;if(!z)return d(a),z=!0,!1;var c=a.type;if(5!==a.tag||"head"!==c&&"body"!==c&&!e(c,a.memoizedProps))for(c=u;c;)b(a,c),c=h(c);d(a);u=y?h(a.stateNode):null;return!0}}}
function kf(a){function b(a){Qb=ja=!0;var b=a.stateNode;b.current===a?E("177"):void 0;b.isReadyForCommit=!1;id.current=null;if(1<a.effectTag)if(null!==a.lastEffect){a.lastEffect.nextEffect=a;var c=a.firstEffect}else c=a;else c=a.firstEffect;yg();for(t=c;null!==t;){var d=!1,e=void 0;try{for(;null!==t;){var f=t.effectTag;f&16&&zg(t);if(f&128){var g=t.alternate;null!==g&&Ag(g)}switch(f&-242){case 2:Ne(t);t.effectTag&=-3;break;case 6:Ne(t);t.effectTag&=-3;Oe(t.alternate,t);break;case 4:Oe(t.alternate,
t);break;case 8:Sc=!0,Bg(t),Sc=!1}t=t.nextEffect}}catch(Tc){d=!0,e=Tc}d&&(null===t?E("178"):void 0,h(t,e),null!==t&&(t=t.nextEffect))}Cg();b.current=a;for(t=c;null!==t;){c=!1;d=void 0;try{for(;null!==t;){var k=t.effectTag;k&36&&Dg(t.alternate,t);k&128&&Eg(t);if(k&64)switch(e=t,f=void 0,null!==R&&(f=R.get(e),R["delete"](e),null==f&&null!==e.alternate&&(e=e.alternate,f=R.get(e),R["delete"](e))),null==f?E("184"):void 0,e.tag){case 2:e.stateNode.componentDidCatch(f.error,{componentStack:f.componentStack});
break;case 3:null===ca&&(ca=f.error);break;default:E("157")}var Qc=t.nextEffect;t.nextEffect=null;t=Qc}}catch(Tc){c=!0,d=Tc}c&&(null===t?E("178"):void 0,h(t,d),null!==t&&(t=t.nextEffect))}ja=Qb=!1;"function"===typeof De&&De(a.stateNode);ha&&(ha.forEach(G),ha=null);null!==ca&&(a=ca,ca=null,Ob(a));b=b.current.expirationTime;0===b&&(qa=R=null);return b}function c(a){for(;;){var b=Fg(a.alternate,a,H),c=a["return"],d=a.sibling;var e=a;if(2147483647===H||2147483647!==e.expirationTime){if(2!==e.tag&&3!==
e.tag)var f=0;else f=e.updateQueue,f=null===f?0:f.expirationTime;for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;
if(null!==c)a=c;else{a.stateNode.isReadyForCommit=!0;break}}return null}function d(a){var b=rg(a.alternate,a,H);null===b&&(b=c(a));id.current=null;return b}function e(a){var b=Gg(a.alternate,a,H);null===b&&(b=c(a));id.current=null;return b}function f(a){if(null!==R){if(!(0===H||H>a))if(H<=Uc)for(;null!==F;)F=k(F)?e(F):d(F);else for(;null!==F&&!A();)F=k(F)?e(F):d(F)}else if(!(0===H||H>a))if(H<=Uc)for(;null!==F;)F=d(F);else for(;null!==F&&!A();)F=d(F)}function g(a,b){ja?E("243"):void 0;ja=!0;a.isReadyForCommit=
!1;if(a!==ra||b!==H||null===F){for(;-1<he;)ge[he]=null,he--;je=D;ie.current=D;X.current=!1;x();ra=a;H=b;F=se(ra.current,null,b)}var c=!1,d=null;try{f(b)}catch(Rc){c=!0,d=Rc}for(;c;){if(eb){ca=d;break}var g=F;if(null===g)eb=!0;else{var k=h(g,d);null===k?E("183"):void 0;if(!eb){try{c=k;d=b;for(k=c;null!==g;){switch(g.tag){case 2:ne(g);break;case 5:qg(g);break;case 3:p(g);break;case 4:p(g)}if(g===k||g.alternate===k)break;g=g["return"]}F=e(c);f(d)}catch(Rc){c=!0;d=Rc;continue}break}}}b=ca;eb=ja=!1;ca=
null;null!==b&&Ob(b);return a.isReadyForCommit?a.current.alternate:null}function h(a,b){var c=id.current=null,d=!1,e=!1,f=null;if(3===a.tag)c=a,q(a)&&(eb=!0);else for(var g=a["return"];null!==g&&null===c;){2===g.tag?"function"===typeof g.stateNode.componentDidCatch&&(d=!0,f=jd(g),c=g,e=!0):3===g.tag&&(c=g);if(q(g)){if(Sc||null!==ha&&(ha.has(g)||null!==g.alternate&&ha.has(g.alternate)))return null;c=null;e=!1}g=g["return"]}if(null!==c){null===qa&&(qa=new Set);qa.add(c);var h="";g=a;do{a:switch(g.tag){case 0:case 1:case 2:case 5:var k=
g._debugOwner,Qc=g._debugSource;var m=jd(g);var n=null;k&&(n=jd(k));k=Qc;m="\n    in "+(m||"Unknown")+(k?" (at "+k.fileName.replace(/^.*[\\\/]/,"")+":"+k.lineNumber+")":n?" (created by "+n+")":"");break a;default:m=""}h+=m;g=g["return"]}while(g);g=h;a=jd(a);null===R&&(R=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};R.set(c,b);try{var p=b.error;p&&p.suppressReactErrorLogging||console.error(p)}catch(Vc){Vc&&
Vc.suppressReactErrorLogging||console.error(Vc)}Qb?(null===ha&&(ha=new Set),ha.add(c)):G(c);return c}null===ca&&(ca=b);return null}function k(a){return null!==R&&(R.has(a)||null!==a.alternate&&R.has(a.alternate))}function q(a){return null!==qa&&(qa.has(a)||null!==a.alternate&&qa.has(a.alternate))}function v(){return 20*(((I()+100)/20|0)+1)}function y(a){return 0!==ka?ka:ja?Qb?1:H:!Hg||a.internalContextTag&1?v():1}function u(a,b){return z(a,b,!1)}function z(a,b){for(;null!==a;){if(0===a.expirationTime||
a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a["return"])if(3===a.tag){var c=a.stateNode;!ja&&c===ra&&b<H&&(F=ra=null,H=0);var d=c,e=b;Rb>Ig&&E("185");if(null===d.nextScheduledRoot)d.remainingExpirationTime=e,null===O?(sa=O=d,d.nextScheduledRoot=d):(O=O.nextScheduledRoot=d,O.nextScheduledRoot=sa);else{var f=d.remainingExpirationTime;if(0===f||e<f)d.remainingExpirationTime=e}Fa||(la?
Sb&&(ma=d,na=1,m(ma,na)):1===e?w(1,null):L(e));!ja&&c===ra&&b<H&&(F=ra=null,H=0)}else break;a=a["return"]}}function G(a){z(a,1,!0)}function I(){return Uc=((Wc()-Pe)/10|0)+2}function L(a){if(0!==Tb){if(a>Tb)return;Jg(Xc)}var b=Wc()-Pe;Tb=a;Xc=Kg(J,{timeout:10*(a-2)-b})}function N(){var a=0,b=null;if(null!==O)for(var c=O,d=sa;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===O?E("244"):void 0;if(d===d.nextScheduledRoot){sa=O=d.nextScheduledRoot=null;break}else if(d===sa)sa=e=d.nextScheduledRoot,
O.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===O){O=c;O.nextScheduledRoot=sa;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===O)break;c=d;d=d.nextScheduledRoot}}c=ma;null!==c&&c===b?Rb++:Rb=0;ma=b;na=a}function J(a){w(0,a)}function w(a,b){fb=b;for(N();null!==ma&&0!==na&&(0===a||na<=a)&&!Yc;)m(ma,na),N();null!==fb&&(Tb=0,Xc=-1);0!==na&&L(na);fb=null;Yc=!1;Rb=0;if(Ub)throw a=Zc,Zc=
null,Ub=!1,a;}function m(a,c){Fa?E("245"):void 0;Fa=!0;if(c<=I()){var d=a.finishedWork;null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(a.remainingExpirationTime=b(d)))}else d=a.finishedWork,null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(A()?a.finishedWork=d:a.remainingExpirationTime=b(d)));Fa=!1}function A(){return null===fb||fb.timeRemaining()>Lg?!1:Yc=!0}function Ob(a){null===ma?E("246"):
void 0;ma.remainingExpirationTime=0;Ub||(Ub=!0,Zc=a)}var r=hf(a),n=jf(a),p=r.popHostContainer,qg=r.popHostContext,x=r.resetHostContainer,Me=df(a,r,n,u,y),rg=Me.beginWork,Gg=Me.beginFailedWork,Fg=ef(a,r,n).completeWork;r=ff(a,h);var zg=r.commitResetTextContent,Ne=r.commitPlacement,Bg=r.commitDeletion,Oe=r.commitWork,Dg=r.commitLifeCycles,Eg=r.commitAttachRef,Ag=r.commitDetachRef,Wc=a.now,Kg=a.scheduleDeferredCallback,Jg=a.cancelDeferredCallback,Hg=a.useSyncScheduling,yg=a.prepareForCommit,Cg=a.resetAfterCommit,
Pe=Wc(),Uc=2,ka=0,ja=!1,F=null,ra=null,H=0,t=null,R=null,qa=null,ha=null,ca=null,eb=!1,Qb=!1,Sc=!1,sa=null,O=null,Tb=0,Xc=-1,Fa=!1,ma=null,na=0,Yc=!1,Ub=!1,Zc=null,fb=null,la=!1,Sb=!1,Ig=1E3,Rb=0,Lg=1;return{computeAsyncExpiration:v,computeExpirationForFiber:y,scheduleWork:u,batchedUpdates:function(a,b){var c=la;la=!0;try{return a(b)}finally{(la=c)||Fa||w(1,null)}},unbatchedUpdates:function(a){if(la&&!Sb){Sb=!0;try{return a()}finally{Sb=!1}}return a()},flushSync:function(a){var b=la;la=!0;try{a:{var c=
ka;ka=1;try{var d=a();break a}finally{ka=c}d=void 0}return d}finally{la=b,Fa?E("187"):void 0,w(1,null)}},deferredUpdates:function(a){var b=ka;ka=v();try{return a()}finally{ka=b}}}}
function lf(a){function b(a){a=od(a);return null===a?null:a.stateNode}var c=a.getPublicInstance;a=kf(a);var d=a.computeAsyncExpiration,e=a.computeExpirationForFiber,f=a.scheduleWork;return{createContainer:function(a,b){var c=new Y(3,null,0);a={current:c,containerInfo:a,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:b,nextScheduledRoot:null};return c.stateNode=a},updateContainer:function(a,b,c,q){var g=b.current;if(c){c=
c._reactInternalFiber;var h;b:{2===kd(c)&&2===c.tag?void 0:E("170");for(h=c;3!==h.tag;){if(le(h)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}(h=h["return"])?void 0:E("171")}h=h.stateNode.context}c=le(c)?pe(c,h):h}else c=D;null===b.context?b.context=c:b.pendingContext=c;b=q;b=void 0===b?null:b;q=null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent?d():e(g);He(g,{expirationTime:q,partialState:{element:a},callback:b,isReplace:!1,isForced:!1,
nextCallback:null,next:null});f(g,q)},batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:b,findHostInstanceWithNoPortals:function(a){a=pd(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var c=a.findFiberByHostInstance;return Ce(B({},
a,{findHostInstanceByFiber:function(a){return b(a)},findFiberByHostInstance:function(a){return c?c(a):null}}))}}}var mf=Object.freeze({default:lf}),nf=mf&&lf||mf,of=nf["default"]?nf["default"]:nf;function pf(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ue,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}var qf="object"===typeof performance&&"function"===typeof performance.now,rf=void 0;rf=qf?function(){return performance.now()}:function(){return Date.now()};
var sf=void 0,tf=void 0;
if(l.canUseDOM)if("function"!==typeof requestIdleCallback||"function"!==typeof cancelIdleCallback){var uf=null,vf=!1,wf=-1,xf=!1,yf=0,zf=33,Af=33,Bf;Bf=qf?{didTimeout:!1,timeRemaining:function(){var a=yf-performance.now();return 0<a?a:0}}:{didTimeout:!1,timeRemaining:function(){var a=yf-Date.now();return 0<a?a:0}};var Cf="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(a){if(a.source===window&&a.data===Cf){vf=!1;a=rf();if(0>=yf-a)if(-1!==wf&&wf<=
a)Bf.didTimeout=!0;else{xf||(xf=!0,requestAnimationFrame(Df));return}else Bf.didTimeout=!1;wf=-1;a=uf;uf=null;null!==a&&a(Bf)}},!1);var Df=function(a){xf=!1;var b=a-yf+Af;b<Af&&zf<Af?(8>b&&(b=8),Af=b<zf?zf:b):zf=b;yf=a+Af;vf||(vf=!0,window.postMessage(Cf,"*"))};sf=function(a,b){uf=a;null!=b&&"number"===typeof b.timeout&&(wf=rf()+b.timeout);xf||(xf=!0,requestAnimationFrame(Df));return 0};tf=function(){uf=null;vf=!1;wf=-1}}else sf=window.requestIdleCallback,tf=window.cancelIdleCallback;else sf=function(a){return setTimeout(function(){a({timeRemaining:function(){return Infinity}})})},
tf=function(a){clearTimeout(a)};var Ef=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Ff={},Gf={};
function Hf(a){if(Gf.hasOwnProperty(a))return!0;if(Ff.hasOwnProperty(a))return!1;if(Ef.test(a))return Gf[a]=!0;Ff[a]=!0;return!1}
function If(a,b,c){var d=wa(b);if(d&&va(b,c)){var e=d.mutationMethod;e?e(a,c):null==c||d.hasBooleanValue&&!c||d.hasNumericValue&&isNaN(c)||d.hasPositiveNumericValue&&1>c||d.hasOverloadedBooleanValue&&!1===c?Jf(a,b):d.mustUseProperty?a[d.propertyName]=c:(b=d.attributeName,(e=d.attributeNamespace)?a.setAttributeNS(e,b,""+c):d.hasBooleanValue||d.hasOverloadedBooleanValue&&!0===c?a.setAttribute(b,""):a.setAttribute(b,""+c))}else Kf(a,b,va(b,c)?c:null)}
function Kf(a,b,c){Hf(b)&&(null==c?a.removeAttribute(b):a.setAttribute(b,""+c))}function Jf(a,b){var c=wa(b);c?(b=c.mutationMethod)?b(a,void 0):c.mustUseProperty?a[c.propertyName]=c.hasBooleanValue?!1:"":a.removeAttribute(c.attributeName):a.removeAttribute(b)}
function Lf(a,b){var c=b.value,d=b.checked;return B({type:void 0,step:void 0,min:void 0,max:void 0},b,{defaultChecked:void 0,defaultValue:void 0,value:null!=c?c:a._wrapperState.initialValue,checked:null!=d?d:a._wrapperState.initialChecked})}function Mf(a,b){var c=b.defaultValue;a._wrapperState={initialChecked:null!=b.checked?b.checked:b.defaultChecked,initialValue:null!=b.value?b.value:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}
function Nf(a,b){b=b.checked;null!=b&&If(a,"checked",b)}function Of(a,b){Nf(a,b);var c=b.value;if(null!=c)if(0===c&&""===a.value)a.value="0";else if("number"===b.type){if(b=parseFloat(a.value)||0,c!=b||c==b&&a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else null==b.value&&null!=b.defaultValue&&a.defaultValue!==""+b.defaultValue&&(a.defaultValue=""+b.defaultValue),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function Pf(a,b){switch(b.type){case "submit":case "reset":break;case "color":case "date":case "datetime":case "datetime-local":case "month":case "time":case "week":a.value="";a.value=a.defaultValue;break;default:a.value=a.value}b=a.name;""!==b&&(a.name="");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;""!==b&&(a.name=b)}function Qf(a){var b="";aa.Children.forEach(a,function(a){null==a||"string"!==typeof a&&"number"!==typeof a||(b+=a)});return b}
function Rf(a,b){a=B({children:void 0},b);if(b=Qf(b.children))a.children=b;return a}function Sf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function Tf(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Uf(a,b){null!=b.dangerouslySetInnerHTML?E("91"):void 0;return B({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function Vf(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?E("92"):void 0,Array.isArray(b)&&(1>=b.length?void 0:E("93"),b=b[0]),c=""+b),null==c&&(c=""));a._wrapperState={initialValue:""+c}}
function Wf(a,b){var c=b.value;null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Xf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Yf={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function Zf(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function $f(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Zf(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var ag=void 0,bg=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Yf.svg||"innerHTML"in a)a.innerHTML=b;else{ag=ag||document.createElement("div");ag.innerHTML="\x3csvg\x3e"+b+"\x3c/svg\x3e";for(b=ag.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function cg(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
var dg={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,
stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},eg=["Webkit","ms","Moz","O"];Object.keys(dg).forEach(function(a){eg.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);dg[b]=dg[a]})});
function fg(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--");var e=c;var f=b[c];e=null==f||"boolean"===typeof f||""===f?"":d||"number"!==typeof f||0===f||dg.hasOwnProperty(e)&&dg[e]?(""+f).trim():f+"px";"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var gg=B({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function hg(a,b,c){b&&(gg[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?E("137",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?E("60"):void 0,"object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML?void 0:E("61")),null!=b.style&&"object"!==typeof b.style?E("62",c()):void 0)}
function ig(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var jg=Yf.html,kg=C.thatReturns("");
function lg(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Hd(a);b=Sa[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||("topScroll"===e?wd("topScroll","scroll",a):"topFocus"===e||"topBlur"===e?(wd("topFocus","focus",a),wd("topBlur","blur",a),c.topBlur=!0,c.topFocus=!0):"topCancel"===e?(yc("cancel",!0)&&wd("topCancel","cancel",a),c.topCancel=!0):"topClose"===e?(yc("close",!0)&&wd("topClose","close",a),c.topClose=!0):Dd.hasOwnProperty(e)&&U(e,Dd[e],a),c[e]=!0)}}
var mg={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",
topWaiting:"waiting"};function ng(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===jg&&(d=Zf(a));d===jg?"script"===a?(a=c.createElement("div"),a.innerHTML="\x3cscript\x3e\x3c/script\x3e",a=a.removeChild(a.firstChild)):a="string"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function og(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}
function pg(a,b,c,d){var e=ig(b,c);switch(b){case "iframe":case "object":U("topLoad","load",a);var f=c;break;case "video":case "audio":for(f in mg)mg.hasOwnProperty(f)&&U(f,mg[f],a);f=c;break;case "source":U("topError","error",a);f=c;break;case "img":case "image":U("topError","error",a);U("topLoad","load",a);f=c;break;case "form":U("topReset","reset",a);U("topSubmit","submit",a);f=c;break;case "details":U("topToggle","toggle",a);f=c;break;case "input":Mf(a,c);f=Lf(a,c);U("topInvalid","invalid",a);
lg(d,"onChange");break;case "option":f=Rf(a,c);break;case "select":Tf(a,c);f=B({},c,{value:void 0});U("topInvalid","invalid",a);lg(d,"onChange");break;case "textarea":Vf(a,c);f=Uf(a,c);U("topInvalid","invalid",a);lg(d,"onChange");break;default:f=c}hg(b,f,kg);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];"style"===h?fg(a,k,kg):"dangerouslySetInnerHTML"===h?(k=k?k.__html:void 0,null!=k&&bg(a,k)):"children"===h?"string"===typeof k?("textarea"!==b||""!==k)&&cg(a,k):"number"===typeof k&&cg(a,
""+k):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(Ra.hasOwnProperty(h)?null!=k&&lg(d,h):e?Kf(a,h,k):null!=k&&If(a,h,k))}switch(b){case "input":Bc(a);Pf(a,c);break;case "textarea":Bc(a);Xf(a,c);break;case "option":null!=c.value&&a.setAttribute("value",c.value);break;case "select":a.multiple=!!c.multiple;b=c.value;null!=b?Sf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Sf(a,!!c.multiple,c.defaultValue,!0);break;default:"function"===typeof f.onClick&&(a.onclick=
C)}}
function sg(a,b,c,d,e){var f=null;switch(b){case "input":c=Lf(a,c);d=Lf(a,d);f=[];break;case "option":c=Rf(a,c);d=Rf(a,d);f=[];break;case "select":c=B({},c,{value:void 0});d=B({},d,{value:void 0});f=[];break;case "textarea":c=Uf(a,c);d=Uf(a,d);f=[];break;default:"function"!==typeof c.onClick&&"function"===typeof d.onClick&&(a.onclick=C)}hg(b,d,kg);var g,h;a=null;for(g in c)if(!d.hasOwnProperty(g)&&c.hasOwnProperty(g)&&null!=c[g])if("style"===g)for(h in b=c[g],b)b.hasOwnProperty(h)&&(a||(a={}),a[h]=
"");else"dangerouslySetInnerHTML"!==g&&"children"!==g&&"suppressContentEditableWarning"!==g&&"suppressHydrationWarning"!==g&&"autoFocus"!==g&&(Ra.hasOwnProperty(g)?f||(f=[]):(f=f||[]).push(g,null));for(g in d){var k=d[g];b=null!=c?c[g]:void 0;if(d.hasOwnProperty(g)&&k!==b&&(null!=k||null!=b))if("style"===g)if(b){for(h in b)!b.hasOwnProperty(h)||k&&k.hasOwnProperty(h)||(a||(a={}),a[h]="");for(h in k)k.hasOwnProperty(h)&&b[h]!==k[h]&&(a||(a={}),a[h]=k[h])}else a||(f||(f=[]),f.push(g,a)),a=k;else"dangerouslySetInnerHTML"===
g?(k=k?k.__html:void 0,b=b?b.__html:void 0,null!=k&&b!==k&&(f=f||[]).push(g,""+k)):"children"===g?b===k||"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(g,""+k):"suppressContentEditableWarning"!==g&&"suppressHydrationWarning"!==g&&(Ra.hasOwnProperty(g)?(null!=k&&lg(e,g),f||b===k||(f=[])):(f=f||[]).push(g,k))}a&&(f=f||[]).push("style",a);return f}
function tg(a,b,c,d,e){"input"===c&&"radio"===e.type&&null!=e.name&&Nf(a,e);ig(c,d);d=ig(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];"style"===g?fg(a,h,kg):"dangerouslySetInnerHTML"===g?bg(a,h):"children"===g?cg(a,h):d?null!=h?Kf(a,g,h):a.removeAttribute(g):null!=h?If(a,g,h):Jf(a,g)}switch(c){case "input":Of(a,e);break;case "textarea":Wf(a,e);break;case "select":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Sf(a,
!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?Sf(a,!!e.multiple,e.defaultValue,!0):Sf(a,!!e.multiple,e.multiple?[]:"",!1))}}
function ug(a,b,c,d,e){switch(b){case "iframe":case "object":U("topLoad","load",a);break;case "video":case "audio":for(var f in mg)mg.hasOwnProperty(f)&&U(f,mg[f],a);break;case "source":U("topError","error",a);break;case "img":case "image":U("topError","error",a);U("topLoad","load",a);break;case "form":U("topReset","reset",a);U("topSubmit","submit",a);break;case "details":U("topToggle","toggle",a);break;case "input":Mf(a,c);U("topInvalid","invalid",a);lg(e,"onChange");break;case "select":Tf(a,c);
U("topInvalid","invalid",a);lg(e,"onChange");break;case "textarea":Vf(a,c),U("topInvalid","invalid",a),lg(e,"onChange")}hg(b,c,kg);d=null;for(var g in c)c.hasOwnProperty(g)&&(f=c[g],"children"===g?"string"===typeof f?a.textContent!==f&&(d=["children",f]):"number"===typeof f&&a.textContent!==""+f&&(d=["children",""+f]):Ra.hasOwnProperty(g)&&null!=f&&lg(e,g));switch(b){case "input":Bc(a);Pf(a,c);break;case "textarea":Bc(a);Xf(a,c);break;case "select":case "option":break;default:"function"===typeof c.onClick&&
(a.onclick=C)}return d}function vg(a,b){return a.nodeValue!==b}
var wg=Object.freeze({createElement:ng,createTextNode:og,setInitialProperties:pg,diffProperties:sg,updateProperties:tg,diffHydratedProperties:ug,diffHydratedText:vg,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case "input":Of(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=
c.parentNode;c=c.querySelectorAll("input[name\x3d"+JSON.stringify(""+b)+'][type\x3d"radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=rb(d);e?void 0:E("90");Cc(d);Of(d,e)}}}break;case "textarea":Wf(a,c);break;case "select":b=c.value,null!=b&&Sf(a,!!c.multiple,b,!1)}}});nc.injectFiberControlledHostComponent(wg);var xg=null,Mg=null;function Ng(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}
function Og(a){a=a?9===a.nodeType?a.documentElement:a.firstChild:null;return!(!a||1!==a.nodeType||!a.hasAttribute("data-reactroot"))}
var Z=of({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:$f(null,"");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=$f(a,b)}return a},getChildHostContext:function(a,b){return $f(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){xg=td;var a=da();if(Kd(a)){if("selectionStart"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();
if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(z){b=null;break a}var f=0,g=-1,h=-1,k=0,q=0,v=a,y=null;b:for(;;){for(var u;;){v!==b||0!==d&&3!==v.nodeType||(g=f+d);v!==e||0!==c&&3!==v.nodeType||(h=f+c);3===v.nodeType&&(f+=v.nodeValue.length);if(null===(u=v.firstChild))break;y=v;v=u}for(;;){if(v===a)break b;y===b&&++k===d&&(g=f);y===e&&++q===c&&(h=f);if(null!==(u=v.nextSibling))break;v=y;y=v.parentNode}v=u}b=-1===g||-1===h?null:
{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;Mg={focusedElem:a,selectionRange:b};ud(!1)},resetAfterCommit:function(){var a=Mg,b=da(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&fa(document.documentElement,c)){if(Kd(c))if(b=d.start,a=d.end,void 0===a&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[Eb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>
d&&(e=d,d=a,a=e);e=Jd(c,a);var f=Jd(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var g=document.createRange();g.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(g),b.extend(f.node,f.offset)):(g.setEnd(f.node,f.offset),b.addRange(g))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});ia(c);for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=
a.top}Mg=null;ud(xg);xg=null},createInstance:function(a,b,c,d,e){a=ng(a,b,c,d);a[Q]=e;a[ob]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){pg(a,b,c,d);a:{switch(b){case "button":case "input":case "select":case "textarea":a=!!c.autoFocus;break a}a=!1}return a},prepareUpdate:function(a,b,c,d,e){return sg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return"textarea"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===
typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&"string"===typeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=og(a,b);a[Q]=d;return a},now:rf,mutation:{commitMount:function(a){a.focus()},commitUpdate:function(a,b,c,d,e){a[ob]=e;tg(a,b,c,d,e)},resetTextContent:function(a){a.textContent=""},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,
b){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},insertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,
b){return""===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[Q]=f;a[ob]=c;return ug(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[Q]=c;return vg(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},
didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:sf,cancelDeferredCallback:tf,useSyncScheduling:!0});rc=Z.batchedUpdates;
function Pg(a,b,c,d,e){Ng(c)?void 0:E("200");var f=c._reactRootContainer;if(f)Z.updateContainer(b,f,a,e);else{d=d||Og(c);if(!d)for(f=void 0;f=c.lastChild;)c.removeChild(f);var g=Z.createContainer(c,d);f=c._reactRootContainer=g;Z.unbatchedUpdates(function(){Z.updateContainer(b,g,a,e)})}return Z.getPublicRootInstance(f)}function Qg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Ng(b)?void 0:E("200");return pf(a,b,null,c)}
function Rg(a,b){this._reactRootContainer=Z.createContainer(a,b)}Rg.prototype.render=function(a,b){Z.updateContainer(a,this._reactRootContainer,null,b)};Rg.prototype.unmount=function(a){Z.updateContainer(null,this._reactRootContainer,null,a)};
var Sg={createPortal:Qg,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(b)return Z.findHostInstance(b);"function"===typeof a.render?E("188"):E("213",Object.keys(a))},hydrate:function(a,b,c){return Pg(null,a,b,!0,c)},render:function(a,b,c){return Pg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?E("38"):void 0;return Pg(a,b,c,!1,d)},unmountComponentAtNode:function(a){Ng(a)?void 0:
E("40");return a._reactRootContainer?(Z.unbatchedUpdates(function(){Pg(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:Qg,unstable_batchedUpdates:tc,unstable_deferredUpdates:Z.deferredUpdates,flushSync:Z.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:mb,EventPluginRegistry:Va,EventPropagators:Cb,ReactControlledComponent:qc,ReactDOMComponentTree:sb,ReactDOMEventListener:xd}};
Z.injectIntoDevTools({findFiberByHostInstance:pb,bundleType:0,version:"16.2.0",rendererPackageName:"react-dom"});var Tg=Object.freeze({default:Sg}),Ug=Tg&&Sg||Tg;module.exports=Ug["default"]?Ug["default"]:Ug;


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var isNode = __webpack_require__(24);

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.2.0
 * react-dom.development.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var React = __webpack_require__(0);
var invariant = __webpack_require__(7);
var warning = __webpack_require__(8);
var ExecutionEnvironment = __webpack_require__(11);
var _assign = __webpack_require__(4);
var emptyFunction = __webpack_require__(3);
var EventListener = __webpack_require__(12);
var getActiveElement = __webpack_require__(13);
var shallowEqual = __webpack_require__(14);
var containsNode = __webpack_require__(15);
var focusNode = __webpack_require__(16);
var emptyObject = __webpack_require__(5);
var checkPropTypes = __webpack_require__(10);
var hyphenateStyleName = __webpack_require__(26);
var camelizeStyleName = __webpack_require__(28);

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

!React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;

// These attributes should be all lowercase to allow for
// case insensitive checks
var RESERVED_PROPS = {
  children: true,
  dangerouslySetInnerHTML: true,
  defaultValue: true,
  defaultChecked: true,
  innerHTML: true,
  suppressContentEditableWarning: true,
  suppressHydrationWarning: true,
  style: true
};

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
  HAS_STRING_BOOLEAN_VALUE: 0x40,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    for (var propName in Properties) {
      !!properties.hasOwnProperty(propName) ? invariant(false, "injectDOMPropertyConfig(...): You're trying to inject DOM property '%s' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.", propName) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE),
        hasStringBooleanValue: checkMask(propConfig, Injection.HAS_STRING_BOOLEAN_VALUE)
      };
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? invariant(false, "DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s", propName) : void 0;

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];

        propertyInfo.attributeName = attributeName;
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      // Downcase references to whitelist properties to check for membership
      // without case-sensitivity. This allows the whitelist to pick up
      // `allowfullscreen`, which should be written using the property configuration
      // for `allowFullscreen`
      properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
/* eslint-enable max-len */
var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";


var ROOT_ATTRIBUTE_NAME = 'data-reactroot';

/**
 * Map from property "standard name" to an object with info about how to set
 * the property in the DOM. Each object contains:
 *
 * attributeName:
 *   Used when rendering markup or with `*Attribute()`.
 * attributeNamespace
 * propertyName:
 *   Used on DOM node instances. (This includes properties that mutate due to
 *   external factors.)
 * mutationMethod:
 *   If non-null, used instead of the property or `setAttribute()` after
 *   initial render.
 * mustUseProperty:
 *   Whether the property must be accessed and mutated as an object property.
 * hasBooleanValue:
 *   Whether the property should be removed when set to a falsey value.
 * hasNumericValue:
 *   Whether the property must be numeric or parse as a numeric and should be
 *   removed when set to a falsey value.
 * hasPositiveNumericValue:
 *   Whether the property must be positive numeric or parse as a positive
 *   numeric and should be removed when set to a falsey value.
 * hasOverloadedBooleanValue:
 *   Whether the property can be used as a flag as well as with a value.
 *   Removed when strictly equal to false; present without a value when
 *   strictly equal to true; present with a value otherwise.
 */
var properties = {};

/**
 * Checks whether a property name is a writeable attribute.
 * @method
 */
function shouldSetAttribute(name, value) {
  if (isReservedProp(name)) {
    return false;
  }
  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
    return false;
  }
  if (value === null) {
    return true;
  }
  switch (typeof value) {
    case 'boolean':
      return shouldAttributeAcceptBooleanValue(name);
    case 'undefined':
    case 'number':
    case 'string':
    case 'object':
      return true;
    default:
      // function, symbol
      return false;
  }
}

function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function shouldAttributeAcceptBooleanValue(name) {
  if (isReservedProp(name)) {
    return true;
  }
  var propertyInfo = getPropertyInfo(name);
  if (propertyInfo) {
    return propertyInfo.hasBooleanValue || propertyInfo.hasStringBooleanValue || propertyInfo.hasOverloadedBooleanValue;
  }
  var prefix = name.toLowerCase().slice(0, 5);
  return prefix === 'data-' || prefix === 'aria-';
}

/**
 * Checks to see if a property name is within the list of properties
 * reserved for internal React operations. These properties should
 * not be set on an HTML element.
 *
 * @private
 * @param {string} name
 * @return {boolean} If the name is within reserved props
 */
function isReservedProp(name) {
  return RESERVED_PROPS.hasOwnProperty(name);
}

var injection = DOMPropertyInjection;

var MUST_USE_PROPERTY = injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = injection.HAS_BOOLEAN_VALUE;
var HAS_NUMERIC_VALUE = injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = injection.HAS_OVERLOADED_BOOLEAN_VALUE;
var HAS_STRING_BOOLEAN_VALUE = injection.HAS_STRING_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  // When adding attributes to this list, be sure to also add them to
  // the `possibleStandardNames` module to ensure casing and incorrect
  // name warnings.
  Properties: {
    allowFullScreen: HAS_BOOLEAN_VALUE,
    // specifies target context for links with `preload` type
    async: HAS_BOOLEAN_VALUE,
    // Note: there is a special case that prevents it from being written to the DOM
    // on the client side because the browsers are inconsistent. Instead we call focus().
    autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_OVERLOADED_BOOLEAN_VALUE,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    contentEditable: HAS_STRING_BOOLEAN_VALUE,
    controls: HAS_BOOLEAN_VALUE,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: HAS_STRING_BOOLEAN_VALUE,
    formNoValidate: HAS_BOOLEAN_VALUE,
    hidden: HAS_BOOLEAN_VALUE,
    loop: HAS_BOOLEAN_VALUE,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    playsInline: HAS_BOOLEAN_VALUE,
    readOnly: HAS_BOOLEAN_VALUE,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    scoped: HAS_BOOLEAN_VALUE,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    start: HAS_NUMERIC_VALUE,
    // support for projecting regular DOM Elements via V1 named slots ( shadow dom )
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: HAS_STRING_BOOLEAN_VALUE,
    // Style must be explicitly set in the attribute list. React components
    // expect a style object
    style: 0,
    // Keep it in the whitelist because it is case-sensitive for SVG.
    tabIndex: 0,
    // itemScope is for for Microdata support.
    // See http://schema.org/docs/gs.html
    itemScope: HAS_BOOLEAN_VALUE,
    // These attributes must stay in the white-list because they have
    // different attribute names (see DOMAttributeNames below)
    acceptCharset: 0,
    className: 0,
    htmlFor: 0,
    httpEquiv: 0,
    // Attributes with mutation methods must be specified in the whitelist
    // Set the string boolean flag to allow the behavior
    value: HAS_STRING_BOOLEAN_VALUE
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMMutationMethods: {
    value: function (node, value) {
      if (value == null) {
        return node.removeAttribute('value');
      }

      // Number inputs get special treatment due to some edge cases in
      // Chrome. Let everything else assign the value attribute as normal.
      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
      if (node.type !== 'number' || node.hasAttribute('value') === false) {
        node.setAttribute('value', '' + value);
      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
        // Don't assign an attribute if validation reports bad
        // input. Chrome will clear the value. Additionally, don't
        // operate on inputs that have focus, otherwise Chrome might
        // strip off trailing decimal places and cause the user's
        // cursor position to jump to the beginning of the input.
        //
        // In ReactDOMInput, we have an onBlur event that will trigger
        // this function again when focus is lost.
        node.setAttribute('value', '' + value);
      }
    }
  }
};

var HAS_STRING_BOOLEAN_VALUE$1 = injection.HAS_STRING_BOOLEAN_VALUE;


var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

/**
 * This is a list of all SVG attributes that need special casing,
 * namespacing, or boolean value assignment.
 *
 * When adding attributes to this list, be sure to also add them to
 * the `possibleStandardNames` module to ensure casing and incorrect
 * name warnings.
 *
 * SVG Attributes List:
 * https://www.w3.org/TR/SVG/attindex.html
 * SMIL Spec:
 * https://www.w3.org/TR/smil
 */
var ATTRS = ['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'x-height', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xmlns:xlink', 'xml:lang', 'xml:space'];

var SVGDOMPropertyConfig = {
  Properties: {
    autoReverse: HAS_STRING_BOOLEAN_VALUE$1,
    externalResourcesRequired: HAS_STRING_BOOLEAN_VALUE$1,
    preserveAlpha: HAS_STRING_BOOLEAN_VALUE$1
  },
  DOMAttributeNames: {
    autoReverse: 'autoReverse',
    externalResourcesRequired: 'externalResourcesRequired',
    preserveAlpha: 'preserveAlpha'
  },
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  }
};

var CAMELIZE = /[\-\:]([a-z])/g;
var capitalize = function (token) {
  return token[1].toUpperCase();
};

ATTRS.forEach(function (original) {
  var reactName = original.replace(CAMELIZE, capitalize);

  SVGDOMPropertyConfig.Properties[reactName] = 0;
  SVGDOMPropertyConfig.DOMAttributeNames[reactName] = original;
});

injection.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
injection.injectDOMPropertyConfig(SVGDOMPropertyConfig);

var ReactErrorUtils = {
  // Used by Fiber to simulate a try-catch.
  _caughtError: null,
  _hasCaughtError: false,

  // Used by event system to capture/rethrow the first error.
  _rethrowError: null,
  _hasRethrowError: false,

  injection: {
    injectErrorUtils: function (injectedErrorUtils) {
      !(typeof injectedErrorUtils.invokeGuardedCallback === 'function') ? invariant(false, 'Injected invokeGuardedCallback() must be a function.') : void 0;
      invokeGuardedCallback = injectedErrorUtils.invokeGuardedCallback;
    }
  },

  /**
   * Call a function while guarding against errors that happens within it.
   * Returns an error if it throws, otherwise null.
   *
   * In production, this is implemented using a try-catch. The reason we don't
   * use a try-catch directly is so that we can swap out a different
   * implementation in DEV mode.
   *
   * @param {String} name of the guard to use for logging or debugging
   * @param {Function} func The function to invoke
   * @param {*} context The context to use when calling the function
   * @param {...*} args Arguments for function
   */
  invokeGuardedCallback: function (name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(ReactErrorUtils, arguments);
  },

  /**
   * Same as invokeGuardedCallback, but instead of returning an error, it stores
   * it in a global so it can be rethrown by `rethrowCaughtError` later.
   * TODO: See if _caughtError and _rethrowError can be unified.
   *
   * @param {String} name of the guard to use for logging or debugging
   * @param {Function} func The function to invoke
   * @param {*} context The context to use when calling the function
   * @param {...*} args Arguments for function
   */
  invokeGuardedCallbackAndCatchFirstError: function (name, func, context, a, b, c, d, e, f) {
    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
    if (ReactErrorUtils.hasCaughtError()) {
      var error = ReactErrorUtils.clearCaughtError();
      if (!ReactErrorUtils._hasRethrowError) {
        ReactErrorUtils._hasRethrowError = true;
        ReactErrorUtils._rethrowError = error;
      }
    }
  },

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    return rethrowCaughtError.apply(ReactErrorUtils, arguments);
  },

  hasCaughtError: function () {
    return ReactErrorUtils._hasCaughtError;
  },

  clearCaughtError: function () {
    if (ReactErrorUtils._hasCaughtError) {
      var error = ReactErrorUtils._caughtError;
      ReactErrorUtils._caughtError = null;
      ReactErrorUtils._hasCaughtError = false;
      return error;
    } else {
      invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');
    }
  }
};

var invokeGuardedCallback = function (name, func, context, a, b, c, d, e, f) {
  ReactErrorUtils._hasCaughtError = false;
  ReactErrorUtils._caughtError = null;
  var funcArgs = Array.prototype.slice.call(arguments, 3);
  try {
    func.apply(context, funcArgs);
  } catch (error) {
    ReactErrorUtils._caughtError = error;
    ReactErrorUtils._hasCaughtError = true;
  }
};

{
  // In DEV mode, we swap out invokeGuardedCallback for a special version
  // that plays more nicely with the browser's DevTools. The idea is to preserve
  // "Pause on exceptions" behavior. Because React wraps all user-provided
  // functions in invokeGuardedCallback, and the production version of
  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
  // like caught exceptions, and the DevTools won't pause unless the developer
  // takes the extra step of enabling pause on caught exceptions. This is
  // untintuitive, though, because even though React has caught the error, from
  // the developer's perspective, the error is uncaught.
  //
  // To preserve the expected "Pause on exceptions" behavior, we don't use a
  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
  // DOM node, and call the user-provided callback from inside an event handler
  // for that fake event. If the callback throws, the error is "captured" using
  // a global event handler. But because the error happens in a different
  // event loop context, it does not interrupt the normal program flow.
  // Effectively, this gives us try-catch behavior without actually using
  // try-catch. Neat!

  // Check that the browser supports the APIs we need to implement our special
  // DEV version of invokeGuardedCallback
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');

    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
      // Keeps track of whether the user-provided callback threw an error. We
      // set this to true at the beginning, then set it to false right after
      // calling the function. If the function errors, `didError` will never be
      // set to false. This strategy works even if the browser is flaky and
      // fails to call our global error handler, because it doesn't rely on
      // the error event at all.
      var didError = true;

      // Create an event handler for our fake event. We will synchronously
      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
      // call the user-provided callback.
      var funcArgs = Array.prototype.slice.call(arguments, 3);
      function callCallback() {
        // We immediately remove the callback from event listeners so that
        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
        // nested call would trigger the fake event handlers of any call higher
        // in the stack.
        fakeNode.removeEventListener(evtType, callCallback, false);
        func.apply(context, funcArgs);
        didError = false;
      }

      // Create a global error event handler. We use this to capture the value
      // that was thrown. It's possible that this error handler will fire more
      // than once; for example, if non-React code also calls `dispatchEvent`
      // and a handler for that event throws. We should be resilient to most of
      // those cases. Even if our error event handler fires more than once, the
      // last error event is always used. If the callback actually does error,
      // we know that the last error event is the correct one, because it's not
      // possible for anything else to have happened in between our callback
      // erroring and the code that follows the `dispatchEvent` call below. If
      // the callback doesn't error, but the error event was fired, we know to
      // ignore it because `didError` will be false, as described above.
      var error = void 0;
      // Use this to track whether the error event is ever called.
      var didSetError = false;
      var isCrossOriginError = false;

      function onError(event) {
        error = event.error;
        didSetError = true;
        if (error === null && event.colno === 0 && event.lineno === 0) {
          isCrossOriginError = true;
        }
      }

      // Create a fake event type.
      var evtType = 'react-' + (name ? name : 'invokeguardedcallback');

      // Attach our event handlers
      window.addEventListener('error', onError);
      fakeNode.addEventListener(evtType, callCallback, false);

      // Synchronously dispatch our fake event. If the user-provided function
      // errors, it will trigger our global error handler.
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);

      if (didError) {
        if (!didSetError) {
          // The callback errored, but the error event never fired.
          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
        } else if (isCrossOriginError) {
          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
        }
        ReactErrorUtils._hasCaughtError = true;
        ReactErrorUtils._caughtError = error;
      } else {
        ReactErrorUtils._hasCaughtError = false;
        ReactErrorUtils._caughtError = null;
      }

      // Remove our event listeners
      window.removeEventListener('error', onError);
    };

    invokeGuardedCallback = invokeGuardedCallbackDev;
  }
}

var rethrowCaughtError = function () {
  if (ReactErrorUtils._hasRethrowError) {
    var error = ReactErrorUtils._rethrowError;
    ReactErrorUtils._rethrowError = null;
    ReactErrorUtils._hasRethrowError = false;
    throw error;
  }
};

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;
    if (plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;
    plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;
  eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;
  registrationNameModules[registrationName] = pluginModule;
  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  {
    var lowerCasedName = registrationName.toLowerCase();
    possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */

/**
 * Ordered list of injected plugins.
 */
var plugins = [];

/**
 * Mapping from event name to dispatch config
 */
var eventNameDispatchConfigs = {};

/**
 * Mapping from registration name to plugin module
 */
var registrationNameModules = {};

/**
 * Mapping from registration name to event name
 */
var registrationNameDependencies = {};

/**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */
var possibleRegistrationNames = {};
// Trust the developer to only use possibleRegistrationNames in true

/**
 * Injects an ordering of plugins (by plugin name). This allows the ordering
 * to be decoupled from injection of the actual plugins so that ordering is
 * always deterministic regardless of packaging, on-the-fly injection, etc.
 *
 * @param {array} InjectedEventPluginOrder
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginOrder}
 */
function injectEventPluginOrder(injectedEventPluginOrder) {
  !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0;
  // Clone the ordering so it cannot be dynamically mutated.
  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
  recomputePluginOrdering();
}

/**
 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
 * in the ordering injected by `injectEventPluginOrder`.
 *
 * Plugins can be injected as part of page initialization or on-the-fly.
 *
 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginsByName}
 */
function injectEventPluginsByName(injectedNamesToPlugins) {
  var isOrderingDirty = false;
  for (var pluginName in injectedNamesToPlugins) {
    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
      continue;
    }
    var pluginModule = injectedNamesToPlugins[pluginName];
    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
      !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;
      namesToPlugins[pluginName] = pluginModule;
      isOrderingDirty = true;
    }
  }
  if (isOrderingDirty) {
    recomputePluginOrdering();
  }
}

var EventPluginRegistry = Object.freeze({
	plugins: plugins,
	eventNameDispatchConfigs: eventNameDispatchConfigs,
	registrationNameModules: registrationNameModules,
	registrationNameDependencies: registrationNameDependencies,
	possibleRegistrationNames: possibleRegistrationNames,
	injectEventPluginOrder: injectEventPluginOrder,
	injectEventPluginsByName: injectEventPluginsByName
});

var getFiberCurrentPropsFromNode = null;
var getInstanceFromNode = null;
var getNodeFromInstance = null;

var injection$2 = {
  injectComponentTree: function (Injected) {
    getFiberCurrentPropsFromNode = Injected.getFiberCurrentPropsFromNode;
    getInstanceFromNode = Injected.getInstanceFromNode;
    getNodeFromInstance = Injected.getNodeFromInstance;

    {
      warning(getNodeFromInstance && getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.');
    }
  }
};






var validateEventDispatches;
{
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.');
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = getNodeFromInstance(inst);
  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */


/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */


/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 * @param {function} cb Callback invoked with each element or a collection.
 * @param {?} [scope] Scope used as `this` in a callback.
 */
function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */

/**
 * Methods for injecting dependencies.
 */
var injection$1 = {
  /**
   * @param {array} InjectedEventPluginOrder
   * @public
   */
  injectEventPluginOrder: injectEventPluginOrder,

  /**
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   */
  injectEventPluginsByName: injectEventPluginsByName
};

/**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */
function getListener(inst, registrationName) {
  var listener;

  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
  // live here; needs to be moved to a better place soon
  var stateNode = inst.stateNode;
  if (!stateNode) {
    // Work in progress (ex: onload events in incremental mode).
    return null;
  }
  var props = getFiberCurrentPropsFromNode(stateNode);
  if (!props) {
    // Work in progress.
    return null;
  }
  listener = props[registrationName];
  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
    return null;
  }
  !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;
  return listener;
}

/**
 * Allows registered plugins an opportunity to extract events from top-level
 * native browser events.
 *
 * @return {*} An accumulation of synthetic events.
 * @internal
 */
function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var events;
  for (var i = 0; i < plugins.length; i++) {
    // Not every plugin in the ordering may be loaded at runtime.
    var possiblePlugin = plugins[i];
    if (possiblePlugin) {
      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
      if (extractedEvents) {
        events = accumulateInto(events, extractedEvents);
      }
    }
  }
  return events;
}

/**
 * Enqueues a synthetic event that should be dispatched when
 * `processEventQueue` is invoked.
 *
 * @param {*} events An accumulation of synthetic events.
 * @internal
 */
function enqueueEvents(events) {
  if (events) {
    eventQueue = accumulateInto(eventQueue, events);
  }
}

/**
 * Dispatches all synthetic events on the event queue.
 *
 * @internal
 */
function processEventQueue(simulated) {
  // Set `eventQueue` to null before processing it so that we can tell if more
  // events get enqueued while processing.
  var processingEventQueue = eventQueue;
  eventQueue = null;

  if (!processingEventQueue) {
    return;
  }

  if (simulated) {
    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
  } else {
    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
  }
  !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0;
  // This would be a good time to rethrow if any of the event handlers threw.
  ReactErrorUtils.rethrowCaughtError();
}

var EventPluginHub = Object.freeze({
	injection: injection$1,
	getListener: getListener,
	extractEvents: extractEvents,
	enqueueEvents: enqueueEvents,
	processEventQueue: processEventQueue
});

var IndeterminateComponent = 0; // Before we know whether it is functional or class
var FunctionalComponent = 1;
var ClassComponent = 2;
var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
var HostComponent = 5;
var HostText = 6;
var CallComponent = 7;
var CallHandlerPhase = 8;
var ReturnComponent = 9;
var Fragment = 10;

var randomKey = Math.random().toString(36).slice(2);
var internalInstanceKey = '__reactInternalInstance$' + randomKey;
var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;

function precacheFiberNode$1(hostInst, node) {
  node[internalInstanceKey] = hostInst;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest = void 0;
  var inst = node[internalInstanceKey];
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber, this will always be the deepest root.
    return inst;
  }
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode$1(node) {
  var inst = node[internalInstanceKey];
  if (inst) {
    if (inst.tag === HostComponent || inst.tag === HostText) {
      return inst;
    } else {
      return null;
    }
  }
  return null;
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance$1(inst) {
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber this, is just the state node right now. We assume it will be
    // a host component or host text.
    return inst.stateNode;
  }

  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  invariant(false, 'getNodeFromInstance: Invalid argument.');
}

function getFiberCurrentPropsFromNode$1(node) {
  return node[internalEventHandlersKey] || null;
}

function updateFiberProps$1(node, props) {
  node[internalEventHandlersKey] = props;
}

var ReactDOMComponentTree = Object.freeze({
	precacheFiberNode: precacheFiberNode$1,
	getClosestInstanceFromNode: getClosestInstanceFromNode,
	getInstanceFromNode: getInstanceFromNode$1,
	getNodeFromInstance: getNodeFromInstance$1,
	getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode$1,
	updateFiberProps: updateFiberProps$1
});

function getParent(inst) {
  do {
    inst = inst['return'];
    // TODO: If this is a HostRoot we might want to bail out.
    // That is depending on if we want nested subtrees (layers) to bubble
    // events to their parent. We could also go through parentNode on the
    // host node but that wouldn't work for React Native and doesn't let us
    // do the portal feature.
  } while (inst && inst.tag !== HostComponent);
  if (inst) {
    return inst;
  }
  return null;
}

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  var depthA = 0;
  for (var tempA = instA; tempA; tempA = getParent(tempA)) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = getParent(tempB)) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = getParent(instA);
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = getParent(instB);
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB || instA === instB.alternate) {
      return instA;
    }
    instA = getParent(instA);
    instB = getParent(instB);
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */


/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  return getParent(inst);
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = getParent(inst);
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (true) {
    if (!from) {
      break;
    }
    if (from === common) {
      break;
    }
    var alternate = from.alternate;
    if (alternate !== null && alternate === common) {
      break;
    }
    pathFrom.push(from);
    from = getParent(from);
  }
  var pathTo = [];
  while (true) {
    if (!to) {
      break;
    }
    if (to === common) {
      break;
    }
    var _alternate = to.alternate;
    if (_alternate !== null && _alternate === common) {
      break;
    }
    pathTo.push(to);
    to = getParent(to);
  }
  for (var i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (var _i = pathTo.length; _i-- > 0;) {
    fn(pathTo[_i], 'captured', argTo);
  }
}

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing even a
 * single one.
 */

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  {
    warning(inst, 'Dispatching inst must not be null');
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? getParentInstance(targetInst) : null;
    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (inst && event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

var EventPropagators = Object.freeze({
	accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches,
	accumulateDirectDispatches: accumulateDirectDispatches
});

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

/**
 * This helper object stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */
var compositionState = {
  _root: null,
  _startText: null,
  _fallbackText: null
};

function initialize(nativeEventTarget) {
  compositionState._root = nativeEventTarget;
  compositionState._startText = getText();
  return true;
}

function reset() {
  compositionState._root = null;
  compositionState._startText = null;
  compositionState._fallbackText = null;
}

function getData() {
  if (compositionState._fallbackText) {
    return compositionState._fallbackText;
  }

  var start;
  var startValue = compositionState._startText;
  var startLength = startValue.length;
  var end;
  var endValue = getText();
  var endLength = endValue.length;

  for (start = 0; start < startLength; start++) {
    if (startValue[start] !== endValue[start]) {
      break;
    }
  }

  var minEnd = startLength - start;
  for (end = 1; end <= minEnd; end++) {
    if (startValue[startLength - end] !== endValue[endLength - end]) {
      break;
    }
  }

  var sliceTail = end > 1 ? 1 - end : undefined;
  compositionState._fallbackText = endValue.slice(start, sliceTail);
  return compositionState._fallbackText;
}

function getText() {
  if ('value' in compositionState._root) {
    return compositionState._root.value;
  }
  return compositionState._root[getTextContentAccessor()];
}

/* eslint valid-typeof: 0 */

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';
var EVENT_POOL_SIZE = 10;

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {
  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }
});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;
  addEventPoolingTo(Class);
};

/** Proxying after everything set on SyntheticEvent
 * to resolve Proxy issue on some WebKit browsers
 * in which some Event properties are set to undefined (GH#10010)
 */
{
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.');
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}

addEventPoolingTo(SyntheticEvent);

/**
 * Helper to nullify syntheticEvent instance properties when destructing
 *
 * @param {String} propName
 * @param {?object} getVal
 * @return {object} defineProperty object
 */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result);
  }
}

function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
  var EventConstructor = this;
  if (EventConstructor.eventPool.length) {
    var instance = EventConstructor.eventPool.pop();
    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
    return instance;
  }
  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
}

function releasePooledEvent(event) {
  var EventConstructor = this;
  !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance  into a pool of a different type.') : void 0;
  event.destructor();
  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
    EventConstructor.eventPool.push(event);
  }
}

function addEventPoolingTo(EventConstructor) {
  EventConstructor.eventPool = [];
  EventConstructor.getPooled = getPooledEvent;
  EventConstructor.release = releasePooledEvent;
}

var SyntheticEvent$1 = SyntheticEvent;

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent$1.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent$1.augmentClass(SyntheticInputEvent, InputEventInterface);

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case 'topCompositionStart':
      return eventTypes.compositionStart;
    case 'topCompositionEnd':
      return eventTypes.compositionEnd;
    case 'topCompositionUpdate':
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topKeyUp':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case 'topKeyDown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case 'topKeyPress':
    case 'topMouseDown':
    case 'topBlur':
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition status, if any.
var isComposing = false;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!isComposing) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!isComposing && eventType === eventTypes.compositionStart) {
      isComposing = initialize(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (isComposing) {
        fallbackData = getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {TopLevelTypes} topLevelType Record from `BrowserEventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topCompositionEnd':
      return getDataFromCustomEvent(nativeEvent);
    case 'topKeyPress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'topTextInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `BrowserEventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (isComposing) {
    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = getData();
      reset();
      isComposing = false;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case 'topPaste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case 'topKeyPress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (!isKeypressCommand(nativeEvent)) {
        // IE fires the `keypress` event when a user types an emoji via
        // Touch keyboard of Windows.  In such a case, the `char` property
        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
        // is 2, the property `which` does not represent an emoji correctly.
        // In such a case, we directly return the `char` property instead of
        // using `which`.
        if (nativeEvent.char && nativeEvent.char.length > 1) {
          return nativeEvent.char;
        } else if (nativeEvent.which) {
          return String.fromCharCode(nativeEvent.which);
        }
      }
      return null;
    case 'topCompositionEnd':
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

// Use to restore controlled state after a change event has fired.

var fiberHostComponent = null;

var ReactControlledComponentInjection = {
  injectFiberControlledHostComponent: function (hostComponentImpl) {
    // The fiber implementation doesn't use dynamic dispatch so we need to
    // inject the implementation.
    fiberHostComponent = hostComponentImpl;
  }
};

var restoreTarget = null;
var restoreQueue = null;

function restoreStateOfTarget(target) {
  // We perform this translation at the end of the event loop so that we
  // always receive the correct fiber here
  var internalInstance = getInstanceFromNode(target);
  if (!internalInstance) {
    // Unmounted
    return;
  }
  !(fiberHostComponent && typeof fiberHostComponent.restoreControlledState === 'function') ? invariant(false, 'Fiber needs to be injected to handle a fiber target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
  fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
}

var injection$3 = ReactControlledComponentInjection;

function enqueueStateRestore(target) {
  if (restoreTarget) {
    if (restoreQueue) {
      restoreQueue.push(target);
    } else {
      restoreQueue = [target];
    }
  } else {
    restoreTarget = target;
  }
}

function restoreStateIfNeeded() {
  if (!restoreTarget) {
    return;
  }
  var target = restoreTarget;
  var queuedTargets = restoreQueue;
  restoreTarget = null;
  restoreQueue = null;

  restoreStateOfTarget(target);
  if (queuedTargets) {
    for (var i = 0; i < queuedTargets.length; i++) {
      restoreStateOfTarget(queuedTargets[i]);
    }
  }
}

var ReactControlledComponent = Object.freeze({
	injection: injection$3,
	enqueueStateRestore: enqueueStateRestore,
	restoreStateIfNeeded: restoreStateIfNeeded
});

// Used as a way to call batchedUpdates when we don't have a reference to
// the renderer. Such as when we're dispatching events or if third party
// libraries need to call batchedUpdates. Eventually, this API will go away when
// everything is batched by default. We'll then have a similar API to opt-out of
// scheduled work and instead do synchronous work.

// Defaults
var fiberBatchedUpdates = function (fn, bookkeeping) {
  return fn(bookkeeping);
};

var isNestingBatched = false;
function batchedUpdates(fn, bookkeeping) {
  if (isNestingBatched) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state. Therefore, we add the target to
    // a queue of work.
    return fiberBatchedUpdates(fn, bookkeeping);
  }
  isNestingBatched = true;
  try {
    return fiberBatchedUpdates(fn, bookkeeping);
  } finally {
    // Here we wait until all updates have propagated, which is important
    // when using controlled components within layers:
    // https://github.com/facebook/react/issues/1698
    // Then we restore state of any controlled component.
    isNestingBatched = false;
    restoreStateIfNeeded();
  }
}

var ReactGenericBatchingInjection = {
  injectFiberBatchedUpdates: function (_batchedUpdates) {
    fiberBatchedUpdates = _batchedUpdates;
  }
};

var injection$4 = ReactGenericBatchingInjection;

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

/**
 * HTML nodeType values that represent the type of the node
 */

var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var DOCUMENT_NODE = 9;
var DOCUMENT_FRAGMENT_NODE = 11;

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */
function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === TEXT_NODE ? target.parentNode : target;
}

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(node) {
  return node._valueTracker;
}

function detachTracker(node) {
  node._valueTracker = null;
}

function getValueFromNode(node) {
  var value = '';
  if (!node) {
    return value;
  }

  if (isCheckable(node)) {
    value = node.checked ? 'true' : 'false';
  } else {
    value = node.value;
  }

  return value;
}

function trackValueOnNode(node) {
  var valueField = isCheckable(node) ? 'checked' : 'value';
  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

  var currentValue = '' + node[valueField];

  // if someone has already defined a value or Safari, then bail
  // and don't track value will cause over reporting of changes,
  // but it's better then a hard failure
  // (needed for certain tests that spyOn input values and Safari)
  if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
    return;
  }

  Object.defineProperty(node, valueField, {
    enumerable: descriptor.enumerable,
    configurable: true,
    get: function () {
      return descriptor.get.call(this);
    },
    set: function (value) {
      currentValue = '' + value;
      descriptor.set.call(this, value);
    }
  });

  var tracker = {
    getValue: function () {
      return currentValue;
    },
    setValue: function (value) {
      currentValue = '' + value;
    },
    stopTracking: function () {
      detachTracker(node);
      delete node[valueField];
    }
  };
  return tracker;
}

function track(node) {
  if (getTracker(node)) {
    return;
  }

  // TODO: Once it's just Fiber we can move this to node._wrapperState
  node._valueTracker = trackValueOnNode(node);
}

function updateValueIfChanged(node) {
  if (!node) {
    return false;
  }

  var tracker = getTracker(node);
  // if there is no tracker at this point it's unlikely
  // that trying again will succeed
  if (!tracker) {
    return true;
  }

  var lastValue = tracker.getValue();
  var nextValue = getValueFromNode(node);
  if (nextValue !== lastValue) {
    tracker.setValue(nextValue);
    return true;
  }
  return false;
}

var eventTypes$1 = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
  }
};

function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
  var event = SyntheticEvent$1.getPooled(eventTypes$1.change, inst, nativeEvent, target);
  event.type = 'change';
  // Flag this event loop as needing state restore.
  enqueueStateRestore(target);
  accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  enqueueEvents(event);
  processEventQueue(false);
}

function getInstIfValueChanged(targetInst) {
  var targetNode = getNodeFromInstance$1(targetInst);
  if (updateValueIfChanged(targetNode)) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === 'topChange') {
    return targetInst;
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}

/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onpropertychange', handlePropertyChange);
  activeElement = null;
  activeElementInst = null;
}

/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  if (getInstIfValueChanged(activeElementInst)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst);
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === 'topClick') {
    return getInstIfValueChanged(targetInst);
  }
}

function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
  if (topLevelType === 'topInput' || topLevelType === 'topChange') {
    return getInstIfValueChanged(targetInst);
  }
}

function handleControlledInputBlur(inst, node) {
  // TODO: In IE, inst is occasionally null. Why?
  if (inst == null) {
    return;
  }

  // Fiber and ReactDOM keep wrapper state in separate places
  var state = inst._wrapperState || node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  // If controlled, assign the value attribute to the current value on blur
  var value = '' + node.value;
  if (node.getAttribute('value') !== value) {
    node.setAttribute('value', value);
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {
  eventTypes: eventTypes$1,

  _isInputEventSupported: isInputEventSupported,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForChangeEvent;
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventPolyfill;
        handleEventFunc = handleEventsForInputEventPolyfill;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }

    // When blurring, set the value attribute for number inputs
    if (topLevelType === 'topBlur') {
      handleControlledInputBlur(targetInst, targetNode);
    }
  }
};

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: null,
  detail: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent$1.augmentClass(SyntheticUIEvent, UIEventInterface);

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  pageX: null,
  pageY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: null,
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

var eventTypes$2 = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: ['topMouseOut', 'topMouseOver']
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: ['topMouseOut', 'topMouseOver']
  }
};

var EnterLeaveEventPlugin = {
  eventTypes: eventTypes$2,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === 'topMouseOut') {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : getNodeFromInstance$1(from);
    var toNode = to == null ? win : getNodeFromInstance$1(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes$2.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes$2.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }
};

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */

/**
 * This API should be called `delete` but we'd have to make sure to always
 * transform these to strings for IE support. When this transform is fully
 * supported we can rename it.
 */


function get(key) {
  return key._reactInternalFiber;
}

function has(key) {
  return key._reactInternalFiber !== undefined;
}

function set(key, value) {
  key._reactInternalFiber = value;
}

var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

var ReactCurrentOwner = ReactInternals.ReactCurrentOwner;
var ReactDebugCurrentFrame = ReactInternals.ReactDebugCurrentFrame;

function getComponentName(fiber) {
  var type = fiber.type;

  if (typeof type === 'string') {
    return type;
  }
  if (typeof type === 'function') {
    return type.displayName || type.name;
  }
  return null;
}

// Don't change these two values:
var NoEffect = 0; //           0b00000000
var PerformedWork = 1; //      0b00000001

// You can change the rest (and add more).
var Placement = 2; //          0b00000010
var Update = 4; //             0b00000100
var PlacementAndUpdate = 6; // 0b00000110
var Deletion = 8; //           0b00001000
var ContentReset = 16; //      0b00010000
var Callback = 32; //          0b00100000
var Err = 64; //               0b01000000
var Ref = 128; //              0b10000000

var MOUNTING = 1;
var MOUNTED = 2;
var UNMOUNTED = 3;

function isFiberMountedImpl(fiber) {
  var node = fiber;
  if (!fiber.alternate) {
    // If there is no alternate, this might be a new tree that isn't inserted
    // yet. If it is, then it will have a pending insertion effect on it.
    if ((node.effectTag & Placement) !== NoEffect) {
      return MOUNTING;
    }
    while (node['return']) {
      node = node['return'];
      if ((node.effectTag & Placement) !== NoEffect) {
        return MOUNTING;
      }
    }
  } else {
    while (node['return']) {
      node = node['return'];
    }
  }
  if (node.tag === HostRoot) {
    // TODO: Check if this was a nested HostRoot when used with
    // renderContainerIntoSubtree.
    return MOUNTED;
  }
  // If we didn't hit the root, that means that we're in an disconnected tree
  // that has been unmounted.
  return UNMOUNTED;
}

function isFiberMounted(fiber) {
  return isFiberMountedImpl(fiber) === MOUNTED;
}

function isMounted(component) {
  {
    var owner = ReactCurrentOwner.current;
    if (owner !== null && owner.tag === ClassComponent) {
      var ownerFiber = owner;
      var instance = ownerFiber.stateNode;
      warning(instance._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber) || 'A component');
      instance._warnedAboutRefsInRender = true;
    }
  }

  var fiber = get(component);
  if (!fiber) {
    return false;
  }
  return isFiberMountedImpl(fiber) === MOUNTED;
}

function assertIsMounted(fiber) {
  !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
}

function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;
  if (!alternate) {
    // If there is no alternate, then we only need to check if it is mounted.
    var state = isFiberMountedImpl(fiber);
    !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
    if (state === MOUNTING) {
      return null;
    }
    return fiber;
  }
  // If we have two possible branches, we'll walk backwards up to the root
  // to see what path the root points to. On the way we may hit one of the
  // special cases and we'll deal with them.
  var a = fiber;
  var b = alternate;
  while (true) {
    var parentA = a['return'];
    var parentB = parentA ? parentA.alternate : null;
    if (!parentA || !parentB) {
      // We're at the root.
      break;
    }

    // If both copies of the parent fiber point to the same child, we can
    // assume that the child is current. This happens when we bailout on low
    // priority: the bailed out fiber's child reuses the current child.
    if (parentA.child === parentB.child) {
      var child = parentA.child;
      while (child) {
        if (child === a) {
          // We've determined that A is the current branch.
          assertIsMounted(parentA);
          return fiber;
        }
        if (child === b) {
          // We've determined that B is the current branch.
          assertIsMounted(parentA);
          return alternate;
        }
        child = child.sibling;
      }
      // We should never have an alternate for any mounting node. So the only
      // way this could possibly happen is if this was unmounted, if at all.
      invariant(false, 'Unable to find node on an unmounted component.');
    }

    if (a['return'] !== b['return']) {
      // The return pointer of A and the return pointer of B point to different
      // fibers. We assume that return pointers never criss-cross, so A must
      // belong to the child set of A.return, and B must belong to the child
      // set of B.return.
      a = parentA;
      b = parentB;
    } else {
      // The return pointers point to the same fiber. We'll have to use the
      // default, slow path: scan the child sets of each parent alternate to see
      // which child belongs to which set.
      //
      // Search parent A's child set
      var didFindChild = false;
      var _child = parentA.child;
      while (_child) {
        if (_child === a) {
          didFindChild = true;
          a = parentA;
          b = parentB;
          break;
        }
        if (_child === b) {
          didFindChild = true;
          b = parentA;
          a = parentB;
          break;
        }
        _child = _child.sibling;
      }
      if (!didFindChild) {
        // Search parent B's child set
        _child = parentB.child;
        while (_child) {
          if (_child === a) {
            didFindChild = true;
            a = parentB;
            b = parentA;
            break;
          }
          if (_child === b) {
            didFindChild = true;
            b = parentB;
            a = parentA;
            break;
          }
          _child = _child.sibling;
        }
        !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;
      }
    }

    !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  }
  // If the root is not a host container, we're in a disconnected tree. I.e.
  // unmounted.
  !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
  if (a.stateNode.current === a) {
    // We've determined that A is the current branch.
    return fiber;
  }
  // Otherwise B has to be current branch.
  return alternate;
}

function findCurrentHostFiber(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  // Next we'll drill down this component to find the first HostComponent/Text.
  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child) {
      node.child['return'] = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node['return'] || node['return'] === currentParent) {
        return null;
      }
      node = node['return'];
    }
    node.sibling['return'] = node['return'];
    node = node.sibling;
  }
  // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable
  return null;
}

function findCurrentHostFiberWithNoPortals(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  // Next we'll drill down this component to find the first HostComponent/Text.
  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child && node.tag !== HostPortal) {
      node.child['return'] = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node['return'] || node['return'] === currentParent) {
        return null;
      }
      node = node['return'];
    }
    node.sibling['return'] = node['return'];
    node = node.sibling;
  }
  // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable
  return null;
}

var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
var callbackBookkeepingPool = [];

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findRootContainerNode(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst['return']) {
    inst = inst['return'];
  }
  if (inst.tag !== HostRoot) {
    // This can happen if we're in a detached tree.
    return null;
  }
  return inst.stateNode.containerInfo;
}

// Used to store ancestor hierarchy in top level callback
function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {
  if (callbackBookkeepingPool.length) {
    var instance = callbackBookkeepingPool.pop();
    instance.topLevelType = topLevelType;
    instance.nativeEvent = nativeEvent;
    instance.targetInst = targetInst;
    return instance;
  }
  return {
    topLevelType: topLevelType,
    nativeEvent: nativeEvent,
    targetInst: targetInst,
    ancestors: []
  };
}

function releaseTopLevelCallbackBookKeeping(instance) {
  instance.topLevelType = null;
  instance.nativeEvent = null;
  instance.targetInst = null;
  instance.ancestors.length = 0;
  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
    callbackBookkeepingPool.push(instance);
  }
}

function handleTopLevelImpl(bookKeeping) {
  var targetInst = bookKeeping.targetInst;

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    if (!ancestor) {
      bookKeeping.ancestors.push(ancestor);
      break;
    }
    var root = findRootContainerNode(ancestor);
    if (!root) {
      break;
    }
    bookKeeping.ancestors.push(ancestor);
    ancestor = getClosestInstanceFromNode(root);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    _handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

// TODO: can we stop exporting these?
var _enabled = true;
var _handleTopLevel = void 0;

function setHandleTopLevel(handleTopLevel) {
  _handleTopLevel = handleTopLevel;
}

function setEnabled(enabled) {
  _enabled = !!enabled;
}

function isEnabled() {
  return _enabled;
}

/**
 * Traps top-level events by using event bubbling.
 *
 * @param {string} topLevelType Record from `BrowserEventConstants`.
 * @param {string} handlerBaseName Event name (e.g. "click").
 * @param {object} element Element on which to attach listener.
 * @return {?object} An object with a remove function which will forcefully
 *                  remove the listener.
 * @internal
 */
function trapBubbledEvent(topLevelType, handlerBaseName, element) {
  if (!element) {
    return null;
  }
  return EventListener.listen(element, handlerBaseName, dispatchEvent.bind(null, topLevelType));
}

/**
 * Traps a top-level event by using event capturing.
 *
 * @param {string} topLevelType Record from `BrowserEventConstants`.
 * @param {string} handlerBaseName Event name (e.g. "click").
 * @param {object} element Element on which to attach listener.
 * @return {?object} An object with a remove function which will forcefully
 *                  remove the listener.
 * @internal
 */
function trapCapturedEvent(topLevelType, handlerBaseName, element) {
  if (!element) {
    return null;
  }
  return EventListener.capture(element, handlerBaseName, dispatchEvent.bind(null, topLevelType));
}

function dispatchEvent(topLevelType, nativeEvent) {
  if (!_enabled) {
    return;
  }

  var nativeEventTarget = getEventTarget(nativeEvent);
  var targetInst = getClosestInstanceFromNode(nativeEventTarget);
  if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {
    // If we get an event (ex: img onload) before committing that
    // component's mount, ignore it for now (that is, treat it as if it was an
    // event on a non-React tree). We might also consider queueing events and
    // dispatching them after the mount.
    targetInst = null;
  }

  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);

  try {
    // Event queue being processed in the same cycle allows
    // `preventDefault`.
    batchedUpdates(handleTopLevelImpl, bookKeeping);
  } finally {
    releaseTopLevelCallbackBookKeeping(bookKeeping);
  }
}

var ReactDOMEventListener = Object.freeze({
	get _enabled () { return _enabled; },
	get _handleTopLevel () { return _handleTopLevel; },
	setHandleTopLevel: setHandleTopLevel,
	setEnabled: setEnabled,
	isEnabled: isEnabled,
	trapBubbledEvent: trapBubbledEvent,
	trapCapturedEvent: trapCapturedEvent,
	dispatchEvent: dispatchEvent
});

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

/**
 * Types of raw signals from the browser caught at the top level.
 *
 * For events like 'submit' which don't consistently bubble (which we
 * trap at a lower node than `document`), binding at `document` would
 * cause duplicate events so we don't include them here.
 */
var topLevelTypes$1 = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCancel: 'cancel',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topClose: 'close',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoad: 'load',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topToggle: 'toggle',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

var BrowserEventConstants = {
  topLevelTypes: topLevelTypes$1
};

function runEventQueueInBatch(events) {
  enqueueEvents(events);
  processEventQueue(false);
}

/**
 * Streams a fired top-level event to `EventPluginHub` where plugins have the
 * opportunity to create `ReactEvent`s to be dispatched.
 */
function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
  runEventQueueInBatch(events);
}

var topLevelTypes = BrowserEventConstants.topLevelTypes;

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactDOMEventListener, which is injected and can therefore support
 *    pluggable event sources. This is the only work that occurs in the main
 *    thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var alreadyListeningTo = {};
var reactTopListenersCounter = 0;

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * We listen for bubbled touch events on the document object.
 *
 * Firefox v8.01 (and possibly others) exhibited strange behavior when
 * mounting `onmousemove` events at some node that was not the document
 * element. The symptoms were that if your mouse is not moving over something
 * contained within that mount point (for example on the background) the
 * top-level listeners for `onmousemove` won't be called. However, if you
 * register the `mousemove` on the document object, then it will of course
 * catch all `mousemove`s. This along with iOS quirks, justifies restricting
 * top-level listeners to the document object only, at least for these
 * movement types of events and possibly all events.
 *
 * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
 *
 * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
 * they bubble to document.
 *
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @param {object} contentDocumentHandle Document which owns the container
 */
function listenTo(registrationName, contentDocumentHandle) {
  var mountAt = contentDocumentHandle;
  var isListening = getListeningForDocument(mountAt);
  var dependencies = registrationNameDependencies[registrationName];

  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
      if (dependency === 'topScroll') {
        trapCapturedEvent('topScroll', 'scroll', mountAt);
      } else if (dependency === 'topFocus' || dependency === 'topBlur') {
        trapCapturedEvent('topFocus', 'focus', mountAt);
        trapCapturedEvent('topBlur', 'blur', mountAt);

        // to make sure blur and focus event listeners are only attached once
        isListening.topBlur = true;
        isListening.topFocus = true;
      } else if (dependency === 'topCancel') {
        if (isEventSupported('cancel', true)) {
          trapCapturedEvent('topCancel', 'cancel', mountAt);
        }
        isListening.topCancel = true;
      } else if (dependency === 'topClose') {
        if (isEventSupported('close', true)) {
          trapCapturedEvent('topClose', 'close', mountAt);
        }
        isListening.topClose = true;
      } else if (topLevelTypes.hasOwnProperty(dependency)) {
        trapBubbledEvent(dependency, topLevelTypes[dependency], mountAt);
      }

      isListening[dependency] = true;
    }
  }
}

function isListeningToAllDependencies(registrationName, mountAt) {
  var isListening = getListeningForDocument(mountAt);
  var dependencies = registrationNameDependencies[registrationName];
  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
      return false;
    }
  }
  return true;
}

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */
function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === TEXT_NODE) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

/**
 * @param {DOMElement} outerNode
 * @return {?object}
 */
function getOffsets(outerNode) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode,
      anchorOffset = selection.anchorOffset,
      focusNode$$1 = selection.focusNode,
      focusOffset = selection.focusOffset;

  // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
  // expose properties, triggering a "Permission denied error" if any of its
  // properties are accessed. The only seemingly possible way to avoid erroring
  // is to access a property that typically works for non-anonymous divs and
  // catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

  try {
    /* eslint-disable no-unused-expressions */
    anchorNode.nodeType;
    focusNode$$1.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode$$1, focusOffset);
}

/**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */
function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode$$1, focusOffset) {
  var length = 0;
  var start = -1;
  var end = -1;
  var indexWithinAnchor = 0;
  var indexWithinFocus = 0;
  var node = outerNode;
  var parentNode = null;

  outer: while (true) {
    var next = null;

    while (true) {
      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
        start = length + anchorOffset;
      }
      if (node === focusNode$$1 && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
        end = length + focusOffset;
      }

      if (node.nodeType === TEXT_NODE) {
        length += node.nodeValue.length;
      }

      if ((next = node.firstChild) === null) {
        break;
      }
      // Moving from `node` to its first child `next`.
      parentNode = node;
      node = next;
    }

    while (true) {
      if (node === outerNode) {
        // If `outerNode` has children, this is always the second time visiting
        // it. If it has no children, this is still the first loop, and the only
        // valid selection is anchorNode and focusNode both equal to this node
        // and both offsets 0, in which case we will have handled above.
        break outer;
      }
      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
        start = length;
      }
      if (parentNode === focusNode$$1 && ++indexWithinFocus === focusOffset) {
        end = length;
      }
      if ((next = node.nextSibling) !== null) {
        break;
      }
      node = parentNode;
      parentNode = node.parentNode;
    }

    // Moving from `node` to its next sibling `next`.
    node = next;
  }

  if (start === -1 || end === -1) {
    // This should never happen. (Would happen if the anchor/focus nodes aren't
    // actually inside the passed-in node.)
    return null;
  }

  return {
    start: start,
    end: end
  };
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
      return;
    }
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */

function hasSelectionCapabilities(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
}

function getSelectionInformation() {
  var focusedElem = getActiveElement();
  return {
    focusedElem: focusedElem,
    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null
  };
}

/**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */
function restoreSelection(priorSelectionInformation) {
  var curFocusedElem = getActiveElement();
  var priorFocusedElem = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;
  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
    if (hasSelectionCapabilities(priorFocusedElem)) {
      setSelection(priorFocusedElem, priorSelectionRange);
    }

    // Focusing a node can change the scroll position, which is undesirable
    var ancestors = [];
    var ancestor = priorFocusedElem;
    while (ancestor = ancestor.parentNode) {
      if (ancestor.nodeType === ELEMENT_NODE) {
        ancestors.push({
          element: ancestor,
          left: ancestor.scrollLeft,
          top: ancestor.scrollTop
        });
      }
    }

    focusNode(priorFocusedElem);

    for (var i = 0; i < ancestors.length; i++) {
      var info = ancestors[i];
      info.element.scrollLeft = info.left;
      info.element.scrollTop = info.top;
    }
  }
}

/**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */
function getSelection$1(input) {
  var selection = void 0;

  if ('selectionStart' in input) {
    // Modern browser with input or textarea.
    selection = {
      start: input.selectionStart,
      end: input.selectionEnd
    };
  } else {
    // Content editable or old IE textarea.
    selection = getOffsets(input);
  }

  return selection || { start: 0, end: 0 };
}

/**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */
function setSelection(input, offsets) {
  var start = offsets.start,
      end = offsets.end;

  if (end === undefined) {
    end = start;
  }

  if ('selectionStart' in input) {
    input.selectionStart = start;
    input.selectionEnd = Math.min(end, input.value.length);
  } else {
    setOffsets(input, offsets);
  }
}

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes$3 = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
  }
};

var activeElement$1 = null;
var activeElementInst$1 = null;
var lastSelection = null;
var mouseDown = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement$1);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent$1.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement$1;

    accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {
  eventTypes: eventTypes$3,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var doc = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget.document : nativeEventTarget.nodeType === DOCUMENT_NODE ? nativeEventTarget : nativeEventTarget.ownerDocument;
    // Track whether all listeners exists for this plugin. If none exist, we do
    // not extract events. See #3639.
    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
      return null;
    }

    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case 'topFocus':
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement$1 = targetNode;
          activeElementInst$1 = targetInst;
          lastSelection = null;
        }
        break;
      case 'topBlur':
        activeElement$1 = null;
        activeElementInst$1 = null;
        lastSelection = null;
        break;
      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case 'topMouseDown':
        mouseDown = true;
        break;
      case 'topContextMenu':
      case 'topMouseUp':
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);
      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case 'topSelectionChange':
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case 'topKeyDown':
      case 'topKeyUp':
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  }
};

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent$1.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent$1.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  '8': 'Backspace',
  '9': 'Tab',
  '12': 'Clear',
  '13': 'Enter',
  '16': 'Shift',
  '17': 'Control',
  '18': 'Alt',
  '19': 'Pause',
  '20': 'CapsLock',
  '27': 'Escape',
  '32': ' ',
  '33': 'PageUp',
  '34': 'PageDown',
  '35': 'End',
  '36': 'Home',
  '37': 'ArrowLeft',
  '38': 'ArrowUp',
  '39': 'ArrowRight',
  '40': 'ArrowDown',
  '45': 'Insert',
  '46': 'Delete',
  '112': 'F1',
  '113': 'F2',
  '114': 'F3',
  '115': 'F4',
  '116': 'F5',
  '117': 'F6',
  '118': 'F7',
  '119': 'F8',
  '120': 'F9',
  '121': 'F10',
  '122': 'F11',
  '123': 'F12',
  '144': 'NumLock',
  '145': 'ScrollLock',
  '224': 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent$1.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: ['topAbort'],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = {
 *   'topAbort': { sameConfig }
 * };
 */
var eventTypes$4 = {};
var topLevelEventsToDispatchConfig = {};
['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'cancel', 'canPlay', 'canPlayThrough', 'click', 'close', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'toggle', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;
  var topEvent = 'top' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent]
  };
  eventTypes$4[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
});

// Only used in DEV for exhaustiveness validation.
var knownHTMLTopLevelTypes = ['topAbort', 'topCancel', 'topCanPlay', 'topCanPlayThrough', 'topClose', 'topDurationChange', 'topEmptied', 'topEncrypted', 'topEnded', 'topError', 'topInput', 'topInvalid', 'topLoad', 'topLoadedData', 'topLoadedMetadata', 'topLoadStart', 'topPause', 'topPlay', 'topPlaying', 'topProgress', 'topRateChange', 'topReset', 'topSeeked', 'topSeeking', 'topStalled', 'topSubmit', 'topSuspend', 'topTimeUpdate', 'topToggle', 'topVolumeChange', 'topWaiting'];

var SimpleEventPlugin = {
  eventTypes: eventTypes$4,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case 'topKeyPress':
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case 'topKeyDown':
      case 'topKeyUp':
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case 'topBlur':
      case 'topFocus':
        EventConstructor = SyntheticFocusEvent;
        break;
      case 'topClick':
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case 'topDoubleClick':
      case 'topMouseDown':
      case 'topMouseMove':
      case 'topMouseUp':
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case 'topMouseOut':
      case 'topMouseOver':
      case 'topContextMenu':
        EventConstructor = SyntheticMouseEvent;
        break;
      case 'topDrag':
      case 'topDragEnd':
      case 'topDragEnter':
      case 'topDragExit':
      case 'topDragLeave':
      case 'topDragOver':
      case 'topDragStart':
      case 'topDrop':
        EventConstructor = SyntheticDragEvent;
        break;
      case 'topTouchCancel':
      case 'topTouchEnd':
      case 'topTouchMove':
      case 'topTouchStart':
        EventConstructor = SyntheticTouchEvent;
        break;
      case 'topAnimationEnd':
      case 'topAnimationIteration':
      case 'topAnimationStart':
        EventConstructor = SyntheticAnimationEvent;
        break;
      case 'topTransitionEnd':
        EventConstructor = SyntheticTransitionEvent;
        break;
      case 'topScroll':
        EventConstructor = SyntheticUIEvent;
        break;
      case 'topWheel':
        EventConstructor = SyntheticWheelEvent;
        break;
      case 'topCopy':
      case 'topCut':
      case 'topPaste':
        EventConstructor = SyntheticClipboardEvent;
        break;
      default:
        {
          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
            warning(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
          }
        }
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent$1;
        break;
    }
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    accumulateTwoPhaseDispatches(event);
    return event;
  }
};

setHandleTopLevel(handleTopLevel);

/**
 * Inject modules for resolving DOM hierarchy and plugin ordering.
 */
injection$1.injectEventPluginOrder(DOMEventPluginOrder);
injection$2.injectComponentTree(ReactDOMComponentTree);

/**
 * Some important event plugins included by default (without having to require
 * them).
 */
injection$1.injectEventPluginsByName({
  SimpleEventPlugin: SimpleEventPlugin,
  EnterLeaveEventPlugin: EnterLeaveEventPlugin,
  ChangeEventPlugin: ChangeEventPlugin,
  SelectEventPlugin: SelectEventPlugin,
  BeforeInputEventPlugin: BeforeInputEventPlugin
});

var enableAsyncSubtreeAPI = true;
var enableAsyncSchedulingByDefaultInReactDOM = false;
// Exports ReactDOM.createRoot
var enableCreateRoot = false;
var enableUserTimingAPI = true;

// Mutating mode (React DOM, React ART, React Native):
var enableMutatingReconciler = true;
// Experimental noop mode (currently unused):
var enableNoopReconciler = false;
// Experimental persistent mode (CS):
var enablePersistentReconciler = false;

// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
var debugRenderPhaseSideEffects = false;

// Only used in www builds.

var valueStack = [];

{
  var fiberStack = [];
}

var index = -1;

function createCursor(defaultValue) {
  return {
    current: defaultValue
  };
}



function pop(cursor, fiber) {
  if (index < 0) {
    {
      warning(false, 'Unexpected pop.');
    }
    return;
  }

  {
    if (fiber !== fiberStack[index]) {
      warning(false, 'Unexpected Fiber popped.');
    }
  }

  cursor.current = valueStack[index];

  valueStack[index] = null;

  {
    fiberStack[index] = null;
  }

  index--;
}

function push(cursor, value, fiber) {
  index++;

  valueStack[index] = cursor.current;

  {
    fiberStack[index] = fiber;
  }

  cursor.current = value;
}

function reset$1() {
  while (index > -1) {
    valueStack[index] = null;

    {
      fiberStack[index] = null;
    }

    index--;
  }
}

var describeComponentFrame = function (name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
};

function describeFiber(fiber) {
  switch (fiber.tag) {
    case IndeterminateComponent:
    case FunctionalComponent:
    case ClassComponent:
    case HostComponent:
      var owner = fiber._debugOwner;
      var source = fiber._debugSource;
      var name = getComponentName(fiber);
      var ownerName = null;
      if (owner) {
        ownerName = getComponentName(owner);
      }
      return describeComponentFrame(name, source, ownerName);
    default:
      return '';
  }
}

// This function can only be called with a work-in-progress fiber and
// only during begin or complete phase. Do not call it under any other
// circumstances.
function getStackAddendumByWorkInProgressFiber(workInProgress) {
  var info = '';
  var node = workInProgress;
  do {
    info += describeFiber(node);
    // Otherwise this return pointer might point to the wrong tree:
    node = node['return'];
  } while (node);
  return info;
}

function getCurrentFiberOwnerName() {
  {
    var fiber = ReactDebugCurrentFiber.current;
    if (fiber === null) {
      return null;
    }
    var owner = fiber._debugOwner;
    if (owner !== null && typeof owner !== 'undefined') {
      return getComponentName(owner);
    }
  }
  return null;
}

function getCurrentFiberStackAddendum() {
  {
    var fiber = ReactDebugCurrentFiber.current;
    if (fiber === null) {
      return null;
    }
    // Safe because if current fiber exists, we are reconciling,
    // and it is guaranteed to be the work-in-progress version.
    return getStackAddendumByWorkInProgressFiber(fiber);
  }
  return null;
}

function resetCurrentFiber() {
  ReactDebugCurrentFrame.getCurrentStack = null;
  ReactDebugCurrentFiber.current = null;
  ReactDebugCurrentFiber.phase = null;
}

function setCurrentFiber(fiber) {
  ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackAddendum;
  ReactDebugCurrentFiber.current = fiber;
  ReactDebugCurrentFiber.phase = null;
}

function setCurrentPhase(phase) {
  ReactDebugCurrentFiber.phase = phase;
}

var ReactDebugCurrentFiber = {
  current: null,
  phase: null,
  resetCurrentFiber: resetCurrentFiber,
  setCurrentFiber: setCurrentFiber,
  setCurrentPhase: setCurrentPhase,
  getCurrentFiberOwnerName: getCurrentFiberOwnerName,
  getCurrentFiberStackAddendum: getCurrentFiberStackAddendum
};

// Prefix measurements so that it's possible to filter them.
// Longer prefixes are hard to read in DevTools.
var reactEmoji = '\u269B';
var warningEmoji = '\u26D4';
var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

// Keep track of current fiber so that we know the path to unwind on pause.
// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
var currentFiber = null;
// If we're in the middle of user code, which fiber and method is it?
// Reusing `currentFiber` would be confusing for this because user code fiber
// can change during commit phase too, but we don't need to unwind it (since
// lifecycles in the commit phase don't resemble a tree).
var currentPhase = null;
var currentPhaseFiber = null;
// Did lifecycle hook schedule an update? This is often a performance problem,
// so we will keep track of it, and include it in the report.
// Track commits caused by cascading updates.
var isCommitting = false;
var hasScheduledUpdateInCurrentCommit = false;
var hasScheduledUpdateInCurrentPhase = false;
var commitCountInCurrentWorkLoop = 0;
var effectCountInCurrentCommit = 0;
var isWaitingForCallback = false;
// During commits, we only show a measurement once per method name
// to avoid stretch the commit phase with measurement overhead.
var labelsInCurrentCommit = new Set();

var formatMarkName = function (markName) {
  return reactEmoji + ' ' + markName;
};

var formatLabel = function (label, warning$$1) {
  var prefix = warning$$1 ? warningEmoji + ' ' : reactEmoji + ' ';
  var suffix = warning$$1 ? ' Warning: ' + warning$$1 : '';
  return '' + prefix + label + suffix;
};

var beginMark = function (markName) {
  performance.mark(formatMarkName(markName));
};

var clearMark = function (markName) {
  performance.clearMarks(formatMarkName(markName));
};

var endMark = function (label, markName, warning$$1) {
  var formattedMarkName = formatMarkName(markName);
  var formattedLabel = formatLabel(label, warning$$1);
  try {
    performance.measure(formattedLabel, formattedMarkName);
  } catch (err) {}
  // If previous mark was missing for some reason, this will throw.
  // This could only happen if React crashed in an unexpected place earlier.
  // Don't pile on with more errors.

  // Clear marks immediately to avoid growing buffer.
  performance.clearMarks(formattedMarkName);
  performance.clearMeasures(formattedLabel);
};

var getFiberMarkName = function (label, debugID) {
  return label + ' (#' + debugID + ')';
};

var getFiberLabel = function (componentName, isMounted, phase) {
  if (phase === null) {
    // These are composite component total time measurements.
    return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
  } else {
    // Composite component methods.
    return componentName + '.' + phase;
  }
};

var beginFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);

  if (isCommitting && labelsInCurrentCommit.has(label)) {
    // During the commit phase, we don't show duplicate labels because
    // there is a fixed overhead for every measurement, and we don't
    // want to stretch the commit phase beyond necessary.
    return false;
  }
  labelsInCurrentCommit.add(label);

  var markName = getFiberMarkName(label, debugID);
  beginMark(markName);
  return true;
};

var clearFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  clearMark(markName);
};

var endFiberMark = function (fiber, phase, warning$$1) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  endMark(label, markName, warning$$1);
};

var shouldIgnoreFiber = function (fiber) {
  // Host components should be skipped in the timeline.
  // We could check typeof fiber.type, but does this work with RN?
  switch (fiber.tag) {
    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
    case ReturnComponent:
    case Fragment:
      return true;
    default:
      return false;
  }
};

var clearPendingPhaseMeasurement = function () {
  if (currentPhase !== null && currentPhaseFiber !== null) {
    clearFiberMark(currentPhaseFiber, currentPhase);
  }
  currentPhaseFiber = null;
  currentPhase = null;
  hasScheduledUpdateInCurrentPhase = false;
};

var pauseTimers = function () {
  // Stops all currently active measurements so that they can be resumed
  // if we continue in a later deferred loop from the same unit of work.
  var fiber = currentFiber;
  while (fiber) {
    if (fiber._debugIsCurrentlyTiming) {
      endFiberMark(fiber, null, null);
    }
    fiber = fiber['return'];
  }
};

var resumeTimersRecursively = function (fiber) {
  if (fiber['return'] !== null) {
    resumeTimersRecursively(fiber['return']);
  }
  if (fiber._debugIsCurrentlyTiming) {
    beginFiberMark(fiber, null);
  }
};

var resumeTimers = function () {
  // Resumes all measurements that were active during the last deferred loop.
  if (currentFiber !== null) {
    resumeTimersRecursively(currentFiber);
  }
};

function recordEffect() {
  if (enableUserTimingAPI) {
    effectCountInCurrentCommit++;
  }
}

function recordScheduleUpdate() {
  if (enableUserTimingAPI) {
    if (isCommitting) {
      hasScheduledUpdateInCurrentCommit = true;
    }
    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
      hasScheduledUpdateInCurrentPhase = true;
    }
  }
}

function startRequestCallbackTimer() {
  if (enableUserTimingAPI) {
    if (supportsUserTiming && !isWaitingForCallback) {
      isWaitingForCallback = true;
      beginMark('(Waiting for async callback...)');
    }
  }
}

function stopRequestCallbackTimer(didExpire) {
  if (enableUserTimingAPI) {
    if (supportsUserTiming) {
      isWaitingForCallback = false;
      var warning$$1 = didExpire ? 'React was blocked by main thread' : null;
      endMark('(Waiting for async callback...)', '(Waiting for async callback...)', warning$$1);
    }
  }
}

function startWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, this is the fiber to unwind from.
    currentFiber = fiber;
    if (!beginFiberMark(fiber, null)) {
      return;
    }
    fiber._debugIsCurrentlyTiming = true;
  }
}

function cancelWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // Remember we shouldn't complete measurement for this fiber.
    // Otherwise flamechart will be deep even for small updates.
    fiber._debugIsCurrentlyTiming = false;
    clearFiberMark(fiber, null);
  }
}

function stopWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, its parent is the fiber to unwind from.
    currentFiber = fiber['return'];
    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }
    fiber._debugIsCurrentlyTiming = false;
    endFiberMark(fiber, null, null);
  }
}

function stopFailedWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, its parent is the fiber to unwind from.
    currentFiber = fiber['return'];
    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }
    fiber._debugIsCurrentlyTiming = false;
    var warning$$1 = 'An error was thrown inside this error boundary';
    endFiberMark(fiber, null, warning$$1);
  }
}

function startPhaseTimer(fiber, phase) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    clearPendingPhaseMeasurement();
    if (!beginFiberMark(fiber, phase)) {
      return;
    }
    currentPhaseFiber = fiber;
    currentPhase = phase;
  }
}

function stopPhaseTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    if (currentPhase !== null && currentPhaseFiber !== null) {
      var warning$$1 = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
      endFiberMark(currentPhaseFiber, currentPhase, warning$$1);
    }
    currentPhase = null;
    currentPhaseFiber = null;
  }
}

function startWorkLoopTimer(nextUnitOfWork) {
  if (enableUserTimingAPI) {
    currentFiber = nextUnitOfWork;
    if (!supportsUserTiming) {
      return;
    }
    commitCountInCurrentWorkLoop = 0;
    // This is top level call.
    // Any other measurements are performed within.
    beginMark('(React Tree Reconciliation)');
    // Resume any measurements that were in progress during the last loop.
    resumeTimers();
  }
}

function stopWorkLoopTimer(interruptedBy) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var warning$$1 = null;
    if (interruptedBy !== null) {
      if (interruptedBy.tag === HostRoot) {
        warning$$1 = 'A top-level update interrupted the previous render';
      } else {
        var componentName = getComponentName(interruptedBy) || 'Unknown';
        warning$$1 = 'An update to ' + componentName + ' interrupted the previous render';
      }
    } else if (commitCountInCurrentWorkLoop > 1) {
      warning$$1 = 'There were cascading updates';
    }
    commitCountInCurrentWorkLoop = 0;
    // Pause any measurements until the next loop.
    pauseTimers();
    endMark('(React Tree Reconciliation)', '(React Tree Reconciliation)', warning$$1);
  }
}

function startCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    isCommitting = true;
    hasScheduledUpdateInCurrentCommit = false;
    labelsInCurrentCommit.clear();
    beginMark('(Committing Changes)');
  }
}

function stopCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var warning$$1 = null;
    if (hasScheduledUpdateInCurrentCommit) {
      warning$$1 = 'Lifecycle hook scheduled a cascading update';
    } else if (commitCountInCurrentWorkLoop > 0) {
      warning$$1 = 'Caused by a cascading update in earlier commit';
    }
    hasScheduledUpdateInCurrentCommit = false;
    commitCountInCurrentWorkLoop++;
    isCommitting = false;
    labelsInCurrentCommit.clear();

    endMark('(Committing Changes)', '(Committing Changes)', warning$$1);
  }
}

function startCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Committing Host Effects)');
  }
}

function stopCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
  }
}

function startCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Calling Lifecycle Methods)');
  }
}

function stopCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
  }
}

{
  var warnedAboutMissingGetChildContext = {};
}

// A cursor to the current merged context object on the stack.
var contextStackCursor = createCursor(emptyObject);
// A cursor to a boolean indicating whether the context has changed.
var didPerformWorkStackCursor = createCursor(false);
// Keep track of the previous context object that was on the stack.
// We use this to get access to the parent context after we have already
// pushed the next context provider, and now need to merge their contexts.
var previousContext = emptyObject;

function getUnmaskedContext(workInProgress) {
  var hasOwnContext = isContextProvider(workInProgress);
  if (hasOwnContext) {
    // If the fiber is a context provider itself, when we read its context
    // we have already pushed its own child context on the stack. A context
    // provider should not "see" its own child context. Therefore we read the
    // previous (parent) context instead for a context provider.
    return previousContext;
  }
  return contextStackCursor.current;
}

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
  var instance = workInProgress.stateNode;
  instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
  instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
}

function getMaskedContext(workInProgress, unmaskedContext) {
  var type = workInProgress.type;
  var contextTypes = type.contextTypes;
  if (!contextTypes) {
    return emptyObject;
  }

  // Avoid recreating masked context unless unmasked context has changed.
  // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
  // This may trigger infinite loops if componentWillReceiveProps calls setState.
  var instance = workInProgress.stateNode;
  if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
    return instance.__reactInternalMemoizedMaskedChildContext;
  }

  var context = {};
  for (var key in contextTypes) {
    context[key] = unmaskedContext[key];
  }

  {
    var name = getComponentName(workInProgress) || 'Unknown';
    checkPropTypes(contextTypes, context, 'context', name, ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
  }

  // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // Context is created before the class component is instantiated so check for instance.
  if (instance) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return context;
}

function hasContextChanged() {
  return didPerformWorkStackCursor.current;
}

function isContextConsumer(fiber) {
  return fiber.tag === ClassComponent && fiber.type.contextTypes != null;
}

function isContextProvider(fiber) {
  return fiber.tag === ClassComponent && fiber.type.childContextTypes != null;
}

function popContextProvider(fiber) {
  if (!isContextProvider(fiber)) {
    return;
  }

  pop(didPerformWorkStackCursor, fiber);
  pop(contextStackCursor, fiber);
}

function popTopLevelContextObject(fiber) {
  pop(didPerformWorkStackCursor, fiber);
  pop(contextStackCursor, fiber);
}

function pushTopLevelContextObject(fiber, context, didChange) {
  !(contextStackCursor.cursor == null) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  push(contextStackCursor, context, fiber);
  push(didPerformWorkStackCursor, didChange, fiber);
}

function processChildContext(fiber, parentContext) {
  var instance = fiber.stateNode;
  var childContextTypes = fiber.type.childContextTypes;

  // TODO (bvaughn) Replace this behavior with an invariant() in the future.
  // It has only been added in Fiber to match the (unintentional) behavior in Stack.
  if (typeof instance.getChildContext !== 'function') {
    {
      var componentName = getComponentName(fiber) || 'Unknown';

      if (!warnedAboutMissingGetChildContext[componentName]) {
        warnedAboutMissingGetChildContext[componentName] = true;
        warning(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
      }
    }
    return parentContext;
  }

  var childContext = void 0;
  {
    ReactDebugCurrentFiber.setCurrentPhase('getChildContext');
  }
  startPhaseTimer(fiber, 'getChildContext');
  childContext = instance.getChildContext();
  stopPhaseTimer();
  {
    ReactDebugCurrentFiber.setCurrentPhase(null);
  }
  for (var contextKey in childContext) {
    !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(fiber) || 'Unknown', contextKey) : void 0;
  }
  {
    var name = getComponentName(fiber) || 'Unknown';
    checkPropTypes(childContextTypes, childContext, 'child context', name,
    // In practice, there is one case in which we won't get a stack. It's when
    // somebody calls unstable_renderSubtreeIntoContainer() and we process
    // context from the parent component instance. The stack will be missing
    // because it's outside of the reconciliation, and so the pointer has not
    // been set. This is rare and doesn't matter. We'll also remove that API.
    ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
  }

  return _assign({}, parentContext, childContext);
}

function pushContextProvider(workInProgress) {
  if (!isContextProvider(workInProgress)) {
    return false;
  }

  var instance = workInProgress.stateNode;
  // We push the context as early as possible to ensure stack integrity.
  // If the instance does not exist yet, we will push null at first,
  // and replace it on the stack later when invalidating the context.
  var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;

  // Remember the parent context so we can merge with it later.
  // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
  previousContext = contextStackCursor.current;
  push(contextStackCursor, memoizedMergedChildContext, workInProgress);
  push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);

  return true;
}

function invalidateContextProvider(workInProgress, didChange) {
  var instance = workInProgress.stateNode;
  !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  if (didChange) {
    // Merge parent and own context.
    // Skip this if we're not updating due to sCU.
    // This avoids unnecessarily recomputing memoized values.
    var mergedContext = processChildContext(workInProgress, previousContext);
    instance.__reactInternalMemoizedMergedChildContext = mergedContext;

    // Replace the old (or empty) context with the new one.
    // It is important to unwind the context in the reverse order.
    pop(didPerformWorkStackCursor, workInProgress);
    pop(contextStackCursor, workInProgress);
    // Now push the new context and mark that it has changed.
    push(contextStackCursor, mergedContext, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  } else {
    pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }
}

function resetContext() {
  previousContext = emptyObject;
  contextStackCursor.current = emptyObject;
  didPerformWorkStackCursor.current = false;
}

function findCurrentUnmaskedContext(fiber) {
  // Currently this is only used with renderSubtreeIntoContainer; not sure if it
  // makes sense elsewhere
  !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  var node = fiber;
  while (node.tag !== HostRoot) {
    if (isContextProvider(node)) {
      return node.stateNode.__reactInternalMemoizedMergedChildContext;
    }
    var parent = node['return'];
    !parent ? invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    node = parent;
  }
  return node.stateNode.context;
}

var NoWork = 0; // TODO: Use an opaque type once ESLint et al support the syntax

var Sync = 1;
var Never = 2147483647; // Max int32: Math.pow(2, 31) - 1

var UNIT_SIZE = 10;
var MAGIC_NUMBER_OFFSET = 2;

// 1 unit of expiration time represents 10ms.
function msToExpirationTime(ms) {
  // Always add an offset so that we don't clash with the magic number for NoWork.
  return (ms / UNIT_SIZE | 0) + MAGIC_NUMBER_OFFSET;
}

function expirationTimeToMs(expirationTime) {
  return (expirationTime - MAGIC_NUMBER_OFFSET) * UNIT_SIZE;
}

function ceiling(num, precision) {
  return ((num / precision | 0) + 1) * precision;
}

function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
  return ceiling(currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
}

var NoContext = 0;
var AsyncUpdates = 1;

{
  var hasBadMapPolyfill = false;
  try {
    var nonExtensibleObject = Object.preventExtensions({});
    /* eslint-disable no-new */
    
    /* eslint-enable no-new */
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

// A Fiber is work on a Component that needs to be done or was done. There can
// be more than one per component.


{
  var debugCounter = 1;
}

function FiberNode(tag, key, internalContextTag) {
  // Instance
  this.tag = tag;
  this.key = key;
  this.type = null;
  this.stateNode = null;

  // Fiber
  this['return'] = null;
  this.child = null;
  this.sibling = null;
  this.index = 0;

  this.ref = null;

  this.pendingProps = null;
  this.memoizedProps = null;
  this.updateQueue = null;
  this.memoizedState = null;

  this.internalContextTag = internalContextTag;

  // Effects
  this.effectTag = NoEffect;
  this.nextEffect = null;

  this.firstEffect = null;
  this.lastEffect = null;

  this.expirationTime = NoWork;

  this.alternate = null;

  {
    this._debugID = debugCounter++;
    this._debugSource = null;
    this._debugOwner = null;
    this._debugIsCurrentlyTiming = false;
    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
      Object.preventExtensions(this);
    }
  }
}

// This is a constructor function, rather than a POJO constructor, still
// please ensure we do the following:
// 1) Nobody should add any instance methods on this. Instance methods can be
//    more difficult to predict when they get optimized and they are almost
//    never inlined properly in static compilers.
// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
//    always know when it is a fiber.
// 3) We might want to experiment with using numeric keys since they are easier
//    to optimize in a non-JIT environment.
// 4) We can easily go from a constructor to a createFiber object literal if that
//    is faster.
// 5) It should be easy to port this to a C struct and keep a C implementation
//    compatible.
var createFiber = function (tag, key, internalContextTag) {
  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
  return new FiberNode(tag, key, internalContextTag);
};

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

// This is used to create an alternate fiber to do work on.
function createWorkInProgress(current, pendingProps, expirationTime) {
  var workInProgress = current.alternate;
  if (workInProgress === null) {
    // We use a double buffering pooling technique because we know that we'll
    // only ever need at most two versions of a tree. We pool the "other" unused
    // node that we're free to reuse. This is lazily created to avoid allocating
    // extra objects for things that are never updated. It also allow us to
    // reclaim the extra memory if needed.
    workInProgress = createFiber(current.tag, current.key, current.internalContextTag);
    workInProgress.type = current.type;
    workInProgress.stateNode = current.stateNode;

    {
      // DEV-only fields
      workInProgress._debugID = current._debugID;
      workInProgress._debugSource = current._debugSource;
      workInProgress._debugOwner = current._debugOwner;
    }

    workInProgress.alternate = current;
    current.alternate = workInProgress;
  } else {
    // We already have an alternate.
    // Reset the effect tag.
    workInProgress.effectTag = NoEffect;

    // The effect list is no longer valid.
    workInProgress.nextEffect = null;
    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;
  }

  workInProgress.expirationTime = expirationTime;
  workInProgress.pendingProps = pendingProps;

  workInProgress.child = current.child;
  workInProgress.memoizedProps = current.memoizedProps;
  workInProgress.memoizedState = current.memoizedState;
  workInProgress.updateQueue = current.updateQueue;

  // These will be overridden during the parent's reconciliation
  workInProgress.sibling = current.sibling;
  workInProgress.index = current.index;
  workInProgress.ref = current.ref;

  return workInProgress;
}

function createHostRootFiber() {
  var fiber = createFiber(HostRoot, null, NoContext);
  return fiber;
}

function createFiberFromElement(element, internalContextTag, expirationTime) {
  var owner = null;
  {
    owner = element._owner;
  }

  var fiber = void 0;
  var type = element.type,
      key = element.key;

  if (typeof type === 'function') {
    fiber = shouldConstruct(type) ? createFiber(ClassComponent, key, internalContextTag) : createFiber(IndeterminateComponent, key, internalContextTag);
    fiber.type = type;
    fiber.pendingProps = element.props;
  } else if (typeof type === 'string') {
    fiber = createFiber(HostComponent, key, internalContextTag);
    fiber.type = type;
    fiber.pendingProps = element.props;
  } else if (typeof type === 'object' && type !== null && typeof type.tag === 'number') {
    // Currently assumed to be a continuation and therefore is a fiber already.
    // TODO: The yield system is currently broken for updates in some cases.
    // The reified yield stores a fiber, but we don't know which fiber that is;
    // the current or a workInProgress? When the continuation gets rendered here
    // we don't know if we can reuse that fiber or if we need to clone it.
    // There is probably a clever way to restructure this.
    fiber = type;
    fiber.pendingProps = element.props;
  } else {
    var info = '';
    {
      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
        info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
      }
      var ownerName = owner ? getComponentName(owner) : null;
      if (ownerName) {
        info += '\n\nCheck the render method of `' + ownerName + '`.';
      }
    }
    invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);
  }

  {
    fiber._debugSource = element._source;
    fiber._debugOwner = element._owner;
  }

  fiber.expirationTime = expirationTime;

  return fiber;
}

function createFiberFromFragment(elements, internalContextTag, expirationTime, key) {
  var fiber = createFiber(Fragment, key, internalContextTag);
  fiber.pendingProps = elements;
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromText(content, internalContextTag, expirationTime) {
  var fiber = createFiber(HostText, null, internalContextTag);
  fiber.pendingProps = content;
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromHostInstanceForDeletion() {
  var fiber = createFiber(HostComponent, null, NoContext);
  fiber.type = 'DELETED';
  return fiber;
}

function createFiberFromCall(call, internalContextTag, expirationTime) {
  var fiber = createFiber(CallComponent, call.key, internalContextTag);
  fiber.type = call.handler;
  fiber.pendingProps = call;
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromReturn(returnNode, internalContextTag, expirationTime) {
  var fiber = createFiber(ReturnComponent, null, internalContextTag);
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromPortal(portal, internalContextTag, expirationTime) {
  var fiber = createFiber(HostPortal, portal.key, internalContextTag);
  fiber.pendingProps = portal.children || [];
  fiber.expirationTime = expirationTime;
  fiber.stateNode = {
    containerInfo: portal.containerInfo,
    pendingChildren: null, // Used by persistent updates
    implementation: portal.implementation
  };
  return fiber;
}

function createFiberRoot(containerInfo, hydrate) {
  // Cyclic construction. This cheats the type system right now because
  // stateNode is any.
  var uninitializedFiber = createHostRootFiber();
  var root = {
    current: uninitializedFiber,
    containerInfo: containerInfo,
    pendingChildren: null,
    remainingExpirationTime: NoWork,
    isReadyForCommit: false,
    finishedWork: null,
    context: null,
    pendingContext: null,
    hydrate: hydrate,
    nextScheduledRoot: null
  };
  uninitializedFiber.stateNode = root;
  return root;
}

var onCommitFiberRoot = null;
var onCommitFiberUnmount = null;
var hasLoggedError = false;

function catchErrors(fn) {
  return function (arg) {
    try {
      return fn(arg);
    } catch (err) {
      if (true && !hasLoggedError) {
        hasLoggedError = true;
        warning(false, 'React DevTools encountered an error: %s', err);
      }
    }
  };
}

function injectInternals(internals) {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
    // No DevTools
    return false;
  }
  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (hook.isDisabled) {
    // This isn't a real property on the hook, but it can be set to opt out
    // of DevTools integration and associated warnings and logs.
    // https://github.com/facebook/react/issues/3877
    return true;
  }
  if (!hook.supportsFiber) {
    {
      warning(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
    }
    // DevTools exists, even though it doesn't support Fiber.
    return true;
  }
  try {
    var rendererID = hook.inject(internals);
    // We have successfully injected, so now it is safe to set up hooks.
    onCommitFiberRoot = catchErrors(function (root) {
      return hook.onCommitFiberRoot(rendererID, root);
    });
    onCommitFiberUnmount = catchErrors(function (fiber) {
      return hook.onCommitFiberUnmount(rendererID, fiber);
    });
  } catch (err) {
    // Catch all errors because it is unsafe to throw during initialization.
    {
      warning(false, 'React DevTools encountered an error: %s.', err);
    }
  }
  // DevTools exists
  return true;
}

function onCommitRoot(root) {
  if (typeof onCommitFiberRoot === 'function') {
    onCommitFiberRoot(root);
  }
}

function onCommitUnmount(fiber) {
  if (typeof onCommitFiberUnmount === 'function') {
    onCommitFiberUnmount(fiber);
  }
}

{
  var didWarnUpdateInsideUpdate = false;
}

// Callbacks are not validated until invocation


// Singly linked-list of updates. When an update is scheduled, it is added to
// the queue of the current fiber and the work-in-progress fiber. The two queues
// are separate but they share a persistent structure.
//
// During reconciliation, updates are removed from the work-in-progress fiber,
// but they remain on the current fiber. That ensures that if a work-in-progress
// is aborted, the aborted updates are recovered by cloning from current.
//
// The work-in-progress queue is always a subset of the current queue.
//
// When the tree is committed, the work-in-progress becomes the current.


function createUpdateQueue(baseState) {
  var queue = {
    baseState: baseState,
    expirationTime: NoWork,
    first: null,
    last: null,
    callbackList: null,
    hasForceUpdate: false,
    isInitialized: false
  };
  {
    queue.isProcessing = false;
  }
  return queue;
}

function insertUpdateIntoQueue(queue, update) {
  // Append the update to the end of the list.
  if (queue.last === null) {
    // Queue is empty
    queue.first = queue.last = update;
  } else {
    queue.last.next = update;
    queue.last = update;
  }
  if (queue.expirationTime === NoWork || queue.expirationTime > update.expirationTime) {
    queue.expirationTime = update.expirationTime;
  }
}

function insertUpdateIntoFiber(fiber, update) {
  // We'll have at least one and at most two distinct update queues.
  var alternateFiber = fiber.alternate;
  var queue1 = fiber.updateQueue;
  if (queue1 === null) {
    // TODO: We don't know what the base state will be until we begin work.
    // It depends on which fiber is the next current. Initialize with an empty
    // base state, then set to the memoizedState when rendering. Not super
    // happy with this approach.
    queue1 = fiber.updateQueue = createUpdateQueue(null);
  }

  var queue2 = void 0;
  if (alternateFiber !== null) {
    queue2 = alternateFiber.updateQueue;
    if (queue2 === null) {
      queue2 = alternateFiber.updateQueue = createUpdateQueue(null);
    }
  } else {
    queue2 = null;
  }
  queue2 = queue2 !== queue1 ? queue2 : null;

  // Warn if an update is scheduled from inside an updater function.
  {
    if ((queue1.isProcessing || queue2 !== null && queue2.isProcessing) && !didWarnUpdateInsideUpdate) {
      warning(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
      didWarnUpdateInsideUpdate = true;
    }
  }

  // If there's only one queue, add the update to that queue and exit.
  if (queue2 === null) {
    insertUpdateIntoQueue(queue1, update);
    return;
  }

  // If either queue is empty, we need to add to both queues.
  if (queue1.last === null || queue2.last === null) {
    insertUpdateIntoQueue(queue1, update);
    insertUpdateIntoQueue(queue2, update);
    return;
  }

  // If both lists are not empty, the last update is the same for both lists
  // because of structural sharing. So, we should only append to one of
  // the lists.
  insertUpdateIntoQueue(queue1, update);
  // But we still need to update the `last` pointer of queue2.
  queue2.last = update;
}

function getUpdateExpirationTime(fiber) {
  if (fiber.tag !== ClassComponent && fiber.tag !== HostRoot) {
    return NoWork;
  }
  var updateQueue = fiber.updateQueue;
  if (updateQueue === null) {
    return NoWork;
  }
  return updateQueue.expirationTime;
}

function getStateFromUpdate(update, instance, prevState, props) {
  var partialState = update.partialState;
  if (typeof partialState === 'function') {
    var updateFn = partialState;

    // Invoke setState callback an extra time to help detect side-effects.
    if (debugRenderPhaseSideEffects) {
      updateFn.call(instance, prevState, props);
    }

    return updateFn.call(instance, prevState, props);
  } else {
    return partialState;
  }
}

function processUpdateQueue(current, workInProgress, queue, instance, props, renderExpirationTime) {
  if (current !== null && current.updateQueue === queue) {
    // We need to create a work-in-progress queue, by cloning the current queue.
    var currentQueue = queue;
    queue = workInProgress.updateQueue = {
      baseState: currentQueue.baseState,
      expirationTime: currentQueue.expirationTime,
      first: currentQueue.first,
      last: currentQueue.last,
      isInitialized: currentQueue.isInitialized,
      // These fields are no longer valid because they were already committed.
      // Reset them.
      callbackList: null,
      hasForceUpdate: false
    };
  }

  {
    // Set this flag so we can warn if setState is called inside the update
    // function of another setState.
    queue.isProcessing = true;
  }

  // Reset the remaining expiration time. If we skip over any updates, we'll
  // increase this accordingly.
  queue.expirationTime = NoWork;

  // TODO: We don't know what the base state will be until we begin work.
  // It depends on which fiber is the next current. Initialize with an empty
  // base state, then set to the memoizedState when rendering. Not super
  // happy with this approach.
  var state = void 0;
  if (queue.isInitialized) {
    state = queue.baseState;
  } else {
    state = queue.baseState = workInProgress.memoizedState;
    queue.isInitialized = true;
  }
  var dontMutatePrevState = true;
  var update = queue.first;
  var didSkip = false;
  while (update !== null) {
    var updateExpirationTime = update.expirationTime;
    if (updateExpirationTime > renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      var remainingExpirationTime = queue.expirationTime;
      if (remainingExpirationTime === NoWork || remainingExpirationTime > updateExpirationTime) {
        // Update the remaining expiration time.
        queue.expirationTime = updateExpirationTime;
      }
      if (!didSkip) {
        didSkip = true;
        queue.baseState = state;
      }
      // Continue to the next update.
      update = update.next;
      continue;
    }

    // This update does have sufficient priority.

    // If no previous updates were skipped, drop this update from the queue by
    // advancing the head of the list.
    if (!didSkip) {
      queue.first = update.next;
      if (queue.first === null) {
        queue.last = null;
      }
    }

    // Process the update
    var _partialState = void 0;
    if (update.isReplace) {
      state = getStateFromUpdate(update, instance, state, props);
      dontMutatePrevState = true;
    } else {
      _partialState = getStateFromUpdate(update, instance, state, props);
      if (_partialState) {
        if (dontMutatePrevState) {
          // $FlowFixMe: Idk how to type this properly.
          state = _assign({}, state, _partialState);
        } else {
          state = _assign(state, _partialState);
        }
        dontMutatePrevState = false;
      }
    }
    if (update.isForced) {
      queue.hasForceUpdate = true;
    }
    if (update.callback !== null) {
      // Append to list of callbacks.
      var _callbackList = queue.callbackList;
      if (_callbackList === null) {
        _callbackList = queue.callbackList = [];
      }
      _callbackList.push(update);
    }
    update = update.next;
  }

  if (queue.callbackList !== null) {
    workInProgress.effectTag |= Callback;
  } else if (queue.first === null && !queue.hasForceUpdate) {
    // The queue is empty. We can reset it.
    workInProgress.updateQueue = null;
  }

  if (!didSkip) {
    didSkip = true;
    queue.baseState = state;
  }

  {
    // No longer processing.
    queue.isProcessing = false;
  }

  return state;
}

function commitCallbacks(queue, context) {
  var callbackList = queue.callbackList;
  if (callbackList === null) {
    return;
  }
  // Set the list to null to make sure they don't get called more than once.
  queue.callbackList = null;
  for (var i = 0; i < callbackList.length; i++) {
    var update = callbackList[i];
    var _callback = update.callback;
    // This update might be processed again. Clear the callback so it's only
    // called once.
    update.callback = null;
    !(typeof _callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback) : void 0;
    _callback.call(context);
  }
}

var fakeInternalInstance = {};
var isArray = Array.isArray;

{
  var didWarnAboutStateAssignmentForComponent = {};

  var warnOnInvalidCallback = function (callback, callerName) {
    warning(callback === null || typeof callback === 'function', '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
  };

  // This is so gross but it's at least non-critical and can be removed if
  // it causes problems. This is meant to give a nicer error message for
  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
  // ...)) which otherwise throws a "_processChildContext is not a function"
  // exception.
  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
    enumerable: false,
    value: function () {
      invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');
    }
  });
  Object.freeze(fakeInternalInstance);
}

var ReactFiberClassComponent = function (scheduleWork, computeExpirationForFiber, memoizeProps, memoizeState) {
  // Class component state updater
  var updater = {
    isMounted: isMounted,
    enqueueSetState: function (instance, partialState, callback) {
      var fiber = get(instance);
      callback = callback === undefined ? null : callback;
      {
        warnOnInvalidCallback(callback, 'setState');
      }
      var expirationTime = computeExpirationForFiber(fiber);
      var update = {
        expirationTime: expirationTime,
        partialState: partialState,
        callback: callback,
        isReplace: false,
        isForced: false,
        nextCallback: null,
        next: null
      };
      insertUpdateIntoFiber(fiber, update);
      scheduleWork(fiber, expirationTime);
    },
    enqueueReplaceState: function (instance, state, callback) {
      var fiber = get(instance);
      callback = callback === undefined ? null : callback;
      {
        warnOnInvalidCallback(callback, 'replaceState');
      }
      var expirationTime = computeExpirationForFiber(fiber);
      var update = {
        expirationTime: expirationTime,
        partialState: state,
        callback: callback,
        isReplace: true,
        isForced: false,
        nextCallback: null,
        next: null
      };
      insertUpdateIntoFiber(fiber, update);
      scheduleWork(fiber, expirationTime);
    },
    enqueueForceUpdate: function (instance, callback) {
      var fiber = get(instance);
      callback = callback === undefined ? null : callback;
      {
        warnOnInvalidCallback(callback, 'forceUpdate');
      }
      var expirationTime = computeExpirationForFiber(fiber);
      var update = {
        expirationTime: expirationTime,
        partialState: null,
        callback: callback,
        isReplace: false,
        isForced: true,
        nextCallback: null,
        next: null
      };
      insertUpdateIntoFiber(fiber, update);
      scheduleWork(fiber, expirationTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
    if (oldProps === null || workInProgress.updateQueue !== null && workInProgress.updateQueue.hasForceUpdate) {
      // If the workInProgress already has an Update effect, return true
      return true;
    }

    var instance = workInProgress.stateNode;
    var type = workInProgress.type;
    if (typeof instance.shouldComponentUpdate === 'function') {
      startPhaseTimer(workInProgress, 'shouldComponentUpdate');
      var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, newContext);
      stopPhaseTimer();

      // Simulate an async bailout/interruption by invoking lifecycle twice.
      if (debugRenderPhaseSideEffects) {
        instance.shouldComponentUpdate(newProps, newState, newContext);
      }

      {
        warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(workInProgress) || 'Unknown');
      }

      return shouldUpdate;
    }

    if (type.prototype && type.prototype.isPureReactComponent) {
      return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
    }

    return true;
  }

  function checkClassInstance(workInProgress) {
    var instance = workInProgress.stateNode;
    var type = workInProgress.type;
    {
      var name = getComponentName(workInProgress);
      var renderPresent = instance.render;

      if (!renderPresent) {
        if (type.prototype && typeof type.prototype.render === 'function') {
          warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
        } else {
          warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
        }
      }

      var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
      warning(noGetInitialStateOnES6, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);
      var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
      warning(noGetDefaultPropsOnES6, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);
      var noInstancePropTypes = !instance.propTypes;
      warning(noInstancePropTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);
      var noInstanceContextTypes = !instance.contextTypes;
      warning(noInstanceContextTypes, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);
      var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
      warning(noComponentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);
      if (type.prototype && type.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
        warning(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(workInProgress) || 'A pure component');
      }
      var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
      warning(noComponentDidUnmount, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);
      var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
      warning(noComponentDidReceiveProps, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name);
      var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
      warning(noComponentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);
      var hasMutatedProps = instance.props !== workInProgress.pendingProps;
      warning(instance.props === undefined || !hasMutatedProps, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name);
      var noInstanceDefaultProps = !instance.defaultProps;
      warning(noInstanceDefaultProps, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);
    }

    var state = instance.state;
    if (state && (typeof state !== 'object' || isArray(state))) {
      warning(false, '%s.state: must be set to an object or null', getComponentName(workInProgress));
    }
    if (typeof instance.getChildContext === 'function') {
      warning(typeof workInProgress.type.childContextTypes === 'object', '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', getComponentName(workInProgress));
    }
  }

  function resetInputPointers(workInProgress, instance) {
    instance.props = workInProgress.memoizedProps;
    instance.state = workInProgress.memoizedState;
  }

  function adoptClassInstance(workInProgress, instance) {
    instance.updater = updater;
    workInProgress.stateNode = instance;
    // The instance needs access to the fiber so that it can schedule updates
    set(instance, workInProgress);
    {
      instance._reactInternalInstance = fakeInternalInstance;
    }
  }

  function constructClassInstance(workInProgress, props) {
    var ctor = workInProgress.type;
    var unmaskedContext = getUnmaskedContext(workInProgress);
    var needsContext = isContextConsumer(workInProgress);
    var context = needsContext ? getMaskedContext(workInProgress, unmaskedContext) : emptyObject;
    var instance = new ctor(props, context);
    adoptClassInstance(workInProgress, instance);

    // Cache unmasked context so we can avoid recreating masked context unless necessary.
    // ReactFiberContext usually updates this cache but can't for newly-created instances.
    if (needsContext) {
      cacheContext(workInProgress, unmaskedContext, context);
    }

    return instance;
  }

  function callComponentWillMount(workInProgress, instance) {
    startPhaseTimer(workInProgress, 'componentWillMount');
    var oldState = instance.state;
    instance.componentWillMount();
    stopPhaseTimer();

    // Simulate an async bailout/interruption by invoking lifecycle twice.
    if (debugRenderPhaseSideEffects) {
      instance.componentWillMount();
    }

    if (oldState !== instance.state) {
      {
        warning(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress));
      }
      updater.enqueueReplaceState(instance, instance.state, null);
    }
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
    startPhaseTimer(workInProgress, 'componentWillReceiveProps');
    var oldState = instance.state;
    instance.componentWillReceiveProps(newProps, newContext);
    stopPhaseTimer();

    // Simulate an async bailout/interruption by invoking lifecycle twice.
    if (debugRenderPhaseSideEffects) {
      instance.componentWillReceiveProps(newProps, newContext);
    }

    if (instance.state !== oldState) {
      {
        var componentName = getComponentName(workInProgress) || 'Component';
        if (!didWarnAboutStateAssignmentForComponent[componentName]) {
          warning(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
          didWarnAboutStateAssignmentForComponent[componentName] = true;
        }
      }
      updater.enqueueReplaceState(instance, instance.state, null);
    }
  }

  // Invokes the mount life-cycles on a previously never rendered instance.
  function mountClassInstance(workInProgress, renderExpirationTime) {
    var current = workInProgress.alternate;

    {
      checkClassInstance(workInProgress);
    }

    var instance = workInProgress.stateNode;
    var state = instance.state || null;

    var props = workInProgress.pendingProps;
    !props ? invariant(false, 'There must be pending props for an initial mount. This error is likely caused by a bug in React. Please file an issue.') : void 0;

    var unmaskedContext = getUnmaskedContext(workInProgress);

    instance.props = props;
    instance.state = workInProgress.memoizedState = state;
    instance.refs = emptyObject;
    instance.context = getMaskedContext(workInProgress, unmaskedContext);

    if (enableAsyncSubtreeAPI && workInProgress.type != null && workInProgress.type.prototype != null && workInProgress.type.prototype.unstable_isAsyncReactComponent === true) {
      workInProgress.internalContextTag |= AsyncUpdates;
    }

    if (typeof instance.componentWillMount === 'function') {
      callComponentWillMount(workInProgress, instance);
      // If we had additional state updates during this life-cycle, let's
      // process them now.
      var updateQueue = workInProgress.updateQueue;
      if (updateQueue !== null) {
        instance.state = processUpdateQueue(current, workInProgress, updateQueue, instance, props, renderExpirationTime);
      }
    }
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
  }

  // Called on a preexisting class instance. Returns false if a resumed render
  // could be reused.
  // function resumeMountClassInstance(
  //   workInProgress: Fiber,
  //   priorityLevel: PriorityLevel,
  // ): boolean {
  //   const instance = workInProgress.stateNode;
  //   resetInputPointers(workInProgress, instance);

  //   let newState = workInProgress.memoizedState;
  //   let newProps = workInProgress.pendingProps;
  //   if (!newProps) {
  //     // If there isn't any new props, then we'll reuse the memoized props.
  //     // This could be from already completed work.
  //     newProps = workInProgress.memoizedProps;
  //     invariant(
  //       newProps != null,
  //       'There should always be pending or memoized props. This error is ' +
  //         'likely caused by a bug in React. Please file an issue.',
  //     );
  //   }
  //   const newUnmaskedContext = getUnmaskedContext(workInProgress);
  //   const newContext = getMaskedContext(workInProgress, newUnmaskedContext);

  //   const oldContext = instance.context;
  //   const oldProps = workInProgress.memoizedProps;

  //   if (
  //     typeof instance.componentWillReceiveProps === 'function' &&
  //     (oldProps !== newProps || oldContext !== newContext)
  //   ) {
  //     callComponentWillReceiveProps(
  //       workInProgress,
  //       instance,
  //       newProps,
  //       newContext,
  //     );
  //   }

  //   // Process the update queue before calling shouldComponentUpdate
  //   const updateQueue = workInProgress.updateQueue;
  //   if (updateQueue !== null) {
  //     newState = processUpdateQueue(
  //       workInProgress,
  //       updateQueue,
  //       instance,
  //       newState,
  //       newProps,
  //       priorityLevel,
  //     );
  //   }

  //   // TODO: Should we deal with a setState that happened after the last
  //   // componentWillMount and before this componentWillMount? Probably
  //   // unsupported anyway.

  //   if (
  //     !checkShouldComponentUpdate(
  //       workInProgress,
  //       workInProgress.memoizedProps,
  //       newProps,
  //       workInProgress.memoizedState,
  //       newState,
  //       newContext,
  //     )
  //   ) {
  //     // Update the existing instance's state, props, and context pointers even
  //     // though we're bailing out.
  //     instance.props = newProps;
  //     instance.state = newState;
  //     instance.context = newContext;
  //     return false;
  //   }

  //   // Update the input pointers now so that they are correct when we call
  //   // componentWillMount
  //   instance.props = newProps;
  //   instance.state = newState;
  //   instance.context = newContext;

  //   if (typeof instance.componentWillMount === 'function') {
  //     callComponentWillMount(workInProgress, instance);
  //     // componentWillMount may have called setState. Process the update queue.
  //     const newUpdateQueue = workInProgress.updateQueue;
  //     if (newUpdateQueue !== null) {
  //       newState = processUpdateQueue(
  //         workInProgress,
  //         newUpdateQueue,
  //         instance,
  //         newState,
  //         newProps,
  //         priorityLevel,
  //       );
  //     }
  //   }

  //   if (typeof instance.componentDidMount === 'function') {
  //     workInProgress.effectTag |= Update;
  //   }

  //   instance.state = newState;

  //   return true;
  // }

  // Invokes the update life-cycles and returns false if it shouldn't rerender.
  function updateClassInstance(current, workInProgress, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    resetInputPointers(workInProgress, instance);

    var oldProps = workInProgress.memoizedProps;
    var newProps = workInProgress.pendingProps;
    if (!newProps) {
      // If there aren't any new props, then we'll reuse the memoized props.
      // This could be from already completed work.
      newProps = oldProps;
      !(newProps != null) ? invariant(false, 'There should always be pending or memoized props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    }
    var oldContext = instance.context;
    var newUnmaskedContext = getUnmaskedContext(workInProgress);
    var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

    // Note: During these life-cycles, instance.props/instance.state are what
    // ever the previously attempted to render - not the "current". However,
    // during componentDidUpdate we pass the "current" props.

    if (typeof instance.componentWillReceiveProps === 'function' && (oldProps !== newProps || oldContext !== newContext)) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
    }

    // Compute the next state using the memoized state and the update queue.
    var oldState = workInProgress.memoizedState;
    // TODO: Previous state can be null.
    var newState = void 0;
    if (workInProgress.updateQueue !== null) {
      newState = processUpdateQueue(current, workInProgress, workInProgress.updateQueue, instance, newProps, renderExpirationTime);
    } else {
      newState = oldState;
    }

    if (oldProps === newProps && oldState === newState && !hasContextChanged() && !(workInProgress.updateQueue !== null && workInProgress.updateQueue.hasForceUpdate)) {
      // If an update was already in progress, we should schedule an Update
      // effect even though we're bailing out, so that cWU/cDU are called.
      if (typeof instance.componentDidUpdate === 'function') {
        if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
          workInProgress.effectTag |= Update;
        }
      }
      return false;
    }

    var shouldUpdate = checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

    if (shouldUpdate) {
      if (typeof instance.componentWillUpdate === 'function') {
        startPhaseTimer(workInProgress, 'componentWillUpdate');
        instance.componentWillUpdate(newProps, newState, newContext);
        stopPhaseTimer();

        // Simulate an async bailout/interruption by invoking lifecycle twice.
        if (debugRenderPhaseSideEffects) {
          instance.componentWillUpdate(newProps, newState, newContext);
        }
      }
      if (typeof instance.componentDidUpdate === 'function') {
        workInProgress.effectTag |= Update;
      }
    } else {
      // If an update was already in progress, we should schedule an Update
      // effect even though we're bailing out, so that cWU/cDU are called.
      if (typeof instance.componentDidUpdate === 'function') {
        if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
          workInProgress.effectTag |= Update;
        }
      }

      // If shouldComponentUpdate returned false, we should still update the
      // memoized props/state to indicate that this work can be reused.
      memoizeProps(workInProgress, newProps);
      memoizeState(workInProgress, newState);
    }

    // Update the existing instance's state, props, and context pointers even
    // if shouldComponentUpdate returns false.
    instance.props = newProps;
    instance.state = newState;
    instance.context = newContext;

    return shouldUpdate;
  }

  return {
    adoptClassInstance: adoptClassInstance,
    constructClassInstance: constructClassInstance,
    mountClassInstance: mountClassInstance,
    // resumeMountClassInstance,
    updateClassInstance: updateClassInstance
  };
};

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol['for'];

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol['for']('react.element') : 0xeac7;
var REACT_CALL_TYPE = hasSymbol ? Symbol['for']('react.call') : 0xeac8;
var REACT_RETURN_TYPE = hasSymbol ? Symbol['for']('react.return') : 0xeac9;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol['for']('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol['for']('react.fragment') : 0xeacb;

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';

function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
    return null;
  }
  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }
  return null;
}

var getCurrentFiberStackAddendum$1 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


{
  var didWarnAboutMaps = false;
  /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */
  var ownerHasKeyUseWarning = {};
  var ownerHasFunctionTypeWarning = {};

  var warnForMissingKey = function (child) {
    if (child === null || typeof child !== 'object') {
      return;
    }
    if (!child._store || child._store.validated || child.key != null) {
      return;
    }
    !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    child._store.validated = true;

    var currentComponentErrorInfo = 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + (getCurrentFiberStackAddendum$1() || '');
    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }
    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

    warning(false, 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.%s', getCurrentFiberStackAddendum$1());
  };
}

var isArray$1 = Array.isArray;

function coerceRef(current, element) {
  var mixedRef = element.ref;
  if (mixedRef !== null && typeof mixedRef !== 'function') {
    if (element._owner) {
      var owner = element._owner;
      var inst = void 0;
      if (owner) {
        var ownerFiber = owner;
        !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Stateless function components cannot have refs.') : void 0;
        inst = ownerFiber.stateNode;
      }
      !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;
      var stringRef = '' + mixedRef;
      // Check if previous string ref matches new string ref
      if (current !== null && current.ref !== null && current.ref._stringRef === stringRef) {
        return current.ref;
      }
      var ref = function (value) {
        var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
        if (value === null) {
          delete refs[stringRef];
        } else {
          refs[stringRef] = value;
        }
      };
      ref._stringRef = stringRef;
      return ref;
    } else {
      !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function or a string.') : void 0;
      !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. You may have multiple copies of React loaded. (details: https://fb.me/react-refs-must-have-owner).', mixedRef) : void 0;
    }
  }
  return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
  if (returnFiber.type !== 'textarea') {
    var addendum = '';
    {
      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + (getCurrentFiberStackAddendum$1() || '');
    }
    invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);
  }
}

function warnOnFunctionType() {
  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + (getCurrentFiberStackAddendum$1() || '');

  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;

  warning(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.%s', getCurrentFiberStackAddendum$1() || '');
}

// This wrapper function exists because I expect to clone the code in each path
// to be able to optimize each path individually by branching early. This needs
// a compiler or we can do it manually. Helpers that don't need this branching
// live outside of this function.
function ChildReconciler(shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return;
    }
    // Deletions are added in reversed order so we add it to the front.
    // At this point, the return fiber's effect list is empty except for
    // deletions, so we can just append the deletion to the list. The remaining
    // effects aren't added until the complete phase. Once we implement
    // resuming, this may not be true.
    var last = returnFiber.lastEffect;
    if (last !== null) {
      last.nextEffect = childToDelete;
      returnFiber.lastEffect = childToDelete;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
    childToDelete.nextEffect = null;
    childToDelete.effectTag = Deletion;
  }

  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return null;
    }

    // TODO: For the shouldClone case, this could be micro-optimized a bit by
    // assuming that after the first child we've already added everything.
    var childToDelete = currentFirstChild;
    while (childToDelete !== null) {
      deleteChild(returnFiber, childToDelete);
      childToDelete = childToDelete.sibling;
    }
    return null;
  }

  function mapRemainingChildren(returnFiber, currentFirstChild) {
    // Add the remaining children to a temporary map so that we can find them by
    // keys quickly. Implicit (null) keys get added to this set with their index
    var existingChildren = new Map();

    var existingChild = currentFirstChild;
    while (existingChild !== null) {
      if (existingChild.key !== null) {
        existingChildren.set(existingChild.key, existingChild);
      } else {
        existingChildren.set(existingChild.index, existingChild);
      }
      existingChild = existingChild.sibling;
    }
    return existingChildren;
  }

  function useFiber(fiber, pendingProps, expirationTime) {
    // We currently set sibling to null and index to 0 here because it is easy
    // to forget to do before returning it. E.g. for the single child case.
    var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
    clone.index = 0;
    clone.sibling = null;
    return clone;
  }

  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;
    if (!shouldTrackSideEffects) {
      // Noop.
      return lastPlacedIndex;
    }
    var current = newFiber.alternate;
    if (current !== null) {
      var oldIndex = current.index;
      if (oldIndex < lastPlacedIndex) {
        // This is a move.
        newFiber.effectTag = Placement;
        return lastPlacedIndex;
      } else {
        // This item can stay in place.
        return oldIndex;
      }
    } else {
      // This is an insertion.
      newFiber.effectTag = Placement;
      return lastPlacedIndex;
    }
  }

  function placeSingleChild(newFiber) {
    // This is simpler for the single child case. We only need to do a
    // placement for inserting new children.
    if (shouldTrackSideEffects && newFiber.alternate === null) {
      newFiber.effectTag = Placement;
    }
    return newFiber;
  }

  function updateTextNode(returnFiber, current, textContent, expirationTime) {
    if (current === null || current.tag !== HostText) {
      // Insert
      var created = createFiberFromText(textContent, returnFiber.internalContextTag, expirationTime);
      created['return'] = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, textContent, expirationTime);
      existing['return'] = returnFiber;
      return existing;
    }
  }

  function updateElement(returnFiber, current, element, expirationTime) {
    if (current !== null && current.type === element.type) {
      // Move based on index
      var existing = useFiber(current, element.props, expirationTime);
      existing.ref = coerceRef(current, element);
      existing['return'] = returnFiber;
      {
        existing._debugSource = element._source;
        existing._debugOwner = element._owner;
      }
      return existing;
    } else {
      // Insert
      var created = createFiberFromElement(element, returnFiber.internalContextTag, expirationTime);
      created.ref = coerceRef(current, element);
      created['return'] = returnFiber;
      return created;
    }
  }

  function updateCall(returnFiber, current, call, expirationTime) {
    // TODO: Should this also compare handler to determine whether to reuse?
    if (current === null || current.tag !== CallComponent) {
      // Insert
      var created = createFiberFromCall(call, returnFiber.internalContextTag, expirationTime);
      created['return'] = returnFiber;
      return created;
    } else {
      // Move based on index
      var existing = useFiber(current, call, expirationTime);
      existing['return'] = returnFiber;
      return existing;
    }
  }

  function updateReturn(returnFiber, current, returnNode, expirationTime) {
    if (current === null || current.tag !== ReturnComponent) {
      // Insert
      var created = createFiberFromReturn(returnNode, returnFiber.internalContextTag, expirationTime);
      created.type = returnNode.value;
      created['return'] = returnFiber;
      return created;
    } else {
      // Move based on index
      var existing = useFiber(current, null, expirationTime);
      existing.type = returnNode.value;
      existing['return'] = returnFiber;
      return existing;
    }
  }

  function updatePortal(returnFiber, current, portal, expirationTime) {
    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
      // Insert
      var created = createFiberFromPortal(portal, returnFiber.internalContextTag, expirationTime);
      created['return'] = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, portal.children || [], expirationTime);
      existing['return'] = returnFiber;
      return existing;
    }
  }

  function updateFragment(returnFiber, current, fragment, expirationTime, key) {
    if (current === null || current.tag !== Fragment) {
      // Insert
      var created = createFiberFromFragment(fragment, returnFiber.internalContextTag, expirationTime, key);
      created['return'] = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, fragment, expirationTime);
      existing['return'] = returnFiber;
      return existing;
    }
  }

  function createChild(returnFiber, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      var created = createFiberFromText('' + newChild, returnFiber.internalContextTag, expirationTime);
      created['return'] = returnFiber;
      return created;
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.type === REACT_FRAGMENT_TYPE) {
              var _created = createFiberFromFragment(newChild.props.children, returnFiber.internalContextTag, expirationTime, newChild.key);
              _created['return'] = returnFiber;
              return _created;
            } else {
              var _created2 = createFiberFromElement(newChild, returnFiber.internalContextTag, expirationTime);
              _created2.ref = coerceRef(null, newChild);
              _created2['return'] = returnFiber;
              return _created2;
            }
          }

        case REACT_CALL_TYPE:
          {
            var _created3 = createFiberFromCall(newChild, returnFiber.internalContextTag, expirationTime);
            _created3['return'] = returnFiber;
            return _created3;
          }

        case REACT_RETURN_TYPE:
          {
            var _created4 = createFiberFromReturn(newChild, returnFiber.internalContextTag, expirationTime);
            _created4.type = newChild.value;
            _created4['return'] = returnFiber;
            return _created4;
          }

        case REACT_PORTAL_TYPE:
          {
            var _created5 = createFiberFromPortal(newChild, returnFiber.internalContextTag, expirationTime);
            _created5['return'] = returnFiber;
            return _created5;
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        var _created6 = createFiberFromFragment(newChild, returnFiber.internalContextTag, expirationTime, null);
        _created6['return'] = returnFiber;
        return _created6;
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
    // Update the fiber if the keys match, otherwise return null.

    var key = oldFiber !== null ? oldFiber.key : null;

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      if (key !== null) {
        return null;
      }
      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.key === key) {
              if (newChild.type === REACT_FRAGMENT_TYPE) {
                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
              }
              return updateElement(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }

        case REACT_CALL_TYPE:
          {
            if (newChild.key === key) {
              return updateCall(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }

        case REACT_RETURN_TYPE:
          {
            // Returns don't have keys. If the previous node is implicitly keyed
            // we can continue to replace it without aborting even if it is not a
            // yield.
            if (key === null) {
              return updateReturn(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }

        case REACT_PORTAL_TYPE:
          {
            if (newChild.key === key) {
              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        if (key !== null) {
          return null;
        }

        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys, so we neither have to check the old nor
      // new node for the key. If both are text nodes, they match.
      var matchedFiber = existingChildren.get(newIdx) || null;
      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            if (newChild.type === REACT_FRAGMENT_TYPE) {
              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
            }
            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
          }

        case REACT_CALL_TYPE:
          {
            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            return updateCall(returnFiber, _matchedFiber2, newChild, expirationTime);
          }

        case REACT_RETURN_TYPE:
          {
            // Returns don't have keys, so we neither have to check the old nor
            // new node for the key. If both are returns, they match.
            var _matchedFiber3 = existingChildren.get(newIdx) || null;
            return updateReturn(returnFiber, _matchedFiber3, newChild, expirationTime);
          }

        case REACT_PORTAL_TYPE:
          {
            var _matchedFiber4 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            return updatePortal(returnFiber, _matchedFiber4, newChild, expirationTime);
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        var _matchedFiber5 = existingChildren.get(newIdx) || null;
        return updateFragment(returnFiber, _matchedFiber5, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  /**
   * Warns if there is a duplicate or missing key
   */
  function warnOnInvalidKey(child, knownKeys) {
    {
      if (typeof child !== 'object' || child === null) {
        return knownKeys;
      }
      switch (child.$$typeof) {
        case REACT_ELEMENT_TYPE:
        case REACT_CALL_TYPE:
        case REACT_PORTAL_TYPE:
          warnForMissingKey(child);
          var key = child.key;
          if (typeof key !== 'string') {
            break;
          }
          if (knownKeys === null) {
            knownKeys = new Set();
            knownKeys.add(key);
            break;
          }
          if (!knownKeys.has(key)) {
            knownKeys.add(key);
            break;
          }
          warning(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.%s', key, getCurrentFiberStackAddendum$1());
          break;
        default:
          break;
      }
    }
    return knownKeys;
  }

  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
    // This algorithm can't optimize by searching from boths ends since we
    // don't have backpointers on fibers. I'm trying to see how far we can get
    // with that model. If it ends up not being worth the tradeoffs, we can
    // add it later.

    // Even with a two ended optimization, we'd want to optimize for the case
    // where there are few changes and brute force the comparison instead of
    // going for the Map. It'd like to explore hitting that path first in
    // forward-only mode and only go for the Map once we notice that we need
    // lots of look ahead. This doesn't handle reversal as well as two ended
    // search but that's unusual. Besides, for the two ended optimization to
    // work on Iterables, we'd need to copy the whole set.

    // In this first iteration, we'll just live with hitting the bad case
    // (adding everything to a Map) in for every insert/move.

    // If you change this code, also update reconcileChildrenIterator() which
    // uses the same algorithm.

    {
      // First, validate keys.
      var knownKeys = null;
      for (var i = 0; i < newChildren.length; i++) {
        var child = newChildren[i];
        knownKeys = warnOnInvalidKey(child, knownKeys);
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;
    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);
      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (newIdx === newChildren.length) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; newIdx < newChildren.length; newIdx++) {
        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);
        if (!_newFiber) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber;
        } else {
          previousNewFiber.sibling = _newFiber;
        }
        previousNewFiber = _newFiber;
      }
      return resultingFirstChild;
    }

    // Add all children to a key map for quick lookups.
    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    // Keep scanning and use the map to restore deleted items as moves.
    for (; newIdx < newChildren.length; newIdx++) {
      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);
      if (_newFiber2) {
        if (shouldTrackSideEffects) {
          if (_newFiber2.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren['delete'](_newFiber2.key === null ? newIdx : _newFiber2.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber2;
        } else {
          previousNewFiber.sibling = _newFiber2;
        }
        previousNewFiber = _newFiber2;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
    // This is the same implementation as reconcileChildrenArray(),
    // but using the iterator instead.

    var iteratorFn = getIteratorFn(newChildrenIterable);
    !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;

    {
      // Warn about using Maps as children
      if (typeof newChildrenIterable.entries === 'function') {
        var possibleMap = newChildrenIterable;
        if (possibleMap.entries === iteratorFn) {
          warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', getCurrentFiberStackAddendum$1());
          didWarnAboutMaps = true;
        }
      }

      // First, validate keys.
      // We'll get a different iterator later for the main pass.
      var _newChildren = iteratorFn.call(newChildrenIterable);
      if (_newChildren) {
        var knownKeys = null;
        var _step = _newChildren.next();
        for (; !_step.done; _step = _newChildren.next()) {
          var child = _step.value;
          knownKeys = warnOnInvalidKey(child, knownKeys);
        }
      }
    }

    var newChildren = iteratorFn.call(newChildrenIterable);
    !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;

    var step = newChildren.next();
    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);
      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (!oldFiber) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (step.done) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; !step.done; newIdx++, step = newChildren.next()) {
        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);
        if (_newFiber3 === null) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber3;
        } else {
          previousNewFiber.sibling = _newFiber3;
        }
        previousNewFiber = _newFiber3;
      }
      return resultingFirstChild;
    }

    // Add all children to a key map for quick lookups.
    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    // Keep scanning and use the map to restore deleted items as moves.
    for (; !step.done; newIdx++, step = newChildren.next()) {
      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);
      if (_newFiber4 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber4.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren['delete'](_newFiber4.key === null ? newIdx : _newFiber4.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber4;
        } else {
          previousNewFiber.sibling = _newFiber4;
        }
        previousNewFiber = _newFiber4;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
    // There's no need to check for keys on text nodes since we don't have a
    // way to define them.
    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
      // We already have an existing node so let's just update it and delete
      // the rest.
      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
      var existing = useFiber(currentFirstChild, textContent, expirationTime);
      existing['return'] = returnFiber;
      return existing;
    }
    // The existing first child is not a text node so we need to create one
    // and delete the existing ones.
    deleteRemainingChildren(returnFiber, currentFirstChild);
    var created = createFiberFromText(textContent, returnFiber.internalContextTag, expirationTime);
    created['return'] = returnFiber;
    return created;
  }

  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
    var key = element.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.type === element.type) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
          existing.ref = coerceRef(child, element);
          existing['return'] = returnFiber;
          {
            existing._debugSource = element._source;
            existing._debugOwner = element._owner;
          }
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    if (element.type === REACT_FRAGMENT_TYPE) {
      var created = createFiberFromFragment(element.props.children, returnFiber.internalContextTag, expirationTime, element.key);
      created['return'] = returnFiber;
      return created;
    } else {
      var _created7 = createFiberFromElement(element, returnFiber.internalContextTag, expirationTime);
      _created7.ref = coerceRef(currentFirstChild, element);
      _created7['return'] = returnFiber;
      return _created7;
    }
  }

  function reconcileSingleCall(returnFiber, currentFirstChild, call, expirationTime) {
    var key = call.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === CallComponent) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, call, expirationTime);
          existing['return'] = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    var created = createFiberFromCall(call, returnFiber.internalContextTag, expirationTime);
    created['return'] = returnFiber;
    return created;
  }

  function reconcileSingleReturn(returnFiber, currentFirstChild, returnNode, expirationTime) {
    // There's no need to check for keys on yields since they're stateless.
    var child = currentFirstChild;
    if (child !== null) {
      if (child.tag === ReturnComponent) {
        deleteRemainingChildren(returnFiber, child.sibling);
        var existing = useFiber(child, null, expirationTime);
        existing.type = returnNode.value;
        existing['return'] = returnFiber;
        return existing;
      } else {
        deleteRemainingChildren(returnFiber, child);
      }
    }

    var created = createFiberFromReturn(returnNode, returnFiber.internalContextTag, expirationTime);
    created.type = returnNode.value;
    created['return'] = returnFiber;
    return created;
  }

  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
    var key = portal.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, portal.children || [], expirationTime);
          existing['return'] = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    var created = createFiberFromPortal(portal, returnFiber.internalContextTag, expirationTime);
    created['return'] = returnFiber;
    return created;
  }

  // This API will tag the children with the side-effect of the reconciliation
  // itself. They will be added to the side-effect list as we pass through the
  // children and the parent.
  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
    // This function is not recursive.
    // If the top level item is an array, we treat it as a set of children,
    // not as a fragment. Nested arrays on the other hand will be treated as
    // fragment nodes. Recursion happens at the normal flow.

    // Handle top level unkeyed fragments as if they were arrays.
    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
    // We treat the ambiguous cases above the same.
    if (typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null) {
      newChild = newChild.props.children;
    }

    // Handle object types
    var isObject = typeof newChild === 'object' && newChild !== null;

    if (isObject) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));

        case REACT_CALL_TYPE:
          return placeSingleChild(reconcileSingleCall(returnFiber, currentFirstChild, newChild, expirationTime));
        case REACT_RETURN_TYPE:
          return placeSingleChild(reconcileSingleReturn(returnFiber, currentFirstChild, newChild, expirationTime));
        case REACT_PORTAL_TYPE:
          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
      }
    }

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
    }

    if (isArray$1(newChild)) {
      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (getIteratorFn(newChild)) {
      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (isObject) {
      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }
    if (typeof newChild === 'undefined') {
      // If the new child is undefined, and the return fiber is a composite
      // component, throw an error. If Fiber return types are disabled,
      // we already threw above.
      switch (returnFiber.tag) {
        case ClassComponent:
          {
            {
              var instance = returnFiber.stateNode;
              if (instance.render._isMockFunction) {
                // We allow auto-mocks to proceed as if they're returning null.
                break;
              }
            }
          }
        // Intentionally fall through to the next case, which handles both
        // functions and classes
        // eslint-disable-next-lined no-fallthrough
        case FunctionalComponent:
          {
            var Component = returnFiber.type;
            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');
          }
      }
    }

    // Remaining cases are all treated as empty.
    return deleteRemainingChildren(returnFiber, currentFirstChild);
  }

  return reconcileChildFibers;
}

var reconcileChildFibers = ChildReconciler(true);
var mountChildFibers = ChildReconciler(false);

function cloneChildFibers(current, workInProgress) {
  !(current === null || workInProgress.child === current.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;

  if (workInProgress.child === null) {
    return;
  }

  var currentChild = workInProgress.child;
  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
  workInProgress.child = newChild;

  newChild['return'] = workInProgress;
  while (currentChild.sibling !== null) {
    currentChild = currentChild.sibling;
    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
    newChild['return'] = workInProgress;
  }
  newChild.sibling = null;
}

{
  var warnedAboutStatelessRefs = {};
}

var ReactFiberBeginWork = function (config, hostContext, hydrationContext, scheduleWork, computeExpirationForFiber) {
  var shouldSetTextContent = config.shouldSetTextContent,
      useSyncScheduling = config.useSyncScheduling,
      shouldDeprioritizeSubtree = config.shouldDeprioritizeSubtree;
  var pushHostContext = hostContext.pushHostContext,
      pushHostContainer = hostContext.pushHostContainer;
  var enterHydrationState = hydrationContext.enterHydrationState,
      resetHydrationState = hydrationContext.resetHydrationState,
      tryToClaimNextHydratableInstance = hydrationContext.tryToClaimNextHydratableInstance;

  var _ReactFiberClassCompo = ReactFiberClassComponent(scheduleWork, computeExpirationForFiber, memoizeProps, memoizeState),
      adoptClassInstance = _ReactFiberClassCompo.adoptClassInstance,
      constructClassInstance = _ReactFiberClassCompo.constructClassInstance,
      mountClassInstance = _ReactFiberClassCompo.mountClassInstance,
      updateClassInstance = _ReactFiberClassCompo.updateClassInstance;

  // TODO: Remove this and use reconcileChildrenAtExpirationTime directly.


  function reconcileChildren(current, workInProgress, nextChildren) {
    reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, workInProgress.expirationTime);
  }

  function reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime) {
    if (current === null) {
      // If this is a fresh new component that hasn't been rendered yet, we
      // won't update its child set by applying minimal side-effects. Instead,
      // we will add them all to the child before it gets rendered. That means
      // we can optimize this reconciliation pass by not tracking side-effects.
      workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    } else {
      // If the current child is the same as the work in progress, it means that
      // we haven't yet started any work on these children. Therefore, we use
      // the clone algorithm to create a copy of all the current children.

      // If we had any progressed work already, that is invalid at this point so
      // let's throw it out.
      workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderExpirationTime);
    }
  }

  function updateFragment(current, workInProgress) {
    var nextChildren = workInProgress.pendingProps;
    if (hasContextChanged()) {
      // Normally we can bail out on props equality but if context has changed
      // we don't do the bailout and we have to reuse existing props instead.
      if (nextChildren === null) {
        nextChildren = workInProgress.memoizedProps;
      }
    } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    reconcileChildren(current, workInProgress, nextChildren);
    memoizeProps(workInProgress, nextChildren);
    return workInProgress.child;
  }

  function markRef(current, workInProgress) {
    var ref = workInProgress.ref;
    if (ref !== null && (!current || current.ref !== ref)) {
      // Schedule a Ref effect
      workInProgress.effectTag |= Ref;
    }
  }

  function updateFunctionalComponent(current, workInProgress) {
    var fn = workInProgress.type;
    var nextProps = workInProgress.pendingProps;

    var memoizedProps = workInProgress.memoizedProps;
    if (hasContextChanged()) {
      // Normally we can bail out on props equality but if context has changed
      // we don't do the bailout and we have to reuse existing props instead.
      if (nextProps === null) {
        nextProps = memoizedProps;
      }
    } else {
      if (nextProps === null || memoizedProps === nextProps) {
        return bailoutOnAlreadyFinishedWork(current, workInProgress);
      }
      // TODO: consider bringing fn.shouldComponentUpdate() back.
      // It used to be here.
    }

    var unmaskedContext = getUnmaskedContext(workInProgress);
    var context = getMaskedContext(workInProgress, unmaskedContext);

    var nextChildren;

    {
      ReactCurrentOwner.current = workInProgress;
      ReactDebugCurrentFiber.setCurrentPhase('render');
      nextChildren = fn(nextProps, context);
      ReactDebugCurrentFiber.setCurrentPhase(null);
    }
    // React DevTools reads this flag.
    workInProgress.effectTag |= PerformedWork;
    reconcileChildren(current, workInProgress, nextChildren);
    memoizeProps(workInProgress, nextProps);
    return workInProgress.child;
  }

  function updateClassComponent(current, workInProgress, renderExpirationTime) {
    // Push context providers early to prevent context stack mismatches.
    // During mounting we don't know the child context yet as the instance doesn't exist.
    // We will invalidate the child context in finishClassComponent() right after rendering.
    var hasContext = pushContextProvider(workInProgress);

    var shouldUpdate = void 0;
    if (current === null) {
      if (!workInProgress.stateNode) {
        // In the initial pass we might need to construct the instance.
        constructClassInstance(workInProgress, workInProgress.pendingProps);
        mountClassInstance(workInProgress, renderExpirationTime);
        shouldUpdate = true;
      } else {
        invariant(false, 'Resuming work not yet implemented.');
        // In a resume, we'll already have an instance we can reuse.
        // shouldUpdate = resumeMountClassInstance(workInProgress, renderExpirationTime);
      }
    } else {
      shouldUpdate = updateClassInstance(current, workInProgress, renderExpirationTime);
    }
    return finishClassComponent(current, workInProgress, shouldUpdate, hasContext);
  }

  function finishClassComponent(current, workInProgress, shouldUpdate, hasContext) {
    // Refs should update even if shouldComponentUpdate returns false
    markRef(current, workInProgress);

    if (!shouldUpdate) {
      // Context providers should defer to sCU for rendering
      if (hasContext) {
        invalidateContextProvider(workInProgress, false);
      }

      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }

    var instance = workInProgress.stateNode;

    // Rerender
    ReactCurrentOwner.current = workInProgress;
    var nextChildren = void 0;
    {
      ReactDebugCurrentFiber.setCurrentPhase('render');
      nextChildren = instance.render();
      if (debugRenderPhaseSideEffects) {
        instance.render();
      }
      ReactDebugCurrentFiber.setCurrentPhase(null);
    }
    // React DevTools reads this flag.
    workInProgress.effectTag |= PerformedWork;
    reconcileChildren(current, workInProgress, nextChildren);
    // Memoize props and state using the values we just used to render.
    // TODO: Restructure so we never read values from the instance.
    memoizeState(workInProgress, instance.state);
    memoizeProps(workInProgress, instance.props);

    // The context might have changed so we need to recalculate it.
    if (hasContext) {
      invalidateContextProvider(workInProgress, true);
    }

    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    if (root.pendingContext) {
      pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
    } else if (root.context) {
      // Should always be set
      pushTopLevelContextObject(workInProgress, root.context, false);
    }
    pushHostContainer(workInProgress, root.containerInfo);
  }

  function updateHostRoot(current, workInProgress, renderExpirationTime) {
    pushHostRootContext(workInProgress);
    var updateQueue = workInProgress.updateQueue;
    if (updateQueue !== null) {
      var prevState = workInProgress.memoizedState;
      var state = processUpdateQueue(current, workInProgress, updateQueue, null, null, renderExpirationTime);
      if (prevState === state) {
        // If the state is the same as before, that's a bailout because we had
        // no work that expires at this time.
        resetHydrationState();
        return bailoutOnAlreadyFinishedWork(current, workInProgress);
      }
      var element = state.element;
      var root = workInProgress.stateNode;
      if ((current === null || current.child === null) && root.hydrate && enterHydrationState(workInProgress)) {
        // If we don't have any current children this might be the first pass.
        // We always try to hydrate. If this isn't a hydration pass there won't
        // be any children to hydrate which is effectively the same thing as
        // not hydrating.

        // This is a bit of a hack. We track the host root as a placement to
        // know that we're currently in a mounting state. That way isMounted
        // works as expected. We must reset this before committing.
        // TODO: Delete this when we delete isMounted and findDOMNode.
        workInProgress.effectTag |= Placement;

        // Ensure that children mount into this root without tracking
        // side-effects. This ensures that we don't store Placement effects on
        // nodes that will be hydrated.
        workInProgress.child = mountChildFibers(workInProgress, null, element, renderExpirationTime);
      } else {
        // Otherwise reset hydration state in case we aborted and resumed another
        // root.
        resetHydrationState();
        reconcileChildren(current, workInProgress, element);
      }
      memoizeState(workInProgress, state);
      return workInProgress.child;
    }
    resetHydrationState();
    // If there is no update queue, that's a bailout because the root has no props.
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }

  function updateHostComponent(current, workInProgress, renderExpirationTime) {
    pushHostContext(workInProgress);

    if (current === null) {
      tryToClaimNextHydratableInstance(workInProgress);
    }

    var type = workInProgress.type;
    var memoizedProps = workInProgress.memoizedProps;
    var nextProps = workInProgress.pendingProps;
    if (nextProps === null) {
      nextProps = memoizedProps;
      !(nextProps !== null) ? invariant(false, 'We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    }
    var prevProps = current !== null ? current.memoizedProps : null;

    if (hasContextChanged()) {
      // Normally we can bail out on props equality but if context has changed
      // we don't do the bailout and we have to reuse existing props instead.
    } else if (nextProps === null || memoizedProps === nextProps) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }

    var nextChildren = nextProps.children;
    var isDirectTextChild = shouldSetTextContent(type, nextProps);

    if (isDirectTextChild) {
      // We special case a direct text child of a host node. This is a common
      // case. We won't handle it as a reified child. We will instead handle
      // this in the host environment that also have access to this prop. That
      // avoids allocating another HostText fiber and traversing it.
      nextChildren = null;
    } else if (prevProps && shouldSetTextContent(type, prevProps)) {
      // If we're switching from a direct text child to a normal child, or to
      // empty, we need to schedule the text content to be reset.
      workInProgress.effectTag |= ContentReset;
    }

    markRef(current, workInProgress);

    // Check the host config to see if the children are offscreen/hidden.
    if (renderExpirationTime !== Never && !useSyncScheduling && shouldDeprioritizeSubtree(type, nextProps)) {
      // Down-prioritize the children.
      workInProgress.expirationTime = Never;
      // Bailout and come back to this fiber later.
      return null;
    }

    reconcileChildren(current, workInProgress, nextChildren);
    memoizeProps(workInProgress, nextProps);
    return workInProgress.child;
  }

  function updateHostText(current, workInProgress) {
    if (current === null) {
      tryToClaimNextHydratableInstance(workInProgress);
    }
    var nextProps = workInProgress.pendingProps;
    if (nextProps === null) {
      nextProps = workInProgress.memoizedProps;
    }
    memoizeProps(workInProgress, nextProps);
    // Nothing to do here. This is terminal. We'll do the completion step
    // immediately after.
    return null;
  }

  function mountIndeterminateComponent(current, workInProgress, renderExpirationTime) {
    !(current === null) ? invariant(false, 'An indeterminate component should never have mounted. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    var fn = workInProgress.type;
    var props = workInProgress.pendingProps;
    var unmaskedContext = getUnmaskedContext(workInProgress);
    var context = getMaskedContext(workInProgress, unmaskedContext);

    var value;

    {
      if (fn.prototype && typeof fn.prototype.render === 'function') {
        var componentName = getComponentName(workInProgress);
        warning(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
      }
      ReactCurrentOwner.current = workInProgress;
      value = fn(props, context);
    }
    // React DevTools reads this flag.
    workInProgress.effectTag |= PerformedWork;

    if (typeof value === 'object' && value !== null && typeof value.render === 'function') {
      // Proceed under the assumption that this is a class instance
      workInProgress.tag = ClassComponent;

      // Push context providers early to prevent context stack mismatches.
      // During mounting we don't know the child context yet as the instance doesn't exist.
      // We will invalidate the child context in finishClassComponent() right after rendering.
      var hasContext = pushContextProvider(workInProgress);
      adoptClassInstance(workInProgress, value);
      mountClassInstance(workInProgress, renderExpirationTime);
      return finishClassComponent(current, workInProgress, true, hasContext);
    } else {
      // Proceed under the assumption that this is a functional component
      workInProgress.tag = FunctionalComponent;
      {
        var Component = workInProgress.type;

        if (Component) {
          warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component');
        }
        if (workInProgress.ref !== null) {
          var info = '';
          var ownerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName();
          if (ownerName) {
            info += '\n\nCheck the render method of `' + ownerName + '`.';
          }

          var warningKey = ownerName || workInProgress._debugID || '';
          var debugSource = workInProgress._debugSource;
          if (debugSource) {
            warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
          }
          if (!warnedAboutStatelessRefs[warningKey]) {
            warnedAboutStatelessRefs[warningKey] = true;
            warning(false, 'Stateless function components cannot be given refs. ' + 'Attempts to access this ref will fail.%s%s', info, ReactDebugCurrentFiber.getCurrentFiberStackAddendum());
          }
        }
      }
      reconcileChildren(current, workInProgress, value);
      memoizeProps(workInProgress, props);
      return workInProgress.child;
    }
  }

  function updateCallComponent(current, workInProgress, renderExpirationTime) {
    var nextCall = workInProgress.pendingProps;
    if (hasContextChanged()) {
      // Normally we can bail out on props equality but if context has changed
      // we don't do the bailout and we have to reuse existing props instead.
      if (nextCall === null) {
        nextCall = current && current.memoizedProps;
        !(nextCall !== null) ? invariant(false, 'We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      }
    } else if (nextCall === null || workInProgress.memoizedProps === nextCall) {
      nextCall = workInProgress.memoizedProps;
      // TODO: When bailing out, we might need to return the stateNode instead
      // of the child. To check it for work.
      // return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }

    var nextChildren = nextCall.children;

    // The following is a fork of reconcileChildrenAtExpirationTime but using
    // stateNode to store the child.
    if (current === null) {
      workInProgress.stateNode = mountChildFibers(workInProgress, workInProgress.stateNode, nextChildren, renderExpirationTime);
    } else {
      workInProgress.stateNode = reconcileChildFibers(workInProgress, workInProgress.stateNode, nextChildren, renderExpirationTime);
    }

    memoizeProps(workInProgress, nextCall);
    // This doesn't take arbitrary time so we could synchronously just begin
    // eagerly do the work of workInProgress.child as an optimization.
    return workInProgress.stateNode;
  }

  function updatePortalComponent(current, workInProgress, renderExpirationTime) {
    pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
    var nextChildren = workInProgress.pendingProps;
    if (hasContextChanged()) {
      // Normally we can bail out on props equality but if context has changed
      // we don't do the bailout and we have to reuse existing props instead.
      if (nextChildren === null) {
        nextChildren = current && current.memoizedProps;
        !(nextChildren != null) ? invariant(false, 'We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      }
    } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }

    if (current === null) {
      // Portals are special because we don't append the children during mount
      // but at commit. Therefore we need to track insertions which the normal
      // flow doesn't do during mount. This doesn't happen at the root because
      // the root always starts with a "current" with a null child.
      // TODO: Consider unifying this with how the root works.
      workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
      memoizeProps(workInProgress, nextChildren);
    } else {
      reconcileChildren(current, workInProgress, nextChildren);
      memoizeProps(workInProgress, nextChildren);
    }
    return workInProgress.child;
  }

  /*
  function reuseChildrenEffects(returnFiber : Fiber, firstChild : Fiber) {
    let child = firstChild;
    do {
      // Ensure that the first and last effect of the parent corresponds
      // to the children's first and last effect.
      if (!returnFiber.firstEffect) {
        returnFiber.firstEffect = child.firstEffect;
      }
      if (child.lastEffect) {
        if (returnFiber.lastEffect) {
          returnFiber.lastEffect.nextEffect = child.firstEffect;
        }
        returnFiber.lastEffect = child.lastEffect;
      }
    } while (child = child.sibling);
  }
  */

  function bailoutOnAlreadyFinishedWork(current, workInProgress) {
    cancelWorkTimer(workInProgress);

    // TODO: We should ideally be able to bail out early if the children have no
    // more work to do. However, since we don't have a separation of this
    // Fiber's priority and its children yet - we don't know without doing lots
    // of the same work we do anyway. Once we have that separation we can just
    // bail out here if the children has no more work at this priority level.
    // if (workInProgress.priorityOfChildren <= priorityLevel) {
    //   // If there are side-effects in these children that have not yet been
    //   // committed we need to ensure that they get properly transferred up.
    //   if (current && current.child !== workInProgress.child) {
    //     reuseChildrenEffects(workInProgress, child);
    //   }
    //   return null;
    // }

    cloneChildFibers(current, workInProgress);
    return workInProgress.child;
  }

  function bailoutOnLowPriority(current, workInProgress) {
    cancelWorkTimer(workInProgress);

    // TODO: Handle HostComponent tags here as well and call pushHostContext()?
    // See PR 8590 discussion for context
    switch (workInProgress.tag) {
      case HostRoot:
        pushHostRootContext(workInProgress);
        break;
      case ClassComponent:
        pushContextProvider(workInProgress);
        break;
      case HostPortal:
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        break;
    }
    // TODO: What if this is currently in progress?
    // How can that happen? How is this not being cloned?
    return null;
  }

  // TODO: Delete memoizeProps/State and move to reconcile/bailout instead
  function memoizeProps(workInProgress, nextProps) {
    workInProgress.memoizedProps = nextProps;
  }

  function memoizeState(workInProgress, nextState) {
    workInProgress.memoizedState = nextState;
    // Don't reset the updateQueue, in case there are pending updates. Resetting
    // is handled by processUpdateQueue.
  }

  function beginWork(current, workInProgress, renderExpirationTime) {
    if (workInProgress.expirationTime === NoWork || workInProgress.expirationTime > renderExpirationTime) {
      return bailoutOnLowPriority(current, workInProgress);
    }

    switch (workInProgress.tag) {
      case IndeterminateComponent:
        return mountIndeterminateComponent(current, workInProgress, renderExpirationTime);
      case FunctionalComponent:
        return updateFunctionalComponent(current, workInProgress);
      case ClassComponent:
        return updateClassComponent(current, workInProgress, renderExpirationTime);
      case HostRoot:
        return updateHostRoot(current, workInProgress, renderExpirationTime);
      case HostComponent:
        return updateHostComponent(current, workInProgress, renderExpirationTime);
      case HostText:
        return updateHostText(current, workInProgress);
      case CallHandlerPhase:
        // This is a restart. Reset the tag to the initial phase.
        workInProgress.tag = CallComponent;
      // Intentionally fall through since this is now the same.
      case CallComponent:
        return updateCallComponent(current, workInProgress, renderExpirationTime);
      case ReturnComponent:
        // A return component is just a placeholder, we can just run through the
        // next one immediately.
        return null;
      case HostPortal:
        return updatePortalComponent(current, workInProgress, renderExpirationTime);
      case Fragment:
        return updateFragment(current, workInProgress);
      default:
        invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
    }
  }

  function beginFailedWork(current, workInProgress, renderExpirationTime) {
    // Push context providers here to avoid a push/pop context mismatch.
    switch (workInProgress.tag) {
      case ClassComponent:
        pushContextProvider(workInProgress);
        break;
      case HostRoot:
        pushHostRootContext(workInProgress);
        break;
      default:
        invariant(false, 'Invalid type of work. This error is likely caused by a bug in React. Please file an issue.');
    }

    // Add an error effect so we can handle the error during the commit phase
    workInProgress.effectTag |= Err;

    // This is a weird case where we do "resume" work — work that failed on
    // our first attempt. Because we no longer have a notion of "progressed
    // deletions," reset the child to the current child to make sure we delete
    // it again. TODO: Find a better way to handle this, perhaps during a more
    // general overhaul of error handling.
    if (current === null) {
      workInProgress.child = null;
    } else if (workInProgress.child !== current.child) {
      workInProgress.child = current.child;
    }

    if (workInProgress.expirationTime === NoWork || workInProgress.expirationTime > renderExpirationTime) {
      return bailoutOnLowPriority(current, workInProgress);
    }

    // If we don't bail out, we're going be recomputing our children so we need
    // to drop our effect list.
    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;

    // Unmount the current children as if the component rendered null
    var nextChildren = null;
    reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime);

    if (workInProgress.tag === ClassComponent) {
      var instance = workInProgress.stateNode;
      workInProgress.memoizedProps = instance.props;
      workInProgress.memoizedState = instance.state;
    }

    return workInProgress.child;
  }

  return {
    beginWork: beginWork,
    beginFailedWork: beginFailedWork
  };
};

var ReactFiberCompleteWork = function (config, hostContext, hydrationContext) {
  var createInstance = config.createInstance,
      createTextInstance = config.createTextInstance,
      appendInitialChild = config.appendInitialChild,
      finalizeInitialChildren = config.finalizeInitialChildren,
      prepareUpdate = config.prepareUpdate,
      mutation = config.mutation,
      persistence = config.persistence;
  var getRootHostContainer = hostContext.getRootHostContainer,
      popHostContext = hostContext.popHostContext,
      getHostContext = hostContext.getHostContext,
      popHostContainer = hostContext.popHostContainer;
  var prepareToHydrateHostInstance = hydrationContext.prepareToHydrateHostInstance,
      prepareToHydrateHostTextInstance = hydrationContext.prepareToHydrateHostTextInstance,
      popHydrationState = hydrationContext.popHydrationState;


  function markUpdate(workInProgress) {
    // Tag the fiber with an update effect. This turns a Placement into
    // an UpdateAndPlacement.
    workInProgress.effectTag |= Update;
  }

  function markRef(workInProgress) {
    workInProgress.effectTag |= Ref;
  }

  function appendAllReturns(returns, workInProgress) {
    var node = workInProgress.stateNode;
    if (node) {
      node['return'] = workInProgress;
    }
    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText || node.tag === HostPortal) {
        invariant(false, 'A call cannot have host component children.');
      } else if (node.tag === ReturnComponent) {
        returns.push(node.type);
      } else if (node.child !== null) {
        node.child['return'] = node;
        node = node.child;
        continue;
      }
      while (node.sibling === null) {
        if (node['return'] === null || node['return'] === workInProgress) {
          return;
        }
        node = node['return'];
      }
      node.sibling['return'] = node['return'];
      node = node.sibling;
    }
  }

  function moveCallToHandlerPhase(current, workInProgress, renderExpirationTime) {
    var call = workInProgress.memoizedProps;
    !call ? invariant(false, 'Should be resolved by now. This error is likely caused by a bug in React. Please file an issue.') : void 0;

    // First step of the call has completed. Now we need to do the second.
    // TODO: It would be nice to have a multi stage call represented by a
    // single component, or at least tail call optimize nested ones. Currently
    // that requires additional fields that we don't want to add to the fiber.
    // So this requires nested handlers.
    // Note: This doesn't mutate the alternate node. I don't think it needs to
    // since this stage is reset for every pass.
    workInProgress.tag = CallHandlerPhase;

    // Build up the returns.
    // TODO: Compare this to a generator or opaque helpers like Children.
    var returns = [];
    appendAllReturns(returns, workInProgress);
    var fn = call.handler;
    var props = call.props;
    var nextChildren = fn(props, returns);

    var currentFirstChild = current !== null ? current.child : null;
    workInProgress.child = reconcileChildFibers(workInProgress, currentFirstChild, nextChildren, renderExpirationTime);
    return workInProgress.child;
  }

  function appendAllChildren(parent, workInProgress) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;
    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText) {
        appendInitialChild(parent, node.stateNode);
      } else if (node.tag === HostPortal) {
        // If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.child !== null) {
        node.child['return'] = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) {
        return;
      }
      while (node.sibling === null) {
        if (node['return'] === null || node['return'] === workInProgress) {
          return;
        }
        node = node['return'];
      }
      node.sibling['return'] = node['return'];
      node = node.sibling;
    }
  }

  var updateHostContainer = void 0;
  var updateHostComponent = void 0;
  var updateHostText = void 0;
  if (mutation) {
    if (enableMutatingReconciler) {
      // Mutation mode
      updateHostContainer = function (workInProgress) {
        // Noop
      };
      updateHostComponent = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance) {
        // TODO: Type this specific to this type of component.
        workInProgress.updateQueue = updatePayload;
        // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update. All the work is done in commitWork.
        if (updatePayload) {
          markUpdate(workInProgress);
        }
      };
      updateHostText = function (current, workInProgress, oldText, newText) {
        // If the text differs, mark it as an update. All the work in done in commitWork.
        if (oldText !== newText) {
          markUpdate(workInProgress);
        }
      };
    } else {
      invariant(false, 'Mutating reconciler is disabled.');
    }
  } else if (persistence) {
    if (enablePersistentReconciler) {
      // Persistent host tree mode
      var cloneInstance = persistence.cloneInstance,
          createContainerChildSet = persistence.createContainerChildSet,
          appendChildToContainerChildSet = persistence.appendChildToContainerChildSet,
          finalizeContainerChildren = persistence.finalizeContainerChildren;

      // An unfortunate fork of appendAllChildren because we have two different parent types.

      var appendAllChildrenToContainer = function (containerChildSet, workInProgress) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;
        while (node !== null) {
          if (node.tag === HostComponent || node.tag === HostText) {
            appendChildToContainerChildSet(containerChildSet, node.stateNode);
          } else if (node.tag === HostPortal) {
            // If we have a portal child, then we don't want to traverse
            // down its children. Instead, we'll get insertions from each child in
            // the portal directly.
          } else if (node.child !== null) {
            node.child['return'] = node;
            node = node.child;
            continue;
          }
          if (node === workInProgress) {
            return;
          }
          while (node.sibling === null) {
            if (node['return'] === null || node['return'] === workInProgress) {
              return;
            }
            node = node['return'];
          }
          node.sibling['return'] = node['return'];
          node = node.sibling;
        }
      };
      updateHostContainer = function (workInProgress) {
        var portalOrRoot = workInProgress.stateNode;
        var childrenUnchanged = workInProgress.firstEffect === null;
        if (childrenUnchanged) {
          // No changes, just reuse the existing instance.
        } else {
          var container = portalOrRoot.containerInfo;
          var newChildSet = createContainerChildSet(container);
          if (finalizeContainerChildren(container, newChildSet)) {
            markUpdate(workInProgress);
          }
          portalOrRoot.pendingChildren = newChildSet;
          // If children might have changed, we have to add them all to the set.
          appendAllChildrenToContainer(newChildSet, workInProgress);
          // Schedule an update on the container to swap out the container.
          markUpdate(workInProgress);
        }
      };
      updateHostComponent = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance) {
        // If there are no effects associated with this node, then none of our children had any updates.
        // This guarantees that we can reuse all of them.
        var childrenUnchanged = workInProgress.firstEffect === null;
        var currentInstance = current.stateNode;
        if (childrenUnchanged && updatePayload === null) {
          // No changes, just reuse the existing instance.
          // Note that this might release a previous clone.
          workInProgress.stateNode = currentInstance;
        } else {
          var recyclableInstance = workInProgress.stateNode;
          var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);
          if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance)) {
            markUpdate(workInProgress);
          }
          workInProgress.stateNode = newInstance;
          if (childrenUnchanged) {
            // If there are no other effects in this tree, we need to flag this node as having one.
            // Even though we're not going to use it for anything.
            // Otherwise parents won't know that there are new children to propagate upwards.
            markUpdate(workInProgress);
          } else {
            // If children might have changed, we have to add them all to the set.
            appendAllChildren(newInstance, workInProgress);
          }
        }
      };
      updateHostText = function (current, workInProgress, oldText, newText) {
        if (oldText !== newText) {
          // If the text content differs, we'll create a new text instance for it.
          var rootContainerInstance = getRootHostContainer();
          var currentHostContext = getHostContext();
          workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);
          // We'll have to mark it as having an effect, even though we won't use the effect for anything.
          // This lets the parents know that at least one of their children has changed.
          markUpdate(workInProgress);
        }
      };
    } else {
      invariant(false, 'Persistent reconciler is disabled.');
    }
  } else {
    if (enableNoopReconciler) {
      // No host operations
      updateHostContainer = function (workInProgress) {
        // Noop
      };
      updateHostComponent = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance) {
        // Noop
      };
      updateHostText = function (current, workInProgress, oldText, newText) {
        // Noop
      };
    } else {
      invariant(false, 'Noop reconciler is disabled.');
    }
  }

  function completeWork(current, workInProgress, renderExpirationTime) {
    // Get the latest props.
    var newProps = workInProgress.pendingProps;
    if (newProps === null) {
      newProps = workInProgress.memoizedProps;
    } else if (workInProgress.expirationTime !== Never || renderExpirationTime === Never) {
      // Reset the pending props, unless this was a down-prioritization.
      workInProgress.pendingProps = null;
    }

    switch (workInProgress.tag) {
      case FunctionalComponent:
        return null;
      case ClassComponent:
        {
          // We are leaving this subtree, so pop context if any.
          popContextProvider(workInProgress);
          return null;
        }
      case HostRoot:
        {
          popHostContainer(workInProgress);
          popTopLevelContextObject(workInProgress);
          var fiberRoot = workInProgress.stateNode;
          if (fiberRoot.pendingContext) {
            fiberRoot.context = fiberRoot.pendingContext;
            fiberRoot.pendingContext = null;
          }

          if (current === null || current.child === null) {
            // If we hydrated, pop so that we can delete any remaining children
            // that weren't hydrated.
            popHydrationState(workInProgress);
            // This resets the hacky state to fix isMounted before committing.
            // TODO: Delete this when we delete isMounted and findDOMNode.
            workInProgress.effectTag &= ~Placement;
          }
          updateHostContainer(workInProgress);
          return null;
        }
      case HostComponent:
        {
          popHostContext(workInProgress);
          var rootContainerInstance = getRootHostContainer();
          var type = workInProgress.type;
          if (current !== null && workInProgress.stateNode != null) {
            // If we have an alternate, that means this is an update and we need to
            // schedule a side-effect to do the updates.
            var oldProps = current.memoizedProps;
            // If we get updated because one of our children updated, we don't
            // have newProps so we'll have to reuse them.
            // TODO: Split the update API as separate for the props vs. children.
            // Even better would be if children weren't special cased at all tho.
            var instance = workInProgress.stateNode;
            var currentHostContext = getHostContext();
            var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);

            updateHostComponent(current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance);

            if (current.ref !== workInProgress.ref) {
              markRef(workInProgress);
            }
          } else {
            if (!newProps) {
              !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
              // This can happen when we abort work.
              return null;
            }

            var _currentHostContext = getHostContext();
            // TODO: Move createInstance to beginWork and keep it on a context
            // "stack" as the parent. Then append children as we go in beginWork
            // or completeWork depending on we want to add then top->down or
            // bottom->up. Top->down is faster in IE11.
            var wasHydrated = popHydrationState(workInProgress);
            if (wasHydrated) {
              // TODO: Move this and createInstance step into the beginPhase
              // to consolidate.
              if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, _currentHostContext)) {
                // If changes to the hydrated node needs to be applied at the
                // commit-phase we mark this as such.
                markUpdate(workInProgress);
              }
            } else {
              var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);

              appendAllChildren(_instance, workInProgress);

              // Certain renderers require commit-time effects for initial mount.
              // (eg DOM renderer supports auto-focus for certain elements).
              // Make sure such renderers get scheduled for later work.
              if (finalizeInitialChildren(_instance, type, newProps, rootContainerInstance)) {
                markUpdate(workInProgress);
              }
              workInProgress.stateNode = _instance;
            }

            if (workInProgress.ref !== null) {
              // If there is a ref on a host node we need to schedule a callback
              markRef(workInProgress);
            }
          }
          return null;
        }
      case HostText:
        {
          var newText = newProps;
          if (current && workInProgress.stateNode != null) {
            var oldText = current.memoizedProps;
            // If we have an alternate, that means this is an update and we need
            // to schedule a side-effect to do the updates.
            updateHostText(current, workInProgress, oldText, newText);
          } else {
            if (typeof newText !== 'string') {
              !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
              // This can happen when we abort work.
              return null;
            }
            var _rootContainerInstance = getRootHostContainer();
            var _currentHostContext2 = getHostContext();
            var _wasHydrated = popHydrationState(workInProgress);
            if (_wasHydrated) {
              if (prepareToHydrateHostTextInstance(workInProgress)) {
                markUpdate(workInProgress);
              }
            } else {
              workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
            }
          }
          return null;
        }
      case CallComponent:
        return moveCallToHandlerPhase(current, workInProgress, renderExpirationTime);
      case CallHandlerPhase:
        // Reset the tag to now be a first phase call.
        workInProgress.tag = CallComponent;
        return null;
      case ReturnComponent:
        // Does nothing.
        return null;
      case Fragment:
        return null;
      case HostPortal:
        popHostContainer(workInProgress);
        updateHostContainer(workInProgress);
        return null;
      // Error cases
      case IndeterminateComponent:
        invariant(false, 'An indeterminate component should have become determinate before completing. This error is likely caused by a bug in React. Please file an issue.');
      // eslint-disable-next-line no-fallthrough
      default:
        invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
    }
  }

  return {
    completeWork: completeWork
  };
};

var invokeGuardedCallback$2 = ReactErrorUtils.invokeGuardedCallback;
var hasCaughtError$1 = ReactErrorUtils.hasCaughtError;
var clearCaughtError$1 = ReactErrorUtils.clearCaughtError;


var ReactFiberCommitWork = function (config, captureError) {
  var getPublicInstance = config.getPublicInstance,
      mutation = config.mutation,
      persistence = config.persistence;


  var callComponentWillUnmountWithTimer = function (current, instance) {
    startPhaseTimer(current, 'componentWillUnmount');
    instance.props = current.memoizedProps;
    instance.state = current.memoizedState;
    instance.componentWillUnmount();
    stopPhaseTimer();
  };

  // Capture errors so they don't interrupt unmounting.
  function safelyCallComponentWillUnmount(current, instance) {
    {
      invokeGuardedCallback$2(null, callComponentWillUnmountWithTimer, null, current, instance);
      if (hasCaughtError$1()) {
        var unmountError = clearCaughtError$1();
        captureError(current, unmountError);
      }
    }
  }

  function safelyDetachRef(current) {
    var ref = current.ref;
    if (ref !== null) {
      {
        invokeGuardedCallback$2(null, ref, null, null);
        if (hasCaughtError$1()) {
          var refError = clearCaughtError$1();
          captureError(current, refError);
        }
      }
    }
  }

  function commitLifeCycles(current, finishedWork) {
    switch (finishedWork.tag) {
      case ClassComponent:
        {
          var instance = finishedWork.stateNode;
          if (finishedWork.effectTag & Update) {
            if (current === null) {
              startPhaseTimer(finishedWork, 'componentDidMount');
              instance.props = finishedWork.memoizedProps;
              instance.state = finishedWork.memoizedState;
              instance.componentDidMount();
              stopPhaseTimer();
            } else {
              var prevProps = current.memoizedProps;
              var prevState = current.memoizedState;
              startPhaseTimer(finishedWork, 'componentDidUpdate');
              instance.props = finishedWork.memoizedProps;
              instance.state = finishedWork.memoizedState;
              instance.componentDidUpdate(prevProps, prevState);
              stopPhaseTimer();
            }
          }
          var updateQueue = finishedWork.updateQueue;
          if (updateQueue !== null) {
            commitCallbacks(updateQueue, instance);
          }
          return;
        }
      case HostRoot:
        {
          var _updateQueue = finishedWork.updateQueue;
          if (_updateQueue !== null) {
            var _instance = finishedWork.child !== null ? finishedWork.child.stateNode : null;
            commitCallbacks(_updateQueue, _instance);
          }
          return;
        }
      case HostComponent:
        {
          var _instance2 = finishedWork.stateNode;

          // Renderers may schedule work to be done after host components are mounted
          // (eg DOM renderer may schedule auto-focus for inputs and form controls).
          // These effects should only be committed when components are first mounted,
          // aka when there is no current/alternate.
          if (current === null && finishedWork.effectTag & Update) {
            var type = finishedWork.type;
            var props = finishedWork.memoizedProps;
            commitMount(_instance2, type, props, finishedWork);
          }

          return;
        }
      case HostText:
        {
          // We have no life-cycles associated with text.
          return;
        }
      case HostPortal:
        {
          // We have no life-cycles associated with portals.
          return;
        }
      default:
        {
          invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
        }
    }
  }

  function commitAttachRef(finishedWork) {
    var ref = finishedWork.ref;
    if (ref !== null) {
      var instance = finishedWork.stateNode;
      switch (finishedWork.tag) {
        case HostComponent:
          ref(getPublicInstance(instance));
          break;
        default:
          ref(instance);
      }
    }
  }

  function commitDetachRef(current) {
    var currentRef = current.ref;
    if (currentRef !== null) {
      currentRef(null);
    }
  }

  // User-originating errors (lifecycles and refs) should not interrupt
  // deletion, so don't let them throw. Host-originating errors should
  // interrupt deletion, so it's okay
  function commitUnmount(current) {
    if (typeof onCommitUnmount === 'function') {
      onCommitUnmount(current);
    }

    switch (current.tag) {
      case ClassComponent:
        {
          safelyDetachRef(current);
          var instance = current.stateNode;
          if (typeof instance.componentWillUnmount === 'function') {
            safelyCallComponentWillUnmount(current, instance);
          }
          return;
        }
      case HostComponent:
        {
          safelyDetachRef(current);
          return;
        }
      case CallComponent:
        {
          commitNestedUnmounts(current.stateNode);
          return;
        }
      case HostPortal:
        {
          // TODO: this is recursive.
          // We are also not using this parent because
          // the portal will get pushed immediately.
          if (enableMutatingReconciler && mutation) {
            unmountHostComponents(current);
          } else if (enablePersistentReconciler && persistence) {
            emptyPortalContainer(current);
          }
          return;
        }
    }
  }

  function commitNestedUnmounts(root) {
    // While we're inside a removed host node we don't want to call
    // removeChild on the inner nodes because they're removed by the top
    // call anyway. We also want to call componentWillUnmount on all
    // composites before this host node is removed from the tree. Therefore
    var node = root;
    while (true) {
      commitUnmount(node);
      // Visit children because they may contain more composite or host nodes.
      // Skip portals because commitUnmount() currently visits them recursively.
      if (node.child !== null && (
      // If we use mutation we drill down into portals using commitUnmount above.
      // If we don't use mutation we drill down into portals here instead.
      !mutation || node.tag !== HostPortal)) {
        node.child['return'] = node;
        node = node.child;
        continue;
      }
      if (node === root) {
        return;
      }
      while (node.sibling === null) {
        if (node['return'] === null || node['return'] === root) {
          return;
        }
        node = node['return'];
      }
      node.sibling['return'] = node['return'];
      node = node.sibling;
    }
  }

  function detachFiber(current) {
    // Cut off the return pointers to disconnect it from the tree. Ideally, we
    // should clear the child pointer of the parent alternate to let this
    // get GC:ed but we don't know which for sure which parent is the current
    // one so we'll settle for GC:ing the subtree of this child. This child
    // itself will be GC:ed when the parent updates the next time.
    current['return'] = null;
    current.child = null;
    if (current.alternate) {
      current.alternate.child = null;
      current.alternate['return'] = null;
    }
  }

  if (!mutation) {
    var commitContainer = void 0;
    if (persistence) {
      var replaceContainerChildren = persistence.replaceContainerChildren,
          createContainerChildSet = persistence.createContainerChildSet;

      var emptyPortalContainer = function (current) {
        var portal = current.stateNode;
        var containerInfo = portal.containerInfo;

        var emptyChildSet = createContainerChildSet(containerInfo);
        replaceContainerChildren(containerInfo, emptyChildSet);
      };
      commitContainer = function (finishedWork) {
        switch (finishedWork.tag) {
          case ClassComponent:
            {
              return;
            }
          case HostComponent:
            {
              return;
            }
          case HostText:
            {
              return;
            }
          case HostRoot:
          case HostPortal:
            {
              var portalOrRoot = finishedWork.stateNode;
              var containerInfo = portalOrRoot.containerInfo,
                  _pendingChildren = portalOrRoot.pendingChildren;

              replaceContainerChildren(containerInfo, _pendingChildren);
              return;
            }
          default:
            {
              invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
            }
        }
      };
    } else {
      commitContainer = function (finishedWork) {
        // Noop
      };
    }
    if (enablePersistentReconciler || enableNoopReconciler) {
      return {
        commitResetTextContent: function (finishedWork) {},
        commitPlacement: function (finishedWork) {},
        commitDeletion: function (current) {
          // Detach refs and call componentWillUnmount() on the whole subtree.
          commitNestedUnmounts(current);
          detachFiber(current);
        },
        commitWork: function (current, finishedWork) {
          commitContainer(finishedWork);
        },

        commitLifeCycles: commitLifeCycles,
        commitAttachRef: commitAttachRef,
        commitDetachRef: commitDetachRef
      };
    } else if (persistence) {
      invariant(false, 'Persistent reconciler is disabled.');
    } else {
      invariant(false, 'Noop reconciler is disabled.');
    }
  }
  var commitMount = mutation.commitMount,
      commitUpdate = mutation.commitUpdate,
      resetTextContent = mutation.resetTextContent,
      commitTextUpdate = mutation.commitTextUpdate,
      appendChild = mutation.appendChild,
      appendChildToContainer = mutation.appendChildToContainer,
      insertBefore = mutation.insertBefore,
      insertInContainerBefore = mutation.insertInContainerBefore,
      removeChild = mutation.removeChild,
      removeChildFromContainer = mutation.removeChildFromContainer;


  function getHostParentFiber(fiber) {
    var parent = fiber['return'];
    while (parent !== null) {
      if (isHostParent(parent)) {
        return parent;
      }
      parent = parent['return'];
    }
    invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');
  }

  function isHostParent(fiber) {
    return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
  }

  function getHostSibling(fiber) {
    // We're going to search forward into the tree until we find a sibling host
    // node. Unfortunately, if multiple insertions are done in a row we have to
    // search past them. This leads to exponential search for the next sibling.
    var node = fiber;
    siblings: while (true) {
      // If we didn't find anything, let's try the next sibling.
      while (node.sibling === null) {
        if (node['return'] === null || isHostParent(node['return'])) {
          // If we pop out of the root or hit the parent the fiber we are the
          // last sibling.
          return null;
        }
        node = node['return'];
      }
      node.sibling['return'] = node['return'];
      node = node.sibling;
      while (node.tag !== HostComponent && node.tag !== HostText) {
        // If it is not host node and, we might have a host node inside it.
        // Try to search down until we find one.
        if (node.effectTag & Placement) {
          // If we don't have a child, try the siblings instead.
          continue siblings;
        }
        // If we don't have a child, try the siblings instead.
        // We also skip portals because they are not part of this host tree.
        if (node.child === null || node.tag === HostPortal) {
          continue siblings;
        } else {
          node.child['return'] = node;
          node = node.child;
        }
      }
      // Check if this host node is stable or about to be placed.
      if (!(node.effectTag & Placement)) {
        // Found it!
        return node.stateNode;
      }
    }
  }

  function commitPlacement(finishedWork) {
    // Recursively insert all host nodes into the parent.
    var parentFiber = getHostParentFiber(finishedWork);
    var parent = void 0;
    var isContainer = void 0;
    switch (parentFiber.tag) {
      case HostComponent:
        parent = parentFiber.stateNode;
        isContainer = false;
        break;
      case HostRoot:
        parent = parentFiber.stateNode.containerInfo;
        isContainer = true;
        break;
      case HostPortal:
        parent = parentFiber.stateNode.containerInfo;
        isContainer = true;
        break;
      default:
        invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');
    }
    if (parentFiber.effectTag & ContentReset) {
      // Reset the text content of the parent before doing any insertions
      resetTextContent(parent);
      // Clear ContentReset from the effect tag
      parentFiber.effectTag &= ~ContentReset;
    }

    var before = getHostSibling(finishedWork);
    // We only have the top Fiber that was inserted but we need recurse down its
    // children to find all the terminal nodes.
    var node = finishedWork;
    while (true) {
      if (node.tag === HostComponent || node.tag === HostText) {
        if (before) {
          if (isContainer) {
            insertInContainerBefore(parent, node.stateNode, before);
          } else {
            insertBefore(parent, node.stateNode, before);
          }
        } else {
          if (isContainer) {
            appendChildToContainer(parent, node.stateNode);
          } else {
            appendChild(parent, node.stateNode);
          }
        }
      } else if (node.tag === HostPortal) {
        // If the insertion itself is a portal, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.child !== null) {
        node.child['return'] = node;
        node = node.child;
        continue;
      }
      if (node === finishedWork) {
        return;
      }
      while (node.sibling === null) {
        if (node['return'] === null || node['return'] === finishedWork) {
          return;
        }
        node = node['return'];
      }
      node.sibling['return'] = node['return'];
      node = node.sibling;
    }
  }

  function unmountHostComponents(current) {
    // We only have the top Fiber that was inserted but we need recurse down its
    var node = current;

    // Each iteration, currentParent is populated with node's host parent if not
    // currentParentIsValid.
    var currentParentIsValid = false;
    var currentParent = void 0;
    var currentParentIsContainer = void 0;

    while (true) {
      if (!currentParentIsValid) {
        var parent = node['return'];
        findParent: while (true) {
          !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          switch (parent.tag) {
            case HostComponent:
              currentParent = parent.stateNode;
              currentParentIsContainer = false;
              break findParent;
            case HostRoot:
              currentParent = parent.stateNode.containerInfo;
              currentParentIsContainer = true;
              break findParent;
            case HostPortal:
              currentParent = parent.stateNode.containerInfo;
              currentParentIsContainer = true;
              break findParent;
          }
          parent = parent['return'];
        }
        currentParentIsValid = true;
      }

      if (node.tag === HostComponent || node.tag === HostText) {
        commitNestedUnmounts(node);
        // After all the children have unmounted, it is now safe to remove the
        // node from the tree.
        if (currentParentIsContainer) {
          removeChildFromContainer(currentParent, node.stateNode);
        } else {
          removeChild(currentParent, node.stateNode);
        }
        // Don't visit children because we already visited them.
      } else if (node.tag === HostPortal) {
        // When we go into a portal, it becomes the parent to remove from.
        // We will reassign it back when we pop the portal on the way up.
        currentParent = node.stateNode.containerInfo;
        // Visit children because portals might contain host components.
        if (node.child !== null) {
          node.child['return'] = node;
          node = node.child;
          continue;
        }
      } else {
        commitUnmount(node);
        // Visit children because we may find more host components below.
        if (node.child !== null) {
          node.child['return'] = node;
          node = node.child;
          continue;
        }
      }
      if (node === current) {
        return;
      }
      while (node.sibling === null) {
        if (node['return'] === null || node['return'] === current) {
          return;
        }
        node = node['return'];
        if (node.tag === HostPortal) {
          // When we go out of the portal, we need to restore the parent.
          // Since we don't keep a stack of them, we will search for it.
          currentParentIsValid = false;
        }
      }
      node.sibling['return'] = node['return'];
      node = node.sibling;
    }
  }

  function commitDeletion(current) {
    // Recursively delete all host nodes from the parent.
    // Detach refs and call componentWillUnmount() on the whole subtree.
    unmountHostComponents(current);
    detachFiber(current);
  }

  function commitWork(current, finishedWork) {
    switch (finishedWork.tag) {
      case ClassComponent:
        {
          return;
        }
      case HostComponent:
        {
          var instance = finishedWork.stateNode;
          if (instance != null) {
            // Commit the work prepared earlier.
            var newProps = finishedWork.memoizedProps;
            // For hydration we reuse the update path but we treat the oldProps
            // as the newProps. The updatePayload will contain the real change in
            // this case.
            var oldProps = current !== null ? current.memoizedProps : newProps;
            var type = finishedWork.type;
            // TODO: Type the updateQueue to be specific to host components.
            var updatePayload = finishedWork.updateQueue;
            finishedWork.updateQueue = null;
            if (updatePayload !== null) {
              commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
            }
          }
          return;
        }
      case HostText:
        {
          !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          var textInstance = finishedWork.stateNode;
          var newText = finishedWork.memoizedProps;
          // For hydration we reuse the update path but we treat the oldProps
          // as the newProps. The updatePayload will contain the real change in
          // this case.
          var oldText = current !== null ? current.memoizedProps : newText;
          commitTextUpdate(textInstance, oldText, newText);
          return;
        }
      case HostRoot:
        {
          return;
        }
      default:
        {
          invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
        }
    }
  }

  function commitResetTextContent(current) {
    resetTextContent(current.stateNode);
  }

  if (enableMutatingReconciler) {
    return {
      commitResetTextContent: commitResetTextContent,
      commitPlacement: commitPlacement,
      commitDeletion: commitDeletion,
      commitWork: commitWork,
      commitLifeCycles: commitLifeCycles,
      commitAttachRef: commitAttachRef,
      commitDetachRef: commitDetachRef
    };
  } else {
    invariant(false, 'Mutating reconciler is disabled.');
  }
};

var NO_CONTEXT = {};

var ReactFiberHostContext = function (config) {
  var getChildHostContext = config.getChildHostContext,
      getRootHostContext = config.getRootHostContext;


  var contextStackCursor = createCursor(NO_CONTEXT);
  var contextFiberStackCursor = createCursor(NO_CONTEXT);
  var rootInstanceStackCursor = createCursor(NO_CONTEXT);

  function requiredContext(c) {
    !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    return c;
  }

  function getRootHostContainer() {
    var rootInstance = requiredContext(rootInstanceStackCursor.current);
    return rootInstance;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    // Push current root instance onto the stack;
    // This allows us to reset root when portals are popped.
    push(rootInstanceStackCursor, nextRootInstance, fiber);

    var nextRootContext = getRootHostContext(nextRootInstance);

    // Track the context and the Fiber that provided it.
    // This enables us to pop only Fibers that provide unique contexts.
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor, nextRootContext, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function getHostContext() {
    var context = requiredContext(contextStackCursor.current);
    return context;
  }

  function pushHostContext(fiber) {
    var rootInstance = requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor.current);
    var nextContext = getChildHostContext(context, fiber.type, rootInstance);

    // Don't push this Fiber's context unless it's unique.
    if (context === nextContext) {
      return;
    }

    // Track the context and the Fiber that provided it.
    // This enables us to pop only Fibers that provide unique contexts.
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor, nextContext, fiber);
  }

  function popHostContext(fiber) {
    // Do not pop unless this Fiber provided the current context.
    // pushHostContext() only pushes Fibers that provide unique contexts.
    if (contextFiberStackCursor.current !== fiber) {
      return;
    }

    pop(contextStackCursor, fiber);
    pop(contextFiberStackCursor, fiber);
  }

  function resetHostContainer() {
    contextStackCursor.current = NO_CONTEXT;
    rootInstanceStackCursor.current = NO_CONTEXT;
  }

  return {
    getHostContext: getHostContext,
    getRootHostContainer: getRootHostContainer,
    popHostContainer: popHostContainer,
    popHostContext: popHostContext,
    pushHostContainer: pushHostContainer,
    pushHostContext: pushHostContext,
    resetHostContainer: resetHostContainer
  };
};

var ReactFiberHydrationContext = function (config) {
  var shouldSetTextContent = config.shouldSetTextContent,
      hydration = config.hydration;

  // If this doesn't have hydration mode.

  if (!hydration) {
    return {
      enterHydrationState: function () {
        return false;
      },
      resetHydrationState: function () {},
      tryToClaimNextHydratableInstance: function () {},
      prepareToHydrateHostInstance: function () {
        invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
      },
      prepareToHydrateHostTextInstance: function () {
        invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
      },
      popHydrationState: function (fiber) {
        return false;
      }
    };
  }

  var canHydrateInstance = hydration.canHydrateInstance,
      canHydrateTextInstance = hydration.canHydrateTextInstance,
      getNextHydratableSibling = hydration.getNextHydratableSibling,
      getFirstHydratableChild = hydration.getFirstHydratableChild,
      hydrateInstance = hydration.hydrateInstance,
      hydrateTextInstance = hydration.hydrateTextInstance,
      didNotMatchHydratedContainerTextInstance = hydration.didNotMatchHydratedContainerTextInstance,
      didNotMatchHydratedTextInstance = hydration.didNotMatchHydratedTextInstance,
      didNotHydrateContainerInstance = hydration.didNotHydrateContainerInstance,
      didNotHydrateInstance = hydration.didNotHydrateInstance,
      didNotFindHydratableContainerInstance = hydration.didNotFindHydratableContainerInstance,
      didNotFindHydratableContainerTextInstance = hydration.didNotFindHydratableContainerTextInstance,
      didNotFindHydratableInstance = hydration.didNotFindHydratableInstance,
      didNotFindHydratableTextInstance = hydration.didNotFindHydratableTextInstance;

  // The deepest Fiber on the stack involved in a hydration context.
  // This may have been an insertion or a hydration.

  var hydrationParentFiber = null;
  var nextHydratableInstance = null;
  var isHydrating = false;

  function enterHydrationState(fiber) {
    var parentInstance = fiber.stateNode.containerInfo;
    nextHydratableInstance = getFirstHydratableChild(parentInstance);
    hydrationParentFiber = fiber;
    isHydrating = true;
    return true;
  }

  function deleteHydratableInstance(returnFiber, instance) {
    {
      switch (returnFiber.tag) {
        case HostRoot:
          didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
          break;
        case HostComponent:
          didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
          break;
      }
    }

    var childToDelete = createFiberFromHostInstanceForDeletion();
    childToDelete.stateNode = instance;
    childToDelete['return'] = returnFiber;
    childToDelete.effectTag = Deletion;

    // This might seem like it belongs on progressedFirstDeletion. However,
    // these children are not part of the reconciliation list of children.
    // Even if we abort and rereconcile the children, that will try to hydrate
    // again and the nodes are still in the host tree so these will be
    // recreated.
    if (returnFiber.lastEffect !== null) {
      returnFiber.lastEffect.nextEffect = childToDelete;
      returnFiber.lastEffect = childToDelete;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
  }

  function insertNonHydratedInstance(returnFiber, fiber) {
    fiber.effectTag |= Placement;
    {
      switch (returnFiber.tag) {
        case HostRoot:
          {
            var parentContainer = returnFiber.stateNode.containerInfo;
            switch (fiber.tag) {
              case HostComponent:
                var type = fiber.type;
                var props = fiber.pendingProps;
                didNotFindHydratableContainerInstance(parentContainer, type, props);
                break;
              case HostText:
                var text = fiber.pendingProps;
                didNotFindHydratableContainerTextInstance(parentContainer, text);
                break;
            }
            break;
          }
        case HostComponent:
          {
            var parentType = returnFiber.type;
            var parentProps = returnFiber.memoizedProps;
            var parentInstance = returnFiber.stateNode;
            switch (fiber.tag) {
              case HostComponent:
                var _type = fiber.type;
                var _props = fiber.pendingProps;
                didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
                break;
              case HostText:
                var _text = fiber.pendingProps;
                didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
                break;
            }
            break;
          }
        default:
          return;
      }
    }
  }

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case HostComponent:
        {
          var type = fiber.type;
          var props = fiber.pendingProps;
          var instance = canHydrateInstance(nextInstance, type, props);
          if (instance !== null) {
            fiber.stateNode = instance;
            return true;
          }
          return false;
        }
      case HostText:
        {
          var text = fiber.pendingProps;
          var textInstance = canHydrateTextInstance(nextInstance, text);
          if (textInstance !== null) {
            fiber.stateNode = textInstance;
            return true;
          }
          return false;
        }
      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber) {
    if (!isHydrating) {
      return;
    }
    var nextInstance = nextHydratableInstance;
    if (!nextInstance) {
      // Nothing to hydrate. Make it an insertion.
      insertNonHydratedInstance(hydrationParentFiber, fiber);
      isHydrating = false;
      hydrationParentFiber = fiber;
      return;
    }
    if (!tryHydrate(fiber, nextInstance)) {
      // If we can't hydrate this instance let's try the next one.
      // We use this as a heuristic. It's based on intuition and not data so it
      // might be flawed or unnecessary.
      nextInstance = getNextHydratableSibling(nextInstance);
      if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
        // Nothing to hydrate. Make it an insertion.
        insertNonHydratedInstance(hydrationParentFiber, fiber);
        isHydrating = false;
        hydrationParentFiber = fiber;
        return;
      }
      // We matched the next one, we'll now assume that the first one was
      // superfluous and we'll delete it. Since we can't eagerly delete it
      // we'll have to schedule a deletion. To do that, this node needs a dummy
      // fiber associated with it.
      deleteHydratableInstance(hydrationParentFiber, nextHydratableInstance);
    }
    hydrationParentFiber = fiber;
    nextHydratableInstance = getFirstHydratableChild(nextInstance);
  }

  function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
    var instance = fiber.stateNode;
    var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
    // TODO: Type this specific to this type of component.
    fiber.updateQueue = updatePayload;
    // If the update payload indicates that there is a change or if there
    // is a new ref we mark this as an update.
    if (updatePayload !== null) {
      return true;
    }
    return false;
  }

  function prepareToHydrateHostTextInstance(fiber) {
    var textInstance = fiber.stateNode;
    var textContent = fiber.memoizedProps;
    var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
    {
      if (shouldUpdate) {
        // We assume that prepareToHydrateHostTextInstance is called in a context where the
        // hydration parent is the parent host component of this host text.
        var returnFiber = hydrationParentFiber;
        if (returnFiber !== null) {
          switch (returnFiber.tag) {
            case HostRoot:
              {
                var parentContainer = returnFiber.stateNode.containerInfo;
                didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
                break;
              }
            case HostComponent:
              {
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
                break;
              }
          }
        }
      }
    }
    return shouldUpdate;
  }

  function popToNextHostParent(fiber) {
    var parent = fiber['return'];
    while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot) {
      parent = parent['return'];
    }
    hydrationParentFiber = parent;
  }

  function popHydrationState(fiber) {
    if (fiber !== hydrationParentFiber) {
      // We're deeper than the current hydration context, inside an inserted
      // tree.
      return false;
    }
    if (!isHydrating) {
      // If we're not currently hydrating but we're in a hydration context, then
      // we were an insertion and now need to pop up reenter hydration of our
      // siblings.
      popToNextHostParent(fiber);
      isHydrating = true;
      return false;
    }

    var type = fiber.type;

    // If we have any remaining hydratable nodes, we need to delete them now.
    // We only do this deeper than head and body since they tend to have random
    // other nodes in them. We also ignore components with pure text content in
    // side of them.
    // TODO: Better heuristic.
    if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
      var nextInstance = nextHydratableInstance;
      while (nextInstance) {
        deleteHydratableInstance(fiber, nextInstance);
        nextInstance = getNextHydratableSibling(nextInstance);
      }
    }

    popToNextHostParent(fiber);
    nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
    return true;
  }

  function resetHydrationState() {
    hydrationParentFiber = null;
    nextHydratableInstance = null;
    isHydrating = false;
  }

  return {
    enterHydrationState: enterHydrationState,
    resetHydrationState: resetHydrationState,
    tryToClaimNextHydratableInstance: tryToClaimNextHydratableInstance,
    prepareToHydrateHostInstance: prepareToHydrateHostInstance,
    prepareToHydrateHostTextInstance: prepareToHydrateHostTextInstance,
    popHydrationState: popHydrationState
  };
};

// This lets us hook into Fiber to debug what it's doing.
// See https://github.com/facebook/react/pull/8033.
// This is not part of the public API, not even for React DevTools.
// You may only inject a debugTool if you work on React Fiber itself.
var ReactFiberInstrumentation = {
  debugTool: null
};

var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

var defaultShowDialog = function (capturedError) {
  return true;
};

var showDialog = defaultShowDialog;

function logCapturedError(capturedError) {
  var logError = showDialog(capturedError);

  // Allow injected showDialog() to prevent default console.error logging.
  // This enables renderers like ReactNative to better manage redbox behavior.
  if (logError === false) {
    return;
  }

  var error = capturedError.error;
  var suppressLogging = error && error.suppressReactErrorLogging;
  if (suppressLogging) {
    return;
  }

  {
    var componentName = capturedError.componentName,
        componentStack = capturedError.componentStack,
        errorBoundaryName = capturedError.errorBoundaryName,
        errorBoundaryFound = capturedError.errorBoundaryFound,
        willRetry = capturedError.willRetry;


    var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';

    var errorBoundaryMessage = void 0;
    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
    if (errorBoundaryFound && errorBoundaryName) {
      if (willRetry) {
        errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
      } else {
        errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';
      }
    } else {
      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
    }
    var combinedMessage = '' + componentNameMessage + componentStack + '\n\n' + ('' + errorBoundaryMessage);

    // In development, we provide our own message with just the component stack.
    // We don't include the original error message and JS stack because the browser
    // has already printed it. Even if the application swallows the error, it is still
    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
    console.error(combinedMessage);
  }
}

var invokeGuardedCallback$1 = ReactErrorUtils.invokeGuardedCallback;
var hasCaughtError = ReactErrorUtils.hasCaughtError;
var clearCaughtError = ReactErrorUtils.clearCaughtError;


{
  var didWarnAboutStateTransition = false;
  var didWarnSetStateChildContext = false;
  var didWarnStateUpdateForUnmountedComponent = {};

  var warnAboutUpdateOnUnmounted = function (fiber) {
    var componentName = getComponentName(fiber) || 'ReactClass';
    if (didWarnStateUpdateForUnmountedComponent[componentName]) {
      return;
    }
    warning(false, 'Can only update a mounted or mounting ' + 'component. This usually means you called setState, replaceState, ' + 'or forceUpdate on an unmounted component. This is a no-op.\n\nPlease ' + 'check the code for the %s component.', componentName);
    didWarnStateUpdateForUnmountedComponent[componentName] = true;
  };

  var warnAboutInvalidUpdates = function (instance) {
    switch (ReactDebugCurrentFiber.phase) {
      case 'getChildContext':
        if (didWarnSetStateChildContext) {
          return;
        }
        warning(false, 'setState(...): Cannot call setState() inside getChildContext()');
        didWarnSetStateChildContext = true;
        break;
      case 'render':
        if (didWarnAboutStateTransition) {
          return;
        }
        warning(false, 'Cannot update during an existing state transition (such as within ' + "`render` or another component's constructor). Render methods should " + 'be a pure function of props and state; constructor side-effects are ' + 'an anti-pattern, but can be moved to `componentWillMount`.');
        didWarnAboutStateTransition = true;
        break;
    }
  };
}

var ReactFiberScheduler = function (config) {
  var hostContext = ReactFiberHostContext(config);
  var hydrationContext = ReactFiberHydrationContext(config);
  var popHostContainer = hostContext.popHostContainer,
      popHostContext = hostContext.popHostContext,
      resetHostContainer = hostContext.resetHostContainer;

  var _ReactFiberBeginWork = ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleWork, computeExpirationForFiber),
      beginWork = _ReactFiberBeginWork.beginWork,
      beginFailedWork = _ReactFiberBeginWork.beginFailedWork;

  var _ReactFiberCompleteWo = ReactFiberCompleteWork(config, hostContext, hydrationContext),
      completeWork = _ReactFiberCompleteWo.completeWork;

  var _ReactFiberCommitWork = ReactFiberCommitWork(config, captureError),
      commitResetTextContent = _ReactFiberCommitWork.commitResetTextContent,
      commitPlacement = _ReactFiberCommitWork.commitPlacement,
      commitDeletion = _ReactFiberCommitWork.commitDeletion,
      commitWork = _ReactFiberCommitWork.commitWork,
      commitLifeCycles = _ReactFiberCommitWork.commitLifeCycles,
      commitAttachRef = _ReactFiberCommitWork.commitAttachRef,
      commitDetachRef = _ReactFiberCommitWork.commitDetachRef;

  var now = config.now,
      scheduleDeferredCallback = config.scheduleDeferredCallback,
      cancelDeferredCallback = config.cancelDeferredCallback,
      useSyncScheduling = config.useSyncScheduling,
      prepareForCommit = config.prepareForCommit,
      resetAfterCommit = config.resetAfterCommit;

  // Represents the current time in ms.

  var startTime = now();
  var mostRecentCurrentTime = msToExpirationTime(0);

  // Represents the expiration time that incoming updates should use. (If this
  // is NoWork, use the default strategy: async updates in async mode, sync
  // updates in sync mode.)
  var expirationContext = NoWork;

  var isWorking = false;

  // The next work in progress fiber that we're currently working on.
  var nextUnitOfWork = null;
  var nextRoot = null;
  // The time at which we're currently rendering work.
  var nextRenderExpirationTime = NoWork;

  // The next fiber with an effect that we're currently committing.
  var nextEffect = null;

  // Keep track of which fibers have captured an error that need to be handled.
  // Work is removed from this collection after componentDidCatch is called.
  var capturedErrors = null;
  // Keep track of which fibers have failed during the current batch of work.
  // This is a different set than capturedErrors, because it is not reset until
  // the end of the batch. This is needed to propagate errors correctly if a
  // subtree fails more than once.
  var failedBoundaries = null;
  // Error boundaries that captured an error during the current commit.
  var commitPhaseBoundaries = null;
  var firstUncaughtError = null;
  var didFatal = false;

  var isCommitting = false;
  var isUnmounting = false;

  // Used for performance tracking.
  var interruptedBy = null;

  function resetContextStack() {
    // Reset the stack
    reset$1();
    // Reset the cursors
    resetContext();
    resetHostContainer();
  }

  function commitAllHostEffects() {
    while (nextEffect !== null) {
      {
        ReactDebugCurrentFiber.setCurrentFiber(nextEffect);
      }
      recordEffect();

      var effectTag = nextEffect.effectTag;
      if (effectTag & ContentReset) {
        commitResetTextContent(nextEffect);
      }

      if (effectTag & Ref) {
        var current = nextEffect.alternate;
        if (current !== null) {
          commitDetachRef(current);
        }
      }

      // The following switch statement is only concerned about placement,
      // updates, and deletions. To avoid needing to add a case for every
      // possible bitmap value, we remove the secondary effects from the
      // effect tag and switch on that value.
      var primaryEffectTag = effectTag & ~(Callback | Err | ContentReset | Ref | PerformedWork);
      switch (primaryEffectTag) {
        case Placement:
          {
            commitPlacement(nextEffect);
            // Clear the "placement" from effect tag so that we know that this is inserted, before
            // any life-cycles like componentDidMount gets called.
            // TODO: findDOMNode doesn't rely on this any more but isMounted
            // does and isMounted is deprecated anyway so we should be able
            // to kill this.
            nextEffect.effectTag &= ~Placement;
            break;
          }
        case PlacementAndUpdate:
          {
            // Placement
            commitPlacement(nextEffect);
            // Clear the "placement" from effect tag so that we know that this is inserted, before
            // any life-cycles like componentDidMount gets called.
            nextEffect.effectTag &= ~Placement;

            // Update
            var _current = nextEffect.alternate;
            commitWork(_current, nextEffect);
            break;
          }
        case Update:
          {
            var _current2 = nextEffect.alternate;
            commitWork(_current2, nextEffect);
            break;
          }
        case Deletion:
          {
            isUnmounting = true;
            commitDeletion(nextEffect);
            isUnmounting = false;
            break;
          }
      }
      nextEffect = nextEffect.nextEffect;
    }

    {
      ReactDebugCurrentFiber.resetCurrentFiber();
    }
  }

  function commitAllLifeCycles() {
    while (nextEffect !== null) {
      var effectTag = nextEffect.effectTag;

      if (effectTag & (Update | Callback)) {
        recordEffect();
        var current = nextEffect.alternate;
        commitLifeCycles(current, nextEffect);
      }

      if (effectTag & Ref) {
        recordEffect();
        commitAttachRef(nextEffect);
      }

      if (effectTag & Err) {
        recordEffect();
        commitErrorHandling(nextEffect);
      }

      var next = nextEffect.nextEffect;
      // Ensure that we clean these up so that we don't accidentally keep them.
      // I'm not actually sure this matters because we can't reset firstEffect
      // and lastEffect since they're on every node, not just the effectful
      // ones. So we have to clean everything as we reuse nodes anyway.
      nextEffect.nextEffect = null;
      // Ensure that we reset the effectTag here so that we can rely on effect
      // tags to reason about the current life-cycle.
      nextEffect = next;
    }
  }

  function commitRoot(finishedWork) {
    // We keep track of this so that captureError can collect any boundaries
    // that capture an error during the commit phase. The reason these aren't
    // local to this function is because errors that occur during cWU are
    // captured elsewhere, to prevent the unmount from being interrupted.
    isWorking = true;
    isCommitting = true;
    startCommitTimer();

    var root = finishedWork.stateNode;
    !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    root.isReadyForCommit = false;

    // Reset this to null before calling lifecycles
    ReactCurrentOwner.current = null;

    var firstEffect = void 0;
    if (finishedWork.effectTag > PerformedWork) {
      // A fiber's effect list consists only of its children, not itself. So if
      // the root has an effect, we need to add it to the end of the list. The
      // resulting list is the set that would belong to the root's parent, if
      // it had one; that is, all the effects in the tree including the root.
      if (finishedWork.lastEffect !== null) {
        finishedWork.lastEffect.nextEffect = finishedWork;
        firstEffect = finishedWork.firstEffect;
      } else {
        firstEffect = finishedWork;
      }
    } else {
      // There is no effect on the root.
      firstEffect = finishedWork.firstEffect;
    }

    prepareForCommit();

    // Commit all the side-effects within a tree. We'll do this in two passes.
    // The first pass performs all the host insertions, updates, deletions and
    // ref unmounts.
    nextEffect = firstEffect;
    startCommitHostEffectsTimer();
    while (nextEffect !== null) {
      var didError = false;
      var _error = void 0;
      {
        invokeGuardedCallback$1(null, commitAllHostEffects, null);
        if (hasCaughtError()) {
          didError = true;
          _error = clearCaughtError();
        }
      }
      if (didError) {
        !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        captureError(nextEffect, _error);
        // Clean-up
        if (nextEffect !== null) {
          nextEffect = nextEffect.nextEffect;
        }
      }
    }
    stopCommitHostEffectsTimer();

    resetAfterCommit();

    // The work-in-progress tree is now the current tree. This must come after
    // the first pass of the commit phase, so that the previous tree is still
    // current during componentWillUnmount, but before the second pass, so that
    // the finished work is current during componentDidMount/Update.
    root.current = finishedWork;

    // In the second pass we'll perform all life-cycles and ref callbacks.
    // Life-cycles happen as a separate pass so that all placements, updates,
    // and deletions in the entire tree have already been invoked.
    // This pass also triggers any renderer-specific initial effects.
    nextEffect = firstEffect;
    startCommitLifeCyclesTimer();
    while (nextEffect !== null) {
      var _didError = false;
      var _error2 = void 0;
      {
        invokeGuardedCallback$1(null, commitAllLifeCycles, null);
        if (hasCaughtError()) {
          _didError = true;
          _error2 = clearCaughtError();
        }
      }
      if (_didError) {
        !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        captureError(nextEffect, _error2);
        if (nextEffect !== null) {
          nextEffect = nextEffect.nextEffect;
        }
      }
    }

    isCommitting = false;
    isWorking = false;
    stopCommitLifeCyclesTimer();
    stopCommitTimer();
    if (typeof onCommitRoot === 'function') {
      onCommitRoot(finishedWork.stateNode);
    }
    if (true && ReactFiberInstrumentation_1.debugTool) {
      ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);
    }

    // If we caught any errors during this commit, schedule their boundaries
    // to update.
    if (commitPhaseBoundaries) {
      commitPhaseBoundaries.forEach(scheduleErrorRecovery);
      commitPhaseBoundaries = null;
    }

    if (firstUncaughtError !== null) {
      var _error3 = firstUncaughtError;
      firstUncaughtError = null;
      onUncaughtError(_error3);
    }

    var remainingTime = root.current.expirationTime;

    if (remainingTime === NoWork) {
      capturedErrors = null;
      failedBoundaries = null;
    }

    return remainingTime;
  }

  function resetExpirationTime(workInProgress, renderTime) {
    if (renderTime !== Never && workInProgress.expirationTime === Never) {
      // The children of this component are hidden. Don't bubble their
      // expiration times.
      return;
    }

    // Check for pending updates.
    var newExpirationTime = getUpdateExpirationTime(workInProgress);

    // TODO: Calls need to visit stateNode

    // Bubble up the earliest expiration time.
    var child = workInProgress.child;
    while (child !== null) {
      if (child.expirationTime !== NoWork && (newExpirationTime === NoWork || newExpirationTime > child.expirationTime)) {
        newExpirationTime = child.expirationTime;
      }
      child = child.sibling;
    }
    workInProgress.expirationTime = newExpirationTime;
  }

  function completeUnitOfWork(workInProgress) {
    while (true) {
      // The current, flushed, state of this fiber is the alternate.
      // Ideally nothing should rely on this, but relying on it here
      // means that we don't need an additional field on the work in
      // progress.
      var current = workInProgress.alternate;
      {
        ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
      }
      var next = completeWork(current, workInProgress, nextRenderExpirationTime);
      {
        ReactDebugCurrentFiber.resetCurrentFiber();
      }

      var returnFiber = workInProgress['return'];
      var siblingFiber = workInProgress.sibling;

      resetExpirationTime(workInProgress, nextRenderExpirationTime);

      if (next !== null) {
        stopWorkTimer(workInProgress);
        if (true && ReactFiberInstrumentation_1.debugTool) {
          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
        }
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        return next;
      }

      if (returnFiber !== null) {
        // Append all the effects of the subtree and this fiber onto the effect
        // list of the parent. The completion order of the children affects the
        // side-effect order.
        if (returnFiber.firstEffect === null) {
          returnFiber.firstEffect = workInProgress.firstEffect;
        }
        if (workInProgress.lastEffect !== null) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
          }
          returnFiber.lastEffect = workInProgress.lastEffect;
        }

        // If this fiber had side-effects, we append it AFTER the children's
        // side-effects. We can perform certain side-effects earlier if
        // needed, by doing multiple passes over the effect list. We don't want
        // to schedule our own side-effect on our own list because if end up
        // reusing children we'll schedule this effect onto itself since we're
        // at the end.
        var effectTag = workInProgress.effectTag;
        // Skip both NoWork and PerformedWork tags when creating the effect list.
        // PerformedWork effect is read by React DevTools but shouldn't be committed.
        if (effectTag > PerformedWork) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress;
          } else {
            returnFiber.firstEffect = workInProgress;
          }
          returnFiber.lastEffect = workInProgress;
        }
      }

      stopWorkTimer(workInProgress);
      if (true && ReactFiberInstrumentation_1.debugTool) {
        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
      }

      if (siblingFiber !== null) {
        // If there is more work to do in this returnFiber, do that next.
        return siblingFiber;
      } else if (returnFiber !== null) {
        // If there's no more work in this returnFiber. Complete the returnFiber.
        workInProgress = returnFiber;
        continue;
      } else {
        // We've reached the root.
        var root = workInProgress.stateNode;
        root.isReadyForCommit = true;
        return null;
      }
    }

    // Without this explicit null return Flow complains of invalid return type
    // TODO Remove the above while(true) loop
    // eslint-disable-next-line no-unreachable
    return null;
  }

  function performUnitOfWork(workInProgress) {
    // The current, flushed, state of this fiber is the alternate.
    // Ideally nothing should rely on this, but relying on it here
    // means that we don't need an additional field on the work in
    // progress.
    var current = workInProgress.alternate;

    // See if beginning this work spawns more work.
    startWorkTimer(workInProgress);
    {
      ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
    }

    var next = beginWork(current, workInProgress, nextRenderExpirationTime);
    {
      ReactDebugCurrentFiber.resetCurrentFiber();
    }
    if (true && ReactFiberInstrumentation_1.debugTool) {
      ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
    }

    if (next === null) {
      // If this doesn't spawn new work, complete the current work.
      next = completeUnitOfWork(workInProgress);
    }

    ReactCurrentOwner.current = null;

    return next;
  }

  function performFailedUnitOfWork(workInProgress) {
    // The current, flushed, state of this fiber is the alternate.
    // Ideally nothing should rely on this, but relying on it here
    // means that we don't need an additional field on the work in
    // progress.
    var current = workInProgress.alternate;

    // See if beginning this work spawns more work.
    startWorkTimer(workInProgress);
    {
      ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
    }
    var next = beginFailedWork(current, workInProgress, nextRenderExpirationTime);
    {
      ReactDebugCurrentFiber.resetCurrentFiber();
    }
    if (true && ReactFiberInstrumentation_1.debugTool) {
      ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
    }

    if (next === null) {
      // If this doesn't spawn new work, complete the current work.
      next = completeUnitOfWork(workInProgress);
    }

    ReactCurrentOwner.current = null;

    return next;
  }

  function workLoop(expirationTime) {
    if (capturedErrors !== null) {
      // If there are unhandled errors, switch to the slow work loop.
      // TODO: How to avoid this check in the fast path? Maybe the renderer
      // could keep track of which roots have unhandled errors and call a
      // forked version of renderRoot.
      slowWorkLoopThatChecksForFailedWork(expirationTime);
      return;
    }
    if (nextRenderExpirationTime === NoWork || nextRenderExpirationTime > expirationTime) {
      return;
    }

    if (nextRenderExpirationTime <= mostRecentCurrentTime) {
      // Flush all expired work.
      while (nextUnitOfWork !== null) {
        nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
      }
    } else {
      // Flush asynchronous work until the deadline runs out of time.
      while (nextUnitOfWork !== null && !shouldYield()) {
        nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
      }
    }
  }

  function slowWorkLoopThatChecksForFailedWork(expirationTime) {
    if (nextRenderExpirationTime === NoWork || nextRenderExpirationTime > expirationTime) {
      return;
    }

    if (nextRenderExpirationTime <= mostRecentCurrentTime) {
      // Flush all expired work.
      while (nextUnitOfWork !== null) {
        if (hasCapturedError(nextUnitOfWork)) {
          // Use a forked version of performUnitOfWork
          nextUnitOfWork = performFailedUnitOfWork(nextUnitOfWork);
        } else {
          nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
        }
      }
    } else {
      // Flush asynchronous work until the deadline runs out of time.
      while (nextUnitOfWork !== null && !shouldYield()) {
        if (hasCapturedError(nextUnitOfWork)) {
          // Use a forked version of performUnitOfWork
          nextUnitOfWork = performFailedUnitOfWork(nextUnitOfWork);
        } else {
          nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
        }
      }
    }
  }

  function renderRootCatchBlock(root, failedWork, boundary, expirationTime) {
    // We're going to restart the error boundary that captured the error.
    // Conceptually, we're unwinding the stack. We need to unwind the
    // context stack, too.
    unwindContexts(failedWork, boundary);

    // Restart the error boundary using a forked version of
    // performUnitOfWork that deletes the boundary's children. The entire
    // failed subree will be unmounted. During the commit phase, a special
    // lifecycle method is called on the error boundary, which triggers
    // a re-render.
    nextUnitOfWork = performFailedUnitOfWork(boundary);

    // Continue working.
    workLoop(expirationTime);
  }

  function renderRoot(root, expirationTime) {
    !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    isWorking = true;

    // We're about to mutate the work-in-progress tree. If the root was pending
    // commit, it no longer is: we'll need to complete it again.
    root.isReadyForCommit = false;

    // Check if we're starting from a fresh stack, or if we're resuming from
    // previously yielded work.
    if (root !== nextRoot || expirationTime !== nextRenderExpirationTime || nextUnitOfWork === null) {
      // Reset the stack and start working from the root.
      resetContextStack();
      nextRoot = root;
      nextRenderExpirationTime = expirationTime;
      nextUnitOfWork = createWorkInProgress(nextRoot.current, null, expirationTime);
    }

    startWorkLoopTimer(nextUnitOfWork);

    var didError = false;
    var error = null;
    {
      invokeGuardedCallback$1(null, workLoop, null, expirationTime);
      if (hasCaughtError()) {
        didError = true;
        error = clearCaughtError();
      }
    }

    // An error was thrown during the render phase.
    while (didError) {
      if (didFatal) {
        // This was a fatal error. Don't attempt to recover from it.
        firstUncaughtError = error;
        break;
      }

      var failedWork = nextUnitOfWork;
      if (failedWork === null) {
        // An error was thrown but there's no current unit of work. This can
        // happen during the commit phase if there's a bug in the renderer.
        didFatal = true;
        continue;
      }

      // "Capture" the error by finding the nearest boundary. If there is no
      // error boundary, we use the root.
      var boundary = captureError(failedWork, error);
      !(boundary !== null) ? invariant(false, 'Should have found an error boundary. This error is likely caused by a bug in React. Please file an issue.') : void 0;

      if (didFatal) {
        // The error we just captured was a fatal error. This happens
        // when the error propagates to the root more than once.
        continue;
      }

      didError = false;
      error = null;
      {
        invokeGuardedCallback$1(null, renderRootCatchBlock, null, root, failedWork, boundary, expirationTime);
        if (hasCaughtError()) {
          didError = true;
          error = clearCaughtError();
          continue;
        }
      }
      // We're finished working. Exit the error loop.
      break;
    }

    var uncaughtError = firstUncaughtError;

    // We're done performing work. Time to clean up.
    stopWorkLoopTimer(interruptedBy);
    interruptedBy = null;
    isWorking = false;
    didFatal = false;
    firstUncaughtError = null;

    if (uncaughtError !== null) {
      onUncaughtError(uncaughtError);
    }

    return root.isReadyForCommit ? root.current.alternate : null;
  }

  // Returns the boundary that captured the error, or null if the error is ignored
  function captureError(failedWork, error) {
    // It is no longer valid because we exited the user code.
    ReactCurrentOwner.current = null;
    {
      ReactDebugCurrentFiber.resetCurrentFiber();
    }

    // Search for the nearest error boundary.
    var boundary = null;

    // Passed to logCapturedError()
    var errorBoundaryFound = false;
    var willRetry = false;
    var errorBoundaryName = null;

    // Host containers are a special case. If the failed work itself is a host
    // container, then it acts as its own boundary. In all other cases, we
    // ignore the work itself and only search through the parents.
    if (failedWork.tag === HostRoot) {
      boundary = failedWork;

      if (isFailedBoundary(failedWork)) {
        // If this root already failed, there must have been an error when
        // attempting to unmount it. This is a worst-case scenario and
        // should only be possible if there's a bug in the renderer.
        didFatal = true;
      }
    } else {
      var node = failedWork['return'];
      while (node !== null && boundary === null) {
        if (node.tag === ClassComponent) {
          var instance = node.stateNode;
          if (typeof instance.componentDidCatch === 'function') {
            errorBoundaryFound = true;
            errorBoundaryName = getComponentName(node);

            // Found an error boundary!
            boundary = node;
            willRetry = true;
          }
        } else if (node.tag === HostRoot) {
          // Treat the root like a no-op error boundary
          boundary = node;
        }

        if (isFailedBoundary(node)) {
          // This boundary is already in a failed state.

          // If we're currently unmounting, that means this error was
          // thrown while unmounting a failed subtree. We should ignore
          // the error.
          if (isUnmounting) {
            return null;
          }

          // If we're in the commit phase, we should check to see if
          // this boundary already captured an error during this commit.
          // This case exists because multiple errors can be thrown during
          // a single commit without interruption.
          if (commitPhaseBoundaries !== null && (commitPhaseBoundaries.has(node) || node.alternate !== null && commitPhaseBoundaries.has(node.alternate))) {
            // If so, we should ignore this error.
            return null;
          }

          // The error should propagate to the next boundary -— we keep looking.
          boundary = null;
          willRetry = false;
        }

        node = node['return'];
      }
    }

    if (boundary !== null) {
      // Add to the collection of failed boundaries. This lets us know that
      // subsequent errors in this subtree should propagate to the next boundary.
      if (failedBoundaries === null) {
        failedBoundaries = new Set();
      }
      failedBoundaries.add(boundary);

      // This method is unsafe outside of the begin and complete phases.
      // We might be in the commit phase when an error is captured.
      // The risk is that the return path from this Fiber may not be accurate.
      // That risk is acceptable given the benefit of providing users more context.
      var _componentStack = getStackAddendumByWorkInProgressFiber(failedWork);
      var _componentName = getComponentName(failedWork);

      // Add to the collection of captured errors. This is stored as a global
      // map of errors and their component stack location keyed by the boundaries
      // that capture them. We mostly use this Map as a Set; it's a Map only to
      // avoid adding a field to Fiber to store the error.
      if (capturedErrors === null) {
        capturedErrors = new Map();
      }

      var capturedError = {
        componentName: _componentName,
        componentStack: _componentStack,
        error: error,
        errorBoundary: errorBoundaryFound ? boundary.stateNode : null,
        errorBoundaryFound: errorBoundaryFound,
        errorBoundaryName: errorBoundaryName,
        willRetry: willRetry
      };

      capturedErrors.set(boundary, capturedError);

      try {
        logCapturedError(capturedError);
      } catch (e) {
        // Prevent cycle if logCapturedError() throws.
        // A cycle may still occur if logCapturedError renders a component that throws.
        var suppressLogging = e && e.suppressReactErrorLogging;
        if (!suppressLogging) {
          console.error(e);
        }
      }

      // If we're in the commit phase, defer scheduling an update on the
      // boundary until after the commit is complete
      if (isCommitting) {
        if (commitPhaseBoundaries === null) {
          commitPhaseBoundaries = new Set();
        }
        commitPhaseBoundaries.add(boundary);
      } else {
        // Otherwise, schedule an update now.
        // TODO: Is this actually necessary during the render phase? Is it
        // possible to unwind and continue rendering at the same priority,
        // without corrupting internal state?
        scheduleErrorRecovery(boundary);
      }
      return boundary;
    } else if (firstUncaughtError === null) {
      // If no boundary is found, we'll need to throw the error
      firstUncaughtError = error;
    }
    return null;
  }

  function hasCapturedError(fiber) {
    // TODO: capturedErrors should store the boundary instance, to avoid needing
    // to check the alternate.
    return capturedErrors !== null && (capturedErrors.has(fiber) || fiber.alternate !== null && capturedErrors.has(fiber.alternate));
  }

  function isFailedBoundary(fiber) {
    // TODO: failedBoundaries should store the boundary instance, to avoid
    // needing to check the alternate.
    return failedBoundaries !== null && (failedBoundaries.has(fiber) || fiber.alternate !== null && failedBoundaries.has(fiber.alternate));
  }

  function commitErrorHandling(effectfulFiber) {
    var capturedError = void 0;
    if (capturedErrors !== null) {
      capturedError = capturedErrors.get(effectfulFiber);
      capturedErrors['delete'](effectfulFiber);
      if (capturedError == null) {
        if (effectfulFiber.alternate !== null) {
          effectfulFiber = effectfulFiber.alternate;
          capturedError = capturedErrors.get(effectfulFiber);
          capturedErrors['delete'](effectfulFiber);
        }
      }
    }

    !(capturedError != null) ? invariant(false, 'No error for given unit of work. This error is likely caused by a bug in React. Please file an issue.') : void 0;

    switch (effectfulFiber.tag) {
      case ClassComponent:
        var instance = effectfulFiber.stateNode;

        var info = {
          componentStack: capturedError.componentStack
        };

        // Allow the boundary to handle the error, usually by scheduling
        // an update to itself
        instance.componentDidCatch(capturedError.error, info);
        return;
      case HostRoot:
        if (firstUncaughtError === null) {
          firstUncaughtError = capturedError.error;
        }
        return;
      default:
        invariant(false, 'Invalid type of work. This error is likely caused by a bug in React. Please file an issue.');
    }
  }

  function unwindContexts(from, to) {
    var node = from;
    while (node !== null) {
      switch (node.tag) {
        case ClassComponent:
          popContextProvider(node);
          break;
        case HostComponent:
          popHostContext(node);
          break;
        case HostRoot:
          popHostContainer(node);
          break;
        case HostPortal:
          popHostContainer(node);
          break;
      }
      if (node === to || node.alternate === to) {
        stopFailedWorkTimer(node);
        break;
      } else {
        stopWorkTimer(node);
      }
      node = node['return'];
    }
  }

  function computeAsyncExpiration() {
    // Given the current clock time, returns an expiration time. We use rounding
    // to batch like updates together.
    // Should complete within ~1000ms. 1200ms max.
    var currentTime = recalculateCurrentTime();
    var expirationMs = 1000;
    var bucketSizeMs = 200;
    return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);
  }

  function computeExpirationForFiber(fiber) {
    var expirationTime = void 0;
    if (expirationContext !== NoWork) {
      // An explicit expiration context was set;
      expirationTime = expirationContext;
    } else if (isWorking) {
      if (isCommitting) {
        // Updates that occur during the commit phase should have sync priority
        // by default.
        expirationTime = Sync;
      } else {
        // Updates during the render phase should expire at the same time as
        // the work that is being rendered.
        expirationTime = nextRenderExpirationTime;
      }
    } else {
      // No explicit expiration context was set, and we're not currently
      // performing work. Calculate a new expiration time.
      if (useSyncScheduling && !(fiber.internalContextTag & AsyncUpdates)) {
        // This is a sync update
        expirationTime = Sync;
      } else {
        // This is an async update
        expirationTime = computeAsyncExpiration();
      }
    }
    return expirationTime;
  }

  function scheduleWork(fiber, expirationTime) {
    return scheduleWorkImpl(fiber, expirationTime, false);
  }

  function checkRootNeedsClearing(root, fiber, expirationTime) {
    if (!isWorking && root === nextRoot && expirationTime < nextRenderExpirationTime) {
      // Restart the root from the top.
      if (nextUnitOfWork !== null) {
        // This is an interruption. (Used for performance tracking.)
        interruptedBy = fiber;
      }
      nextRoot = null;
      nextUnitOfWork = null;
      nextRenderExpirationTime = NoWork;
    }
  }

  function scheduleWorkImpl(fiber, expirationTime, isErrorRecovery) {
    recordScheduleUpdate();

    {
      if (!isErrorRecovery && fiber.tag === ClassComponent) {
        var instance = fiber.stateNode;
        warnAboutInvalidUpdates(instance);
      }
    }

    var node = fiber;
    while (node !== null) {
      // Walk the parent path to the root and update each node's
      // expiration time.
      if (node.expirationTime === NoWork || node.expirationTime > expirationTime) {
        node.expirationTime = expirationTime;
      }
      if (node.alternate !== null) {
        if (node.alternate.expirationTime === NoWork || node.alternate.expirationTime > expirationTime) {
          node.alternate.expirationTime = expirationTime;
        }
      }
      if (node['return'] === null) {
        if (node.tag === HostRoot) {
          var root = node.stateNode;

          checkRootNeedsClearing(root, fiber, expirationTime);
          requestWork(root, expirationTime);
          checkRootNeedsClearing(root, fiber, expirationTime);
        } else {
          {
            if (!isErrorRecovery && fiber.tag === ClassComponent) {
              warnAboutUpdateOnUnmounted(fiber);
            }
          }
          return;
        }
      }
      node = node['return'];
    }
  }

  function scheduleErrorRecovery(fiber) {
    scheduleWorkImpl(fiber, Sync, true);
  }

  function recalculateCurrentTime() {
    // Subtract initial time so it fits inside 32bits
    var ms = now() - startTime;
    mostRecentCurrentTime = msToExpirationTime(ms);
    return mostRecentCurrentTime;
  }

  function deferredUpdates(fn) {
    var previousExpirationContext = expirationContext;
    expirationContext = computeAsyncExpiration();
    try {
      return fn();
    } finally {
      expirationContext = previousExpirationContext;
    }
  }

  function syncUpdates(fn) {
    var previousExpirationContext = expirationContext;
    expirationContext = Sync;
    try {
      return fn();
    } finally {
      expirationContext = previousExpirationContext;
    }
  }

  // TODO: Everything below this is written as if it has been lifted to the
  // renderers. I'll do this in a follow-up.

  // Linked-list of roots
  var firstScheduledRoot = null;
  var lastScheduledRoot = null;

  var callbackExpirationTime = NoWork;
  var callbackID = -1;
  var isRendering = false;
  var nextFlushedRoot = null;
  var nextFlushedExpirationTime = NoWork;
  var deadlineDidExpire = false;
  var hasUnhandledError = false;
  var unhandledError = null;
  var deadline = null;

  var isBatchingUpdates = false;
  var isUnbatchingUpdates = false;

  // Use these to prevent an infinite loop of nested updates
  var NESTED_UPDATE_LIMIT = 1000;
  var nestedUpdateCount = 0;

  var timeHeuristicForUnitOfWork = 1;

  function scheduleCallbackWithExpiration(expirationTime) {
    if (callbackExpirationTime !== NoWork) {
      // A callback is already scheduled. Check its expiration time (timeout).
      if (expirationTime > callbackExpirationTime) {
        // Existing callback has sufficient timeout. Exit.
        return;
      } else {
        // Existing callback has insufficient timeout. Cancel and schedule a
        // new one.
        cancelDeferredCallback(callbackID);
      }
      // The request callback timer is already running. Don't start a new one.
    } else {
      startRequestCallbackTimer();
    }

    // Compute a timeout for the given expiration time.
    var currentMs = now() - startTime;
    var expirationMs = expirationTimeToMs(expirationTime);
    var timeout = expirationMs - currentMs;

    callbackExpirationTime = expirationTime;
    callbackID = scheduleDeferredCallback(performAsyncWork, { timeout: timeout });
  }

  // requestWork is called by the scheduler whenever a root receives an update.
  // It's up to the renderer to call renderRoot at some point in the future.
  function requestWork(root, expirationTime) {
    if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
      invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');
    }

    // Add the root to the schedule.
    // Check if this root is already part of the schedule.
    if (root.nextScheduledRoot === null) {
      // This root is not already scheduled. Add it.
      root.remainingExpirationTime = expirationTime;
      if (lastScheduledRoot === null) {
        firstScheduledRoot = lastScheduledRoot = root;
        root.nextScheduledRoot = root;
      } else {
        lastScheduledRoot.nextScheduledRoot = root;
        lastScheduledRoot = root;
        lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
      }
    } else {
      // This root is already scheduled, but its priority may have increased.
      var remainingExpirationTime = root.remainingExpirationTime;
      if (remainingExpirationTime === NoWork || expirationTime < remainingExpirationTime) {
        // Update the priority.
        root.remainingExpirationTime = expirationTime;
      }
    }

    if (isRendering) {
      // Prevent reentrancy. Remaining work will be scheduled at the end of
      // the currently rendering batch.
      return;
    }

    if (isBatchingUpdates) {
      // Flush work at the end of the batch.
      if (isUnbatchingUpdates) {
        // ...unless we're inside unbatchedUpdates, in which case we should
        // flush it now.
        nextFlushedRoot = root;
        nextFlushedExpirationTime = Sync;
        performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime);
      }
      return;
    }

    // TODO: Get rid of Sync and use current time?
    if (expirationTime === Sync) {
      performWork(Sync, null);
    } else {
      scheduleCallbackWithExpiration(expirationTime);
    }
  }

  function findHighestPriorityRoot() {
    var highestPriorityWork = NoWork;
    var highestPriorityRoot = null;

    if (lastScheduledRoot !== null) {
      var previousScheduledRoot = lastScheduledRoot;
      var root = firstScheduledRoot;
      while (root !== null) {
        var remainingExpirationTime = root.remainingExpirationTime;
        if (remainingExpirationTime === NoWork) {
          // This root no longer has work. Remove it from the scheduler.

          // TODO: This check is redudant, but Flow is confused by the branch
          // below where we set lastScheduledRoot to null, even though we break
          // from the loop right after.
          !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          if (root === root.nextScheduledRoot) {
            // This is the only root in the list.
            root.nextScheduledRoot = null;
            firstScheduledRoot = lastScheduledRoot = null;
            break;
          } else if (root === firstScheduledRoot) {
            // This is the first root in the list.
            var next = root.nextScheduledRoot;
            firstScheduledRoot = next;
            lastScheduledRoot.nextScheduledRoot = next;
            root.nextScheduledRoot = null;
          } else if (root === lastScheduledRoot) {
            // This is the last root in the list.
            lastScheduledRoot = previousScheduledRoot;
            lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
            root.nextScheduledRoot = null;
            break;
          } else {
            previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;
            root.nextScheduledRoot = null;
          }
          root = previousScheduledRoot.nextScheduledRoot;
        } else {
          if (highestPriorityWork === NoWork || remainingExpirationTime < highestPriorityWork) {
            // Update the priority, if it's higher
            highestPriorityWork = remainingExpirationTime;
            highestPriorityRoot = root;
          }
          if (root === lastScheduledRoot) {
            break;
          }
          previousScheduledRoot = root;
          root = root.nextScheduledRoot;
        }
      }
    }

    // If the next root is the same as the previous root, this is a nested
    // update. To prevent an infinite loop, increment the nested update count.
    var previousFlushedRoot = nextFlushedRoot;
    if (previousFlushedRoot !== null && previousFlushedRoot === highestPriorityRoot) {
      nestedUpdateCount++;
    } else {
      // Reset whenever we switch roots.
      nestedUpdateCount = 0;
    }
    nextFlushedRoot = highestPriorityRoot;
    nextFlushedExpirationTime = highestPriorityWork;
  }

  function performAsyncWork(dl) {
    performWork(NoWork, dl);
  }

  function performWork(minExpirationTime, dl) {
    deadline = dl;

    // Keep working on roots until there's no more work, or until the we reach
    // the deadline.
    findHighestPriorityRoot();

    if (enableUserTimingAPI && deadline !== null) {
      var didExpire = nextFlushedExpirationTime < recalculateCurrentTime();
      stopRequestCallbackTimer(didExpire);
    }

    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && (minExpirationTime === NoWork || nextFlushedExpirationTime <= minExpirationTime) && !deadlineDidExpire) {
      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime);
      // Find the next highest priority work.
      findHighestPriorityRoot();
    }

    // We're done flushing work. Either we ran out of time in this callback,
    // or there's no more work left with sufficient priority.

    // If we're inside a callback, set this to false since we just completed it.
    if (deadline !== null) {
      callbackExpirationTime = NoWork;
      callbackID = -1;
    }
    // If there's work left over, schedule a new callback.
    if (nextFlushedExpirationTime !== NoWork) {
      scheduleCallbackWithExpiration(nextFlushedExpirationTime);
    }

    // Clean-up.
    deadline = null;
    deadlineDidExpire = false;
    nestedUpdateCount = 0;

    if (hasUnhandledError) {
      var _error4 = unhandledError;
      unhandledError = null;
      hasUnhandledError = false;
      throw _error4;
    }
  }

  function performWorkOnRoot(root, expirationTime) {
    !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;

    isRendering = true;

    // Check if this is async work or sync/expired work.
    // TODO: Pass current time as argument to renderRoot, commitRoot
    if (expirationTime <= recalculateCurrentTime()) {
      // Flush sync work.
      var finishedWork = root.finishedWork;
      if (finishedWork !== null) {
        // This root is already complete. We can commit it.
        root.finishedWork = null;
        root.remainingExpirationTime = commitRoot(finishedWork);
      } else {
        root.finishedWork = null;
        finishedWork = renderRoot(root, expirationTime);
        if (finishedWork !== null) {
          // We've completed the root. Commit it.
          root.remainingExpirationTime = commitRoot(finishedWork);
        }
      }
    } else {
      // Flush async work.
      var _finishedWork = root.finishedWork;
      if (_finishedWork !== null) {
        // This root is already complete. We can commit it.
        root.finishedWork = null;
        root.remainingExpirationTime = commitRoot(_finishedWork);
      } else {
        root.finishedWork = null;
        _finishedWork = renderRoot(root, expirationTime);
        if (_finishedWork !== null) {
          // We've completed the root. Check the deadline one more time
          // before committing.
          if (!shouldYield()) {
            // Still time left. Commit the root.
            root.remainingExpirationTime = commitRoot(_finishedWork);
          } else {
            // There's no time left. Mark this root as complete. We'll come
            // back and commit it later.
            root.finishedWork = _finishedWork;
          }
        }
      }
    }

    isRendering = false;
  }

  // When working on async work, the reconciler asks the renderer if it should
  // yield execution. For DOM, we implement this with requestIdleCallback.
  function shouldYield() {
    if (deadline === null) {
      return false;
    }
    if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
      // Disregard deadline.didTimeout. Only expired work should be flushed
      // during a timeout. This path is only hit for non-expired work.
      return false;
    }
    deadlineDidExpire = true;
    return true;
  }

  // TODO: Not happy about this hook. Conceptually, renderRoot should return a
  // tuple of (isReadyForCommit, didError, error)
  function onUncaughtError(error) {
    !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    // Unschedule this root so we don't work on it again until there's
    // another update.
    nextFlushedRoot.remainingExpirationTime = NoWork;
    if (!hasUnhandledError) {
      hasUnhandledError = true;
      unhandledError = error;
    }
  }

  // TODO: Batching should be implemented at the renderer level, not inside
  // the reconciler.
  function batchedUpdates(fn, a) {
    var previousIsBatchingUpdates = isBatchingUpdates;
    isBatchingUpdates = true;
    try {
      return fn(a);
    } finally {
      isBatchingUpdates = previousIsBatchingUpdates;
      if (!isBatchingUpdates && !isRendering) {
        performWork(Sync, null);
      }
    }
  }

  // TODO: Batching should be implemented at the renderer level, not inside
  // the reconciler.
  function unbatchedUpdates(fn) {
    if (isBatchingUpdates && !isUnbatchingUpdates) {
      isUnbatchingUpdates = true;
      try {
        return fn();
      } finally {
        isUnbatchingUpdates = false;
      }
    }
    return fn();
  }

  // TODO: Batching should be implemented at the renderer level, not within
  // the reconciler.
  function flushSync(fn) {
    var previousIsBatchingUpdates = isBatchingUpdates;
    isBatchingUpdates = true;
    try {
      return syncUpdates(fn);
    } finally {
      isBatchingUpdates = previousIsBatchingUpdates;
      !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;
      performWork(Sync, null);
    }
  }

  return {
    computeAsyncExpiration: computeAsyncExpiration,
    computeExpirationForFiber: computeExpirationForFiber,
    scheduleWork: scheduleWork,
    batchedUpdates: batchedUpdates,
    unbatchedUpdates: unbatchedUpdates,
    flushSync: flushSync,
    deferredUpdates: deferredUpdates
  };
};

{
  var didWarnAboutNestedUpdates = false;
}

// 0 is PROD, 1 is DEV.
// Might add PROFILE later.


function getContextForSubtree(parentComponent) {
  if (!parentComponent) {
    return emptyObject;
  }

  var fiber = get(parentComponent);
  var parentContext = findCurrentUnmaskedContext(fiber);
  return isContextProvider(fiber) ? processChildContext(fiber, parentContext) : parentContext;
}

var ReactFiberReconciler$1 = function (config) {
  var getPublicInstance = config.getPublicInstance;

  var _ReactFiberScheduler = ReactFiberScheduler(config),
      computeAsyncExpiration = _ReactFiberScheduler.computeAsyncExpiration,
      computeExpirationForFiber = _ReactFiberScheduler.computeExpirationForFiber,
      scheduleWork = _ReactFiberScheduler.scheduleWork,
      batchedUpdates = _ReactFiberScheduler.batchedUpdates,
      unbatchedUpdates = _ReactFiberScheduler.unbatchedUpdates,
      flushSync = _ReactFiberScheduler.flushSync,
      deferredUpdates = _ReactFiberScheduler.deferredUpdates;

  function scheduleTopLevelUpdate(current, element, callback) {
    {
      if (ReactDebugCurrentFiber.phase === 'render' && ReactDebugCurrentFiber.current !== null && !didWarnAboutNestedUpdates) {
        didWarnAboutNestedUpdates = true;
        warning(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(ReactDebugCurrentFiber.current) || 'Unknown');
      }
    }

    callback = callback === undefined ? null : callback;
    {
      warning(callback === null || typeof callback === 'function', 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback);
    }

    var expirationTime = void 0;
    // Check if the top-level element is an async wrapper component. If so,
    // treat updates to the root as async. This is a bit weird but lets us
    // avoid a separate `renderAsync` API.
    if (enableAsyncSubtreeAPI && element != null && element.type != null && element.type.prototype != null && element.type.prototype.unstable_isAsyncReactComponent === true) {
      expirationTime = computeAsyncExpiration();
    } else {
      expirationTime = computeExpirationForFiber(current);
    }

    var update = {
      expirationTime: expirationTime,
      partialState: { element: element },
      callback: callback,
      isReplace: false,
      isForced: false,
      nextCallback: null,
      next: null
    };
    insertUpdateIntoFiber(current, update);
    scheduleWork(current, expirationTime);
  }

  function findHostInstance(fiber) {
    var hostFiber = findCurrentHostFiber(fiber);
    if (hostFiber === null) {
      return null;
    }
    return hostFiber.stateNode;
  }

  return {
    createContainer: function (containerInfo, hydrate) {
      return createFiberRoot(containerInfo, hydrate);
    },
    updateContainer: function (element, container, parentComponent, callback) {
      // TODO: If this is a nested container, this won't be the root.
      var current = container.current;

      {
        if (ReactFiberInstrumentation_1.debugTool) {
          if (current.alternate === null) {
            ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
          } else if (element === null) {
            ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
          } else {
            ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
          }
        }
      }

      var context = getContextForSubtree(parentComponent);
      if (container.context === null) {
        container.context = context;
      } else {
        container.pendingContext = context;
      }

      scheduleTopLevelUpdate(current, element, callback);
    },


    batchedUpdates: batchedUpdates,

    unbatchedUpdates: unbatchedUpdates,

    deferredUpdates: deferredUpdates,

    flushSync: flushSync,

    getPublicRootInstance: function (container) {
      var containerFiber = container.current;
      if (!containerFiber.child) {
        return null;
      }
      switch (containerFiber.child.tag) {
        case HostComponent:
          return getPublicInstance(containerFiber.child.stateNode);
        default:
          return containerFiber.child.stateNode;
      }
    },


    findHostInstance: findHostInstance,

    findHostInstanceWithNoPortals: function (fiber) {
      var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
      if (hostFiber === null) {
        return null;
      }
      return hostFiber.stateNode;
    },
    injectIntoDevTools: function (devToolsConfig) {
      var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;

      return injectInternals(_assign({}, devToolsConfig, {
        findHostInstanceByFiber: function (fiber) {
          return findHostInstance(fiber);
        },
        findFiberByHostInstance: function (instance) {
          if (!findFiberByHostInstance) {
            // Might not be implemented by the renderer.
            return null;
          }
          return findFiberByHostInstance(instance);
        }
      }));
    }
  };
};

var ReactFiberReconciler$2 = Object.freeze({
	default: ReactFiberReconciler$1
});

var ReactFiberReconciler$3 = ( ReactFiberReconciler$2 && ReactFiberReconciler$1 ) || ReactFiberReconciler$2;

// TODO: bundle Flow types with the package.



// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var reactReconciler = ReactFiberReconciler$3['default'] ? ReactFiberReconciler$3['default'] : ReactFiberReconciler$3;

function createPortal$1(children, containerInfo,
// TODO: figure out the API for cross-renderer implementation.
implementation) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  return {
    // This tag allow us to uniquely identify this as a React Portal
    $$typeof: REACT_PORTAL_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
}

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.2.0';

// a requestAnimationFrame, storing the time for the start of the frame, then
// scheduling a postMessage which gets scheduled after paint. Within the
// postMessage handler do as much work as possible until time + frame rate.
// By separating the idle call into a separate event tick we ensure that
// layout, paint and other browser work is counted against the available time.
// The frame rate is dynamically adjusted.

{
  if (ExecutionEnvironment.canUseDOM && typeof requestAnimationFrame !== 'function') {
    warning(false, 'React depends on requestAnimationFrame. Make sure that you load a ' + 'polyfill in older browsers. http://fb.me/react-polyfills');
  }
}

var hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

var now = void 0;
if (hasNativePerformanceNow) {
  now = function () {
    return performance.now();
  };
} else {
  now = function () {
    return Date.now();
  };
}

// TODO: There's no way to cancel, because Fiber doesn't atm.
var rIC = void 0;
var cIC = void 0;

if (!ExecutionEnvironment.canUseDOM) {
  rIC = function (frameCallback) {
    return setTimeout(function () {
      frameCallback({
        timeRemaining: function () {
          return Infinity;
        }
      });
    });
  };
  cIC = function (timeoutID) {
    clearTimeout(timeoutID);
  };
} else if (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {
  // Polyfill requestIdleCallback and cancelIdleCallback

  var scheduledRICCallback = null;
  var isIdleScheduled = false;
  var timeoutTime = -1;

  var isAnimationFrameScheduled = false;

  var frameDeadline = 0;
  // We start out assuming that we run at 30fps but then the heuristic tracking
  // will adjust this value to a faster fps if we get more frequent animation
  // frames.
  var previousFrameTime = 33;
  var activeFrameTime = 33;

  var frameDeadlineObject;
  if (hasNativePerformanceNow) {
    frameDeadlineObject = {
      didTimeout: false,
      timeRemaining: function () {
        // We assume that if we have a performance timer that the rAF callback
        // gets a performance timer value. Not sure if this is always true.
        var remaining = frameDeadline - performance.now();
        return remaining > 0 ? remaining : 0;
      }
    };
  } else {
    frameDeadlineObject = {
      didTimeout: false,
      timeRemaining: function () {
        // Fallback to Date.now()
        var remaining = frameDeadline - Date.now();
        return remaining > 0 ? remaining : 0;
      }
    };
  }

  // We use the postMessage trick to defer idle work until after the repaint.
  var messageKey = '__reactIdleCallback$' + Math.random().toString(36).slice(2);
  var idleTick = function (event) {
    if (event.source !== window || event.data !== messageKey) {
      return;
    }

    isIdleScheduled = false;

    var currentTime = now();
    if (frameDeadline - currentTime <= 0) {
      // There's no time left in this idle period. Check if the callback has
      // a timeout and whether it's been exceeded.
      if (timeoutTime !== -1 && timeoutTime <= currentTime) {
        // Exceeded the timeout. Invoke the callback even though there's no
        // time left.
        frameDeadlineObject.didTimeout = true;
      } else {
        // No timeout.
        if (!isAnimationFrameScheduled) {
          // Schedule another animation callback so we retry later.
          isAnimationFrameScheduled = true;
          requestAnimationFrame(animationTick);
        }
        // Exit without invoking the callback.
        return;
      }
    } else {
      // There's still time left in this idle period.
      frameDeadlineObject.didTimeout = false;
    }

    timeoutTime = -1;
    var callback = scheduledRICCallback;
    scheduledRICCallback = null;
    if (callback !== null) {
      callback(frameDeadlineObject);
    }
  };
  // Assumes that we have addEventListener in this environment. Might need
  // something better for old IE.
  window.addEventListener('message', idleTick, false);

  var animationTick = function (rafTime) {
    isAnimationFrameScheduled = false;
    var nextFrameTime = rafTime - frameDeadline + activeFrameTime;
    if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {
      if (nextFrameTime < 8) {
        // Defensive coding. We don't support higher frame rates than 120hz.
        // If we get lower than that, it is probably a bug.
        nextFrameTime = 8;
      }
      // If one frame goes long, then the next one can be short to catch up.
      // If two frames are short in a row, then that's an indication that we
      // actually have a higher frame rate than what we're currently optimizing.
      // We adjust our heuristic dynamically accordingly. For example, if we're
      // running on 120hz display or 90hz VR display.
      // Take the max of the two in case one of them was an anomaly due to
      // missed frame deadlines.
      activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;
    } else {
      previousFrameTime = nextFrameTime;
    }
    frameDeadline = rafTime + activeFrameTime;
    if (!isIdleScheduled) {
      isIdleScheduled = true;
      window.postMessage(messageKey, '*');
    }
  };

  rIC = function (callback, options) {
    // This assumes that we only schedule one callback at a time because that's
    // how Fiber uses it.
    scheduledRICCallback = callback;
    if (options != null && typeof options.timeout === 'number') {
      timeoutTime = now() + options.timeout;
    }
    if (!isAnimationFrameScheduled) {
      // If rAF didn't already schedule one, we need to schedule a frame.
      // TODO: If this rAF doesn't materialize because the browser throttles, we
      // might want to still have setTimeout trigger rIC as a backup to ensure
      // that we keep performing work.
      isAnimationFrameScheduled = true;
      requestAnimationFrame(animationTick);
    }
    return 0;
  };

  cIC = function () {
    scheduledRICCallback = null;
    isIdleScheduled = false;
    timeoutTime = -1;
  };
} else {
  rIC = window.requestIdleCallback;
  cIC = window.cancelIdleCallback;
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

// isAttributeNameSafe() is currently duplicated in DOMMarkupOperations.
// TODO: Find a better place for this.
var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};
function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  {
    warning(false, 'Invalid attribute name: `%s`', attributeName);
  }
  return false;
}

// shouldIgnoreValue() is currently duplicated in DOMMarkupOperations.
// TODO: Find a better place for this.
function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */





/**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */
function getValueForProperty(node, name, expected) {
  {
    var propertyInfo = getPropertyInfo(name);
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod || propertyInfo.mustUseProperty) {
        return node[propertyInfo.propertyName];
      } else {
        var attributeName = propertyInfo.attributeName;

        var stringValue = null;

        if (propertyInfo.hasOverloadedBooleanValue) {
          if (node.hasAttribute(attributeName)) {
            var value = node.getAttribute(attributeName);
            if (value === '') {
              return true;
            }
            if (shouldIgnoreValue(propertyInfo, expected)) {
              return value;
            }
            if (value === '' + expected) {
              return expected;
            }
            return value;
          }
        } else if (node.hasAttribute(attributeName)) {
          if (shouldIgnoreValue(propertyInfo, expected)) {
            // We had an attribute but shouldn't have had one, so read it
            // for the error message.
            return node.getAttribute(attributeName);
          }
          if (propertyInfo.hasBooleanValue) {
            // If this was a boolean, it doesn't matter what the value is
            // the fact that we have it is the same as the expected.
            return expected;
          }
          // Even if this property uses a namespace we use getAttribute
          // because we assume its namespaced name is the same as our config.
          // To use getAttributeNS we need the local name which we don't have
          // in our config atm.
          stringValue = node.getAttribute(attributeName);
        }

        if (shouldIgnoreValue(propertyInfo, expected)) {
          return stringValue === null ? expected : stringValue;
        } else if (stringValue === '' + expected) {
          return expected;
        } else {
          return stringValue;
        }
      }
    }
  }
}

/**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */
function getValueForAttribute(node, name, expected) {
  {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (!node.hasAttribute(name)) {
      return expected === undefined ? undefined : null;
    }
    var value = node.getAttribute(name);
    if (value === '' + expected) {
      return expected;
    }
    return value;
  }
}

/**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */
function setValueForProperty(node, name, value) {
  var propertyInfo = getPropertyInfo(name);

  if (propertyInfo && shouldSetAttribute(name, value)) {
    var mutationMethod = propertyInfo.mutationMethod;
    if (mutationMethod) {
      mutationMethod(node, value);
    } else if (shouldIgnoreValue(propertyInfo, value)) {
      deleteValueForProperty(node, name);
      return;
    } else if (propertyInfo.mustUseProperty) {
      // Contrary to `setAttribute`, object properties are properly
      // `toString`ed by IE8/9.
      node[propertyInfo.propertyName] = value;
    } else {
      var attributeName = propertyInfo.attributeName;
      var namespace = propertyInfo.attributeNamespace;
      // `setAttribute` with objects becomes only `[object]` in IE8/9,
      // ('' + value) makes it output the correct toString()-value.
      if (namespace) {
        node.setAttributeNS(namespace, attributeName, '' + value);
      } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        node.setAttribute(attributeName, '');
      } else {
        node.setAttribute(attributeName, '' + value);
      }
    }
  } else {
    setValueForAttribute(node, name, shouldSetAttribute(name, value) ? value : null);
    return;
  }

  {
    
  }
}

function setValueForAttribute(node, name, value) {
  if (!isAttributeNameSafe(name)) {
    return;
  }
  if (value == null) {
    node.removeAttribute(name);
  } else {
    node.setAttribute(name, '' + value);
  }

  {
    
  }
}

/**
 * Deletes an attributes from a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 */
function deleteValueForAttribute(node, name) {
  node.removeAttribute(name);
}

/**
 * Deletes the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 */
function deleteValueForProperty(node, name) {
  var propertyInfo = getPropertyInfo(name);
  if (propertyInfo) {
    var mutationMethod = propertyInfo.mutationMethod;
    if (mutationMethod) {
      mutationMethod(node, undefined);
    } else if (propertyInfo.mustUseProperty) {
      var propName = propertyInfo.propertyName;
      if (propertyInfo.hasBooleanValue) {
        node[propName] = false;
      } else {
        node[propName] = '';
      }
    } else {
      node.removeAttribute(propertyInfo.attributeName);
    }
  } else {
    node.removeAttribute(name);
  }
}

var ReactControlledValuePropTypes = {
  checkPropTypes: null
};

{
  var hasReadOnlyValue = {
    button: true,
    checkbox: true,
    image: true,
    hidden: true,
    radio: true,
    reset: true,
    submit: true
  };

  var propTypes = {
    value: function (props, propName, componentName) {
      if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
        return null;
      }
      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    },
    checked: function (props, propName, componentName) {
      if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
        return null;
      }
      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }
  };

  /**
   * Provide a linked `value` attribute for controlled forms. You should not use
   * this outside of the ReactDOM controlled form components.
   */
  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props, getStack) {
    checkPropTypes(propTypes, props, 'prop', tagName, getStack);
  };
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName$2 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum$3 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */

function getHostProps(element, props) {
  var node = element;
  var value = props.value;
  var checked = props.checked;

  var hostProps = _assign({
    // Make sure we set .type before any other properties (setting .value
    // before .type means .value is lost in IE11 and below)
    type: undefined,
    // Make sure we set .step before .value (setting .value before .step
    // means .value is rounded on mount, based upon step precision)
    step: undefined,
    // Make sure we set .min & .max before .value (to ensure proper order
    // in corner cases such as min or max deriving from value, e.g. Issue #7170)
    min: undefined,
    max: undefined
  }, props, {
    defaultChecked: undefined,
    defaultValue: undefined,
    value: value != null ? value : node._wrapperState.initialValue,
    checked: checked != null ? checked : node._wrapperState.initialChecked
  });

  return hostProps;
}

function initWrapperState(element, props) {
  {
    ReactControlledValuePropTypes.checkPropTypes('input', props, getCurrentFiberStackAddendum$3);

    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
      warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName$2() || 'A component', props.type);
      didWarnCheckedDefaultChecked = true;
    }
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName$2() || 'A component', props.type);
      didWarnValueDefaultValue = true;
    }
  }

  var defaultValue = props.defaultValue;
  var node = element;
  node._wrapperState = {
    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
    initialValue: props.value != null ? props.value : defaultValue,
    controlled: isControlled(props)
  };
}

function updateChecked(element, props) {
  var node = element;
  var checked = props.checked;
  if (checked != null) {
    setValueForProperty(node, 'checked', checked);
  }
}

function updateWrapper(element, props) {
  var node = element;
  {
    var controlled = isControlled(props);

    if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
      warning(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum$3());
      didWarnUncontrolledToControlled = true;
    }
    if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
      warning(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum$3());
      didWarnControlledToUncontrolled = true;
    }
  }

  updateChecked(element, props);

  var value = props.value;
  if (value != null) {
    if (value === 0 && node.value === '') {
      node.value = '0';
      // Note: IE9 reports a number inputs as 'text', so check props instead.
    } else if (props.type === 'number') {
      // Simulate `input.valueAsNumber`. IE9 does not support it
      var valueAsNumber = parseFloat(node.value) || 0;

      if (
      // eslint-disable-next-line
      value != valueAsNumber ||
      // eslint-disable-next-line
      value == valueAsNumber && node.value != value) {
        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        node.value = '' + value;
      }
    } else if (node.value !== '' + value) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      node.value = '' + value;
    }
  } else {
    if (props.value == null && props.defaultValue != null) {
      // In Chrome, assigning defaultValue to certain input types triggers input validation.
      // For number inputs, the display value loses trailing decimal points. For email inputs,
      // Chrome raises "The specified value <x> is not a valid email address".
      //
      // Here we check to see if the defaultValue has actually changed, avoiding these problems
      // when the user is inputting text
      //
      // https://github.com/facebook/react/issues/7253
      if (node.defaultValue !== '' + props.defaultValue) {
        node.defaultValue = '' + props.defaultValue;
      }
    }
    if (props.checked == null && props.defaultChecked != null) {
      node.defaultChecked = !!props.defaultChecked;
    }
  }
}

function postMountWrapper(element, props) {
  var node = element;

  // Detach value from defaultValue. We won't do anything if we're working on
  // submit or reset inputs as those values & defaultValues are linked. They
  // are not resetable nodes so this operation doesn't matter and actually
  // removes browser-default values (eg "Submit Query") when no value is
  // provided.

  switch (props.type) {
    case 'submit':
    case 'reset':
      break;
    case 'color':
    case 'date':
    case 'datetime':
    case 'datetime-local':
    case 'month':
    case 'time':
    case 'week':
      // This fixes the no-show issue on iOS Safari and Android Chrome:
      // https://github.com/facebook/react/issues/7233
      node.value = '';
      node.value = node.defaultValue;
      break;
    default:
      node.value = node.value;
      break;
  }

  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
  // this is needed to work around a chrome bug where setting defaultChecked
  // will sometimes influence the value of checked (even after detachment).
  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
  // We need to temporarily unset name to avoid disrupting radio button groups.
  var name = node.name;
  if (name !== '') {
    node.name = '';
  }
  node.defaultChecked = !node.defaultChecked;
  node.defaultChecked = !node.defaultChecked;
  if (name !== '') {
    node.name = name;
  }
}

function restoreControlledState$1(element, props) {
  var node = element;
  updateWrapper(node, props);
  updateNamedCousins(node, props);
}

function updateNamedCousins(rootNode, props) {
  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form. It might not even be in the
    // document. Let's just use the local `querySelectorAll` to ensure we don't
    // miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
      !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0;

      // We need update the tracked value on the named cousin since the value
      // was changed but the input saw no event or value set
      updateValueIfChanged(otherNode);

      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      updateWrapper(otherNode, otherProps);
    }
  }
}

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  // We can silently skip them because invalid DOM nesting warning
  // catches these cases in Fiber.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */

function validateProps(element, props) {
  // TODO (yungsters): Remove support for `selected` in <option>.
  {
    warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
  }
}

function postMountWrapper$1(element, props) {
  // value="" should make a value attribute (#6219)
  if (props.value != null) {
    element.setAttribute('value', props.value);
  }
}

function getHostProps$1(element, props) {
  var hostProps = _assign({ children: undefined }, props);
  var content = flattenChildren(props.children);

  if (content) {
    hostProps.children = content;
  }

  return hostProps;
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName$3 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum$4 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


{
  var didWarnValueDefaultValue$1 = false;
}

function getDeclarationErrorAddendum() {
  var ownerName = getCurrentFiberOwnerName$3();
  if (ownerName) {
    return '\n\nCheck the render method of `' + ownerName + '`.';
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 */
function checkSelectPropTypes(props) {
  ReactControlledValuePropTypes.checkPropTypes('select', props, getCurrentFiberStackAddendum$4);

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
    } else if (!props.multiple && isArray) {
      warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
    }
  }
}

function updateOptions(node, multiple, propValue, setDefaultSelected) {
  var options = node.options;

  if (multiple) {
    var selectedValues = propValue;
    var selectedValue = {};
    for (var i = 0; i < selectedValues.length; i++) {
      // Prefix to avoid chaos with special keys.
      selectedValue['$' + selectedValues[i]] = true;
    }
    for (var _i = 0; _i < options.length; _i++) {
      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
      if (options[_i].selected !== selected) {
        options[_i].selected = selected;
      }
      if (selected && setDefaultSelected) {
        options[_i].defaultSelected = true;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    var _selectedValue = '' + propValue;
    var defaultSelected = null;
    for (var _i2 = 0; _i2 < options.length; _i2++) {
      if (options[_i2].value === _selectedValue) {
        options[_i2].selected = true;
        if (setDefaultSelected) {
          options[_i2].defaultSelected = true;
        }
        return;
      }
      if (defaultSelected === null && !options[_i2].disabled) {
        defaultSelected = options[_i2];
      }
    }
    if (defaultSelected !== null) {
      defaultSelected.selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */

function getHostProps$2(element, props) {
  return _assign({}, props, {
    value: undefined
  });
}

function initWrapperState$1(element, props) {
  var node = element;
  {
    checkSelectPropTypes(props);
  }

  var value = props.value;
  node._wrapperState = {
    initialValue: value != null ? value : props.defaultValue,
    wasMultiple: !!props.multiple
  };

  {
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
      warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
      didWarnValueDefaultValue$1 = true;
    }
  }
}

function postMountWrapper$2(element, props) {
  var node = element;
  node.multiple = !!props.multiple;
  var value = props.value;
  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (props.defaultValue != null) {
    updateOptions(node, !!props.multiple, props.defaultValue, true);
  }
}

function postUpdateWrapper(element, props) {
  var node = element;
  // After the initial mount, we control selected-ness manually so don't pass
  // this value down
  node._wrapperState.initialValue = undefined;

  var wasMultiple = node._wrapperState.wasMultiple;
  node._wrapperState.wasMultiple = !!props.multiple;

  var value = props.value;
  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (wasMultiple !== !!props.multiple) {
    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
    if (props.defaultValue != null) {
      updateOptions(node, !!props.multiple, props.defaultValue, true);
    } else {
      // Revert the select back to its default unselected state.
      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
    }
  }
}

function restoreControlledState$2(element, props) {
  var node = element;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  }
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberStackAddendum$5 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnValDefaultVal = false;

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */

function getHostProps$3(element, props) {
  var node = element;
  !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0;

  // Always set children to the same thing. In IE9, the selection range will
  // get reset if `textContent` is mutated.  We could add a check in setTextContent
  // to only set the value if/when the value differs from the node value (which would
  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
  // solution. The value can be a boolean or object so that's why it's forced
  // to be a string.
  var hostProps = _assign({}, props, {
    value: undefined,
    defaultValue: undefined,
    children: '' + node._wrapperState.initialValue
  });

  return hostProps;
}

function initWrapperState$2(element, props) {
  var node = element;
  {
    ReactControlledValuePropTypes.checkPropTypes('textarea', props, getCurrentFiberStackAddendum$5);
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
      warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
      didWarnValDefaultVal = true;
    }
  }

  var initialValue = props.value;

  // Only bother fetching default value if we're going to use it
  if (initialValue == null) {
    var defaultValue = props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = props.children;
    if (children != null) {
      {
        warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
      }
      !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;
      if (Array.isArray(children)) {
        !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;
        children = children[0];
      }

      defaultValue = '' + children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    initialValue = defaultValue;
  }

  node._wrapperState = {
    initialValue: '' + initialValue
  };
}

function updateWrapper$1(element, props) {
  var node = element;
  var value = props.value;
  if (value != null) {
    // Cast `value` to a string to ensure the value is set correctly. While
    // browsers typically do this as necessary, jsdom doesn't.
    var newValue = '' + value;

    // To avoid side effects (such as losing text selection), only set value if changed
    if (newValue !== node.value) {
      node.value = newValue;
    }
    if (props.defaultValue == null) {
      node.defaultValue = newValue;
    }
  }
  if (props.defaultValue != null) {
    node.defaultValue = props.defaultValue;
  }
}

function postMountWrapper$3(element, props) {
  var node = element;
  // This is in postMount because we need access to the DOM node, which is not
  // available until after the component has mounted.
  var textContent = node.textContent;

  // Only set node.value if textContent is equal to the expected
  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
  // will populate textContent as well.
  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
  if (textContent === node._wrapperState.initialValue) {
    node.value = textContent;
  }
}

function restoreControlledState$3(element, props) {
  // DOM component is still mounted; update
  updateWrapper$1(element, props);
}

var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';

var Namespaces = {
  html: HTML_NAMESPACE$1,
  mathml: MATH_NAMESPACE,
  svg: SVG_NAMESPACE
};

// Assumes there is no parent namespace.
function getIntrinsicNamespace(type) {
  switch (type) {
    case 'svg':
      return SVG_NAMESPACE;
    case 'math':
      return MATH_NAMESPACE;
    default:
      return HTML_NAMESPACE$1;
  }
}

function getChildNamespace(parentNamespace, type) {
  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
    // No (or default) parent namespace: potential entry point.
    return getIntrinsicNamespace(type);
  }
  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
    // We're leaving SVG.
    return HTML_NAMESPACE$1;
  }
  // By default, pass namespace below.
  return parentNamespace;
}

/* globals MSApp */

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */
var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer = void 0;

/**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node

  if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (node.firstChild) {
      node.removeChild(node.firstChild);
    }
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  return ('' + value).trim();
}

var warnValidStyle = emptyFunction;

{
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;
  var warnedForInfinityValue = false;

  var warnHyphenatedStyleName = function (name, getStack) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), getStack());
  };

  var warnBadVendoredStyleName = function (name, getStack) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), getStack());
  };

  var warnStyleValueWithSemicolon = function (name, value, getStack) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    warning(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.%s', name, value.replace(badStyleValueWithSemicolonPattern, ''), getStack());
  };

  var warnStyleValueIsNaN = function (name, value, getStack) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, getStack());
  };

  var warnStyleValueIsInfinity = function (name, value, getStack) {
    if (warnedForInfinityValue) {
      return;
    }

    warnedForInfinityValue = true;
    warning(false, '`Infinity` is an invalid value for the `%s` css style property.%s', name, getStack());
  };

  warnValidStyle = function (name, value, getStack) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, getStack);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, getStack);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, getStack);
    }

    if (typeof value === 'number') {
      if (isNaN(value)) {
        warnStyleValueIsNaN(name, value, getStack);
      } else if (!isFinite(value)) {
        warnStyleValueIsInfinity(name, value, getStack);
      }
    }
  };
}

var warnValidStyle$1 = warnValidStyle;

/**
 * Operations for dealing with CSS properties.
 */

/**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */
function createDangerousStringForStyles(styles) {
  {
    var serialized = '';
    var delimiter = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (styleValue != null) {
        var isCustomProperty = styleName.indexOf('--') === 0;
        serialized += delimiter + hyphenateStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);

        delimiter = ';';
      }
    }
    return serialized || null;
  }
}

/**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */
function setValueForStyles(node, styles, getStack) {
  var style = node.style;
  for (var styleName in styles) {
    if (!styles.hasOwnProperty(styleName)) {
      continue;
    }
    var isCustomProperty = styleName.indexOf('--') === 0;
    {
      if (!isCustomProperty) {
        warnValidStyle$1(styleName, styles[styleName], getStack);
      }
    }
    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
    if (styleName === 'float') {
      styleName = 'cssFloat';
    }
    if (isCustomProperty) {
      style.setProperty(styleName, styleValue);
    } else {
      style[styleName] = styleValue;
    }
  }
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

var HTML$1 = '__html';

function assertValidProps(tag, props, getStack) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, getStack()) : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;
  }
  {
    warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.%s', getStack());
  }
  !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getStack()) : void 0;
}

function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return typeof props.is === 'string';
  }
  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this whitelist too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;
    default:
      return true;
  }
}

var ariaProperties = {
  'aria-current': 0, // state
  'aria-details': 0,
  'aria-disabled': 0, // state
  'aria-hidden': 0, // state
  'aria-invalid': 0, // state
  'aria-keyshortcuts': 0,
  'aria-label': 0,
  'aria-roledescription': 0,
  // Widget Attributes
  'aria-autocomplete': 0,
  'aria-checked': 0,
  'aria-expanded': 0,
  'aria-haspopup': 0,
  'aria-level': 0,
  'aria-modal': 0,
  'aria-multiline': 0,
  'aria-multiselectable': 0,
  'aria-orientation': 0,
  'aria-placeholder': 0,
  'aria-pressed': 0,
  'aria-readonly': 0,
  'aria-required': 0,
  'aria-selected': 0,
  'aria-sort': 0,
  'aria-valuemax': 0,
  'aria-valuemin': 0,
  'aria-valuenow': 0,
  'aria-valuetext': 0,
  // Live Region Attributes
  'aria-atomic': 0,
  'aria-busy': 0,
  'aria-live': 0,
  'aria-relevant': 0,
  // Drag-and-Drop Attributes
  'aria-dropeffect': 0,
  'aria-grabbed': 0,
  // Relationship Attributes
  'aria-activedescendant': 0,
  'aria-colcount': 0,
  'aria-colindex': 0,
  'aria-colspan': 0,
  'aria-controls': 0,
  'aria-describedby': 0,
  'aria-errormessage': 0,
  'aria-flowto': 0,
  'aria-labelledby': 0,
  'aria-owns': 0,
  'aria-posinset': 0,
  'aria-rowcount': 0,
  'aria-rowindex': 0,
  'aria-rowspan': 0,
  'aria-setsize': 0
};

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

var hasOwnProperty = Object.prototype.hasOwnProperty;

function getStackAddendum() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

function validateProperty(tagName, name) {
  if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
    return true;
  }

  if (rARIACamel.test(name)) {
    var ariaName = 'aria-' + name.slice(4).toLowerCase();
    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (correctName == null) {
      warning(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.%s', name, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== correctName) {
      warning(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?%s', name, correctName, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      warning(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(type, props) {
  var invalidProps = [];

  for (var key in props) {
    var isValid = validateProperty(type, key);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
  } else if (invalidProps.length > 1) {
    warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
  }
}

function validateProperties(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }
  warnInvalidARIAProps(type, props);
}

var didWarnValueNull = false;

function getStackAddendum$1() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

function validateProperties$1(type, props) {
  if (type !== 'input' && type !== 'textarea' && type !== 'select') {
    return;
  }

  if (props != null && props.value === null && !didWarnValueNull) {
    didWarnValueNull = true;
    if (type === 'select' && props.multiple) {
      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.%s', type, getStackAddendum$1());
    } else {
      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', type, getStackAddendum$1());
    }
  }
}

// When adding attributes to the HTML or SVG whitelist, be sure to
// also add them to this module to ensure casing and incorrect name
// warnings.
var possibleStandardNames = {
  // HTML
  accept: 'accept',
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  action: 'action',
  allowfullscreen: 'allowFullScreen',
  alt: 'alt',
  as: 'as',
  async: 'async',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  capture: 'capture',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  challenge: 'challenge',
  charset: 'charSet',
  checked: 'checked',
  children: 'children',
  cite: 'cite',
  'class': 'className',
  classid: 'classID',
  classname: 'className',
  cols: 'cols',
  colspan: 'colSpan',
  content: 'content',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controls: 'controls',
  controlslist: 'controlsList',
  coords: 'coords',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  data: 'data',
  datetime: 'dateTime',
  'default': 'default',
  defaultchecked: 'defaultChecked',
  defaultvalue: 'defaultValue',
  defer: 'defer',
  dir: 'dir',
  disabled: 'disabled',
  download: 'download',
  draggable: 'draggable',
  enctype: 'encType',
  'for': 'htmlFor',
  form: 'form',
  formmethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  headers: 'headers',
  height: 'height',
  hidden: 'hidden',
  high: 'high',
  href: 'href',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  icon: 'icon',
  id: 'id',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  integrity: 'integrity',
  is: 'is',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  kind: 'kind',
  label: 'label',
  lang: 'lang',
  list: 'list',
  loop: 'loop',
  low: 'low',
  manifest: 'manifest',
  marginwidth: 'marginWidth',
  marginheight: 'marginHeight',
  max: 'max',
  maxlength: 'maxLength',
  media: 'media',
  mediagroup: 'mediaGroup',
  method: 'method',
  min: 'min',
  minlength: 'minLength',
  multiple: 'multiple',
  muted: 'muted',
  name: 'name',
  nonce: 'nonce',
  novalidate: 'noValidate',
  open: 'open',
  optimum: 'optimum',
  pattern: 'pattern',
  placeholder: 'placeholder',
  playsinline: 'playsInline',
  poster: 'poster',
  preload: 'preload',
  profile: 'profile',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rel: 'rel',
  required: 'required',
  reversed: 'reversed',
  role: 'role',
  rows: 'rows',
  rowspan: 'rowSpan',
  sandbox: 'sandbox',
  scope: 'scope',
  scoped: 'scoped',
  scrolling: 'scrolling',
  seamless: 'seamless',
  selected: 'selected',
  shape: 'shape',
  size: 'size',
  sizes: 'sizes',
  span: 'span',
  spellcheck: 'spellCheck',
  src: 'src',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  start: 'start',
  step: 'step',
  style: 'style',
  summary: 'summary',
  tabindex: 'tabIndex',
  target: 'target',
  title: 'title',
  type: 'type',
  usemap: 'useMap',
  value: 'value',
  width: 'width',
  wmode: 'wmode',
  wrap: 'wrap',

  // SVG
  about: 'about',
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  accumulate: 'accumulate',
  additive: 'additive',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  alphabetic: 'alphabetic',
  amplitude: 'amplitude',
  arabicform: 'arabicForm',
  'arabic-form': 'arabicForm',
  ascent: 'ascent',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  azimuth: 'azimuth',
  basefrequency: 'baseFrequency',
  baselineshift: 'baselineShift',
  'baseline-shift': 'baselineShift',
  baseprofile: 'baseProfile',
  bbox: 'bbox',
  begin: 'begin',
  bias: 'bias',
  by: 'by',
  calcmode: 'calcMode',
  capheight: 'capHeight',
  'cap-height': 'capHeight',
  clip: 'clip',
  clippath: 'clipPath',
  'clip-path': 'clipPath',
  clippathunits: 'clipPathUnits',
  cliprule: 'clipRule',
  'clip-rule': 'clipRule',
  color: 'color',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation': 'colorInterpolation',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorprofile: 'colorProfile',
  'color-profile': 'colorProfile',
  colorrendering: 'colorRendering',
  'color-rendering': 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  cursor: 'cursor',
  cx: 'cx',
  cy: 'cy',
  d: 'd',
  datatype: 'datatype',
  decelerate: 'decelerate',
  descent: 'descent',
  diffuseconstant: 'diffuseConstant',
  direction: 'direction',
  display: 'display',
  divisor: 'divisor',
  dominantbaseline: 'dominantBaseline',
  'dominant-baseline': 'dominantBaseline',
  dur: 'dur',
  dx: 'dx',
  dy: 'dy',
  edgemode: 'edgeMode',
  elevation: 'elevation',
  enablebackground: 'enableBackground',
  'enable-background': 'enableBackground',
  end: 'end',
  exponent: 'exponent',
  externalresourcesrequired: 'externalResourcesRequired',
  fill: 'fill',
  fillopacity: 'fillOpacity',
  'fill-opacity': 'fillOpacity',
  fillrule: 'fillRule',
  'fill-rule': 'fillRule',
  filter: 'filter',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodopacity: 'floodOpacity',
  'flood-opacity': 'floodOpacity',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  focusable: 'focusable',
  fontfamily: 'fontFamily',
  'font-family': 'fontFamily',
  fontsize: 'fontSize',
  'font-size': 'fontSize',
  fontsizeadjust: 'fontSizeAdjust',
  'font-size-adjust': 'fontSizeAdjust',
  fontstretch: 'fontStretch',
  'font-stretch': 'fontStretch',
  fontstyle: 'fontStyle',
  'font-style': 'fontStyle',
  fontvariant: 'fontVariant',
  'font-variant': 'fontVariant',
  fontweight: 'fontWeight',
  'font-weight': 'fontWeight',
  format: 'format',
  from: 'from',
  fx: 'fx',
  fy: 'fy',
  g1: 'g1',
  g2: 'g2',
  glyphname: 'glyphName',
  'glyph-name': 'glyphName',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationvertical: 'glyphOrientationVertical',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  hanging: 'hanging',
  horizadvx: 'horizAdvX',
  'horiz-adv-x': 'horizAdvX',
  horizoriginx: 'horizOriginX',
  'horiz-origin-x': 'horizOriginX',
  ideographic: 'ideographic',
  imagerendering: 'imageRendering',
  'image-rendering': 'imageRendering',
  in2: 'in2',
  'in': 'in',
  inlist: 'inlist',
  intercept: 'intercept',
  k1: 'k1',
  k2: 'k2',
  k3: 'k3',
  k4: 'k4',
  k: 'k',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  kerning: 'kerning',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  letterspacing: 'letterSpacing',
  'letter-spacing': 'letterSpacing',
  lightingcolor: 'lightingColor',
  'lighting-color': 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  local: 'local',
  markerend: 'markerEnd',
  'marker-end': 'markerEnd',
  markerheight: 'markerHeight',
  markermid: 'markerMid',
  'marker-mid': 'markerMid',
  markerstart: 'markerStart',
  'marker-start': 'markerStart',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  mask: 'mask',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  mathematical: 'mathematical',
  mode: 'mode',
  numoctaves: 'numOctaves',
  offset: 'offset',
  opacity: 'opacity',
  operator: 'operator',
  order: 'order',
  orient: 'orient',
  orientation: 'orientation',
  origin: 'origin',
  overflow: 'overflow',
  overlineposition: 'overlinePosition',
  'overline-position': 'overlinePosition',
  overlinethickness: 'overlineThickness',
  'overline-thickness': 'overlineThickness',
  paintorder: 'paintOrder',
  'paint-order': 'paintOrder',
  panose1: 'panose1',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointerevents: 'pointerEvents',
  'pointer-events': 'pointerEvents',
  points: 'points',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  prefix: 'prefix',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  property: 'property',
  r: 'r',
  radius: 'radius',
  refx: 'refX',
  refy: 'refY',
  renderingintent: 'renderingIntent',
  'rendering-intent': 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  resource: 'resource',
  restart: 'restart',
  result: 'result',
  results: 'results',
  rotate: 'rotate',
  rx: 'rx',
  ry: 'ry',
  scale: 'scale',
  security: 'security',
  seed: 'seed',
  shaperendering: 'shapeRendering',
  'shape-rendering': 'shapeRendering',
  slope: 'slope',
  spacing: 'spacing',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  speed: 'speed',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stemh: 'stemh',
  stemv: 'stemv',
  stitchtiles: 'stitchTiles',
  stopcolor: 'stopColor',
  'stop-color': 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  strikethroughposition: 'strikethroughPosition',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  string: 'string',
  stroke: 'stroke',
  strokedasharray: 'strokeDasharray',
  'stroke-dasharray': 'strokeDasharray',
  strokedashoffset: 'strokeDashoffset',
  'stroke-dashoffset': 'strokeDashoffset',
  strokelinecap: 'strokeLinecap',
  'stroke-linecap': 'strokeLinecap',
  strokelinejoin: 'strokeLinejoin',
  'stroke-linejoin': 'strokeLinejoin',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokewidth: 'strokeWidth',
  'stroke-width': 'strokeWidth',
  strokeopacity: 'strokeOpacity',
  'stroke-opacity': 'strokeOpacity',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  suppresshydrationwarning: 'suppressHydrationWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textanchor: 'textAnchor',
  'text-anchor': 'textAnchor',
  textdecoration: 'textDecoration',
  'text-decoration': 'textDecoration',
  textlength: 'textLength',
  textrendering: 'textRendering',
  'text-rendering': 'textRendering',
  to: 'to',
  transform: 'transform',
  'typeof': 'typeof',
  u1: 'u1',
  u2: 'u2',
  underlineposition: 'underlinePosition',
  'underline-position': 'underlinePosition',
  underlinethickness: 'underlineThickness',
  'underline-thickness': 'underlineThickness',
  unicode: 'unicode',
  unicodebidi: 'unicodeBidi',
  'unicode-bidi': 'unicodeBidi',
  unicoderange: 'unicodeRange',
  'unicode-range': 'unicodeRange',
  unitsperem: 'unitsPerEm',
  'units-per-em': 'unitsPerEm',
  unselectable: 'unselectable',
  valphabetic: 'vAlphabetic',
  'v-alphabetic': 'vAlphabetic',
  values: 'values',
  vectoreffect: 'vectorEffect',
  'vector-effect': 'vectorEffect',
  version: 'version',
  vertadvy: 'vertAdvY',
  'vert-adv-y': 'vertAdvY',
  vertoriginx: 'vertOriginX',
  'vert-origin-x': 'vertOriginX',
  vertoriginy: 'vertOriginY',
  'vert-origin-y': 'vertOriginY',
  vhanging: 'vHanging',
  'v-hanging': 'vHanging',
  videographic: 'vIdeographic',
  'v-ideographic': 'vIdeographic',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  visibility: 'visibility',
  vmathematical: 'vMathematical',
  'v-mathematical': 'vMathematical',
  vocab: 'vocab',
  widths: 'widths',
  wordspacing: 'wordSpacing',
  'word-spacing': 'wordSpacing',
  writingmode: 'writingMode',
  'writing-mode': 'writingMode',
  x1: 'x1',
  x2: 'x2',
  x: 'x',
  xchannelselector: 'xChannelSelector',
  xheight: 'xHeight',
  'x-height': 'xHeight',
  xlinkactuate: 'xlinkActuate',
  'xlink:actuate': 'xlinkActuate',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkhref: 'xlinkHref',
  'xlink:href': 'xlinkHref',
  xlinkrole: 'xlinkRole',
  'xlink:role': 'xlinkRole',
  xlinkshow: 'xlinkShow',
  'xlink:show': 'xlinkShow',
  xlinktitle: 'xlinkTitle',
  'xlink:title': 'xlinkTitle',
  xlinktype: 'xlinkType',
  'xlink:type': 'xlinkType',
  xmlbase: 'xmlBase',
  'xml:base': 'xmlBase',
  xmllang: 'xmlLang',
  'xml:lang': 'xmlLang',
  xmlns: 'xmlns',
  'xml:space': 'xmlSpace',
  xmlnsxlink: 'xmlnsXlink',
  'xmlns:xlink': 'xmlnsXlink',
  xmlspace: 'xmlSpace',
  y1: 'y1',
  y2: 'y2',
  y: 'y',
  ychannelselector: 'yChannelSelector',
  z: 'z',
  zoomandpan: 'zoomAndPan'
};

function getStackAddendum$2() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

{
  var warnedProperties$1 = {};
  var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
  var EVENT_NAME_REGEX = /^on./;
  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

  var validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
    if (hasOwnProperty$1.call(warnedProperties$1, name) && warnedProperties$1[name]) {
      return true;
    }

    var lowerCasedName = name.toLowerCase();
    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
      warning(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
      warnedProperties$1[name] = true;
      return true;
    }

    // We can't rely on the event system being injected on the server.
    if (canUseEventSystem) {
      if (registrationNameModules.hasOwnProperty(name)) {
        return true;
      }
      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
      if (registrationName != null) {
        warning(false, 'Invalid event handler property `%s`. Did you mean `%s`?%s', name, registrationName, getStackAddendum$2());
        warnedProperties$1[name] = true;
        return true;
      }
      if (EVENT_NAME_REGEX.test(name)) {
        warning(false, 'Unknown event handler property `%s`. It will be ignored.%s', name, getStackAddendum$2());
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (EVENT_NAME_REGEX.test(name)) {
      // If no event plugins have been injected, we are in a server environment.
      // So we can't tell if the event name is correct for sure, but we can filter
      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
      if (INVALID_EVENT_NAME_REGEX.test(name)) {
        warning(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.%s', name, getStackAddendum$2());
      }
      warnedProperties$1[name] = true;
      return true;
    }

    // Let the ARIA attribute hook validate ARIA attributes
    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
      return true;
    }

    if (lowerCasedName === 'innerhtml') {
      warning(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'aria') {
      warning(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
      warning(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.%s', typeof value, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'number' && isNaN(value)) {
      warning(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.%s', name, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    var isReserved = isReservedProp(name);

    // Known attributes should match the casing specified in the property config.
    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      var standardName = possibleStandardNames[lowerCasedName];
      if (standardName !== name) {
        warning(false, 'Invalid DOM property `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum$2());
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (!isReserved && name !== lowerCasedName) {
      // Unknown attributes should have lowercase casing since that's how they
      // will be cased anyway with server rendering.
      warning(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.%s', name, lowerCasedName, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'boolean' && !shouldAttributeAcceptBooleanValue(name)) {
      if (value) {
        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.%s', value, name, name, value, name, getStackAddendum$2());
      } else {
        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', value, name, name, value, name, name, name, getStackAddendum$2());
      }
      warnedProperties$1[name] = true;
      return true;
    }

    // Now that we've validated casing, do not validate
    // data types for reserved props
    if (isReserved) {
      return true;
    }

    // Warn when a known attribute is a bad type
    if (!shouldSetAttribute(name, value)) {
      warnedProperties$1[name] = true;
      return false;
    }

    return true;
  };
}

var warnUnknownProperties = function (type, props, canUseEventSystem) {
  var unknownProps = [];
  for (var key in props) {
    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');
  if (unknownProps.length === 1) {
    warning(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
  } else if (unknownProps.length > 1) {
    warning(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
  }
};

function validateProperties$2(type, props, canUseEventSystem) {
  if (isCustomComponent(type, props)) {
    return;
  }
  warnUnknownProperties(type, props, canUseEventSystem);
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName$1 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum$2 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnInvalidHydration = false;
var didWarnShadyDOM = false;

var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
var AUTOFOCUS = 'autoFocus';
var CHILDREN = 'children';
var STYLE = 'style';
var HTML = '__html';

var HTML_NAMESPACE = Namespaces.html;


var getStack = emptyFunction.thatReturns('');

{
  getStack = getCurrentFiberStackAddendum$2;

  var warnedUnknownTags = {
    // Chrome is the only major browser not shipping <time>. But as of July
    // 2017 it intends to ship it due to widespread usage. We intentionally
    // *don't* warn for <time> even if it's unrecognized by Chrome because
    // it soon will be, and many apps have been using it anyway.
    time: true,
    // There are working polyfills for <dialog>. Let people use it.
    dialog: true
  };

  var validatePropertiesInDevelopment = function (type, props) {
    validateProperties(type, props);
    validateProperties$1(type, props);
    validateProperties$2(type, props, /* canUseEventSystem */true);
  };

  // HTML parsing normalizes CR and CRLF to LF.
  // It also can turn \u0000 into \uFFFD inside attributes.
  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
  // If we have a mismatch, it might be caused by that.
  // We will still patch up in this case but not fire the warning.
  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

  var normalizeMarkupForTextOrAttribute = function (markup) {
    var markupString = typeof markup === 'string' ? markup : '' + markup;
    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
  };

  var warnForTextDifference = function (serverText, clientText) {
    if (didWarnInvalidHydration) {
      return;
    }
    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
    if (normalizedServerText === normalizedClientText) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
  };

  var warnForPropDifference = function (propName, serverValue, clientValue) {
    if (didWarnInvalidHydration) {
      return;
    }
    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
    if (normalizedServerValue === normalizedClientValue) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
  };

  var warnForExtraAttributes = function (attributeNames) {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    var names = [];
    attributeNames.forEach(function (name) {
      names.push(name);
    });
    warning(false, 'Extra attributes from the server: %s', names);
  };

  var warnForInvalidEventListener = function (registrationName, listener) {
    if (listener === false) {
      warning(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', registrationName, registrationName, registrationName, getCurrentFiberStackAddendum$2());
    } else {
      warning(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.%s', registrationName, typeof listener, getCurrentFiberStackAddendum$2());
    }
  };

  // Parse the HTML and read it back to normalize the HTML string so that it
  // can be used for comparison.
  var normalizeHTML = function (parent, html) {
    // We could have created a separate document here to avoid
    // re-initializing custom elements if they exist. But this breaks
    // how <noscript> is being handled. So we use the same document.
    // See the discussion in https://github.com/facebook/react/pull/11157.
    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
    testElement.innerHTML = html;
    return testElement.innerHTML;
  };
}

function ensureListeningTo(rootContainerElement, registrationName) {
  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
  listenTo(registrationName, doc);
}

function getOwnerDocumentFromRootContainer(rootContainerElement) {
  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trapClickOnNonInteractiveElement(node) {
  // Mobile Safari does not fire properly bubble click events on
  // non-interactive elements, which means delegated click listeners do not
  // fire. The workaround for this bug involves attaching an empty click
  // listener on the target node.
  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
  // Just set it using the onclick property so that we don't have to manage any
  // bookkeeping for it. Not sure if we need to clear it when the listener is
  // removed.
  // TODO: Only do this for the relevant Safaris maybe?
  node.onclick = emptyFunction;
}

function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
  for (var propKey in nextProps) {
    if (!nextProps.hasOwnProperty(propKey)) {
      continue;
    }
    var nextProp = nextProps[propKey];
    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }
      // Relies on `updateStylesByID` not mutating `styleUpdates`.
      setValueForStyles(domElement, nextProp, getStack);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      if (nextHtml != null) {
        setInnerHTML(domElement, nextHtml);
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string') {
        // Avoid setting initial textContent when the text is empty. In IE11 setting
        // textContent on a <textarea> will cause the placeholder to not
        // show within the <textarea> until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        var canSetTextContent = tag !== 'textarea' || nextProp !== '';
        if (canSetTextContent) {
          setTextContent(domElement, nextProp);
        }
      } else if (typeof nextProp === 'number') {
        setTextContent(domElement, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (propKey === AUTOFOCUS) {
      // We polyfill it separately on the client during commit.
      // We blacklist it here rather than in the property list because we emit it in SSR.
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (isCustomComponentTag) {
      setValueForAttribute(domElement, propKey, nextProp);
    } else if (nextProp != null) {
      // If we're updating to null or undefined, we should remove the property
      // from the DOM node instead of inadvertently setting to a string. This
      // brings us in line with the same behavior we have on initial render.
      setValueForProperty(domElement, propKey, nextProp);
    }
  }
}

function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
  // TODO: Handle wasCustomComponentTag
  for (var i = 0; i < updatePayload.length; i += 2) {
    var propKey = updatePayload[i];
    var propValue = updatePayload[i + 1];
    if (propKey === STYLE) {
      setValueForStyles(domElement, propValue, getStack);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      setInnerHTML(domElement, propValue);
    } else if (propKey === CHILDREN) {
      setTextContent(domElement, propValue);
    } else if (isCustomComponentTag) {
      if (propValue != null) {
        setValueForAttribute(domElement, propKey, propValue);
      } else {
        deleteValueForAttribute(domElement, propKey);
      }
    } else if (propValue != null) {
      setValueForProperty(domElement, propKey, propValue);
    } else {
      // If we're updating to null or undefined, we should remove the property
      // from the DOM node instead of inadvertently setting to a string. This
      // brings us in line with the same behavior we have on initial render.
      deleteValueForProperty(domElement, propKey);
    }
  }
}

function createElement$1(type, props, rootContainerElement, parentNamespace) {
  // We create tags in the namespace of their parent container, except HTML
  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
  var domElement;
  var namespaceURI = parentNamespace;
  if (namespaceURI === HTML_NAMESPACE) {
    namespaceURI = getIntrinsicNamespace(type);
  }
  if (namespaceURI === HTML_NAMESPACE) {
    {
      var isCustomComponentTag = isCustomComponent(type, props);
      // Should this check be gated by parent namespace? Not sure we want to
      // allow <SVG> or <mATH>.
      warning(isCustomComponentTag || type === type.toLowerCase(), '<%s /> is using uppercase HTML. Always use lowercase HTML tags ' + 'in React.', type);
    }

    if (type === 'script') {
      // Create the script via .innerHTML so its "parser-inserted" flag is
      // set to true and it does not execute
      var div = ownerDocument.createElement('div');
      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
      // This is guaranteed to yield a script element.
      var firstChild = div.firstChild;
      domElement = div.removeChild(firstChild);
    } else if (typeof props.is === 'string') {
      // $FlowIssue `createElement` should be updated for Web Components
      domElement = ownerDocument.createElement(type, { is: props.is });
    } else {
      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
      // See discussion in https://github.com/facebook/react/pull/6896
      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
      domElement = ownerDocument.createElement(type);
    }
  } else {
    domElement = ownerDocument.createElementNS(namespaceURI, type);
  }

  {
    if (namespaceURI === HTML_NAMESPACE) {
      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
        warnedUnknownTags[type] = true;
        warning(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
      }
    }
  }

  return domElement;
}

function createTextNode$1(text, rootContainerElement) {
  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
}

function setInitialProperties$1(domElement, tag, rawProps, rootContainerElement) {
  var isCustomComponentTag = isCustomComponent(tag, rawProps);
  {
    validatePropertiesInDevelopment(tag, rawProps);
    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$1() || 'A component');
      didWarnShadyDOM = true;
    }
  }

  // TODO: Make sure that we check isMounted before firing any of these events.
  var props;
  switch (tag) {
    case 'iframe':
    case 'object':
      trapBubbledEvent('topLoad', 'load', domElement);
      props = rawProps;
      break;
    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          trapBubbledEvent(event, mediaEvents[event], domElement);
        }
      }
      props = rawProps;
      break;
    case 'source':
      trapBubbledEvent('topError', 'error', domElement);
      props = rawProps;
      break;
    case 'img':
    case 'image':
      trapBubbledEvent('topError', 'error', domElement);
      trapBubbledEvent('topLoad', 'load', domElement);
      props = rawProps;
      break;
    case 'form':
      trapBubbledEvent('topReset', 'reset', domElement);
      trapBubbledEvent('topSubmit', 'submit', domElement);
      props = rawProps;
      break;
    case 'details':
      trapBubbledEvent('topToggle', 'toggle', domElement);
      props = rawProps;
      break;
    case 'input':
      initWrapperState(domElement, rawProps);
      props = getHostProps(domElement, rawProps);
      trapBubbledEvent('topInvalid', 'invalid', domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'option':
      validateProps(domElement, rawProps);
      props = getHostProps$1(domElement, rawProps);
      break;
    case 'select':
      initWrapperState$1(domElement, rawProps);
      props = getHostProps$2(domElement, rawProps);
      trapBubbledEvent('topInvalid', 'invalid', domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      props = getHostProps$3(domElement, rawProps);
      trapBubbledEvent('topInvalid', 'invalid', domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    default:
      props = rawProps;
  }

  assertValidProps(tag, props, getStack);

  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps);
      break;
    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;
    case 'option':
      postMountWrapper$1(domElement, rawProps);
      break;
    case 'select':
      postMountWrapper$2(domElement, rawProps);
      break;
    default:
      if (typeof props.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }
}

// Calculate the diff between the two objects.
function diffProperties$1(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
  {
    validatePropertiesInDevelopment(tag, nextRawProps);
  }

  var updatePayload = null;

  var lastProps;
  var nextProps;
  switch (tag) {
    case 'input':
      lastProps = getHostProps(domElement, lastRawProps);
      nextProps = getHostProps(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'option':
      lastProps = getHostProps$1(domElement, lastRawProps);
      nextProps = getHostProps$1(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'select':
      lastProps = getHostProps$2(domElement, lastRawProps);
      nextProps = getHostProps$2(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'textarea':
      lastProps = getHostProps$3(domElement, lastRawProps);
      nextProps = getHostProps$3(domElement, nextRawProps);
      updatePayload = [];
      break;
    default:
      lastProps = lastRawProps;
      nextProps = nextRawProps;
      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }

  assertValidProps(tag, nextProps, getStack);

  var propKey;
  var styleName;
  var styleUpdates = null;
  for (propKey in lastProps) {
    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
      continue;
    }
    if (propKey === STYLE) {
      var lastStyle = lastProps[propKey];
      for (styleName in lastStyle) {
        if (lastStyle.hasOwnProperty(styleName)) {
          if (!styleUpdates) {
            styleUpdates = {};
          }
          styleUpdates[styleName] = '';
        }
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {
      // Noop. This is handled by the clear text mechanism.
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (propKey === AUTOFOCUS) {
      // Noop. It doesn't work on updates anyway.
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      // This is a special case. If any listener updates we need to ensure
      // that the "current" fiber pointer gets updated so we need a commit
      // to update this element.
      if (!updatePayload) {
        updatePayload = [];
      }
    } else {
      // For all other deleted properties we add it to the queue. We use
      // the whitelist in the commit phase instead.
      (updatePayload = updatePayload || []).push(propKey, null);
    }
  }
  for (propKey in nextProps) {
    var nextProp = nextProps[propKey];
    var lastProp = lastProps != null ? lastProps[propKey] : undefined;
    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
      continue;
    }
    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }
      if (lastProp) {
        // Unset styles on `lastProp` but not on `nextProp`.
        for (styleName in lastProp) {
          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
            if (!styleUpdates) {
              styleUpdates = {};
            }
            styleUpdates[styleName] = '';
          }
        }
        // Update styles that changed since `lastProp`.
        for (styleName in nextProp) {
          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
            if (!styleUpdates) {
              styleUpdates = {};
            }
            styleUpdates[styleName] = nextProp[styleName];
          }
        }
      } else {
        // Relies on `updateStylesByID` not mutating `styleUpdates`.
        if (!styleUpdates) {
          if (!updatePayload) {
            updatePayload = [];
          }
          updatePayload.push(propKey, styleUpdates);
        }
        styleUpdates = nextProp;
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      var lastHtml = lastProp ? lastProp[HTML] : undefined;
      if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);
        }
      } else {
        // TODO: It might be too late to clear this if we have children
        // inserted already.
      }
    } else if (propKey === CHILDREN) {
      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        // We eagerly listen to this even though we haven't committed yet.
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
      if (!updatePayload && lastProp !== nextProp) {
        // This is a special case. If any listener updates we need to ensure
        // that the "current" props pointer gets updated so we need a commit
        // to update this element.
        updatePayload = [];
      }
    } else {
      // For any other property we always add it to the queue and then we
      // filter it out using the whitelist during the commit.
      (updatePayload = updatePayload || []).push(propKey, nextProp);
    }
  }
  if (styleUpdates) {
    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
  }
  return updatePayload;
}

// Apply the diff.
function updateProperties$1(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
  // Update checked *before* name.
  // In the middle of an update, it is possible to have multiple checked.
  // When a checked radio tries to change name, browser makes another radio's checked false.
  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
    updateChecked(domElement, nextRawProps);
  }

  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
  var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
  // Apply the diff.
  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);

  // TODO: Ensure that an update gets scheduled if any of the special props
  // changed.
  switch (tag) {
    case 'input':
      // Update the wrapper around inputs *after* updating props. This has to
      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
      // raise warnings and prevent the new value from being assigned.
      updateWrapper(domElement, nextRawProps);
      break;
    case 'textarea':
      updateWrapper$1(domElement, nextRawProps);
      break;
    case 'select':
      // <select> value update needs to occur after <option> children
      // reconciliation
      postUpdateWrapper(domElement, nextRawProps);
      break;
  }
}

function diffHydratedProperties$1(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
  {
    var suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
    var isCustomComponentTag = isCustomComponent(tag, rawProps);
    validatePropertiesInDevelopment(tag, rawProps);
    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$1() || 'A component');
      didWarnShadyDOM = true;
    }
  }

  // TODO: Make sure that we check isMounted before firing any of these events.
  switch (tag) {
    case 'iframe':
    case 'object':
      trapBubbledEvent('topLoad', 'load', domElement);
      break;
    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          trapBubbledEvent(event, mediaEvents[event], domElement);
        }
      }
      break;
    case 'source':
      trapBubbledEvent('topError', 'error', domElement);
      break;
    case 'img':
    case 'image':
      trapBubbledEvent('topError', 'error', domElement);
      trapBubbledEvent('topLoad', 'load', domElement);
      break;
    case 'form':
      trapBubbledEvent('topReset', 'reset', domElement);
      trapBubbledEvent('topSubmit', 'submit', domElement);
      break;
    case 'details':
      trapBubbledEvent('topToggle', 'toggle', domElement);
      break;
    case 'input':
      initWrapperState(domElement, rawProps);
      trapBubbledEvent('topInvalid', 'invalid', domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'option':
      validateProps(domElement, rawProps);
      break;
    case 'select':
      initWrapperState$1(domElement, rawProps);
      trapBubbledEvent('topInvalid', 'invalid', domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      trapBubbledEvent('topInvalid', 'invalid', domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
  }

  assertValidProps(tag, rawProps, getStack);

  {
    var extraAttributeNames = new Set();
    var attributes = domElement.attributes;
    for (var i = 0; i < attributes.length; i++) {
      var name = attributes[i].name.toLowerCase();
      switch (name) {
        // Built-in SSR attribute is whitelisted
        case 'data-reactroot':
          break;
        // Controlled attributes are not validated
        // TODO: Only ignore them on controlled tags.
        case 'value':
          break;
        case 'checked':
          break;
        case 'selected':
          break;
        default:
          // Intentionally use the original name.
          // See discussion in https://github.com/facebook/react/pull/10676.
          extraAttributeNames.add(attributes[i].name);
      }
    }
  }

  var updatePayload = null;
  for (var propKey in rawProps) {
    if (!rawProps.hasOwnProperty(propKey)) {
      continue;
    }
    var nextProp = rawProps[propKey];
    if (propKey === CHILDREN) {
      // For text content children we compare against textContent. This
      // might match additional HTML that is hidden when we read it using
      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
      // satisfies our requirement. Our requirement is not to produce perfect
      // HTML and attributes. Ideally we should preserve structure but it's
      // ok not to if the visible content is still enough to indicate what
      // even listeners these nodes might be wired up to.
      // TODO: Warn if there is more than a single textNode as a child.
      // TODO: Should we use domElement.firstChild.nodeValue to compare?
      if (typeof nextProp === 'string') {
        if (domElement.textContent !== nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }
          updatePayload = [CHILDREN, nextProp];
        }
      } else if (typeof nextProp === 'number') {
        if (domElement.textContent !== '' + nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }
          updatePayload = [CHILDREN, '' + nextProp];
        }
      }
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
    } else {
      // Validate that the properties correspond to their expected values.
      var serverValue;
      var propertyInfo;
      if (suppressHydrationWarning) {
        // Don't bother comparing. We're ignoring all these warnings.
      } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 ||
      // Controlled attributes are not validated
      // TODO: Only ignore them on controlled tags.
      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {
        // Noop
      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
        var rawHtml = nextProp ? nextProp[HTML] || '' : '';
        var serverHTML = domElement.innerHTML;
        var expectedHTML = normalizeHTML(domElement, rawHtml);
        if (expectedHTML !== serverHTML) {
          warnForPropDifference(propKey, serverHTML, expectedHTML);
        }
      } else if (propKey === STYLE) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames['delete'](propKey);
        var expectedStyle = createDangerousStringForStyles(nextProp);
        serverValue = domElement.getAttribute('style');
        if (expectedStyle !== serverValue) {
          warnForPropDifference(propKey, serverValue, expectedStyle);
        }
      } else if (isCustomComponentTag) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames['delete'](propKey.toLowerCase());
        serverValue = getValueForAttribute(domElement, propKey, nextProp);

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      } else if (shouldSetAttribute(propKey, nextProp)) {
        if (propertyInfo = getPropertyInfo(propKey)) {
          // $FlowFixMe - Should be inferred as not undefined.
          extraAttributeNames['delete'](propertyInfo.attributeName);
          serverValue = getValueForProperty(domElement, propKey, nextProp);
        } else {
          var ownNamespace = parentNamespace;
          if (ownNamespace === HTML_NAMESPACE) {
            ownNamespace = getIntrinsicNamespace(tag);
          }
          if (ownNamespace === HTML_NAMESPACE) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames['delete'](propKey.toLowerCase());
          } else {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames['delete'](propKey);
          }
          serverValue = getValueForAttribute(domElement, propKey, nextProp);
        }

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      }
    }
  }

  {
    // $FlowFixMe - Should be inferred as not undefined.
    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
      // $FlowFixMe - Should be inferred as not undefined.
      warnForExtraAttributes(extraAttributeNames);
    }
  }

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps);
      break;
    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;
    case 'select':
    case 'option':
      // For input and textarea we current always set the value property at
      // post mount to force it to diverge from attributes. However, for
      // option and select we don't quite do the same thing and select
      // is not resilient to the DOM state changing so we don't do that here.
      // TODO: Consider not doing this for input and textarea.
      break;
    default:
      if (typeof rawProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }

  return updatePayload;
}

function diffHydratedText$1(textNode, text) {
  var isDifferent = textNode.nodeValue !== text;
  return isDifferent;
}

function warnForUnmatchedText$1(textNode, text) {
  {
    warnForTextDifference(textNode.nodeValue, text);
  }
}

function warnForDeletedHydratableElement$1(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
  }
}

function warnForDeletedHydratableText$1(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
  }
}

function warnForInsertedHydratedElement$1(parentNode, tag, props) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
  }
}

function warnForInsertedHydratedText$1(parentNode, text) {
  {
    if (text === '') {
      // We expect to insert empty text nodes since they're not represented in
      // the HTML.
      // TODO: Remove this special case if we can just avoid inserting empty
      // text nodes.
      return;
    }
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
  }
}

function restoreControlledState(domElement, tag, props) {
  switch (tag) {
    case 'input':
      restoreControlledState$1(domElement, props);
      return;
    case 'textarea':
      restoreControlledState$3(domElement, props);
      return;
    case 'select':
      restoreControlledState$2(domElement, props);
      return;
  }
}

var ReactDOMFiberComponent = Object.freeze({
	createElement: createElement$1,
	createTextNode: createTextNode$1,
	setInitialProperties: setInitialProperties$1,
	diffProperties: diffProperties$1,
	updateProperties: updateProperties$1,
	diffHydratedProperties: diffHydratedProperties$1,
	diffHydratedText: diffHydratedText$1,
	warnForUnmatchedText: warnForUnmatchedText$1,
	warnForDeletedHydratableElement: warnForDeletedHydratableElement$1,
	warnForDeletedHydratableText: warnForDeletedHydratableText$1,
	warnForInsertedHydratedElement: warnForInsertedHydratedElement$1,
	warnForInsertedHydratedText: warnForInsertedHydratedText$1,
	restoreControlledState: restoreControlledState
});

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberStackAddendum$6 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var validateDOMNesting = emptyFunction;

{
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo$1 = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null');
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var invalidParentOrAncestor = invalidParent || invalidAncestor;
    if (!invalidParentOrAncestor) {
      return;
    }

    var ancestorTag = invalidParentOrAncestor.tag;
    var addendum = getCurrentFiberStackAddendum$6();

    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;
    if (didWarn[warnKey]) {
      return;
    }
    didWarn[warnKey] = true;

    var tagDisplayName = childTag;
    var whitespaceInfo = '';
    if (childTag === '#text') {
      if (/\S/.test(childText)) {
        tagDisplayName = 'Text nodes';
      } else {
        tagDisplayName = 'Whitespace text nodes';
        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
      }
    } else {
      tagDisplayName = '<' + childTag + '>';
    }

    if (invalidParent) {
      var info = '';
      if (ancestorTag === 'table' && childTag === 'tr') {
        info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
      }
      warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
    } else {
      warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
    }
  };

  // TODO: turn this into a named export
  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo$1;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

var validateDOMNesting$1 = validateDOMNesting;

// TODO: direct imports like some-package/src/* are bad. Fix me.
var createElement = createElement$1;
var createTextNode = createTextNode$1;
var setInitialProperties = setInitialProperties$1;
var diffProperties = diffProperties$1;
var updateProperties = updateProperties$1;
var diffHydratedProperties = diffHydratedProperties$1;
var diffHydratedText = diffHydratedText$1;
var warnForUnmatchedText = warnForUnmatchedText$1;
var warnForDeletedHydratableElement = warnForDeletedHydratableElement$1;
var warnForDeletedHydratableText = warnForDeletedHydratableText$1;
var warnForInsertedHydratedElement = warnForInsertedHydratedElement$1;
var warnForInsertedHydratedText = warnForInsertedHydratedText$1;
var updatedAncestorInfo = validateDOMNesting$1.updatedAncestorInfo;
var precacheFiberNode = precacheFiberNode$1;
var updateFiberProps = updateFiberProps$1;


{
  var SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
  if (typeof Map !== 'function' || Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
    warning(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. http://fb.me/react-polyfills');
  }
}

injection$3.injectFiberControlledHostComponent(ReactDOMFiberComponent);

var eventsEnabled = null;
var selectionInformation = null;

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
}

function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOCUMENT_NODE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function shouldHydrateDueToLegacyHeuristic(container) {
  var rootElement = getReactRootElementInContainer(container);
  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
}

function shouldAutoFocusHostComponent(type, props) {
  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      return !!props.autoFocus;
  }
  return false;
}

var DOMRenderer = reactReconciler({
  getRootHostContext: function (rootContainerInstance) {
    var type = void 0;
    var namespace = void 0;
    var nodeType = rootContainerInstance.nodeType;
    switch (nodeType) {
      case DOCUMENT_NODE:
      case DOCUMENT_FRAGMENT_NODE:
        {
          type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
          var root = rootContainerInstance.documentElement;
          namespace = root ? root.namespaceURI : getChildNamespace(null, '');
          break;
        }
      default:
        {
          var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
          var ownNamespace = container.namespaceURI || null;
          type = container.tagName;
          namespace = getChildNamespace(ownNamespace, type);
          break;
        }
    }
    {
      var validatedTag = type.toLowerCase();
      var _ancestorInfo = updatedAncestorInfo(null, validatedTag, null);
      return { namespace: namespace, ancestorInfo: _ancestorInfo };
    }
    return namespace;
  },
  getChildHostContext: function (parentHostContext, type) {
    {
      var parentHostContextDev = parentHostContext;
      var _namespace = getChildNamespace(parentHostContextDev.namespace, type);
      var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type, null);
      return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };
    }
    var parentNamespace = parentHostContext;
    return getChildNamespace(parentNamespace, type);
  },
  getPublicInstance: function (instance) {
    return instance;
  },
  prepareForCommit: function () {
    eventsEnabled = isEnabled();
    selectionInformation = getSelectionInformation();
    setEnabled(false);
  },
  resetAfterCommit: function () {
    restoreSelection(selectionInformation);
    selectionInformation = null;
    setEnabled(eventsEnabled);
    eventsEnabled = null;
  },
  createInstance: function (type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
    var parentNamespace = void 0;
    {
      // TODO: take namespace into account when validating.
      var hostContextDev = hostContext;
      validateDOMNesting$1(type, null, hostContextDev.ancestorInfo);
      if (typeof props.children === 'string' || typeof props.children === 'number') {
        var string = '' + props.children;
        var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
        validateDOMNesting$1(null, string, ownAncestorInfo);
      }
      parentNamespace = hostContextDev.namespace;
    }
    var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
    precacheFiberNode(internalInstanceHandle, domElement);
    updateFiberProps(domElement, props);
    return domElement;
  },
  appendInitialChild: function (parentInstance, child) {
    parentInstance.appendChild(child);
  },
  finalizeInitialChildren: function (domElement, type, props, rootContainerInstance) {
    setInitialProperties(domElement, type, props, rootContainerInstance);
    return shouldAutoFocusHostComponent(type, props);
  },
  prepareUpdate: function (domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
    {
      var hostContextDev = hostContext;
      if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
        var string = '' + newProps.children;
        var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
        validateDOMNesting$1(null, string, ownAncestorInfo);
      }
    }
    return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
  },
  shouldSetTextContent: function (type, props) {
    return type === 'textarea' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && typeof props.dangerouslySetInnerHTML.__html === 'string';
  },
  shouldDeprioritizeSubtree: function (type, props) {
    return !!props.hidden;
  },
  createTextInstance: function (text, rootContainerInstance, hostContext, internalInstanceHandle) {
    {
      var hostContextDev = hostContext;
      validateDOMNesting$1(null, text, hostContextDev.ancestorInfo);
    }
    var textNode = createTextNode(text, rootContainerInstance);
    precacheFiberNode(internalInstanceHandle, textNode);
    return textNode;
  },


  now: now,

  mutation: {
    commitMount: function (domElement, type, newProps, internalInstanceHandle) {
      domElement.focus();
    },
    commitUpdate: function (domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
      // Update the props handle so that we know which props are the ones with
      // with current event handlers.
      updateFiberProps(domElement, newProps);
      // Apply the diff to the DOM node.
      updateProperties(domElement, updatePayload, type, oldProps, newProps);
    },
    resetTextContent: function (domElement) {
      domElement.textContent = '';
    },
    commitTextUpdate: function (textInstance, oldText, newText) {
      textInstance.nodeValue = newText;
    },
    appendChild: function (parentInstance, child) {
      parentInstance.appendChild(child);
    },
    appendChildToContainer: function (container, child) {
      if (container.nodeType === COMMENT_NODE) {
        container.parentNode.insertBefore(child, container);
      } else {
        container.appendChild(child);
      }
    },
    insertBefore: function (parentInstance, child, beforeChild) {
      parentInstance.insertBefore(child, beforeChild);
    },
    insertInContainerBefore: function (container, child, beforeChild) {
      if (container.nodeType === COMMENT_NODE) {
        container.parentNode.insertBefore(child, beforeChild);
      } else {
        container.insertBefore(child, beforeChild);
      }
    },
    removeChild: function (parentInstance, child) {
      parentInstance.removeChild(child);
    },
    removeChildFromContainer: function (container, child) {
      if (container.nodeType === COMMENT_NODE) {
        container.parentNode.removeChild(child);
      } else {
        container.removeChild(child);
      }
    }
  },

  hydration: {
    canHydrateInstance: function (instance, type, props) {
      if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
        return null;
      }
      // This has now been refined to an element node.
      return instance;
    },
    canHydrateTextInstance: function (instance, text) {
      if (text === '' || instance.nodeType !== TEXT_NODE) {
        // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
      }
      // This has now been refined to a text node.
      return instance;
    },
    getNextHydratableSibling: function (instance) {
      var node = instance.nextSibling;
      // Skip non-hydratable nodes.
      while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE) {
        node = node.nextSibling;
      }
      return node;
    },
    getFirstHydratableChild: function (parentInstance) {
      var next = parentInstance.firstChild;
      // Skip non-hydratable nodes.
      while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE) {
        next = next.nextSibling;
      }
      return next;
    },
    hydrateInstance: function (instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
      precacheFiberNode(internalInstanceHandle, instance);
      // TODO: Possibly defer this until the commit phase where all the events
      // get attached.
      updateFiberProps(instance, props);
      var parentNamespace = void 0;
      {
        var hostContextDev = hostContext;
        parentNamespace = hostContextDev.namespace;
      }
      return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
    },
    hydrateTextInstance: function (textInstance, text, internalInstanceHandle) {
      precacheFiberNode(internalInstanceHandle, textInstance);
      return diffHydratedText(textInstance, text);
    },
    didNotMatchHydratedContainerTextInstance: function (parentContainer, textInstance, text) {
      {
        warnForUnmatchedText(textInstance, text);
      }
    },
    didNotMatchHydratedTextInstance: function (parentType, parentProps, parentInstance, textInstance, text) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForUnmatchedText(textInstance, text);
      }
    },
    didNotHydrateContainerInstance: function (parentContainer, instance) {
      {
        if (instance.nodeType === 1) {
          warnForDeletedHydratableElement(parentContainer, instance);
        } else {
          warnForDeletedHydratableText(parentContainer, instance);
        }
      }
    },
    didNotHydrateInstance: function (parentType, parentProps, parentInstance, instance) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        if (instance.nodeType === 1) {
          warnForDeletedHydratableElement(parentInstance, instance);
        } else {
          warnForDeletedHydratableText(parentInstance, instance);
        }
      }
    },
    didNotFindHydratableContainerInstance: function (parentContainer, type, props) {
      {
        warnForInsertedHydratedElement(parentContainer, type, props);
      }
    },
    didNotFindHydratableContainerTextInstance: function (parentContainer, text) {
      {
        warnForInsertedHydratedText(parentContainer, text);
      }
    },
    didNotFindHydratableInstance: function (parentType, parentProps, parentInstance, type, props) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForInsertedHydratedElement(parentInstance, type, props);
      }
    },
    didNotFindHydratableTextInstance: function (parentType, parentProps, parentInstance, text) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForInsertedHydratedText(parentInstance, text);
      }
    }
  },

  scheduleDeferredCallback: rIC,
  cancelDeferredCallback: cIC,

  useSyncScheduling: !enableAsyncSchedulingByDefaultInReactDOM
});

injection$4.injectFiberBatchedUpdates(DOMRenderer.batchedUpdates);

var warnedAboutHydrateAPI = false;

function renderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;

  {
    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
      var hostInstance = DOMRenderer.findHostInstanceWithNoPortals(container._reactRootContainer.current);
      if (hostInstance) {
        warning(hostInstance.parentNode === container, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.');
      }
    }

    var isRootRenderedBySomeReact = !!container._reactRootContainer;
    var rootEl = getReactRootElementInContainer(container);
    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));

    warning(!hasNonRootReactChild || isRootRenderedBySomeReact, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.');

    warning(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.');
  }

  var root = container._reactRootContainer;
  if (!root) {
    var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
    // First clear any existing content.
    if (!shouldHydrate) {
      var warned = false;
      var rootSibling = void 0;
      while (rootSibling = container.lastChild) {
        {
          if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
            warned = true;
            warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
          }
        }
        container.removeChild(rootSibling);
      }
    }
    {
      if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
        warnedAboutHydrateAPI = true;
        lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
      }
    }
    var newRoot = DOMRenderer.createContainer(container, shouldHydrate);
    root = container._reactRootContainer = newRoot;
    // Initial mount should not be batched.
    DOMRenderer.unbatchedUpdates(function () {
      DOMRenderer.updateContainer(children, newRoot, parentComponent, callback);
    });
  } else {
    DOMRenderer.updateContainer(children, root, parentComponent, callback);
  }
  return DOMRenderer.getPublicRootInstance(root);
}

function createPortal(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
  // TODO: pass ReactDOM portal implementation as third argument
  return createPortal$1(children, container, null, key);
}

function ReactRoot(container, hydrate) {
  var root = DOMRenderer.createContainer(container, hydrate);
  this._reactRootContainer = root;
}
ReactRoot.prototype.render = function (children, callback) {
  var root = this._reactRootContainer;
  DOMRenderer.updateContainer(children, root, null, callback);
};
ReactRoot.prototype.unmount = function (callback) {
  var root = this._reactRootContainer;
  DOMRenderer.updateContainer(null, root, null, callback);
};

var ReactDOM = {
  createPortal: createPortal,

  findDOMNode: function (componentOrElement) {
    {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
        warning(warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner) || 'A component');
        owner.stateNode._warnedAboutRefsInRender = true;
      }
    }
    if (componentOrElement == null) {
      return null;
    }
    if (componentOrElement.nodeType === ELEMENT_NODE) {
      return componentOrElement;
    }

    var inst = get(componentOrElement);
    if (inst) {
      return DOMRenderer.findHostInstance(inst);
    }

    if (typeof componentOrElement.render === 'function') {
      invariant(false, 'Unable to find node on an unmounted component.');
    } else {
      invariant(false, 'Element appears to be neither ReactComponent nor DOMNode. Keys: %s', Object.keys(componentOrElement));
    }
  },
  hydrate: function (element, container, callback) {
    // TODO: throw or warn if we couldn't hydrate?
    return renderSubtreeIntoContainer(null, element, container, true, callback);
  },
  render: function (element, container, callback) {
    return renderSubtreeIntoContainer(null, element, container, false, callback);
  },
  unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {
    !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;
    return renderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
  },
  unmountComponentAtNode: function (container) {
    !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;

    if (container._reactRootContainer) {
      {
        var rootEl = getReactRootElementInContainer(container);
        var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
        warning(!renderedByDifferentReact, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.');
      }

      // Unmount should not be batched.
      DOMRenderer.unbatchedUpdates(function () {
        renderSubtreeIntoContainer(null, null, container, false, function () {
          container._reactRootContainer = null;
        });
      });
      // If you call unmountComponentAtNode twice in quick succession, you'll
      // get `true` twice. That's probably fine?
      return true;
    } else {
      {
        var _rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl));

        // Check if the container itself is a React root node.
        var isContainerReactRoot = container.nodeType === 1 && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

        warning(!hasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.');
      }

      return false;
    }
  },


  // Temporary alias since we already shipped React 16 RC with it.
  // TODO: remove in React 17.
  unstable_createPortal: createPortal,

  unstable_batchedUpdates: batchedUpdates,

  unstable_deferredUpdates: DOMRenderer.deferredUpdates,

  flushSync: DOMRenderer.flushSync,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    // For TapEventPlugin which is popular in open source
    EventPluginHub: EventPluginHub,
    // Used by test-utils
    EventPluginRegistry: EventPluginRegistry,
    EventPropagators: EventPropagators,
    ReactControlledComponent: ReactControlledComponent,
    ReactDOMComponentTree: ReactDOMComponentTree,
    ReactDOMEventListener: ReactDOMEventListener
  }
};

if (enableCreateRoot) {
  ReactDOM.createRoot = function createRoot(container, options) {
    var hydrate = options != null && options.hydrate === true;
    return new ReactRoot(container, hydrate);
  };
}

var foundDevTools = DOMRenderer.injectIntoDevTools({
  findFiberByHostInstance: getClosestInstanceFromNode,
  bundleType: 1,
  version: ReactVersion,
  rendererPackageName: 'react-dom'
});

{
  if (!foundDevTools && ExecutionEnvironment.canUseDOM && window.top === window.self) {
    // If we're in Chrome or Firefox, provide a download link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
      var protocol = window.location.protocol;
      // Don't warn in exotic cases like chrome-extension://.
      if (/^(https?|file):$/.test(protocol)) {
        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
      }
    }
  }
}



var ReactDOM$2 = Object.freeze({
	default: ReactDOM
});

var ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var reactDom = ReactDOM$3['default'] ? ReactDOM$3['default'] : ReactDOM$3;

module.exports = reactDom;
  })();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */



var hyphenate = __webpack_require__(27);

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */



var camelize = __webpack_require__(29);

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactDom = __webpack_require__(2);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _ControlBox = __webpack_require__(31);

var _ControlBox2 = _interopRequireDefault(_ControlBox);

var _TileContainer = __webpack_require__(32);

var _TileContainer2 = _interopRequireDefault(_TileContainer);

var _TimeHover = __webpack_require__(35);

var _TimeHover2 = _interopRequireDefault(_TimeHover);

var _data = __webpack_require__(36);

var _data2 = _interopRequireDefault(_data);

var _wcs_complete = __webpack_require__(37);

var _wcs_complete2 = _interopRequireDefault(_wcs_complete);

var _wcs_complete_new = __webpack_require__(38);

var _wcs_complete_new2 = _interopRequireDefault(_wcs_complete_new);

var _utils = __webpack_require__(6);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
// import data from '../data/data.json';


var App = function (_React$Component) {
    _inherits(App, _React$Component);

    function App(props) {
        _classCallCheck(this, App);

        var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));

        _this.state = {
            data: _data2.default,
            selectedDay: '09',
            selectedMonth: 'january',
            selectedYear: '2018',
            displayMode: 'week',
            selectedTime: '05:30',
            viewFullDay: true
        };
        return _this;
    }

    _createClass(App, [{
        key: 'updateDay',
        value: function updateDay(day) {
            this.setState({ selectedDay: day });
        }
    }, {
        key: 'updateMonth',
        value: function updateMonth(month) {
            this.setState({ selectedMonth: month });
        }
    }, {
        key: 'updateSelectedTime',
        value: function updateSelectedTime(time) {
            this.setState({ selectedTime: time });
        }
    }, {
        key: 'updateDisplayMode',
        value: function updateDisplayMode(display) {
            this.setState({ displayMode: display });
        }
    }, {
        key: 'updateViewByDay',
        value: function updateViewByDay(bool) {
            if (bool == 'true') {
                this.setState({ viewFullDay: true });
            } else {
                this.setState({ viewFullDay: false });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var that = this;

            function updateSelectedDay(day) {
                that.updateDay(day);
            }
            function updateSelectedMonth(month) {
                that.updateMonth(month);
            }
            function updateSelectedTime(time) {
                that.updateSelectedTime(time);
            }
            function updateDisplayMode(display) {
                that.updateDisplayMode(display);
            }
            function updateViewByDay(bool) {
                that.updateViewByDay(bool);
            }

            var timeHover = this.state.viewFullDay ? _react2.default.createElement(_TimeHover2.default, null) : "";

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(_ControlBox2.default, {
                    data: this.state,
                    updateSelectedDay: updateSelectedDay,
                    updateSelectedMonth: updateSelectedMonth,
                    updateSelectedTime: updateSelectedTime,
                    updateDisplayMode: updateDisplayMode,
                    updateViewByDay: updateViewByDay
                }),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_TileContainer2.default, {
                        data: this.state,
                        displayMode: this.state.displayMode
                    })
                ),
                timeHover
            );
        }
    }]);

    return App;
}(_react2.default.Component);

exports.default = App;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactDom = __webpack_require__(2);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _utils = __webpack_require__(6);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ControlBox = function (_React$Component) {
    _inherits(ControlBox, _React$Component);

    function ControlBox(props) {
        _classCallCheck(this, ControlBox);

        var _this = _possibleConstructorReturn(this, (ControlBox.__proto__ || Object.getPrototypeOf(ControlBox)).call(this, props));

        _this.state = _this.props.data;
        _this.state.minimize = false;
        return _this;
    }

    _createClass(ControlBox, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({
                data: nextProps.data.data,
                displayMode: nextProps.displayMode,
                selectedDay: nextProps.data.selectedDay,
                selectedMonth: nextProps.data.selectedMonth,
                selectedYear: nextProps.data.selectedYear,
                selectedTime: nextProps.data.selectedTime,
                viewFullDay: nextProps.data.viewFullDay,
                minimize: this.state.minimize
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var SelectedYearData = (0, _utils.getSelectedYear)(this.state.data.data, this.state.selectedYear);
            var daysArr = (0, _utils.getSelectedMonth)(SelectedYearData, this.state.selectedMonth);
            var that = this;

            function onDayChange(event) {
                that.props.updateSelectedDay(event.target.value);
            }
            function onMonthChange(event) {
                that.props.updateSelectedMonth(event.target.value);
            }

            function click() {
                that.setState({ minimize: !that.state.minimize });
            }

            var selectDayNode = _react2.default.createElement(
                'select',
                { onChange: onDayChange },
                ' ',
                daysArr.map(function (day) {
                    var dateObj = (0, _utils.splitDate)(day.day);
                    if (day == that.state.selectedDay) {
                        return _react2.default.createElement(
                            'option',
                            { key: 'select-' + dateObj.day, value: dateObj.day, selected: true },
                            dateObj.day
                        );
                    } else {
                        return _react2.default.createElement(
                            'option',
                            { key: 'select-' + dateObj.day, value: dateObj.day },
                            dateObj.day
                        );
                    }
                })
            );

            var selectMonthNode = _react2.default.createElement(
                'select',
                { onChange: onMonthChange },
                ' ',
                SelectedYearData.months.map(function (month) {
                    // var dateObj = splitDate(day.day);
                    if (month == that.state.selectedMonth) {
                        return _react2.default.createElement(
                            'option',
                            { key: 'select-' + month.month, value: month.month, selected: true },
                            month.month
                        );
                    } else {
                        return _react2.default.createElement(
                            'option',
                            { key: 'select-' + month.month, value: month.month },
                            month.month
                        );
                    }
                })
            );

            var times = ['00:00', '00:10', '00:20', '00:30', '00:40', '00:50', '01:00', '01:10', '01:20', '01:30', '01:40', '01:50', '02:00', '02:10', '02:20', '02:30', '02:40', '02:50', '03:00', '03:10', '03:20', '03:30', '03:40', '03:50', '04:00', '04:10', '04:20', '04:30', '04:40', '04:50', '05:00', '05:10', '05:20', '05:30', '05:40', '05:50', '06:00', '06:10', '06:20', '06:30', '06:40', '06:50', '07:00', '07:10', '07:20', '07:30', '07:40', '07:50', '08:00', '08:10', '08:20', '08:30', '08:40', '08:50', '09:00', '09:10', '09:20', '09:30', '09:40', '09:50', '10:00', '10:10', '10:20', '10:30', '10:40', '10:50', '11:00', '11:10', '11:20', '11:30', '11:40', '11:50', '12:00', '12:10', '12:20', '12:30', '12:40', '12:50', '13:00', '13:10', '13:20', '13:30', '13:40', '13:50', '14:00', '14:10', '14:20', '14:30', '14:40', '14:50', '15:00', '15:10', '15:20', '15:30', '15:40', '15:50', '16:00', '16:10', '16:20', '16:30', '16:40', '16:50', '17:00', '17:10', '17:20', '17:30', '17:40', '17:50', '18:00', '18:10', '18:20', '18:30', '18:40', '18:50', '19:00', '19:10', '19:20', '19:30', '19:40', '19:50', '20:00', '20:10', '20:20', '20:30', '20:40', '20:50', '21:00', '21:10', '21:20', '21:30', '21:40', '21:50', '22:00', '22:10', '22:20', '22:30', '22:40', '22:50', '23:00', '23:10', '23:20', '23:30', '23:40', '23:50'];

            var timeIdx = times.indexOf(this.state.selectedTime);
            var that = this;

            function sliderFunction(event) {
                var newTimeIdx = event.target.value;
                var newSelectedTime = times[newTimeIdx];
                that.props.updateSelectedTime(newSelectedTime);
            }

            function viewByDay(event) {
                if (event.target.value == 'true') {
                    that.props.updateViewByDay(event.target.value);
                } else {
                    that.props.updateViewByDay(event.target.value);
                }
            }

            var lol = this.state.viewFullDay;

            var timeSlider = _react2.default.createElement(
                'div',
                { className: 'slider' },
                _react2.default.createElement('input', {
                    onChange: sliderFunction,
                    className: 'time-slider',
                    type: 'range',
                    min: '0',
                    value: timeIdx,
                    max: '143',
                    step: '1'
                }),
                _react2.default.createElement('hr', null)
            );

            function onDisplayChange(event) {
                that.props.updateDisplayMode(event.target.value);
            }

            return _react2.default.createElement(
                'div',
                { className: this.state.minimize ? 'control-box minimized' : 'control-box' },
                _react2.default.createElement(
                    'h1',
                    { className: 'min-button', onClick: click },
                    _react2.default.createElement(
                        'span',
                        null,
                        '+'
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'controls' },
                    _react2.default.createElement(
                        'div',
                        { className: 'title' },
                        _react2.default.createElement(
                            'h1',
                            null,
                            'Time As Color'
                        ),
                        _react2.default.createElement(
                            'h2',
                            null,
                            'Visualization of the sky'
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'view-option' },
                        _react2.default.createElement(
                            'button',
                            { className: this.state.viewFullDay ? "option" : "option selected", onClick: viewByDay, value: 'false' },
                            'View Point in Time'
                        ),
                        _react2.default.createElement(
                            'button',
                            { className: this.state.viewFullDay ? "option selected" : "option", onClick: viewByDay, value: 'true' },
                            'View Full Day'
                        ),
                        _react2.default.createElement('hr', { className: this.state.viewFullDay ? "right" : "left" })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'selects' },
                        _react2.default.createElement(
                            'div',
                            { className: 'select-holder select-day' },
                            _react2.default.createElement(
                                'span',
                                null,
                                'Date:'
                            ),
                            selectDayNode
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'select-holder select-month' },
                            selectMonthNode
                        ),
                        _react2.default.createElement(
                            'span',
                            null,
                            '2017'
                        ),
                        _react2.default.createElement('br', null),
                        _react2.default.createElement(
                            'div',
                            { className: 'select-holder select-display' },
                            _react2.default.createElement(
                                'span',
                                null,
                                'Display by:'
                            ),
                            _react2.default.createElement(
                                'select',
                                { onChange: onDisplayChange },
                                _react2.default.createElement(
                                    'option',
                                    { value: 'week', defaultValue: true },
                                    'Week'
                                ),
                                _react2.default.createElement(
                                    'option',
                                    { value: 'day' },
                                    'Day'
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'time-slider' },
                        !this.state.viewFullDay && timeSlider,
                        !this.state.viewFullDay && _react2.default.createElement(
                            'span',
                            { className: 'display-time' },
                            this.state.selectedTime
                        )
                    )
                )
            );
        }
    }]);

    return ControlBox;
}(_react2.default.Component);

exports.default = ControlBox;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactDom = __webpack_require__(2);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Tile = __webpack_require__(33);

var _Tile2 = _interopRequireDefault(_Tile);

var _DayTile = __webpack_require__(34);

var _DayTile2 = _interopRequireDefault(_DayTile);

var _utils = __webpack_require__(6);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TileContainer = function (_React$Component) {
    _inherits(TileContainer, _React$Component);

    function TileContainer(props) {
        _classCallCheck(this, TileContainer);

        var _this = _possibleConstructorReturn(this, (TileContainer.__proto__ || Object.getPrototypeOf(TileContainer)).call(this, props));

        _this.state = {
            data: _this.props.data.data,
            displayMode: _this.props.displayMode,
            selectedDay: _this.props.data.selectedDay,
            selectedMonth: _this.props.data.selectedMonth,
            selectedYear: _this.props.data.selectedYear,
            selectedTime: _this.props.data.selectedTime,
            viewFullDay: _this.props.data.viewFullDay
        };
        return _this;
    }

    _createClass(TileContainer, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({
                data: nextProps.data.data,
                displayMode: nextProps.displayMode,
                selectedDay: nextProps.data.selectedDay,
                selectedMonth: nextProps.data.selectedMonth,
                selectedYear: nextProps.data.selectedYear,
                selectedTime: nextProps.data.selectedTime,
                viewFullDay: nextProps.data.viewFullDay

            });
        }
    }, {
        key: 'render',
        value: function render() {

            var containerClasses = 'tile-container ' + this.props.displayMode;
            var that = this;
            var days = that.state.data.data[0].data.months[0].data;
            var SelectedYearData = (0, _utils.getSelectedYear)(that.state.data.data, this.state.selectedYear);
            var SelectedMonthData = (0, _utils.getSelectedMonth)(SelectedYearData, this.state.selectedMonth);
            var displayData = (0, _utils.getDisplayedDates)(SelectedMonthData, this.props.displayMode, this.state.selectedDay, this.state.selectedMonth, this.state.selectedYear);
            var selectedDayData = (0, _utils.getSelectedDay)(days, this.state.selectedDay);

            var tileNodes = !this.state.viewFullDay ? displayData.map(function (day, i) {
                var hasColors = true;
                var colorsAtTime = (0, _utils.getDisplayedColors)(day.times, that.state.selectedTime);
                if (colorsAtTime.length == 0) {
                    hasColors = false;
                    colorsAtTime = ['rgb(255, 0, 0),rgb(255, 0, 0)', 'rgb(255, 0, 0),rgb(255, 0, 0)', 'rgb(255, 0, 0),rgb(255, 0, 0)', 'rgb(255, 0, 0),rgb(255, 0, 0)'];
                }
                var date = (0, _utils.splitDate)(day.day);
                var selectedTime = that.state.selectedTime;

                return _react2.default.createElement(_Tile2.default, {
                    key: 'tile-' + i,
                    gradients: colorsAtTime,
                    day: date.day,
                    month: date.month,
                    year: date.year,
                    selectedTime: that.state.selectedTime,
                    hasColors: hasColors
                });
            }) : displayData.map(function (day, i) {
                var hasColors = true;
                var colorsAtTime = (0, _utils.getDisplayedColors)(day.times, that.state.selectedTime);

                if (colorsAtTime.length == 0) {
                    hasColors = false;
                    colorsAtTime = ['rgb(255, 0, 0),rgb(255, 0, 0)', 'rgb(255, 0, 0),rgb(255, 0, 0)', 'rgb(255, 0, 0),rgb(255, 0, 0)', 'rgb(255, 0, 0),rgb(255, 0, 0)'];
                }

                var date = (0, _utils.splitDate)(day.day);

                if (day.times.length > 0) {
                    var fullDayData = (0, _utils.displayFullDayData)(day);
                    var fullDayNodes = (0, _utils.displayFullDayNodes)(fullDayData);
                } else {
                    var fullDayNodes = _react2.default.createElement(
                        'span',
                        null,
                        _react2.default.createElement('div', { className: 'no-data-screen' }),
                        _react2.default.createElement(
                            'div',
                            { className: 'no-data' },
                            _react2.default.createElement(
                                'p',
                                null,
                                'No Data'
                            )
                        )
                    );
                }

                return _react2.default.createElement(
                    _DayTile2.default,
                    {
                        key: 'tile-' + i,
                        day: date.day,
                        month: date.month,
                        year: date.year
                    },
                    fullDayNodes
                );
            });
            return _react2.default.createElement(
                'div',
                { className: containerClasses },
                tileNodes
            );
        }
    }]);

    return TileContainer;
}(_react2.default.Component);

exports.default = TileContainer;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactDom = __webpack_require__(2);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tile = function (_React$Component) {
    _inherits(Tile, _React$Component);

    function Tile(props) {
        _classCallCheck(this, Tile);

        var _this = _possibleConstructorReturn(this, (Tile.__proto__ || Object.getPrototypeOf(Tile)).call(this, props));

        _this.state = {
            colors: _this.props.gradients,
            day: _this.props.day,
            month: _this.props.month,
            year: _this.props.year,
            selectedTime: _this.props.selectedTime,
            hasColors: _this.props.hasColors
        };
        return _this;
    }

    _createClass(Tile, [{
        key: 'render',
        value: function render() {
            var that = this;
            var gradientNodes = this.props.gradients.map(function (colors, i) {
                var gradient = 'linear-gradient(' + colors + ')';
                var styles = { background: gradient };
                if (that.props.hasColors) {
                    return _react2.default.createElement('div', { className: 'tile-gradient', key: 'key-' + i, style: styles });
                } else {
                    return "";
                }
            });

            return _react2.default.createElement(
                'div',
                { className: 'tile' },
                _react2.default.createElement(
                    'div',
                    { className: 'date-time-container' },
                    _react2.default.createElement(
                        'div',
                        { className: 'date' },
                        _react2.default.createElement(
                            'span',
                            null,
                            this.props.day
                        ),
                        _react2.default.createElement(
                            'span',
                            { className: 'divider' },
                            '.'
                        ),
                        _react2.default.createElement(
                            'span',
                            null,
                            this.props.month
                        ),
                        _react2.default.createElement(
                            'span',
                            { className: 'divider' },
                            '.'
                        ),
                        _react2.default.createElement(
                            'span',
                            null,
                            this.props.year
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'time' },
                        this.props.selectedTime
                    )
                ),
                _react2.default.createElement('div', { className: this.props.hasColors ? 'hidden' : 'no-data-screen' }),
                _react2.default.createElement(
                    'div',
                    { className: this.props.hasColors ? 'hidden' : 'no-data' },
                    _react2.default.createElement(
                        'p',
                        null,
                        'No Data'
                    )
                ),
                gradientNodes
            );
        }
    }]);

    return Tile;
}(_react2.default.Component);

exports.default = Tile;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactDom = __webpack_require__(2);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DayTile = function (_React$Component) {
    _inherits(DayTile, _React$Component);

    function DayTile(props) {
        _classCallCheck(this, DayTile);

        var _this = _possibleConstructorReturn(this, (DayTile.__proto__ || Object.getPrototypeOf(DayTile)).call(this, props));

        _this.state = {
            day: _this.props.day,
            month: _this.props.month,
            year: _this.props.year
        };
        return _this;
    }

    _createClass(DayTile, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({
                day: nextProps.day,
                month: nextProps.month,
                year: nextProps.year
            });
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'tile ' + this.state.day },
                _react2.default.createElement(
                    'div',
                    { className: 'date-time-container' },
                    _react2.default.createElement(
                        'div',
                        { className: 'date' },
                        _react2.default.createElement(
                            'span',
                            null,
                            this.state.day
                        ),
                        _react2.default.createElement(
                            'span',
                            { className: 'divider' },
                            '.'
                        ),
                        _react2.default.createElement(
                            'span',
                            null,
                            this.state.month
                        ),
                        _react2.default.createElement(
                            'span',
                            { className: 'divider' },
                            '.'
                        ),
                        _react2.default.createElement(
                            'span',
                            null,
                            this.state.year
                        )
                    )
                ),
                this.props.children
            );
        }
    }]);

    return DayTile;
}(_react2.default.Component);

exports.default = DayTile;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactDom = __webpack_require__(2);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _utils = __webpack_require__(6);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TimeHover = function (_React$Component) {
    _inherits(TimeHover, _React$Component);

    function TimeHover(props) {
        _classCallCheck(this, TimeHover);

        var _this = _possibleConstructorReturn(this, (TimeHover.__proto__ || Object.getPrototypeOf(TimeHover)).call(this, props));

        _this.state = { x: -100, y: -100 };
        return _this;
    }

    _createClass(TimeHover, [{
        key: 'updateCoord',
        value: function updateCoord(newX, newY) {
            this.setState({ x: newX, y: newY });
        }
    }, {
        key: 'render',
        value: function render() {
            var that = this;

            function onMouseUpdate(event) {
                var x = event.pageX;
                var y = event.pageY;
                that.updateCoord(x, y);
            }
            function test(event) {
                alert('omfg');
            }
            var height = window.innerHeight;
            var posnPercent = this.state.y / height;
            var time = (0, _utils.getTimeFromPercent)(posnPercent);
            var styles = { position: 'absolute',
                top: this.state.y,
                right: 0
            };
            return _react2.default.createElement(
                'div',
                { className: 'time-hover', onMouseMove: onMouseUpdate },
                _react2.default.createElement(
                    'div',
                    { className: 'time', style: styles },
                    _react2.default.createElement(
                        'span',
                        { className: 'time-text' },
                        time
                    ),
                    _react2.default.createElement('div', { className: 'time-background' })
                )
            );
        }
    }]);

    return TimeHover;
}(_react2.default.Component);

exports.default = TimeHover;

/***/ }),
/* 36 */
/***/ (function(module, exports) {

module.exports = {"data":[{"year":2018,"data":{"months":[{"month":"january","data":[{"day":"09.01.2018","times":[{"time":"20:40","colors":["rgb(5,5,5),rgb(5,5,5),rgb(2,6,5),rgb(9,10,15)","rgb(5,5,5),rgb(3,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(5,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(5,6,5),rgb(4,6,5),rgb(5,6,6),rgb(15,13,20)"]},{"time":"20:50","colors":["rgb(5,5,5),rgb(3,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(4,5,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(4,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(4,6,5),rgb(4,6,6),rgb(5,6,6),rgb(15,13,20)"]},{"time":"21:00","colors":["rgb(3,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"21:10","colors":["rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"21:20","colors":["rgb(3,7,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,5,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"21:40","colors":["rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(4,5,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"21:50","colors":["rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:00","colors":["rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"22:10","colors":["rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,3),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"22:20","colors":["rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,5,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"22:30","colors":["rgb(3,6,2),rgb(2,7,1),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:40","colors":["rgb(3,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,2),rgb(12,13,15)"]},{"time":"22:50","colors":["rgb(3,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"23:00","colors":["rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,5,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,14)"]},{"time":"23:10","colors":["rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,2),rgb(12,13,15)"]},{"time":"23:20","colors":["rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"23:30","colors":["rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,5,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]},{"time":"23:40","colors":["rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,14)"]},{"time":"23:50","colors":["rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,5,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]}]},{"day":"10.01.2018","times":[{"time":"00:00","colors":["rgb(2,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"00:10","colors":["rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]},{"time":"00:20","colors":["rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"00:30","colors":["rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]},{"time":"00:40","colors":["rgb(2,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,14)"]},{"time":"00:50","colors":["rgb(4,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,5,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"01:00","colors":["rgb(3,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"01:10","colors":["rgb(2,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"01:20","colors":["rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,2),rgb(12,13,15)"]},{"time":"01:30","colors":["rgb(3,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,5,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"01:40","colors":["rgb(2,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"01:50","colors":["rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(12,13,14)"]},{"time":"02:00","colors":["rgb(3,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,3),rgb(2,7,2),rgb(12,13,14)"]},{"time":"02:10","colors":["rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"02:20","colors":["rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,5,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"02:30","colors":["rgb(3,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,5,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"02:40","colors":["rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"02:50","colors":["rgb(3,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,2),rgb(12,13,15)"]},{"time":"03:00","colors":["rgb(3,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]},{"time":"03:10","colors":["rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"03:20","colors":["rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"23:00","colors":["rgb(34,10,13),rgb(26,9,11),rgb(20,8,11),rgb(23,12,24)","rgb(52,12,20),rgb(42,11,17),rgb(36,10,18),rgb(32,13,28)","rgb(67,15,32),rgb(60,14,31),rgb(58,14,37),rgb(51,16,44)","rgb(65,14,36),rgb(65,15,45),rgb(73,26,60),rgb(89,47,85)"]},{"time":"23:30","colors":["rgb(5,5,5),rgb(5,5,5),rgb(4,6,5),rgb(9,10,15)","rgb(5,5,5),rgb(4,5,5),rgb(2,6,5),rgb(9,10,15)","rgb(5,5,5),rgb(3,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(5,6,5),rgb(4,6,5),rgb(4,6,6),rgb(15,13,19)"]},{"time":"23:40","colors":["rgb(5,5,5),rgb(3,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(4,5,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(4,6,5),rgb(3,6,5),rgb(3,6,5),rgb(9,10,15)","rgb(5,6,5),rgb(5,6,5),rgb(5,6,6),rgb(15,13,19)"]},{"time":"23:50","colors":["rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,5),rgb(2,6,4),rgb(2,6,4),rgb(9,10,15)","rgb(5,6,9),rgb(4,6,8),rgb(4,6,8),rgb(14,12,21)"]}]},{"day":"11.01.2018","times":[{"time":"00:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"00:10","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"00:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"00:30","colors":["rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"00:50","colors":["rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"01:00","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"01:10","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:30","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:40","colors":["rgb(3,6,5),rgb(3,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"01:50","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"02:00","colors":["rgb(3,7,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"02:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"02:20","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"02:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"02:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"03:00","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,7,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"03:10","colors":["rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,4),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:20","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:30","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,7,4),rgb(3,7,4),rgb(3,7,4),rgb(13,13,18)"]},{"time":"03:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"04:00","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"04:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(10,10,15)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,7,6),rgb(13,13,18)"]},{"time":"04:30","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"04:40","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(10,10,15)","rgb(3,7,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"04:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(10,10,15)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:00","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(14,13,18)"]},{"time":"05:10","colors":["rgb(3,7,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(4,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"05:20","colors":["rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(10,10,16)","rgb(3,6,4),rgb(2,7,4),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"05:30","colors":["rgb(3,7,5),rgb(3,7,5),rgb(3,7,5),rgb(10,10,16)","rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,7,5),rgb(3,7,5),rgb(3,6,5),rgb(10,10,16)","rgb(4,6,7),rgb(4,6,6),rgb(4,6,7),rgb(13,13,19)"]},{"time":"05:40","colors":["rgb(3,7,5),rgb(3,7,5),rgb(3,7,5),rgb(10,10,16)","rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(3,7,5),rgb(3,6,5),rgb(9,10,15)","rgb(4,6,7),rgb(4,6,6),rgb(4,6,6),rgb(14,13,18)"]},{"time":"05:50","colors":["rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(10,10,16)","rgb(3,7,5),rgb(3,6,5),rgb(3,7,5),rgb(9,10,15)","rgb(3,6,5),rgb(3,6,5),rgb(3,7,5),rgb(10,10,16)","rgb(4,6,7),rgb(4,6,7),rgb(4,6,7),rgb(14,13,19)"]},{"time":"06:00","colors":["rgb(3,7,5),rgb(3,7,5),rgb(3,7,5),rgb(10,10,15)","rgb(3,6,5),rgb(3,7,4),rgb(3,7,4),rgb(9,11,15)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(10,10,15)","rgb(4,6,7),rgb(4,6,7),rgb(4,6,6),rgb(14,13,18)"]},{"time":"06:10","colors":["rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(10,10,16)","rgb(3,6,5),rgb(2,7,5),rgb(2,7,5),rgb(9,10,15)","rgb(4,6,5),rgb(3,7,5),rgb(3,6,5),rgb(10,10,15)","rgb(4,6,7),rgb(4,6,7),rgb(4,6,7),rgb(14,13,18)"]},{"time":"06:20","colors":["rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(10,10,16)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(10,10,15)","rgb(4,6,7),rgb(4,6,6),rgb(4,6,6),rgb(14,13,19)"]},{"time":"06:30","colors":["rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(10,10,17)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,16)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(10,10,16)","rgb(4,6,7),rgb(3,6,7),rgb(3,6,7),rgb(14,13,19)"]},{"time":"06:40","colors":["rgb(3,6,8),rgb(3,6,7),rgb(3,6,7),rgb(10,10,18)","rgb(3,6,7),rgb(3,6,7),rgb(3,6,7),rgb(9,10,17)","rgb(3,6,8),rgb(3,6,8),rgb(3,6,8),rgb(10,10,18)","rgb(4,6,10),rgb(3,6,9),rgb(4,6,9),rgb(14,13,21)"]},{"time":"06:50","colors":["rgb(6,7,27),rgb(6,7,27),rgb(6,7,28),rgb(13,11,37)","rgb(6,7,27),rgb(6,8,31),rgb(6,8,32),rgb(13,11,37)","rgb(6,7,29),rgb(7,8,37),rgb(7,8,37),rgb(13,11,40)","rgb(7,8,33),rgb(8,8,41),rgb(8,8,44),rgb(17,14,48)"]},{"time":"07:00","colors":["rgb(19,11,127),rgb(19,14,125),rgb(18,12,119),rgb(23,13,110)","rgb(18,15,125),rgb(19,19,122),rgb(17,12,112),rgb(23,14,117)","rgb(18,13,122),rgb(21,21,128),rgb(18,12,119),rgb(23,14,115)","rgb(18,10,115),rgb(20,11,126),rgb(22,13,137),rgb(29,17,127)"]},{"time":"07:10","colors":["rgb(58,105,253),rgb(59,116,253),rgb(61,119,253),rgb(59,92,241)","rgb(62,122,253),rgb(59,117,254),rgb(60,115,254),rgb(60,94,241)","rgb(68,132,253),rgb(66,130,253),rgb(66,125,253),rgb(61,91,242)","rgb(64,109,253),rgb(66,117,253),rgb(66,114,253),rgb(64,86,239)"]},{"time":"07:20","colors":["rgb(192,254,254),rgb(186,254,254),rgb(202,254,254),rgb(164,235,242)","rgb(183,254,254),rgb(177,254,254),rgb(222,254,254),rgb(172,236,242)","rgb(166,254,254),rgb(175,254,254),rgb(200,254,254),rgb(157,236,242)","rgb(158,254,254),rgb(172,254,254),rgb(188,254,254),rgb(143,235,240)"]},{"time":"07:30","colors":["rgb(254,248,255),rgb(253,248,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(252,249,255),rgb(250,249,255),rgb(235,231,242)","rgb(253,249,255),rgb(251,249,255),rgb(250,249,255),rgb(235,231,242)","rgb(251,249,255),rgb(250,249,255),rgb(250,249,255),rgb(234,231,240)"]},{"time":"07:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"07:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"10:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"11:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"13:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"13:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"14:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"16:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"16:10","colors":["rgb(96,254,254),rgb(103,254,254),rgb(102,254,254),rgb(95,235,242)","rgb(112,254,254),rgb(132,254,254),rgb(135,254,254),rgb(111,235,242)","rgb(131,254,254),rgb(166,254,254),rgb(159,254,254),rgb(130,236,242)","rgb(153,254,254),rgb(162,254,254),rgb(166,254,254),rgb(141,235,240)"]},{"time":"16:20","colors":["rgb(50,60,236),rgb(54,72,246),rgb(53,70,244),rgb(54,58,223)","rgb(52,70,243),rgb(57,84,253),rgb(57,81,251),rgb(58,69,232)","rgb(59,78,251),rgb(61,88,254),rgb(62,86,253),rgb(61,71,237)","rgb(62,75,252),rgb(63,83,253),rgb(64,82,253),rgb(64,66,237)"]},{"time":"16:30","colors":["rgb(14,9,95),rgb(14,9,98),rgb(14,9,92),rgb(20,12,90)","rgb(15,9,105),rgb(16,10,108),rgb(15,10,105),rgb(22,13,102)","rgb(17,10,112),rgb(17,10,114),rgb(18,11,117),rgb(23,13,110)","rgb(19,11,116),rgb(21,11,125),rgb(21,11,125),rgb(27,16,109)"]},{"time":"16:40","colors":["rgb(5,7,17),rgb(5,7,18),rgb(5,7,16),rgb(12,11,25)","rgb(5,7,20),rgb(5,7,21),rgb(5,7,19),rgb(12,11,28)","rgb(6,7,27),rgb(6,7,28),rgb(6,7,28),rgb(12,11,33)","rgb(7,8,31),rgb(7,8,35),rgb(7,8,32),rgb(16,14,36)"]},{"time":"16:50","colors":["rgb(3,6,8),rgb(3,6,7),rgb(3,6,7),rgb(10,10,18)","rgb(3,6,7),rgb(3,6,7),rgb(3,6,7),rgb(9,10,18)","rgb(3,6,7),rgb(3,6,8),rgb(3,6,7),rgb(10,10,18)","rgb(3,6,9),rgb(3,6,9),rgb(3,7,10),rgb(14,13,22)"]},{"time":"17:00","colors":["rgb(3,6,5),rgb(2,6,5),rgb(2,7,5),rgb(10,10,16)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,4),rgb(9,10,16)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"17:10","colors":["rgb(3,7,4),rgb(3,7,4),rgb(3,7,4),rgb(10,10,16)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(10,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"17:20","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(10,10,16)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,16)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"17:30","colors":["rgb(3,7,4),rgb(2,7,4),rgb(3,7,4),rgb(10,10,16)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(10,10,16)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(14,13,19)"]},{"time":"17:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(10,10,16)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"17:50","colors":["rgb(3,7,5),rgb(2,7,4),rgb(2,7,4),rgb(10,10,16)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"18:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(10,10,16)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"18:10","colors":["rgb(3,6,5),rgb(2,6,5),rgb(3,7,5),rgb(10,10,17)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,16)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,4),rgb(9,10,16)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"18:20","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(10,10,16)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"18:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(10,10,16)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"18:40","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(10,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"18:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(10,10,15)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"19:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(10,10,16)","rgb(4,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"19:10","colors":["rgb(3,6,5),rgb(2,7,3),rgb(2,7,4),rgb(10,10,16)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"19:20","colors":["rgb(3,6,4),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"19:30","colors":["rgb(252,246,250),rgb(203,177,187),rgb(155,102,115),rgb(144,77,100)","rgb(214,171,169),rgb(198,132,119),rgb(213,140,113),rgb(214,186,171)","rgb(231,175,155),rgb(239,189,168),rgb(206,175,177),rgb(217,201,202)","rgb(246,231,220),rgb(188,139,145),rgb(205,176,188),rgb(229,217,230)"]},{"time":"19:40","colors":["rgb(3,7,5),rgb(3,7,5),rgb(3,6,6),rgb(15,12,18)","rgb(4,6,4),rgb(6,7,4),rgb(2,7,4),rgb(9,10,14)","rgb(7,6,6),rgb(3,6,3),rgb(2,7,4),rgb(9,10,14)","rgb(7,6,8),rgb(8,6,8),rgb(3,6,6),rgb(13,13,18)"]},{"time":"19:50","colors":["rgb(3,7,5),rgb(3,7,5),rgb(4,6,6),rgb(14,12,18)","rgb(4,7,4),rgb(3,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(7,6,6),rgb(3,6,4),rgb(2,7,4),rgb(9,10,15)","rgb(8,6,9),rgb(10,7,10),rgb(4,6,7),rgb(13,13,18)"]},{"time":"20:00","colors":["rgb(4,6,5),rgb(4,7,5),rgb(5,6,6),rgb(14,11,17)","rgb(5,6,5),rgb(4,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(8,6,6),rgb(4,6,4),rgb(2,7,3),rgb(9,10,14)","rgb(8,6,9),rgb(8,6,9),rgb(4,6,6),rgb(13,13,18)"]},{"time":"20:10","colors":["rgb(4,6,6),rgb(5,6,6),rgb(5,6,6),rgb(14,11,17)","rgb(5,6,5),rgb(4,6,4),rgb(3,7,4),rgb(9,10,15)","rgb(8,6,6),rgb(5,6,4),rgb(3,6,5),rgb(9,10,15)","rgb(9,6,9),rgb(9,6,9),rgb(4,6,7),rgb(14,13,18)"]},{"time":"20:20","colors":["rgb(5,6,6),rgb(5,6,6),rgb(5,6,7),rgb(14,11,18)","rgb(5,6,5),rgb(4,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(7,6,7),rgb(4,6,5),rgb(3,7,5),rgb(9,10,15)","rgb(9,6,9),rgb(8,6,9),rgb(4,6,7),rgb(14,13,19)"]},{"time":"20:30","colors":["rgb(5,6,6),rgb(5,6,6),rgb(5,6,7),rgb(13,10,18)","rgb(5,6,6),rgb(4,6,5),rgb(3,7,5),rgb(9,10,16)","rgb(7,6,7),rgb(4,6,5),rgb(3,7,5),rgb(9,10,16)","rgb(8,6,10),rgb(7,6,9),rgb(4,6,7),rgb(14,13,19)"]},{"time":"20:40","colors":["rgb(5,6,6),rgb(5,6,7),rgb(5,6,7),rgb(13,10,18)","rgb(5,6,5),rgb(4,6,4),rgb(3,7,4),rgb(10,10,15)","rgb(7,6,7),rgb(4,6,5),rgb(3,7,4),rgb(9,10,15)","rgb(8,6,9),rgb(7,6,8),rgb(4,6,7),rgb(14,13,19)"]},{"time":"20:50","colors":["rgb(3,7,5),rgb(3,7,5),rgb(4,6,6),rgb(12,10,17)","rgb(3,7,3),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(4,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"21:00","colors":["rgb(3,6,5),rgb(3,7,5),rgb(4,6,6),rgb(12,10,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,16)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"21:10","colors":["rgb(3,6,5),rgb(3,6,6),rgb(4,6,6),rgb(12,10,18)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,16)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"21:20","colors":["rgb(3,7,5),rgb(3,6,5),rgb(4,6,6),rgb(12,10,17)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"21:30","colors":["rgb(3,6,6),rgb(3,6,6),rgb(4,6,6),rgb(12,10,18)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"21:40","colors":["rgb(3,7,5),rgb(3,7,5),rgb(4,6,6),rgb(12,10,17)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,4),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"21:50","colors":["rgb(3,6,5),rgb(3,6,6),rgb(4,6,7),rgb(12,10,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,5),rgb(9,10,16)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,16)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,7),rgb(13,13,19)"]},{"time":"22:00","colors":["rgb(3,6,5),rgb(3,6,6),rgb(3,6,6),rgb(12,10,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,16)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"22:10","colors":["rgb(3,6,3),rgb(3,7,4),rgb(3,7,5),rgb(12,10,16)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"22:20","colors":["rgb(3,7,4),rgb(3,7,4),rgb(3,7,5),rgb(12,10,16)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"22:30","colors":["rgb(3,6,4),rgb(2,7,4),rgb(3,7,4),rgb(12,10,16)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"22:40","colors":["rgb(3,7,5),rgb(3,6,5),rgb(3,6,6),rgb(11,10,17)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,16)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"22:50","colors":["rgb(3,7,4),rgb(2,7,4),rgb(3,7,5),rgb(11,10,17)","rgb(4,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"23:00","colors":["rgb(3,7,5),rgb(3,7,5),rgb(3,6,6),rgb(11,10,17)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"23:10","colors":["rgb(4,6,5),rgb(4,7,5),rgb(4,6,6),rgb(12,10,17)","rgb(3,6,4),rgb(3,7,4),rgb(3,7,4),rgb(9,10,14)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,6),rgb(3,7,5),rgb(4,6,6),rgb(13,13,18)"]},{"time":"23:20","colors":["rgb(5,6,6),rgb(5,6,6),rgb(6,6,7),rgb(12,10,17)","rgb(3,7,4),rgb(3,7,4),rgb(3,7,4),rgb(10,10,15)","rgb(3,7,4),rgb(3,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(4,6,6),rgb(4,6,6),rgb(4,6,7),rgb(13,13,19)"]},{"time":"23:30","colors":["rgb(6,6,6),rgb(7,6,7),rgb(8,6,8),rgb(14,10,19)","rgb(4,6,5),rgb(5,6,5),rgb(5,6,5),rgb(11,10,16)","rgb(3,7,5),rgb(3,7,5),rgb(4,7,5),rgb(10,10,16)","rgb(4,6,7),rgb(4,6,7),rgb(4,6,7),rgb(14,13,19)"]},{"time":"23:40","colors":["rgb(6,6,6),rgb(8,6,8),rgb(11,6,9),rgb(16,10,18)","rgb(4,6,4),rgb(6,6,5),rgb(7,6,5),rgb(12,10,15)","rgb(4,7,4),rgb(4,7,5),rgb(4,6,5),rgb(10,10,15)","rgb(4,6,6),rgb(4,6,6),rgb(4,6,7),rgb(14,13,18)"]},{"time":"23:50","colors":["rgb(7,6,8),rgb(9,6,8),rgb(11,7,10),rgb(16,10,19)","rgb(5,6,5),rgb(6,6,6),rgb(7,6,6),rgb(12,10,16)","rgb(4,6,5),rgb(5,6,5),rgb(5,6,5),rgb(11,10,15)","rgb(5,6,7),rgb(5,6,7),rgb(5,6,8),rgb(14,13,19)"]}]},{"day":"12.01.2018","times":[{"time":"00:00","colors":["rgb(6,6,6),rgb(8,6,8),rgb(10,6,8),rgb(16,10,19)","rgb(4,6,5),rgb(6,6,5),rgb(6,6,6),rgb(12,10,16)","rgb(4,7,4),rgb(4,7,5),rgb(5,6,5),rgb(11,10,15)","rgb(4,6,6),rgb(4,6,7),rgb(5,6,7),rgb(14,13,19)"]},{"time":"00:10","colors":["rgb(5,6,5),rgb(6,6,6),rgb(9,6,7),rgb(15,10,18)","rgb(3,7,4),rgb(4,6,4),rgb(5,6,4),rgb(11,10,15)","rgb(3,7,4),rgb(3,7,4),rgb(3,7,5),rgb(10,10,15)","rgb(4,6,6),rgb(4,6,6),rgb(4,6,7),rgb(14,13,19)"]},{"time":"00:20","colors":["rgb(4,6,6),rgb(5,6,6),rgb(7,6,8),rgb(14,10,18)","rgb(3,7,4),rgb(3,7,4),rgb(4,7,5),rgb(10,10,15)","rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"00:30","colors":["rgb(3,6,5),rgb(3,7,5),rgb(5,6,6),rgb(13,10,17)","rgb(3,6,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"00:40","colors":["rgb(3,6,5),rgb(3,7,5),rgb(4,6,6),rgb(12,10,17)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"00:50","colors":["rgb(3,7,4),rgb(3,7,4),rgb(4,7,5),rgb(12,10,17)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"01:00","colors":["rgb(3,7,5),rgb(3,7,5),rgb(5,6,6),rgb(14,10,17)","rgb(3,6,3),rgb(2,7,3),rgb(3,7,3),rgb(10,11,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:10","colors":["rgb(6,6,6),rgb(7,6,7),rgb(9,6,8),rgb(16,10,19)","rgb(4,6,5),rgb(5,6,5),rgb(5,6,5),rgb(11,10,15)","rgb(4,7,5),rgb(3,7,5),rgb(4,7,5),rgb(10,10,15)","rgb(4,6,7),rgb(4,6,6),rgb(4,6,7),rgb(14,13,19)"]},{"time":"01:20","colors":["rgb(7,6,7),rgb(8,6,8),rgb(10,6,9),rgb(16,10,19)","rgb(5,6,5),rgb(6,6,5),rgb(6,6,5),rgb(12,10,15)","rgb(4,6,5),rgb(4,6,5),rgb(4,6,5),rgb(10,10,16)","rgb(5,6,7),rgb(5,6,7),rgb(5,6,7),rgb(14,13,19)"]},{"time":"01:30","colors":["rgb(6,6,6),rgb(7,6,7),rgb(9,6,8),rgb(15,10,18)","rgb(5,6,5),rgb(5,6,4),rgb(5,6,5),rgb(11,10,15)","rgb(4,6,5),rgb(4,7,4),rgb(4,7,4),rgb(10,10,15)","rgb(5,6,7),rgb(4,6,6),rgb(4,6,6),rgb(14,13,18)"]},{"time":"01:40","colors":["rgb(6,6,7),rgb(8,6,8),rgb(9,6,9),rgb(16,10,19)","rgb(4,6,5),rgb(5,6,5),rgb(5,6,5),rgb(11,10,15)","rgb(4,7,5),rgb(3,7,4),rgb(4,7,5),rgb(10,10,15)","rgb(4,6,7),rgb(4,6,6),rgb(4,6,7),rgb(14,13,19)"]},{"time":"01:50","colors":["rgb(7,6,7),rgb(9,6,8),rgb(11,6,9),rgb(17,10,19)","rgb(6,6,5),rgb(6,6,5),rgb(6,6,6),rgb(11,10,15)","rgb(5,6,5),rgb(4,6,5),rgb(4,6,5),rgb(10,10,15)","rgb(5,6,7),rgb(4,6,7),rgb(4,6,7),rgb(14,13,18)"]},{"time":"02:00","colors":["rgb(8,6,7),rgb(10,6,8),rgb(12,7,10),rgb(18,11,19)","rgb(6,6,5),rgb(6,6,5),rgb(7,6,6),rgb(12,10,15)","rgb(5,6,5),rgb(5,6,5),rgb(5,6,5),rgb(10,10,15)","rgb(5,6,7),rgb(5,6,7),rgb(4,6,7),rgb(14,13,18)"]},{"time":"02:10","colors":["rgb(7,6,7),rgb(10,6,8),rgb(12,7,10),rgb(18,11,19)","rgb(5,6,5),rgb(6,6,5),rgb(7,6,6),rgb(12,10,15)","rgb(5,6,5),rgb(4,6,5),rgb(5,6,6),rgb(10,10,15)","rgb(5,6,7),rgb(5,6,7),rgb(5,6,7),rgb(14,13,18)"]},{"time":"02:20","colors":["rgb(7,6,7),rgb(8,6,9),rgb(11,6,10),rgb(18,11,20)","rgb(5,6,5),rgb(6,6,5),rgb(6,6,6),rgb(12,10,16)","rgb(4,6,5),rgb(4,6,5),rgb(4,6,6),rgb(10,10,16)","rgb(5,6,7),rgb(5,6,7),rgb(5,6,7),rgb(14,13,19)"]},{"time":"02:30","colors":["rgb(7,6,7),rgb(9,6,8),rgb(11,6,9),rgb(18,11,19)","rgb(5,6,4),rgb(6,6,4),rgb(6,6,5),rgb(12,10,15)","rgb(4,6,4),rgb(4,7,4),rgb(4,6,5),rgb(10,10,15)","rgb(5,6,6),rgb(4,6,6),rgb(4,6,6),rgb(14,13,18)"]},{"time":"02:40","colors":["rgb(6,6,6),rgb(8,6,7),rgb(11,6,9),rgb(18,11,19)","rgb(4,6,5),rgb(5,6,4),rgb(6,6,5),rgb(11,10,15)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(9,10,15)","rgb(4,6,7),rgb(4,6,6),rgb(4,6,6),rgb(13,13,18)"]},{"time":"02:50","colors":["rgb(7,6,7),rgb(9,6,7),rgb(12,7,9),rgb(19,11,20)","rgb(5,6,5),rgb(6,6,5),rgb(7,6,6),rgb(12,10,16)","rgb(4,6,5),rgb(4,6,5),rgb(5,6,5),rgb(10,10,16)","rgb(5,6,7),rgb(4,6,7),rgb(5,6,7),rgb(14,13,18)"]},{"time":"03:00","colors":["rgb(5,6,6),rgb(7,6,6),rgb(9,6,8),rgb(17,11,19)","rgb(4,7,4),rgb(4,7,4),rgb(5,6,5),rgb(10,10,15)","rgb(3,7,4),rgb(3,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(4,6,6),rgb(4,6,6),rgb(4,6,6),rgb(14,13,18)"]},{"time":"03:10","colors":["rgb(4,6,6),rgb(5,6,6),rgb(6,6,6),rgb(15,11,18)","rgb(3,7,4),rgb(3,7,3),rgb(3,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,4),rgb(3,7,4),rgb(10,10,15)","rgb(4,6,6),rgb(3,6,6),rgb(4,6,6),rgb(14,13,18)"]},{"time":"03:20","colors":["rgb(3,7,4),rgb(3,7,4),rgb(4,6,6),rgb(14,11,17)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:30","colors":["rgb(3,6,5),rgb(4,7,5),rgb(4,6,6),rgb(14,11,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,16)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,7),rgb(13,13,18)"]},{"time":"03:40","colors":["rgb(4,6,6),rgb(5,6,6),rgb(6,6,7),rgb(15,11,18)","rgb(3,6,5),rgb(3,7,4),rgb(3,7,5),rgb(9,10,16)","rgb(3,6,5),rgb(2,6,5),rgb(3,7,5),rgb(9,10,16)","rgb(4,6,7),rgb(3,6,7),rgb(3,6,7),rgb(13,13,19)"]},{"time":"03:50","colors":["rgb(4,6,5),rgb(4,6,5),rgb(5,6,6),rgb(14,11,18)","rgb(3,6,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"04:00","colors":["rgb(5,6,5),rgb(6,6,6),rgb(8,6,7),rgb(16,11,18)","rgb(3,7,4),rgb(3,7,3),rgb(4,7,4),rgb(10,10,15)","rgb(3,6,4),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(4,6,6),rgb(3,6,6),rgb(4,6,6),rgb(13,13,18)"]},{"time":"04:10","colors":["rgb(6,6,5),rgb(7,6,6),rgb(9,6,7),rgb(17,11,18)","rgb(4,7,4),rgb(4,7,4),rgb(5,6,4),rgb(10,10,15)","rgb(4,6,4),rgb(3,7,4),rgb(4,7,5),rgb(10,10,15)","rgb(4,6,6),rgb(4,6,6),rgb(4,6,7),rgb(14,13,18)"]},{"time":"04:20","colors":["rgb(5,6,5),rgb(6,6,6),rgb(8,6,7),rgb(17,11,18)","rgb(4,6,4),rgb(4,7,4),rgb(5,6,4),rgb(10,10,15)","rgb(4,6,4),rgb(3,7,3),rgb(3,7,4),rgb(10,10,15)","rgb(4,6,6),rgb(4,6,6),rgb(4,6,6),rgb(14,13,18)"]},{"time":"04:30","colors":["rgb(7,6,7),rgb(8,6,7),rgb(11,7,8),rgb(18,11,19)","rgb(5,6,5),rgb(5,6,4),rgb(6,6,5),rgb(11,10,15)","rgb(4,6,5),rgb(4,7,4),rgb(5,6,5),rgb(11,10,15)","rgb(5,6,7),rgb(5,6,7),rgb(5,6,7),rgb(14,13,19)"]},{"time":"04:40","colors":["rgb(6,6,7),rgb(8,6,8),rgb(12,7,10),rgb(20,11,20)","rgb(4,6,5),rgb(5,6,5),rgb(6,6,6),rgb(12,10,15)","rgb(4,6,5),rgb(4,7,5),rgb(5,6,5),rgb(11,10,16)","rgb(5,6,8),rgb(5,6,8),rgb(5,6,8),rgb(14,13,19)"]},{"time":"04:50","colors":["rgb(8,6,8),rgb(10,6,9),rgb(13,7,10),rgb(20,11,19)","rgb(6,6,6),rgb(6,6,6),rgb(7,6,7),rgb(12,10,16)","rgb(5,6,6),rgb(6,6,6),rgb(6,6,7),rgb(11,10,16)","rgb(6,6,9),rgb(6,6,8),rgb(7,6,9),rgb(15,13,19)"]},{"time":"05:00","colors":["rgb(5,6,5),rgb(6,6,5),rgb(8,6,7),rgb(17,11,19)","rgb(4,6,5),rgb(3,7,4),rgb(4,6,5),rgb(10,10,15)","rgb(4,6,5),rgb(3,7,4),rgb(3,7,5),rgb(10,10,16)","rgb(4,6,7),rgb(4,6,6),rgb(5,6,7),rgb(14,13,19)"]},{"time":"05:10","colors":["rgb(7,6,7),rgb(8,6,8),rgb(11,6,9),rgb(19,11,20)","rgb(5,6,5),rgb(6,6,6),rgb(6,6,6),rgb(12,10,16)","rgb(5,6,6),rgb(5,6,6),rgb(6,6,7),rgb(12,10,17)","rgb(5,6,9),rgb(6,6,9),rgb(7,6,10),rgb(15,13,20)"]},{"time":"05:20","colors":["rgb(7,6,8),rgb(8,6,8),rgb(11,6,10),rgb(19,11,20)","rgb(5,6,6),rgb(5,6,6),rgb(6,6,7),rgb(12,10,17)","rgb(5,6,6),rgb(5,6,6),rgb(6,6,7),rgb(11,10,17)","rgb(5,6,8),rgb(5,6,9),rgb(7,6,10),rgb(15,13,20)"]},{"time":"05:30","colors":["rgb(6,6,7),rgb(7,6,7),rgb(9,6,8),rgb(17,11,19)","rgb(5,6,5),rgb(5,6,5),rgb(5,6,6),rgb(11,10,16)","rgb(4,6,6),rgb(4,7,5),rgb(5,6,6),rgb(11,10,17)","rgb(5,6,8),rgb(5,6,8),rgb(6,6,9),rgb(15,13,20)"]},{"time":"05:40","colors":["rgb(5,6,6),rgb(6,6,6),rgb(7,6,7),rgb(16,11,18)","rgb(4,6,5),rgb(4,7,5),rgb(5,6,5),rgb(10,10,15)","rgb(4,6,5),rgb(4,7,6),rgb(4,6,6),rgb(11,10,16)","rgb(5,6,7),rgb(5,6,8),rgb(6,6,9),rgb(15,13,19)"]},{"time":"05:50","colors":["rgb(5,6,7),rgb(6,6,7),rgb(7,6,8),rgb(16,12,19)","rgb(4,6,5),rgb(4,6,5),rgb(5,6,6),rgb(10,10,16)","rgb(3,6,6),rgb(3,7,6),rgb(4,6,7),rgb(11,10,17)","rgb(4,6,8),rgb(5,6,8),rgb(5,6,9),rgb(14,13,20)"]},{"time":"06:00","colors":["rgb(5,6,6),rgb(5,6,7),rgb(7,6,8),rgb(16,12,19)","rgb(3,7,5),rgb(3,7,5),rgb(4,6,6),rgb(10,10,16)","rgb(3,6,5),rgb(3,7,5),rgb(4,6,6),rgb(11,10,16)","rgb(4,6,7),rgb(4,6,7),rgb(5,6,8),rgb(14,13,19)"]},{"time":"06:10","colors":["rgb(6,6,7),rgb(6,6,7),rgb(8,6,9),rgb(16,12,20)","rgb(4,6,6),rgb(4,6,6),rgb(5,6,6),rgb(10,10,16)","rgb(4,6,6),rgb(4,6,6),rgb(5,6,7),rgb(11,10,17)","rgb(5,6,8),rgb(6,6,9),rgb(7,6,11),rgb(15,13,20)"]},{"time":"06:20","colors":["rgb(4,6,7),rgb(5,6,7),rgb(7,6,8),rgb(16,12,19)","rgb(3,6,6),rgb(4,7,6),rgb(4,6,6),rgb(10,10,16)","rgb(3,6,6),rgb(3,6,6),rgb(4,6,6),rgb(11,10,17)","rgb(5,6,8),rgb(5,6,9),rgb(6,6,10),rgb(15,13,20)"]},{"time":"06:30","colors":["rgb(4,6,8),rgb(6,6,9),rgb(10,6,11),rgb(19,12,21)","rgb(3,6,7),rgb(4,6,7),rgb(6,6,8),rgb(11,10,17)","rgb(3,6,8),rgb(4,6,8),rgb(5,6,9),rgb(11,10,18)","rgb(5,6,10),rgb(5,6,10),rgb(6,7,12),rgb(15,13,21)"]},{"time":"06:40","colors":["rgb(7,7,14),rgb(10,7,15),rgb(14,7,16),rgb(21,12,23)","rgb(6,7,13),rgb(6,7,13),rgb(7,7,13),rgb(12,10,20)","rgb(5,7,14),rgb(6,7,14),rgb(6,7,14),rgb(12,10,21)","rgb(7,7,17),rgb(7,7,17),rgb(8,7,17),rgb(15,13,23)"]},{"time":"06:50","colors":["rgb(12,9,58),rgb(15,8,55),rgb(19,8,49),rgb(25,13,39)","rgb(11,9,59),rgb(11,9,57),rgb(11,9,52),rgb(14,11,39)","rgb(11,9,60),rgb(11,9,58),rgb(11,9,54),rgb(14,11,42)","rgb(12,9,64),rgb(12,9,62),rgb(12,9,57),rgb(18,14,39)"]},{"time":"07:00","colors":["rgb(34,38,153),rgb(34,40,145),rgb(36,36,133),rgb(33,24,92)","rgb(33,44,159),rgb(33,45,155),rgb(32,40,143),rgb(26,26,97)","rgb(34,44,166),rgb(33,45,160),rgb(32,40,147),rgb(26,26,99)","rgb(35,39,168),rgb(35,40,163),rgb(33,36,147),rgb(26,22,85)"]},{"time":"07:10","colors":["rgb(84,152,253),rgb(81,139,253),rgb(78,118,253),rgb(60,69,199)","rgb(90,176,254),rgb(89,162,253),rgb(82,133,253),rgb(58,78,200)","rgb(93,176,254),rgb(91,165,253),rgb(85,137,253),rgb(61,78,200)","rgb(91,167,253),rgb(90,157,253),rgb(84,129,250),rgb(54,60,171)"]},{"time":"07:20","colors":["rgb(224,254,254),rgb(216,254,254),rgb(192,254,254),rgb(121,181,237)","rgb(238,254,254),rgb(233,254,254),rgb(215,254,254),rgb(139,186,233)","rgb(245,253,254),rgb(239,254,254),rgb(224,254,254),rgb(148,185,235)","rgb(243,253,254),rgb(239,254,254),rgb(219,251,254),rgb(124,145,221)"]},{"time":"07:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(193,221,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(196,212,241)","rgb(254,248,255),rgb(253,248,255),rgb(251,249,255),rgb(203,215,241)","rgb(254,248,255),rgb(254,248,255),rgb(250,248,254),rgb(174,187,236)"]},{"time":"07:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(224,232,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(219,232,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(228,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,254),rgb(206,225,238)"]},{"time":"07:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(233,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(233,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(234,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(218,230,238)"]},{"time":"08:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(230,231,240)"]},{"time":"08:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(234,231,239)"]},{"time":"08:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,240)"]},{"time":"08:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"09:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,240)"]},{"time":"14:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,240)"]},{"time":"15:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,230,240)"]},{"time":"15:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(228,231,240)"]},{"time":"15:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(228,232,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(232,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(234,231,241)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(219,230,238)"]},{"time":"15:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(205,228,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(211,230,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(222,230,241)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,254),rgb(200,218,237)"]},{"time":"15:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(251,249,254),rgb(186,199,240)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(199,205,240)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(207,209,239)","rgb(254,248,255),rgb(254,248,255),rgb(251,247,254),rgb(179,183,235)"]},{"time":"16:00","colors":["rgb(252,249,255),rgb(250,250,255),rgb(241,249,254),rgb(150,173,226)","rgb(253,249,255),rgb(251,249,255),rgb(250,250,254),rgb(173,186,229)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(182,184,233)","rgb(254,248,255),rgb(254,248,255),rgb(248,246,254),rgb(150,147,219)"]},{"time":"16:10","colors":["rgb(109,204,253),rgb(110,204,254),rgb(104,176,251),rgb(70,90,183)","rgb(117,218,254),rgb(119,219,254),rgb(115,199,254),rgb(78,110,194)","rgb(123,224,254),rgb(123,221,253),rgb(122,211,254),rgb(85,118,194)","rgb(122,221,253),rgb(123,220,253),rgb(120,205,251),rgb(72,91,165)"]},{"time":"16:20","colors":["rgb(42,43,172),rgb(39,43,161),rgb(35,37,146),rgb(32,26,97)","rgb(46,55,184),rgb(43,53,172),rgb(39,46,156),rgb(31,30,106)","rgb(48,56,191),rgb(47,56,184),rgb(43,48,166),rgb(32,30,110)","rgb(49,49,196),rgb(49,50,189),rgb(45,44,174),rgb(30,25,95)"]},{"time":"16:30","colors":["rgb(12,9,67),rgb(12,9,62),rgb(11,9,55),rgb(19,14,42)","rgb(13,9,70),rgb(12,9,65),rgb(11,9,59),rgb(15,12,46)","rgb(14,9,73),rgb(13,9,68),rgb(12,9,63),rgb(16,12,47)","rgb(16,9,75),rgb(16,9,72),rgb(15,9,66),rgb(18,14,42)"]},{"time":"16:40","colors":["rgb(7,7,15),rgb(6,7,14),rgb(6,7,14),rgb(17,13,22)","rgb(7,7,15),rgb(6,7,14),rgb(6,7,14),rgb(11,10,20)","rgb(7,7,16),rgb(7,7,16),rgb(7,7,15),rgb(12,10,21)","rgb(8,7,21),rgb(8,7,20),rgb(8,7,18),rgb(15,13,22)"]},{"time":"16:50","colors":["rgb(5,6,9),rgb(5,6,9),rgb(6,6,9),rgb(17,13,20)","rgb(6,6,8),rgb(6,6,8),rgb(6,6,8),rgb(12,10,18)","rgb(6,6,10),rgb(6,6,10),rgb(6,6,10),rgb(12,10,18)","rgb(7,6,12),rgb(7,6,12),rgb(7,6,12),rgb(15,13,20)"]},{"time":"17:00","colors":["rgb(5,6,8),rgb(6,6,7),rgb(6,6,7),rgb(16,13,19)","rgb(5,6,7),rgb(6,6,7),rgb(6,6,7),rgb(12,10,17)","rgb(6,6,9),rgb(6,6,8),rgb(6,6,9),rgb(12,10,18)","rgb(7,6,11),rgb(7,6,11),rgb(7,6,11),rgb(15,13,20)"]},{"time":"17:10","colors":["rgb(5,6,7),rgb(5,6,7),rgb(5,6,7),rgb(16,12,18)","rgb(5,6,6),rgb(6,6,6),rgb(6,6,7),rgb(11,10,16)","rgb(6,6,8),rgb(6,6,7),rgb(6,6,8),rgb(12,10,17)","rgb(7,6,10),rgb(7,6,10),rgb(7,6,10),rgb(14,13,19)"]},{"time":"17:20","colors":["rgb(5,6,7),rgb(5,6,7),rgb(6,6,7),rgb(16,12,19)","rgb(5,6,6),rgb(5,6,6),rgb(6,6,6),rgb(11,10,16)","rgb(6,6,7),rgb(6,6,7),rgb(6,6,7),rgb(11,10,17)","rgb(7,6,10),rgb(7,6,10),rgb(7,6,10),rgb(14,13,19)"]},{"time":"17:40","colors":["rgb(6,6,8),rgb(6,6,7),rgb(6,6,7),rgb(17,13,19)","rgb(6,6,7),rgb(6,6,7),rgb(6,6,6),rgb(12,10,16)","rgb(7,6,9),rgb(6,6,8),rgb(6,6,8),rgb(12,10,17)","rgb(8,6,11),rgb(8,6,11),rgb(8,6,11),rgb(15,13,20)"]},{"time":"17:50","colors":["rgb(6,6,8),rgb(6,6,7),rgb(7,6,8),rgb(17,13,19)","rgb(6,6,7),rgb(6,6,7),rgb(6,6,7),rgb(12,10,17)","rgb(7,6,9),rgb(6,6,8),rgb(7,6,9),rgb(12,10,18)","rgb(8,6,11),rgb(9,6,11),rgb(8,6,11),rgb(15,13,20)"]},{"time":"18:00","colors":["rgb(7,6,9),rgb(6,6,8),rgb(7,6,8),rgb(17,13,20)","rgb(6,6,8),rgb(6,6,7),rgb(6,6,7),rgb(12,10,17)","rgb(7,6,9),rgb(7,6,8),rgb(7,6,9),rgb(12,10,18)","rgb(8,6,11),rgb(8,6,11),rgb(9,6,12),rgb(16,13,21)"]},{"time":"18:10","colors":["rgb(6,6,8),rgb(6,6,8),rgb(6,6,8),rgb(17,13,19)","rgb(6,6,7),rgb(6,6,7),rgb(6,6,7),rgb(12,10,16)","rgb(6,6,8),rgb(6,6,8),rgb(6,6,8),rgb(12,10,17)","rgb(7,6,11),rgb(8,6,11),rgb(8,6,11),rgb(16,13,20)"]},{"time":"18:20","colors":["rgb(6,6,7),rgb(6,6,7),rgb(6,6,7),rgb(17,13,19)","rgb(6,6,7),rgb(6,6,6),rgb(6,6,7),rgb(11,10,16)","rgb(6,6,8),rgb(6,6,8),rgb(6,6,8),rgb(12,10,17)","rgb(7,6,10),rgb(7,6,11),rgb(8,6,11),rgb(15,13,20)"]},{"time":"18:40","colors":["rgb(7,6,9),rgb(6,6,8),rgb(7,6,8),rgb(17,13,20)","rgb(6,6,7),rgb(6,6,7),rgb(6,6,7),rgb(11,10,17)","rgb(6,6,8),rgb(6,6,8),rgb(7,6,9),rgb(12,10,18)","rgb(7,6,11),rgb(8,6,11),rgb(8,6,12),rgb(16,13,21)"]},{"time":"18:50","colors":["rgb(6,6,8),rgb(6,6,7),rgb(6,6,8),rgb(17,13,20)","rgb(5,6,7),rgb(6,6,6),rgb(6,6,7),rgb(11,10,17)","rgb(5,6,8),rgb(6,6,7),rgb(6,6,9),rgb(12,10,18)","rgb(6,6,11),rgb(7,6,10),rgb(8,6,11),rgb(15,13,21)"]},{"time":"19:00","colors":["rgb(6,6,8),rgb(6,6,7),rgb(6,6,8),rgb(17,13,20)","rgb(5,6,7),rgb(6,6,6),rgb(6,6,7),rgb(12,10,17)","rgb(6,6,7),rgb(6,6,7),rgb(6,6,8),rgb(12,10,18)","rgb(7,6,11),rgb(7,6,10),rgb(7,6,11),rgb(15,13,21)"]},{"time":"19:10","colors":["rgb(7,6,8),rgb(7,6,8),rgb(7,6,8),rgb(18,13,20)","rgb(6,6,7),rgb(6,6,7),rgb(6,6,7),rgb(12,10,17)","rgb(6,6,8),rgb(6,6,8),rgb(6,6,9),rgb(12,10,18)","rgb(7,6,10),rgb(7,6,11),rgb(8,6,12),rgb(16,13,21)"]},{"time":"19:20","colors":["rgb(7,6,8),rgb(6,6,7),rgb(7,6,8),rgb(17,13,19)","rgb(6,6,6),rgb(6,6,6),rgb(6,6,7),rgb(11,10,16)","rgb(6,6,8),rgb(6,6,7),rgb(6,6,8),rgb(12,10,18)","rgb(7,6,11),rgb(7,6,10),rgb(8,6,12),rgb(15,13,21)"]},{"time":"19:30","colors":["rgb(7,6,8),rgb(7,6,8),rgb(7,6,8),rgb(18,13,20)","rgb(5,6,6),rgb(6,6,6),rgb(6,6,7),rgb(12,10,17)","rgb(6,6,7),rgb(6,6,7),rgb(6,6,9),rgb(12,10,18)","rgb(7,6,10),rgb(7,6,10),rgb(8,6,11),rgb(15,13,21)"]},{"time":"19:40","colors":["rgb(7,6,8),rgb(6,6,8),rgb(7,6,8),rgb(18,13,20)","rgb(6,6,7),rgb(6,6,7),rgb(6,6,7),rgb(12,10,17)","rgb(6,6,8),rgb(6,6,8),rgb(7,6,9),rgb(12,10,18)","rgb(7,6,10),rgb(7,6,11),rgb(8,6,12),rgb(15,13,21)"]},{"time":"19:50","colors":["rgb(7,6,8),rgb(7,6,8),rgb(7,6,8),rgb(18,13,20)","rgb(6,6,7),rgb(6,6,7),rgb(6,6,7),rgb(11,10,16)","rgb(6,6,7),rgb(6,6,7),rgb(7,6,8),rgb(12,10,18)","rgb(7,6,10),rgb(8,6,10),rgb(8,6,11),rgb(15,13,20)"]},{"time":"20:00","colors":["rgb(6,6,8),rgb(6,6,8),rgb(7,6,8),rgb(17,13,20)","rgb(5,6,7),rgb(5,6,6),rgb(6,6,7),rgb(11,10,17)","rgb(5,6,7),rgb(6,6,7),rgb(6,6,8),rgb(12,10,18)","rgb(6,6,10),rgb(7,6,11),rgb(8,6,11),rgb(15,13,21)"]},{"time":"20:10","colors":["rgb(6,6,7),rgb(6,6,7),rgb(6,6,7),rgb(17,12,19)","rgb(5,6,6),rgb(6,6,6),rgb(6,6,6),rgb(11,10,16)","rgb(5,6,7),rgb(6,6,7),rgb(6,6,7),rgb(12,10,17)","rgb(6,6,9),rgb(7,6,10),rgb(7,6,10),rgb(15,13,20)"]},{"time":"20:20","colors":["rgb(6,6,7),rgb(6,6,6),rgb(6,6,7),rgb(17,12,19)","rgb(5,6,6),rgb(5,6,6),rgb(6,6,6),rgb(11,10,16)","rgb(5,6,7),rgb(5,6,7),rgb(6,6,7),rgb(12,10,17)","rgb(6,6,9),rgb(7,6,9),rgb(7,6,10),rgb(15,13,20)"]},{"time":"20:30","colors":["rgb(5,6,7),rgb(5,6,6),rgb(6,6,7),rgb(17,13,19)","rgb(4,6,6),rgb(4,6,6),rgb(4,6,6),rgb(11,10,16)","rgb(5,6,6),rgb(4,6,6),rgb(5,6,7),rgb(11,10,16)","rgb(5,6,8),rgb(6,6,9),rgb(6,6,9),rgb(15,13,19)"]},{"time":"20:40","colors":["rgb(6,6,7),rgb(6,6,7),rgb(6,6,7),rgb(17,13,19)","rgb(5,6,6),rgb(5,6,6),rgb(5,6,6),rgb(11,10,16)","rgb(5,6,7),rgb(5,6,6),rgb(6,6,7),rgb(12,10,17)","rgb(6,6,9),rgb(6,6,9),rgb(7,6,10),rgb(15,13,20)"]},{"time":"20:50","colors":["rgb(7,6,8),rgb(6,6,7),rgb(7,6,8),rgb(17,13,19)","rgb(6,6,6),rgb(6,6,6),rgb(6,6,6),rgb(12,10,16)","rgb(6,6,7),rgb(6,6,7),rgb(6,6,7),rgb(12,10,17)","rgb(7,6,10),rgb(7,6,10),rgb(7,6,10),rgb(15,13,20)"]},{"time":"21:00","colors":["rgb(6,6,8),rgb(6,6,7),rgb(7,6,8),rgb(18,13,20)","rgb(5,6,6),rgb(5,6,6),rgb(5,6,6),rgb(11,10,16)","rgb(5,6,7),rgb(5,6,7),rgb(5,6,7),rgb(11,10,17)","rgb(6,6,9),rgb(6,6,9),rgb(6,6,10),rgb(15,13,20)"]},{"time":"21:10","colors":["rgb(7,6,8),rgb(7,6,8),rgb(8,6,8),rgb(18,13,20)","rgb(5,6,6),rgb(5,6,6),rgb(5,6,6),rgb(11,10,16)","rgb(5,6,6),rgb(5,6,6),rgb(6,6,7),rgb(11,10,17)","rgb(6,6,9),rgb(7,6,9),rgb(7,6,9),rgb(15,13,19)"]},{"time":"21:20","colors":["rgb(7,6,8),rgb(7,6,8),rgb(7,6,8),rgb(18,13,19)","rgb(6,6,6),rgb(6,6,6),rgb(6,6,6),rgb(11,10,16)","rgb(6,6,7),rgb(6,6,6),rgb(6,6,7),rgb(12,10,17)","rgb(6,6,9),rgb(6,6,9),rgb(6,6,10),rgb(15,13,20)"]},{"time":"21:30","colors":["rgb(6,6,7),rgb(6,6,6),rgb(7,6,7),rgb(18,12,18)","rgb(5,6,5),rgb(5,6,5),rgb(5,6,6),rgb(11,10,15)","rgb(5,6,6),rgb(5,6,6),rgb(6,6,6),rgb(11,10,16)","rgb(6,6,8),rgb(6,6,8),rgb(6,6,9),rgb(15,13,19)"]},{"time":"21:40","colors":["rgb(7,6,8),rgb(7,6,7),rgb(8,6,9),rgb(18,13,20)","rgb(6,6,6),rgb(6,6,6),rgb(6,6,6),rgb(11,10,16)","rgb(5,6,6),rgb(6,6,6),rgb(6,6,7),rgb(11,10,17)","rgb(6,6,9),rgb(6,6,9),rgb(7,6,9),rgb(15,13,20)"]},{"time":"21:50","colors":["rgb(7,6,7),rgb(8,6,8),rgb(9,6,8),rgb(19,13,20)","rgb(6,6,5),rgb(6,6,6),rgb(6,6,6),rgb(11,10,16)","rgb(5,6,6),rgb(5,6,6),rgb(6,6,7),rgb(11,10,17)","rgb(6,6,8),rgb(6,6,9),rgb(6,6,9),rgb(15,13,20)"]},{"time":"22:00","colors":["rgb(7,6,7),rgb(7,6,7),rgb(8,6,8),rgb(19,13,19)","rgb(5,6,6),rgb(5,6,5),rgb(5,6,6),rgb(11,10,16)","rgb(5,6,6),rgb(5,6,6),rgb(5,6,6),rgb(11,10,16)","rgb(5,6,8),rgb(6,6,8),rgb(6,6,9),rgb(15,13,20)"]},{"time":"22:10","colors":["rgb(6,6,7),rgb(6,6,7),rgb(8,6,7),rgb(19,13,19)","rgb(5,6,5),rgb(5,6,5),rgb(5,6,5),rgb(11,10,16)","rgb(4,6,6),rgb(4,7,5),rgb(4,6,6),rgb(11,10,16)","rgb(5,6,8),rgb(5,6,8),rgb(5,6,8),rgb(14,13,19)"]},{"time":"22:20","colors":["rgb(6,6,6),rgb(6,6,6),rgb(7,6,6),rgb(18,13,19)","rgb(5,6,5),rgb(4,6,4),rgb(5,6,5),rgb(10,10,15)","rgb(4,6,6),rgb(4,7,5),rgb(4,6,5),rgb(10,10,16)","rgb(5,6,8),rgb(5,6,7),rgb(5,6,8),rgb(14,13,19)"]},{"time":"22:30","colors":["rgb(6,6,6),rgb(6,6,6),rgb(6,6,6),rgb(18,13,19)","rgb(4,6,5),rgb(4,6,5),rgb(4,7,5),rgb(10,10,15)","rgb(4,6,5),rgb(4,7,5),rgb(4,6,6),rgb(10,10,16)","rgb(5,6,7),rgb(5,6,7),rgb(5,6,7),rgb(14,13,19)"]},{"time":"22:40","colors":["rgb(5,6,6),rgb(5,6,6),rgb(6,6,6),rgb(18,12,18)","rgb(4,6,5),rgb(4,7,5),rgb(4,7,5),rgb(10,10,15)","rgb(4,6,5),rgb(3,7,5),rgb(4,7,5),rgb(10,10,15)","rgb(5,6,7),rgb(4,6,7),rgb(5,6,7),rgb(14,13,18)"]},{"time":"22:50","colors":["rgb(5,6,6),rgb(5,6,5),rgb(5,6,6),rgb(17,13,18)","rgb(4,7,4),rgb(3,7,4),rgb(4,7,5),rgb(10,10,15)","rgb(4,6,5),rgb(3,7,5),rgb(4,7,6),rgb(10,10,16)","rgb(5,6,7),rgb(5,6,7),rgb(5,6,8),rgb(14,13,19)"]},{"time":"23:00","colors":["rgb(5,6,6),rgb(5,6,6),rgb(5,6,6),rgb(17,13,19)","rgb(4,7,5),rgb(4,7,5),rgb(4,7,5),rgb(10,10,16)","rgb(4,6,5),rgb(3,7,5),rgb(4,7,5),rgb(10,10,16)","rgb(4,6,7),rgb(4,6,7),rgb(5,6,7),rgb(14,13,19)"]},{"time":"23:10","colors":["rgb(5,6,6),rgb(4,6,5),rgb(5,6,5),rgb(17,13,18)","rgb(4,6,5),rgb(3,7,5),rgb(3,7,5),rgb(10,10,15)","rgb(4,6,5),rgb(3,7,5),rgb(3,7,5),rgb(10,10,15)","rgb(5,6,8),rgb(4,6,7),rgb(4,6,7),rgb(14,13,19)"]},{"time":"23:20","colors":["rgb(4,6,5),rgb(4,7,4),rgb(5,6,5),rgb(16,13,18)","rgb(3,7,4),rgb(3,7,3),rgb(3,7,4),rgb(9,10,14)","rgb(3,7,5),rgb(3,7,4),rgb(3,7,5),rgb(9,10,16)","rgb(4,6,7),rgb(4,6,6),rgb(4,6,6),rgb(14,13,18)"]},{"time":"23:30","colors":["rgb(4,6,6),rgb(4,7,5),rgb(4,6,5),rgb(16,13,18)","rgb(3,6,5),rgb(3,7,3),rgb(3,7,3),rgb(9,11,14)","rgb(4,6,4),rgb(3,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(4,6,6),rgb(4,6,6),rgb(4,6,6),rgb(13,13,18)"]},{"time":"23:40","colors":["rgb(4,6,5),rgb(4,7,5),rgb(4,6,5),rgb(16,13,18)","rgb(4,6,4),rgb(3,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(3,7,4),rgb(3,7,5),rgb(10,10,15)","rgb(4,6,7),rgb(4,6,6),rgb(4,6,7),rgb(14,13,18)"]},{"time":"23:50","colors":["rgb(4,6,5),rgb(4,7,5),rgb(4,6,5),rgb(16,12,18)","rgb(3,7,4),rgb(3,7,4),rgb(3,7,3),rgb(9,11,14)","rgb(3,7,4),rgb(3,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(4,6,6),rgb(4,6,6),rgb(4,6,6),rgb(13,13,18)"]}]},{"day":"13.01.2018","times":[{"time":"00:00","colors":["rgb(4,6,5),rgb(3,7,4),rgb(4,7,4),rgb(16,13,17)","rgb(3,7,4),rgb(3,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,7,5),rgb(2,7,4),rgb(3,7,4),rgb(9,10,14)","rgb(4,6,6),rgb(4,6,6),rgb(4,6,6),rgb(14,13,18)"]},{"time":"00:10","colors":["rgb(4,7,5),rgb(3,7,5),rgb(4,7,5),rgb(16,13,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"00:30","colors":["rgb(3,7,5),rgb(3,7,5),rgb(4,7,5),rgb(16,13,18)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,11,14)","rgb(3,7,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,7),rgb(4,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"00:40","colors":["rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(15,13,18)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(9,10,15)","rgb(4,6,7),rgb(4,6,7),rgb(3,6,6),rgb(13,13,18)"]},{"time":"00:50","colors":["rgb(3,7,5),rgb(3,7,4),rgb(4,7,5),rgb(15,13,18)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:00","colors":["rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(15,13,18)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:10","colors":["rgb(3,7,5),rgb(3,7,5),rgb(4,7,5),rgb(16,13,18)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:20","colors":["rgb(3,6,5),rgb(3,7,4),rgb(3,7,5),rgb(15,13,18)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:30","colors":["rgb(3,7,5),rgb(3,7,4),rgb(3,7,5),rgb(15,13,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:40","colors":["rgb(3,7,4),rgb(3,7,3),rgb(3,7,4),rgb(15,13,17)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,7,5),rgb(3,7,6),rgb(13,13,18)"]},{"time":"01:50","colors":["rgb(3,6,5),rgb(3,7,4),rgb(3,7,4),rgb(15,13,17)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,17)"]},{"time":"02:10","colors":["rgb(3,7,4),rgb(3,7,4),rgb(3,7,4),rgb(15,13,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"02:20","colors":["rgb(3,7,5),rgb(3,7,4),rgb(3,7,5),rgb(15,13,17)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"02:30","colors":["rgb(3,7,5),rgb(3,7,4),rgb(3,7,4),rgb(15,13,17)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"02:40","colors":["rgb(3,7,4),rgb(3,7,4),rgb(3,7,4),rgb(15,13,17)","rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"02:50","colors":["rgb(3,6,5),rgb(3,7,4),rgb(3,7,5),rgb(15,13,18)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:00","colors":["rgb(3,7,4),rgb(3,7,3),rgb(3,7,4),rgb(15,13,17)","rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,5),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:10","colors":["rgb(3,7,5),rgb(3,7,4),rgb(3,7,4),rgb(15,13,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:20","colors":["rgb(3,7,5),rgb(3,7,5),rgb(4,7,5),rgb(16,13,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,7),rgb(13,13,18)"]},{"time":"03:30","colors":["rgb(3,7,5),rgb(3,7,4),rgb(4,7,5),rgb(16,13,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:40","colors":["rgb(4,7,5),rgb(3,7,4),rgb(4,7,5),rgb(16,13,18)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:50","colors":["rgb(5,6,7),rgb(4,6,5),rgb(5,6,6),rgb(16,13,19)","rgb(4,6,5),rgb(3,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(9,10,16)","rgb(4,6,8),rgb(4,6,7),rgb(4,6,7),rgb(13,13,19)"]},{"time":"04:00","colors":["rgb(4,6,6),rgb(4,6,5),rgb(5,6,6),rgb(16,13,18)","rgb(4,6,5),rgb(3,7,4),rgb(3,7,4),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(9,10,15)","rgb(4,6,7),rgb(4,6,6),rgb(4,6,7),rgb(13,13,18)"]},{"time":"04:10","colors":["rgb(6,6,6),rgb(5,6,5),rgb(5,6,6),rgb(17,13,18)","rgb(4,6,5),rgb(4,7,4),rgb(3,7,5),rgb(10,10,14)","rgb(4,7,5),rgb(3,7,4),rgb(3,7,5),rgb(10,10,15)","rgb(5,6,7),rgb(4,6,7),rgb(4,6,7),rgb(14,13,18)"]},{"time":"04:20","colors":["rgb(6,6,6),rgb(6,6,5),rgb(6,6,6),rgb(17,13,18)","rgb(4,6,5),rgb(4,7,4),rgb(4,7,4),rgb(10,10,15)","rgb(4,6,5),rgb(3,7,5),rgb(4,7,5),rgb(10,10,16)","rgb(5,6,7),rgb(5,6,7),rgb(5,6,7),rgb(14,13,19)"]},{"time":"04:30","colors":["rgb(6,6,7),rgb(6,6,6),rgb(7,6,7),rgb(18,12,19)","rgb(4,6,5),rgb(4,6,4),rgb(4,6,5),rgb(10,10,14)","rgb(4,7,5),rgb(4,7,5),rgb(4,7,5),rgb(10,10,15)","rgb(4,6,8),rgb(5,6,7),rgb(5,6,8),rgb(14,13,19)"]},{"time":"04:40","colors":["rgb(6,6,7),rgb(7,6,7),rgb(8,6,8),rgb(19,13,20)","rgb(4,6,5),rgb(4,6,5),rgb(5,6,5),rgb(10,10,15)","rgb(4,6,5),rgb(4,7,5),rgb(4,6,5),rgb(10,10,16)","rgb(5,6,7),rgb(5,6,7),rgb(5,6,8),rgb(14,13,19)"]},{"time":"04:50","colors":["rgb(6,6,7),rgb(6,6,6),rgb(7,6,7),rgb(18,12,19)","rgb(4,6,5),rgb(4,7,5),rgb(4,6,6),rgb(10,10,15)","rgb(4,6,6),rgb(4,7,6),rgb(4,6,6),rgb(10,10,16)","rgb(5,6,8),rgb(5,6,8),rgb(5,6,8),rgb(14,13,19)"]},{"time":"05:00","colors":["rgb(6,6,7),rgb(6,6,7),rgb(7,6,7),rgb(18,13,19)","rgb(4,6,5),rgb(4,6,5),rgb(4,6,5),rgb(10,10,15)","rgb(4,6,5),rgb(4,7,5),rgb(4,6,6),rgb(10,10,16)","rgb(5,6,8),rgb(5,6,8),rgb(5,6,8),rgb(14,13,19)"]},{"time":"05:10","colors":["rgb(5,6,7),rgb(5,6,6),rgb(6,6,7),rgb(18,13,19)","rgb(4,6,5),rgb(4,7,5),rgb(4,6,5),rgb(10,10,15)","rgb(4,6,6),rgb(4,7,5),rgb(4,6,6),rgb(11,10,16)","rgb(5,6,8),rgb(5,6,7),rgb(5,6,8),rgb(14,13,19)"]},{"time":"05:20","colors":["rgb(5,6,6),rgb(5,6,6),rgb(7,6,6),rgb(18,12,19)","rgb(4,6,5),rgb(3,7,5),rgb(4,6,5),rgb(10,10,15)","rgb(4,6,5),rgb(3,7,5),rgb(4,6,6),rgb(11,10,16)","rgb(5,6,7),rgb(5,6,7),rgb(5,6,8),rgb(15,13,19)"]},{"time":"05:30","colors":["rgb(5,6,6),rgb(5,6,6),rgb(7,6,7),rgb(18,13,19)","rgb(4,6,5),rgb(4,7,4),rgb(4,6,5),rgb(10,10,15)","rgb(4,6,5),rgb(3,7,5),rgb(4,6,5),rgb(11,10,16)","rgb(5,6,7),rgb(5,6,7),rgb(5,6,8),rgb(14,13,19)"]},{"time":"05:40","colors":["rgb(5,6,6),rgb(5,6,6),rgb(6,6,7),rgb(17,12,19)","rgb(3,6,5),rgb(3,7,5),rgb(4,7,5),rgb(10,10,15)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(10,10,16)","rgb(4,6,7),rgb(4,6,7),rgb(5,6,8),rgb(14,13,19)"]},{"time":"05:50","colors":["rgb(4,6,6),rgb(4,7,6),rgb(5,6,6),rgb(17,12,18)","rgb(3,6,4),rgb(3,7,4),rgb(3,7,5),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,5),rgb(3,7,5),rgb(10,10,16)","rgb(4,6,7),rgb(3,6,7),rgb(4,6,7),rgb(14,13,19)"]},{"time":"06:00","colors":["rgb(3,6,5),rgb(3,7,5),rgb(4,7,5),rgb(16,12,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(10,10,16)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"06:10","colors":["rgb(3,7,5),rgb(3,7,5),rgb(4,6,6),rgb(17,12,18)","rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(10,10,15)","rgb(3,6,5),rgb(2,6,5),rgb(3,6,5),rgb(10,10,16)","rgb(4,6,7),rgb(3,6,7),rgb(4,6,7),rgb(14,13,19)"]},{"time":"06:20","colors":["rgb(3,6,6),rgb(3,6,6),rgb(5,6,6),rgb(17,12,19)","rgb(3,6,5),rgb(2,6,5),rgb(3,6,5),rgb(9,10,16)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(10,10,16)","rgb(4,6,8),rgb(4,6,7),rgb(4,6,8),rgb(14,13,19)"]},{"time":"06:30","colors":["rgb(4,6,7),rgb(4,6,7),rgb(6,6,8),rgb(18,12,20)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(10,10,16)","rgb(3,6,7),rgb(3,6,7),rgb(4,6,7),rgb(10,10,17)","rgb(5,6,9),rgb(5,6,9),rgb(5,6,9),rgb(14,13,20)"]},{"time":"06:40","colors":["rgb(6,7,14),rgb(6,7,13),rgb(7,7,13),rgb(18,13,22)","rgb(4,7,13),rgb(4,7,12),rgb(5,7,12),rgb(10,10,19)","rgb(5,7,13),rgb(4,7,13),rgb(5,7,12),rgb(11,10,20)","rgb(6,7,16),rgb(6,7,16),rgb(6,7,15),rgb(14,13,22)"]},{"time":"06:50","colors":["rgb(11,9,59),rgb(10,9,55),rgb(11,9,49),rgb(21,14,39)","rgb(11,8,63),rgb(11,9,57),rgb(10,9,53),rgb(13,12,41)","rgb(12,8,65),rgb(11,9,58),rgb(11,9,56),rgb(14,12,43)","rgb(12,8,66),rgb(12,9,62),rgb(11,9,56),rgb(17,14,39)"]},{"time":"07:00","colors":["rgb(42,33,176),rgb(41,36,164),rgb(38,29,150),rgb(34,20,95)","rgb(46,45,175),rgb(44,44,164),rgb(39,38,150),rgb(30,23,105)","rgb(47,44,182),rgb(45,44,170),rgb(41,38,160),rgb(32,23,109)","rgb(46,33,191),rgb(45,34,183),rgb(41,28,166),rgb(30,19,91)"]},{"time":"07:10","colors":["rgb(111,198,253),rgb(112,198,253),rgb(111,181,253),rgb(78,96,191)","rgb(122,224,254),rgb(121,213,254),rgb(119,196,254),rgb(85,117,199)","rgb(132,242,254),rgb(131,234,254),rgb(129,219,254),rgb(93,127,200)","rgb(132,244,254),rgb(135,243,254),rgb(129,221,251),rgb(79,99,174)"]},{"time":"07:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(249,249,254),rgb(172,182,236)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(186,189,237)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(192,190,239)","rgb(254,248,255),rgb(254,248,255),rgb(250,246,254),rgb(161,158,231)"]},{"time":"07:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(205,228,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(210,229,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(220,229,241)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,254),rgb(198,219,237)"]},{"time":"07:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(233,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(224,232,239)"]},{"time":"07:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,240)"]},{"time":"08:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,231,240)"]},{"time":"08:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"12:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"12:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"12:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"12:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"14:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(234,231,239)"]},{"time":"15:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(229,232,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(232,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(233,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(226,231,239)"]},{"time":"16:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(251,249,254),rgb(189,214,240)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(201,218,240)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(209,220,240)","rgb(254,248,255),rgb(254,248,255),rgb(253,248,254),rgb(190,207,236)"]},{"time":"19:10","colors":["rgb(3,7,5),rgb(2,7,3),rgb(3,7,4),rgb(17,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,17)"]},{"time":"19:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(17,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,17)"]},{"time":"19:40","colors":["rgb(3,7,4),rgb(2,7,4),rgb(3,7,3),rgb(17,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"19:50","colors":["rgb(3,6,4),rgb(2,7,3),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"20:00","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"20:10","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,4),rgb(16,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"20:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(17,14,18)","rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"20:30","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"20:40","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,7,5),rgb(13,13,18)"]},{"time":"20:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"21:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(4,6,6),rgb(3,6,6),rgb(3,7,5),rgb(13,13,18)"]},{"time":"21:10","colors":["rgb(3,7,5),rgb(2,7,4),rgb(3,7,4),rgb(17,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"21:20","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"21:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"21:40","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"21:50","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,4),rgb(16,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"22:00","colors":["rgb(3,7,5),rgb(2,7,3),rgb(3,7,4),rgb(17,14,19)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"22:10","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,4),rgb(17,14,19)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"22:20","colors":["rgb(3,6,5),rgb(3,7,4),rgb(3,7,5),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"22:30","colors":["rgb(3,7,5),rgb(2,7,4),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"22:40","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,3),rgb(17,14,19)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"22:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,3),rgb(17,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"23:00","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"23:10","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"23:20","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"23:30","colors":["rgb(3,7,5),rgb(2,7,3),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"23:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,6),rgb(13,13,18)"]},{"time":"23:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(17,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]}]},{"day":"14.01.2018","times":[{"time":"00:00","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"00:10","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"00:20","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"00:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"00:40","colors":["rgb(3,7,5),rgb(2,7,3),rgb(3,7,4),rgb(17,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"00:50","colors":["rgb(3,6,5),rgb(2,6,5),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:00","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"01:10","colors":["rgb(3,7,5),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"01:20","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:30","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"01:40","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,4),rgb(17,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"02:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(4,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"02:10","colors":["rgb(3,7,4),rgb(2,7,4),rgb(3,7,3),rgb(17,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"02:20","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(16,14,18)","rgb(3,7,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"02:30","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,4),rgb(17,14,19)","rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"02:40","colors":["rgb(3,6,5),rgb(2,6,5),rgb(3,7,5),rgb(17,14,19)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,16)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"02:50","colors":["rgb(3,7,5),rgb(2,7,4),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:00","colors":["rgb(3,7,5),rgb(3,7,3),rgb(3,7,4),rgb(17,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,17)"]},{"time":"03:10","colors":["rgb(3,7,5),rgb(2,7,4),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:30","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"03:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,3),rgb(17,14,18)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"04:00","colors":["rgb(3,6,4),rgb(2,7,4),rgb(3,7,5),rgb(17,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"04:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(3,7,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"04:20","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"04:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(3,7,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"04:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(17,14,18)","rgb(4,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"05:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(17,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:30","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,4),rgb(17,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"05:50","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,4),rgb(17,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"06:00","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,5),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"06:10","colors":["rgb(3,6,5),rgb(2,6,5),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"06:20","colors":["rgb(3,7,5),rgb(2,7,4),rgb(3,7,5),rgb(17,14,18)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"06:30","colors":["rgb(3,6,6),rgb(3,6,6),rgb(3,7,6),rgb(17,14,19)","rgb(3,6,6),rgb(2,6,5),rgb(2,6,5),rgb(9,10,16)","rgb(3,6,6),rgb(2,6,5),rgb(2,6,5),rgb(9,10,16)","rgb(4,6,8),rgb(3,6,7),rgb(3,6,7),rgb(13,13,19)"]},{"time":"06:40","colors":["rgb(4,7,14),rgb(4,7,13),rgb(4,7,12),rgb(17,14,22)","rgb(4,7,13),rgb(4,7,12),rgb(3,6,11),rgb(10,10,18)","rgb(4,7,12),rgb(4,7,11),rgb(3,6,11),rgb(10,10,19)","rgb(5,7,15),rgb(5,7,14),rgb(5,7,14),rgb(14,13,21)"]},{"time":"06:50","colors":["rgb(11,8,65),rgb(11,8,62),rgb(10,8,52),rgb(19,15,40)","rgb(12,8,70),rgb(12,8,71),rgb(11,8,58),rgb(14,12,45)","rgb(12,9,83),rgb(12,8,72),rgb(10,9,56),rgb(13,12,44)","rgb(13,8,81),rgb(12,8,68),rgb(10,9,56),rgb(16,14,40)"]},{"time":"07:00","colors":["rgb(40,40,189),rgb(41,45,185),rgb(38,39,169),rgb(34,27,107)","rgb(48,56,209),rgb(46,57,202),rgb(41,47,177),rgb(34,32,123)","rgb(54,65,229),rgb(50,60,214),rgb(46,51,194),rgb(36,33,132)","rgb(53,53,227),rgb(54,58,226),rgb(50,50,212),rgb(35,28,121)"]},{"time":"07:10","colors":["rgb(113,252,254),rgb(101,215,254),rgb(100,197,252),rgb(77,110,191)","rgb(108,236,254),rgb(104,213,254),rgb(103,196,254),rgb(78,120,203)","rgb(111,232,253),rgb(107,215,254),rgb(105,193,254),rgb(81,113,203)","rgb(113,234,253),rgb(108,214,253),rgb(107,197,253),rgb(72,89,182)"]},{"time":"07:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(248,247,254),rgb(167,174,235)","rgb(254,248,255),rgb(254,248,255),rgb(253,248,255),rgb(186,188,238)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(190,189,238)","rgb(254,248,255),rgb(254,248,255),rgb(252,248,254),rgb(164,163,230)"]},{"time":"07:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(229,232,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(234,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(225,231,238)"]},{"time":"07:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(232,231,240)"]},{"time":"08:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,230,240)"]},{"time":"08:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"09:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(234,231,240)"]},{"time":"09:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"10:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"10:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,248,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"10:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"10:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,229,239)"]},{"time":"10:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"10:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"11:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"11:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"11:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"12:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"12:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"12:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"13:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"14:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,240)"]},{"time":"15:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(234,231,240)"]},{"time":"16:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(213,232,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(217,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(223,231,241)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(219,229,238)"]},{"time":"16:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(250,249,254),rgb(179,191,239)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(192,196,240)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(198,196,239)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,254),rgb(185,181,235)"]},{"time":"16:20","colors":["rgb(99,217,253),rgb(103,241,253),rgb(109,245,253),rgb(89,139,199)","rgb(101,216,254),rgb(107,239,254),rgb(116,253,254),rgb(97,170,206)","rgb(106,219,254),rgb(112,243,254),rgb(125,254,254),rgb(109,169,206)","rgb(113,237,253),rgb(121,253,254),rgb(143,254,254),rgb(116,143,191)"]},{"time":"16:30","colors":["rgb(36,43,178),rgb(41,52,191),rgb(45,56,197),rgb(42,42,133)","rgb(37,47,176),rgb(43,55,191),rgb(48,63,206),rgb(42,49,153)","rgb(41,48,185),rgb(46,57,201),rgb(53,68,222),rgb(47,54,166)","rgb(47,50,206),rgb(53,63,225),rgb(60,77,244),rgb(45,50,146)"]},{"time":"16:40","colors":["rgb(10,8,56),rgb(11,8,65),rgb(12,8,71),rgb(22,15,58)","rgb(10,8,54),rgb(11,8,63),rgb(12,8,71),rgb(16,11,63)","rgb(11,8,58),rgb(12,8,66),rgb(13,8,77),rgb(17,12,67)","rgb(12,8,70),rgb(14,8,80),rgb(15,9,93),rgb(20,15,65)"]},{"time":"16:50","colors":["rgb(3,6,11),rgb(4,6,13),rgb(4,7,14),rgb(17,14,25)","rgb(3,6,10),rgb(3,6,11),rgb(4,7,13),rgb(10,10,23)","rgb(3,6,11),rgb(3,6,12),rgb(4,7,15),rgb(11,10,24)","rgb(5,7,14),rgb(5,7,16),rgb(5,7,20),rgb(14,13,26)"]},{"time":"17:00","colors":["rgb(3,6,6),rgb(3,6,6),rgb(3,6,7),rgb(16,14,20)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,6),rgb(9,10,16)","rgb(3,6,6),rgb(2,6,5),rgb(2,6,6),rgb(9,10,17)","rgb(3,6,8),rgb(3,6,7),rgb(3,6,8),rgb(13,13,19)"]},{"time":"17:10","colors":["rgb(3,6,5),rgb(2,6,5),rgb(3,6,5),rgb(16,14,19)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(2,6,4),rgb(2,6,4),rgb(9,10,16)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,7),rgb(13,13,18)"]},{"time":"17:20","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(16,14,19)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"17:30","colors":["rgb(2,6,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"17:40","colors":["rgb(2,6,5),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"17:50","colors":["rgb(3,6,4),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"18:00","colors":["rgb(3,6,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,19)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"18:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"18:20","colors":["rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"18:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(3,7,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,15)","rgb(4,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"18:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(3,7,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,5),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"18:50","colors":["rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"19:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(16,14,19)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,7,5),rgb(13,13,18)"]},{"time":"19:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,5),rgb(3,7,4),rgb(3,7,5),rgb(13,13,17)"]},{"time":"19:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,15)","rgb(4,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"19:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"19:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"20:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,7),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"20:10","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(4,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,7,5),rgb(3,7,4),rgb(3,7,4),rgb(13,13,17)"]},{"time":"20:20","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(4,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"20:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"20:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"20:50","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"21:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,17)","rgb(4,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"21:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"21:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,6),rgb(3,7,4),rgb(3,7,5),rgb(13,13,18)"]},{"time":"21:30","colors":["rgb(3,7,4),rgb(2,7,4),rgb(3,7,4),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"21:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"21:50","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(4,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(3,7,4),rgb(3,7,5),rgb(13,13,17)"]},{"time":"22:00","colors":["rgb(3,6,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"22:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,6),rgb(13,13,18)"]},{"time":"22:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(3,7,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,13)","rgb(4,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"22:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"22:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"22:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,19)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"23:00","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,19)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"23:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"23:20","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,17)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"23:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,7,5),rgb(3,6,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"23:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"23:50","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]}]},{"day":"15.01.2018","times":[{"time":"00:00","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(4,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(2,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"00:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"00:20","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(2,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"00:30","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"00:40","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(16,14,17)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"00:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"01:00","colors":["rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,7,5),rgb(13,13,18)"]},{"time":"01:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"01:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"01:40","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:50","colors":["rgb(3,6,4),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,6),rgb(2,6,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"02:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,3),rgb(16,14,17)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"02:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"02:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"02:30","colors":["rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"02:40","colors":["rgb(3,6,3),rgb(2,7,3),rgb(3,7,3),rgb(16,14,18)","rgb(4,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,4),rgb(3,7,5),rgb(13,13,17)"]},{"time":"02:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:00","colors":["rgb(3,6,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,19)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"03:10","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,4),rgb(17,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"03:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,19)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(16,14,19)","rgb(2,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"04:00","colors":["rgb(2,7,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,19)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"04:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(16,14,18)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"04:20","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(16,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"04:30","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"04:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(17,14,18)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"04:50","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,7,3),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"05:00","colors":["rgb(3,6,6),rgb(2,7,5),rgb(3,7,5),rgb(17,14,19)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,16)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:10","colors":["rgb(3,7,5),rgb(2,7,4),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:20","colors":["rgb(3,7,5),rgb(2,7,5),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:30","colors":["rgb(3,7,5),rgb(3,7,5),rgb(3,7,4),rgb(16,14,19)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:40","colors":["rgb(3,6,5),rgb(3,6,5),rgb(3,7,4),rgb(16,14,18)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:50","colors":["rgb(3,7,5),rgb(3,7,4),rgb(3,7,4),rgb(16,14,18)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,7,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"06:00","colors":["rgb(3,7,5),rgb(2,7,5),rgb(3,7,4),rgb(17,14,19)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"06:10","colors":["rgb(3,7,4),rgb(2,6,5),rgb(3,7,5),rgb(17,14,19)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"06:20","colors":["rgb(3,6,6),rgb(3,6,6),rgb(3,6,8),rgb(17,14,21)","rgb(3,6,5),rgb(2,6,5),rgb(3,6,6),rgb(9,10,17)","rgb(3,6,5),rgb(2,6,5),rgb(3,6,6),rgb(9,10,17)","rgb(3,6,7),rgb(3,6,7),rgb(3,6,7),rgb(14,13,19)"]},{"time":"06:30","colors":["rgb(3,6,10),rgb(4,7,12),rgb(6,7,20),rgb(19,15,34)","rgb(3,6,9),rgb(3,6,11),rgb(4,7,15),rgb(12,11,28)","rgb(3,6,8),rgb(3,6,10),rgb(4,7,13),rgb(11,11,24)","rgb(4,7,11),rgb(4,7,12),rgb(5,7,14),rgb(14,13,24)"]},{"time":"06:50","colors":["rgb(27,26,131),rgb(26,28,124),rgb(28,30,128),rgb(25,17,70)","rgb(31,35,136),rgb(32,39,137),rgb(28,33,124),rgb(22,19,83)","rgb(29,32,133),rgb(34,38,139),rgb(27,29,122),rgb(22,18,82)","rgb(27,20,135),rgb(33,30,142),rgb(29,23,130),rgb(23,16,70)"]},{"time":"07:00","colors":["rgb(61,76,248),rgb(65,88,249),rgb(65,85,238),rgb(45,43,138)","rgb(63,86,252),rgb(64,89,250),rgb(63,84,239),rgb(47,52,161)","rgb(65,87,254),rgb(66,88,253),rgb(63,78,238),rgb(45,47,158)","rgb(65,78,253),rgb(67,82,253),rgb(60,67,234),rgb(41,36,134)"]},{"time":"07:10","colors":["rgb(206,254,254),rgb(216,254,254),rgb(184,251,253),rgb(102,152,208)","rgb(225,254,254),rgb(231,254,254),rgb(218,254,254),rgb(120,176,214)","rgb(234,254,254),rgb(225,254,254),rgb(209,254,254),rgb(129,174,216)","rgb(215,254,254),rgb(221,254,254),rgb(197,253,254),rgb(114,143,203)"]},{"time":"07:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(250,248,254),rgb(173,187,239)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(191,196,240)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(196,197,239)","rgb(254,248,255),rgb(254,248,255),rgb(253,248,254),rgb(178,179,235)"]},{"time":"07:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,254),rgb(189,214,240)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(204,218,240)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(211,220,239)","rgb(254,248,255),rgb(254,248,255),rgb(253,248,254),rgb(199,210,235)"]},{"time":"07:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(220,233,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(227,232,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(231,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(229,231,239)"]},{"time":"07:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(233,232,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(234,231,240)"]},{"time":"08:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,231,240)"]},{"time":"08:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,231,239)"]},{"time":"08:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"10:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"10:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"10:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,240)"]},{"time":"15:50","colors":["rgb(251,249,254),rgb(160,216,252),rgb(82,152,245),rgb(106,180,234)","rgb(110,147,236),rgb(58,98,212),rgb(92,173,240),rgb(93,181,235)","rgb(75,121,246),rgb(68,109,226),rgb(88,156,241),rgb(110,219,240)","rgb(93,160,252),rgb(70,97,223),rgb(65,90,208),rgb(92,136,229)"]},{"time":"16:00","colors":["rgb(250,249,254),rgb(150,176,245),rgb(58,84,205),rgb(80,126,212)","rgb(95,109,190),rgb(37,48,150),rgb(66,103,205),rgb(72,109,209)","rgb(52,63,191),rgb(44,54,159),rgb(62,88,200),rgb(89,145,236)","rgb(64,78,220),rgb(44,43,155),rgb(39,38,146),rgb(66,70,193)"]},{"time":"16:10","colors":["rgb(126,252,254),rgb(83,144,192),rgb(29,31,117),rgb(47,52,152)","rgb(51,86,135),rgb(16,16,76),rgb(35,42,123),rgb(41,44,139)","rgb(18,14,87),rgb(20,19,80),rgb(30,32,108),rgb(53,60,175)","rgb(30,23,116),rgb(17,13,73),rgb(19,17,73),rgb(39,30,114)"]},{"time":"16:20","colors":["rgb(58,61,202),rgb(34,37,124),rgb(6,7,28),rgb(16,12,52)","rgb(19,21,67),rgb(4,7,14),rgb(7,8,29),rgb(14,11,44)","rgb(4,7,15),rgb(4,7,14),rgb(6,7,24),rgb(16,12,59)","rgb(7,7,27),rgb(5,7,18),rgb(5,7,16),rgb(17,14,38)"]},{"time":"16:30","colors":["rgb(10,9,54),rgb(7,8,36),rgb(3,6,7),rgb(10,10,18)","rgb(5,7,20),rgb(2,6,5),rgb(2,6,6),rgb(9,10,17)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,6),rgb(10,10,18)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"16:40","colors":["rgb(4,7,11),rgb(3,7,8),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,6),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"16:50","colors":["rgb(3,6,7),rgb(3,6,5),rgb(2,7,3),rgb(9,10,15)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"17:00","colors":["rgb(3,6,6),rgb(3,7,5),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"17:10","colors":["rgb(3,7,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(4,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"17:20","colors":["rgb(3,7,4),rgb(3,7,4),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,4),rgb(13,13,17)"]},{"time":"17:30","colors":["rgb(3,7,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"17:40","colors":["rgb(3,7,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,13)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"17:50","colors":["rgb(3,7,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"18:00","colors":["rgb(3,6,5),rgb(3,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,4),rgb(3,7,4),rgb(13,13,18)"]},{"time":"18:10","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"18:20","colors":["rgb(3,7,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(3,7,4),rgb(2,7,4),rgb(13,13,17)"]},{"time":"18:30","colors":["rgb(3,7,5),rgb(2,7,4),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,13)","rgb(3,7,5),rgb(2,7,4),rgb(3,7,5),rgb(13,13,17)"]},{"time":"18:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,7,5),rgb(3,7,4),rgb(3,7,5),rgb(13,13,18)"]},{"time":"18:50","colors":["rgb(3,7,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(2,6,5),rgb(2,6,5),rgb(13,13,18)"]},{"time":"19:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(2,6,4),rgb(2,7,5),rgb(13,13,18)"]},{"time":"19:10","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(2,6,5),rgb(2,6,5),rgb(13,13,18)"]},{"time":"19:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,7,5),rgb(2,7,4),rgb(2,7,4),rgb(13,13,17)"]},{"time":"19:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,7,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"19:40","colors":["rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(13,13,17)"]},{"time":"19:50","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(13,13,18)"]},{"time":"20:00","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(4,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"20:10","colors":["rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,4),rgb(3,6,5),rgb(13,13,17)"]},{"time":"20:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"20:30","colors":["rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"20:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(2,6,6),rgb(13,13,18)"]},{"time":"20:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,7,5),rgb(2,7,4),rgb(3,7,4),rgb(13,13,17)"]},{"time":"21:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,7,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"21:10","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"21:20","colors":["rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"21:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"21:40","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"21:50","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,7,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,5),rgb(3,6,5),rgb(3,7,4),rgb(13,13,17)"]},{"time":"22:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"22:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,5),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"22:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(2,7,5),rgb(13,13,18)"]},{"time":"22:40","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(4,7,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"22:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(4,6,6),rgb(4,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"23:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(4,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"23:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,7),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"23:20","colors":["rgb(3,6,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"23:30","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"23:40","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,17)"]},{"time":"23:50","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]}]},{"day":"16.01.2018","times":[{"time":"00:00","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"00:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"00:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,5),rgb(2,6,5),rgb(13,13,18)"]},{"time":"00:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"00:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"00:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,5),rgb(3,7,4),rgb(3,6,5),rgb(13,13,17)"]},{"time":"01:00","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(2,6,5),rgb(2,6,5),rgb(13,13,18)"]},{"time":"01:10","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,2),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,5),rgb(3,6,5),rgb(2,7,4),rgb(13,13,17)"]},{"time":"01:20","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(4,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"01:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(2,7,4),rgb(13,13,17)"]},{"time":"01:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"01:50","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,14)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"02:00","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"02:10","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"02:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,13)","rgb(3,6,5),rgb(2,7,5),rgb(2,7,5),rgb(13,13,17)"]},{"time":"02:30","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"02:40","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"02:50","colors":["rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(4,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"03:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"03:10","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:20","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,7,5),rgb(13,13,18)"]},{"time":"03:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"03:40","colors":["rgb(3,7,5),rgb(2,7,4),rgb(3,7,4),rgb(9,10,14)","rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"04:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"04:10","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,4),rgb(13,13,17)"]},{"time":"04:20","colors":["rgb(3,7,5),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"04:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"04:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,5),rgb(3,6,5),rgb(2,6,5),rgb(13,13,18)"]},{"time":"04:50","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,7,5),rgb(13,13,17)"]},{"time":"05:00","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,6,5),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,4),rgb(2,6,4),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:10","colors":["rgb(3,6,4),rgb(2,6,5),rgb(3,7,5),rgb(9,10,15)","rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:20","colors":["rgb(3,7,4),rgb(2,7,4),rgb(3,7,5),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:30","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,6,5),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,4),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:40","colors":["rgb(3,6,5),rgb(3,7,4),rgb(3,7,5),rgb(9,10,15)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:50","colors":["rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(9,10,15)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,7),rgb(4,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"06:00","colors":["rgb(3,7,5),rgb(3,7,4),rgb(3,7,5),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"06:10","colors":["rgb(3,7,4),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"06:20","colors":["rgb(3,6,5),rgb(2,6,5),rgb(3,6,5),rgb(9,10,16)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"06:30","colors":["rgb(3,6,10),rgb(3,6,11),rgb(4,7,14),rgb(10,10,18)","rgb(3,6,8),rgb(3,6,10),rgb(4,7,16),rgb(9,10,18)","rgb(3,6,8),rgb(3,6,9),rgb(3,6,12),rgb(9,10,18)","rgb(4,6,10),rgb(3,6,9),rgb(3,6,7),rgb(13,13,19)"]},{"time":"06:40","colors":["rgb(10,8,56),rgb(13,8,79),rgb(18,12,100),rgb(13,11,39)","rgb(8,8,44),rgb(11,8,63),rgb(13,9,78),rgb(12,11,36)","rgb(7,8,39),rgb(9,8,51),rgb(9,8,51),rgb(11,11,28)","rgb(7,8,35),rgb(7,8,37),rgb(5,7,17),rgb(14,13,24)"]},{"time":"06:50","colors":["rgb(27,22,141),rgb(33,36,154),rgb(23,17,120),rgb(17,13,60)","rgb(35,38,153),rgb(39,45,159),rgb(48,59,184),rgb(24,23,81)","rgb(32,32,142),rgb(38,41,152),rgb(49,53,172),rgb(33,39,107)","rgb(27,16,135),rgb(27,23,120),rgb(14,14,56),rgb(17,14,41)"]},{"time":"07:00","colors":["rgb(75,120,253),rgb(84,135,253),rgb(113,179,253),rgb(73,94,151)","rgb(72,119,253),rgb(84,136,253),rgb(99,158,253),rgb(62,86,153)","rgb(72,115,253),rgb(81,133,253),rgb(97,166,253),rgb(52,71,144)","rgb(70,103,253),rgb(65,96,222),rgb(36,47,131),rgb(33,20,109)"]},{"time":"07:10","colors":["rgb(84,129,253),rgb(102,170,253),rgb(125,196,253),rgb(76,95,165)","rgb(89,139,253),rgb(101,163,253),rgb(116,181,253),rgb(98,115,164)","rgb(84,126,253),rgb(98,152,253),rgb(102,153,253),rgb(60,73,149)","rgb(88,125,253),rgb(86,124,223),rgb(40,44,132),rgb(43,30,128)"]},{"time":"07:30","colors":["rgb(239,252,253),rgb(239,252,253),rgb(245,252,252),rgb(132,157,233)","rgb(251,250,254),rgb(250,250,251),rgb(250,251,251),rgb(156,171,234)","rgb(253,249,255),rgb(251,250,252),rgb(248,251,251),rgb(150,168,234)","rgb(252,249,254),rgb(215,222,250),rgb(126,169,247),rgb(103,151,234)"]},{"time":"07:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(181,226,239)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(196,226,236)","rgb(254,248,255),rgb(253,249,254),rgb(251,250,251),rgb(198,226,237)","rgb(254,248,255),rgb(239,249,253),rgb(212,250,253),rgb(213,228,239)"]},{"time":"07:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,254),rgb(251,249,255),rgb(234,231,240)"]},{"time":"08:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,231,241)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(235,232,239)","rgb(254,248,255),rgb(254,248,255),rgb(250,250,253),rgb(234,232,237)"]},{"time":"09:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"11:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,248,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"11:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"12:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"12:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"12:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(234,231,240)"]},{"time":"13:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,231,241)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,254),rgb(234,232,239)","rgb(254,248,255),rgb(253,249,254),rgb(245,251,252),rgb(234,232,237)"]},{"time":"13:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"14:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"14:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,248,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"15:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,231,241)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,254),rgb(233,232,239)","rgb(254,248,255),rgb(252,249,254),rgb(243,250,254),rgb(234,231,240)"]},{"time":"15:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,248,255),rgb(235,231,240)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,254),rgb(232,232,239)","rgb(254,248,255),rgb(251,249,254),rgb(238,251,253),rgb(233,231,240)"]},{"time":"15:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(234,232,240)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,253),rgb(228,232,239)","rgb(254,248,255),rgb(248,249,254),rgb(222,252,252),rgb(229,232,237)"]},{"time":"16:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(190,232,241)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(208,232,239)","rgb(254,248,255),rgb(253,249,254),rgb(250,250,251),rgb(206,229,239)","rgb(254,248,255),rgb(235,247,253),rgb(182,236,252),rgb(219,229,240)"]},{"time":"16:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(146,154,239)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(168,169,236)","rgb(254,248,255),rgb(253,249,254),rgb(249,249,251),rgb(159,161,233)","rgb(254,248,255),rgb(217,224,251),rgb(123,150,243),rgb(185,210,238)"]},{"time":"16:20","colors":["rgb(111,232,253),rgb(108,218,254),rgb(106,198,253),rgb(63,88,158)","rgb(122,253,254),rgb(118,234,254),rgb(109,195,254),rgb(71,91,170)","rgb(120,229,254),rgb(120,228,254),rgb(113,198,251),rgb(66,78,158)","rgb(111,190,253),rgb(92,151,221),rgb(38,48,127),rgb(64,67,191)"]},{"time":"16:30","colors":["rgb(51,66,236),rgb(58,84,249),rgb(51,61,198),rgb(25,24,86)","rgb(53,72,235),rgb(60,88,249),rgb(53,68,204),rgb(29,28,97)","rgb(57,76,245),rgb(75,107,253),rgb(65,85,225),rgb(30,28,94)","rgb(65,83,253),rgb(63,87,211),rgb(23,29,81),rgb(27,17,97)"]},{"time":"16:40","colors":["rgb(12,8,79),rgb(12,9,88),rgb(16,11,103),rgb(16,13,52)","rgb(12,8,78),rgb(12,10,86),rgb(17,15,100),rgb(17,16,61)","rgb(13,9,88),rgb(16,13,95),rgb(22,24,112),rgb(18,19,61)","rgb(19,11,106),rgb(19,16,92),rgb(8,11,32),rgb(16,14,35)"]},{"time":"16:50","colors":["rgb(4,7,13),rgb(4,7,12),rgb(5,7,15),rgb(10,10,20)","rgb(4,7,11),rgb(4,6,11),rgb(4,7,12),rgb(10,10,19)","rgb(4,7,11),rgb(4,6,11),rgb(4,7,12),rgb(10,10,18)","rgb(6,7,13),rgb(5,7,10),rgb(3,6,8),rgb(14,13,20)"]},{"time":"17:00","colors":["rgb(3,6,7),rgb(3,6,7),rgb(3,6,8),rgb(9,10,16)","rgb(3,6,5),rgb(2,6,6),rgb(3,6,7),rgb(9,10,16)","rgb(3,6,6),rgb(2,6,6),rgb(3,6,7),rgb(9,10,16)","rgb(3,6,9),rgb(3,6,8),rgb(3,6,6),rgb(13,13,18)"]},{"time":"17:10","colors":["rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"17:20","colors":["rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(9,10,15)","rgb(3,6,5),rgb(3,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(2,7,5),rgb(9,10,15)","rgb(5,6,8),rgb(4,6,7),rgb(3,6,5),rgb(13,13,18)"]},{"time":"17:30","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,5),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"17:40","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"17:50","colors":["rgb(3,6,5),rgb(3,6,5),rgb(3,6,5),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,6,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,4),rgb(2,6,4),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"18:00","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"18:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"18:20","colors":["rgb(3,6,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"18:30","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"18:40","colors":["rgb(3,6,4),rgb(2,7,4),rgb(3,7,5),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(4,6,7),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"18:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,7,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"19:00","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"19:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(6,5,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(7,6,7),rgb(5,6,5),rgb(3,7,4),rgb(13,13,17)"]},{"time":"19:20","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,16)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(5,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(7,6,8),rgb(5,6,7),rgb(3,6,6),rgb(13,13,18)"]},{"time":"19:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,7,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(4,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(7,6,8),rgb(5,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"19:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(4,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(7,6,7),rgb(5,6,7),rgb(3,6,5),rgb(13,13,18)"]},{"time":"19:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(5,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(7,6,8),rgb(5,6,6),rgb(3,6,5),rgb(14,13,18)"]},{"time":"20:00","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,6,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(7,6,8),rgb(5,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"20:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(7,6,7),rgb(5,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"20:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,13)","rgb(4,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(7,6,7),rgb(5,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"20:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(7,6,7),rgb(5,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"20:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(4,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(7,6,7),rgb(5,6,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"20:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(5,6,5),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(8,6,8),rgb(5,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"21:00","colors":["rgb(3,6,5),rgb(3,7,4),rgb(3,7,5),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(5,6,6),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(9,6,9),rgb(6,6,7),rgb(3,6,6),rgb(14,13,18)"]},{"time":"21:10","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,5),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(2,7,4),rgb(2,7,4),rgb(9,10,14)","rgb(8,6,9),rgb(5,6,7),rgb(3,6,6),rgb(13,13,18)"]},{"time":"21:20","colors":["rgb(3,7,5),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(5,6,6),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(8,6,9),rgb(6,6,7),rgb(3,6,6),rgb(13,13,18)"]},{"time":"21:30","colors":["rgb(3,6,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(4,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(8,6,7),rgb(5,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"21:50","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(7,6,8),rgb(5,6,7),rgb(3,6,6),rgb(13,13,18)"]},{"time":"22:00","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(5,6,5),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(8,6,8),rgb(5,6,7),rgb(3,6,6),rgb(13,13,18)"]},{"time":"22:10","colors":["rgb(3,6,4),rgb(2,7,3),rgb(3,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(8,6,7),rgb(5,6,6),rgb(3,7,5),rgb(13,13,18)"]},{"time":"22:30","colors":["rgb(3,7,4),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(8,6,8),rgb(5,6,6),rgb(3,7,5),rgb(13,13,18)"]},{"time":"22:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(7,6,7),rgb(5,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"22:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,7,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"23:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,14)","rgb(3,7,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"23:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"23:20","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,13)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(2,6,5),rgb(2,6,5),rgb(13,13,18)"]},{"time":"23:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,13)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,5),rgb(13,13,18)"]},{"time":"23:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,13)","rgb(3,6,6),rgb(2,6,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"23:50","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,4),rgb(13,13,17)"]}]},{"day":"17.01.2018","times":[{"time":"00:00","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"00:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"00:20","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,7,5),rgb(3,7,5),rgb(3,7,4),rgb(13,13,17)"]},{"time":"00:30","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(2,6,5),rgb(13,13,18)"]},{"time":"00:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(2,7,4),rgb(13,13,17)"]},{"time":"00:50","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,3),rgb(9,11,14)","rgb(3,7,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"01:10","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"01:20","colors":["rgb(3,6,5),rgb(2,7,5),rgb(2,7,4),rgb(9,10,15)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:30","colors":["rgb(3,7,5),rgb(3,7,4),rgb(3,7,5),rgb(9,10,15)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:40","colors":["rgb(3,7,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,7,5),rgb(13,13,18)"]},{"time":"01:50","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"02:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,13)","rgb(3,6,6),rgb(3,6,6),rgb(3,7,5),rgb(13,13,18)"]},{"time":"02:10","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"02:20","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"02:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"02:50","colors":["rgb(3,6,5),rgb(2,6,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:20","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:30","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,5),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(2,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"03:50","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"04:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,4),rgb(3,7,5),rgb(13,13,18)"]},{"time":"04:10","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"04:30","colors":["rgb(4,7,5),rgb(3,7,5),rgb(4,7,5),rgb(10,10,15)","rgb(3,7,5),rgb(3,7,5),rgb(3,7,4),rgb(9,10,14)","rgb(4,6,5),rgb(3,7,5),rgb(3,7,5),rgb(9,10,14)","rgb(4,6,7),rgb(4,6,6),rgb(3,7,5),rgb(13,13,18)"]},{"time":"04:40","colors":["rgb(3,6,5),rgb(3,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,14)","rgb(4,6,6),rgb(3,7,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"04:50","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,13)","rgb(4,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"05:00","colors":["rgb(3,6,5),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:10","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,7,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"05:20","colors":["rgb(3,6,5),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(2,7,5),rgb(13,13,18)"]},{"time":"05:40","colors":["rgb(3,7,4),rgb(2,7,4),rgb(3,7,4),rgb(9,10,16)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"06:00","colors":["rgb(3,6,4),rgb(2,7,4),rgb(3,7,5),rgb(9,10,16)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"06:10","colors":["rgb(3,6,5),rgb(2,6,4),rgb(3,7,5),rgb(9,10,16)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"06:20","colors":["rgb(3,6,5),rgb(3,6,6),rgb(3,6,6),rgb(9,10,15)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"06:30","colors":["rgb(3,6,8),rgb(3,6,7),rgb(3,6,7),rgb(9,10,16)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(9,10,16)","rgb(3,6,8),rgb(3,6,7),rgb(3,6,7),rgb(9,10,17)","rgb(4,6,9),rgb(3,6,8),rgb(3,6,7),rgb(13,13,19)"]},{"time":"06:40","colors":["rgb(10,8,58),rgb(13,9,87),rgb(20,13,128),rgb(16,12,58)","rgb(8,8,45),rgb(11,8,67),rgb(14,10,100),rgb(17,15,67)","rgb(7,8,39),rgb(9,8,52),rgb(11,8,70),rgb(14,11,49)","rgb(7,8,39),rgb(7,8,36),rgb(4,7,17),rgb(14,13,26)"]},{"time":"06:50","colors":["rgb(31,42,187),rgb(45,71,237),rgb(57,110,253),rgb(34,53,132)","rgb(24,38,165),rgb(38,59,205),rgb(50,84,244),rgb(31,45,121)","rgb(21,29,149),rgb(32,46,179),rgb(43,63,215),rgb(27,33,112)","rgb(20,18,143),rgb(22,27,131),rgb(14,15,74),rgb(21,15,80)"]},{"time":"07:10","colors":["rgb(100,254,254),rgb(158,254,254),rgb(225,252,254),rgb(127,155,234)","rgb(94,243,254),rgb(112,252,254),rgb(164,254,254),rgb(129,138,203)","rgb(93,220,254),rgb(97,229,254),rgb(116,241,253),rgb(112,141,206)","rgb(87,187,253),rgb(77,160,234),rgb(57,93,207),rgb(72,104,230)"]},{"time":"07:20","colors":["rgb(144,254,254),rgb(139,254,254),rgb(119,254,254),rgb(65,117,215)","rgb(165,254,254),rgb(156,254,254),rgb(122,253,254),rgb(77,135,213)","rgb(169,254,254),rgb(155,254,254),rgb(132,250,253),rgb(75,120,220)","rgb(165,254,254),rgb(115,206,243),rgb(62,94,214),rgb(72,100,233)"]},{"time":"07:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(168,232,240)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,254),rgb(183,230,238)","rgb(254,248,255),rgb(253,249,254),rgb(247,249,251),rgb(165,210,236)","rgb(254,248,255),rgb(215,238,253),rgb(134,213,252),rgb(164,229,240)"]},{"time":"07:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,232,240)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,253),rgb(229,232,239)","rgb(254,248,255),rgb(253,249,254),rgb(244,251,251),rgb(234,232,237)"]},{"time":"07:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,240)"]},{"time":"08:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"09:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"12:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"12:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"13:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"13:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(235,231,240)"]},{"time":"14:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,254),rgb(234,232,239)","rgb(254,248,255),rgb(253,249,255),rgb(249,250,254),rgb(234,232,237)"]},{"time":"15:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(223,233,241)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(231,232,240)","rgb(254,248,255),rgb(254,248,255),rgb(251,250,252),rgb(225,233,239)","rgb(254,248,255),rgb(243,249,254),rgb(224,251,253),rgb(225,231,240)"]},{"time":"16:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(157,182,239)","rgb(254,248,255),rgb(253,249,255),rgb(251,250,254),rgb(182,194,237)","rgb(254,248,255),rgb(253,249,254),rgb(248,249,251),rgb(171,183,235)","rgb(254,248,255),rgb(218,226,251),rgb(141,184,246),rgb(190,214,238)"]},{"time":"16:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(138,156,240)","rgb(254,248,255),rgb(253,249,255),rgb(251,250,254),rgb(165,177,238)","rgb(254,248,255),rgb(253,249,254),rgb(248,249,251),rgb(155,169,236)","rgb(254,248,255),rgb(214,221,250),rgb(120,167,246),rgb(150,209,238)"]},{"time":"16:20","colors":["rgb(126,254,254),rgb(120,254,254),rgb(114,253,254),rgb(67,101,169)","rgb(158,254,254),rgb(167,254,254),rgb(157,253,254),rgb(84,124,183)","rgb(175,254,254),rgb(187,254,254),rgb(220,250,252),rgb(94,110,177)","rgb(184,254,254),rgb(152,204,231),rgb(74,78,175),rgb(70,84,213)"]},{"time":"16:30","colors":["rgb(78,107,253),rgb(80,118,253),rgb(79,114,253),rgb(38,43,123)","rgb(64,90,254),rgb(67,104,254),rgb(74,118,253),rgb(48,61,142)","rgb(66,91,254),rgb(69,105,254),rgb(81,135,250),rgb(48,66,131)","rgb(73,95,253),rgb(64,94,212),rgb(26,35,98),rgb(37,18,118)"]},{"time":"16:40","colors":["rgb(15,10,103),rgb(17,12,110),rgb(21,16,114),rgb(17,14,56)","rgb(14,10,99),rgb(20,19,109),rgb(24,26,112),rgb(20,20,68)","rgb(16,10,107),rgb(22,23,118),rgb(32,36,133),rgb(21,21,67)","rgb(21,12,128),rgb(23,22,112),rgb(10,12,39),rgb(16,14,38)"]},{"time":"16:50","colors":["rgb(5,7,18),rgb(5,7,21),rgb(6,7,24),rgb(10,10,21)","rgb(4,7,15),rgb(5,7,22),rgb(6,7,26),rgb(11,10,24)","rgb(6,7,26),rgb(6,7,26),rgb(6,7,27),rgb(11,10,24)","rgb(8,8,36),rgb(7,8,32),rgb(4,7,12),rgb(14,13,20)"]},{"time":"17:00","colors":["rgb(3,6,8),rgb(3,6,8),rgb(3,6,7),rgb(10,10,16)","rgb(3,6,7),rgb(3,6,7),rgb(3,6,7),rgb(9,10,16)","rgb(3,6,7),rgb(3,6,8),rgb(3,6,8),rgb(9,10,16)","rgb(4,6,9),rgb(3,6,9),rgb(3,6,6),rgb(13,13,18)"]},{"time":"17:10","colors":["rgb(3,6,5),rgb(2,6,5),rgb(3,7,5),rgb(10,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"17:20","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,5),rgb(9,10,16)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,6,4),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"17:30","colors":["rgb(3,6,5),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,17)"]},{"time":"17:40","colors":["rgb(3,7,3),rgb(2,7,3),rgb(3,7,4),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"17:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(4,6,6),rgb(3,7,5),rgb(3,7,4),rgb(13,13,17)"]},{"time":"18:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,6),rgb(2,7,4),rgb(3,6,5),rgb(13,13,17)"]},{"time":"18:10","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,13)","rgb(4,6,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"18:20","colors":["rgb(3,6,5),rgb(2,6,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"18:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,7),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"18:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,4),rgb(13,13,17)"]},{"time":"18:50","colors":["rgb(3,6,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"19:00","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"19:10","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(4,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"19:20","colors":["rgb(3,6,4),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(2,6,5),rgb(13,13,18)"]},{"time":"19:30","colors":["rgb(3,6,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(2,6,5),rgb(13,13,18)"]},{"time":"19:40","colors":["rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"19:50","colors":["rgb(3,7,3),rgb(2,7,3),rgb(3,7,3),rgb(9,11,14)","rgb(4,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,7,5),rgb(3,7,4),rgb(3,7,4),rgb(13,13,17)"]},{"time":"20:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"20:10","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(2,7,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"20:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"20:30","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"20:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"20:50","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(2,6,5),rgb(13,13,17)"]},{"time":"21:00","colors":["rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"21:10","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,2),rgb(9,10,13)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"21:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"21:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,4),rgb(13,13,17)"]},{"time":"21:40","colors":["rgb(3,6,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"21:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(2,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"22:00","colors":["rgb(3,7,4),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"22:10","colors":["rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(9,10,15)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,4),rgb(9,10,16)","rgb(4,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"22:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"22:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(4,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(4,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"22:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"22:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,15)","rgb(4,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"23:00","colors":["rgb(3,6,4),rgb(2,7,3),rgb(3,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"23:10","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,5),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(4,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"23:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"23:30","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,5),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,7,5),rgb(13,13,18)"]},{"time":"23:40","colors":["rgb(3,7,4),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"23:50","colors":["rgb(3,7,4),rgb(2,7,4),rgb(3,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]}]},{"day":"18.01.2018","times":[{"time":"00:00","colors":["rgb(3,6,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,7,5),rgb(2,6,5),rgb(13,13,18)"]},{"time":"00:10","colors":["rgb(3,7,3),rgb(2,7,3),rgb(3,7,4),rgb(9,10,14)","rgb(3,6,2),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,7,5),rgb(3,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"00:20","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,5),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"00:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,15)","rgb(4,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"00:40","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"00:50","colors":["rgb(3,6,5),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"01:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"01:10","colors":["rgb(3,6,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"01:20","colors":["rgb(3,6,4),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"01:30","colors":["rgb(3,7,4),rgb(2,7,3),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"01:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(3,7,4),rgb(3,7,4),rgb(13,13,17)"]},{"time":"01:50","colors":["rgb(3,7,4),rgb(2,7,4),rgb(3,7,4),rgb(9,11,14)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"02:00","colors":["rgb(3,7,3),rgb(2,7,3),rgb(3,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(3,6,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"02:10","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"02:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(3,7,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,5),rgb(3,6,5),rgb(3,6,5),rgb(13,13,17)"]},{"time":"02:30","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"02:40","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"02:50","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"03:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,4),rgb(9,10,14)","rgb(4,5,5),rgb(2,7,3),rgb(2,7,2),rgb(9,10,13)","rgb(4,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,4),rgb(3,6,5),rgb(13,13,17)"]},{"time":"03:10","colors":["rgb(3,6,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"03:20","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(2,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,18)"]},{"time":"03:30","colors":["rgb(3,6,5),rgb(2,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"03:40","colors":["rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,6),rgb(2,7,5),rgb(3,7,5),rgb(13,13,18)"]},{"time":"03:50","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,11,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,6),rgb(3,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"04:00","colors":["rgb(3,7,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,7),rgb(3,6,6),rgb(3,6,5),rgb(13,13,19)"]},{"time":"04:10","colors":["rgb(3,7,4),rgb(3,7,4),rgb(3,7,4),rgb(9,10,14)","rgb(3,7,3),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,5),rgb(13,13,17)"]},{"time":"04:20","colors":["rgb(3,7,4),rgb(3,7,5),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"04:30","colors":["rgb(3,7,4),rgb(2,7,4),rgb(2,7,4),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,13)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,6),rgb(3,6,6),rgb(3,7,5),rgb(13,13,18)"]},{"time":"04:40","colors":["rgb(3,7,5),rgb(3,7,4),rgb(3,7,4),rgb(9,10,15)","rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,5),rgb(2,7,4),rgb(2,7,4),rgb(9,10,14)","rgb(4,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"04:50","colors":["rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(4,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"05:00","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:10","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(2,6,6),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:20","colors":["rgb(3,6,6),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(2,6,5),rgb(2,6,5),rgb(13,13,18)"]},{"time":"05:30","colors":["rgb(3,7,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,5),rgb(3,7,5),rgb(13,13,17)"]},{"time":"05:40","colors":["rgb(3,6,6),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,3),rgb(9,11,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(2,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"05:50","colors":["rgb(3,6,6),rgb(2,7,4),rgb(2,7,4),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,6),rgb(13,13,18)"]},{"time":"06:00","colors":["rgb(3,7,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,7,5),rgb(3,7,4),rgb(3,7,4),rgb(13,13,17)"]},{"time":"06:10","colors":["rgb(3,6,6),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,6),rgb(3,7,5),rgb(3,6,5),rgb(13,13,18)"]},{"time":"06:20","colors":["rgb(3,6,5),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,4),rgb(3,7,5),rgb(13,13,17)"]},{"time":"06:30","colors":["rgb(3,6,6),rgb(2,7,4),rgb(2,7,3),rgb(9,10,15)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,10,14)","rgb(3,6,6),rgb(3,7,4),rgb(3,6,5),rgb(13,13,18)"]},{"time":"06:40","colors":["rgb(4,7,14),rgb(3,6,6),rgb(2,7,5),rgb(9,10,16)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,10,15)","rgb(2,7,4),rgb(2,7,3),rgb(2,6,4),rgb(9,10,16)","rgb(3,6,6),rgb(3,6,6),rgb(3,6,6),rgb(13,13,19)"]},{"time":"06:50","colors":["rgb(10,8,69),rgb(4,7,17),rgb(3,6,9),rgb(10,10,23)","rgb(3,6,10),rgb(3,6,8),rgb(3,6,8),rgb(10,10,23)","rgb(3,6,6),rgb(3,6,7),rgb(4,6,12),rgb(11,10,24)","rgb(3,6,9),rgb(3,6,8),rgb(3,7,10),rgb(14,13,24)"]},{"time":"07:00","colors":["rgb(27,21,159),rgb(8,9,47),rgb(6,7,29),rgb(15,11,57)","rgb(6,8,28),rgb(6,7,27),rgb(6,7,28),rgb(15,11,57)","rgb(4,7,15),rgb(5,7,22),rgb(9,8,46),rgb(15,11,57)","rgb(6,7,22),rgb(5,7,21),rgb(6,7,27),rgb(17,14,48)"]},{"time":"07:10","colors":["rgb(124,231,251),rgb(50,79,177),rgb(33,37,155),rgb(48,58,190)","rgb(31,45,145),rgb(32,40,149),rgb(33,41,149),rgb(53,66,212)","rgb(20,16,112),rgb(31,34,134),rgb(42,52,183),rgb(49,57,198)","rgb(25,14,130),rgb(26,20,126),rgb(32,28,138),rgb(48,42,171)"]},{"time":"07:20","colors":["rgb(101,228,251),rgb(49,87,190),rgb(46,70,195),rgb(64,99,210)","rgb(38,61,171),rgb(46,70,193),rgb(44,69,184),rgb(63,97,226)","rgb(31,37,142),rgb(46,63,180),rgb(58,92,229),rgb(62,93,227)","rgb(38,39,163),rgb(37,42,162),rgb(49,60,188),rgb(64,79,209)"]},{"time":"07:30","colors":["rgb(220,239,253),rgb(80,118,225),rgb(65,112,228),rgb(83,163,228)","rgb(60,88,206),rgb(60,98,227),rgb(60,103,209),rgb(82,152,233)","rgb(44,55,183),rgb(57,84,217),rgb(74,132,239),rgb(78,138,232)","rgb(49,51,197),rgb(47,55,191),rgb(60,80,217),rgb(75,101,221)"]},{"time":"07:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(208,233,240)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(226,232,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(228,231,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(230,231,239)"]},{"time":"07:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(234,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,240)"]},{"time":"08:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(253,249,255),rgb(251,249,255),rgb(235,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(234,231,240)"]},{"time":"08:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"16:00","colors":["rgb(59,112,254),rgb(63,121,254),rgb(56,105,225),rgb(23,30,83)","rgb(60,110,253),rgb(63,118,254),rgb(60,107,240),rgb(30,41,103)","rgb(63,110,254),rgb(64,115,253),rgb(57,95,223),rgb(29,38,99)","rgb(63,109,254),rgb(64,111,253),rgb(56,89,219),rgb(26,29,77)"]},{"time":"16:10","colors":["rgb(21,44,108),rgb(19,44,103),rgb(17,38,90),rgb(13,16,36)","rgb(23,46,113),rgb(22,46,109),rgb(20,41,98),rgb(13,18,43)","rgb(25,46,115),rgb(25,46,113),rgb(22,41,102),rgb(15,20,48)","rgb(19,37,96),rgb(20,39,99),rgb(17,33,88),rgb(16,17,37)"]},{"time":"16:20","colors":["rgb(15,32,87),rgb(16,36,93),rgb(18,39,95),rgb(13,16,34)","rgb(16,34,89),rgb(17,38,94),rgb(21,43,104),rgb(14,19,44)","rgb(19,36,94),rgb(20,39,96),rgb(22,41,102),rgb(15,19,46)","rgb(22,40,103),rgb(22,40,102),rgb(22,39,100),rgb(16,17,36)"]},{"time":"16:30","colors":["rgb(6,8,33),rgb(7,8,37),rgb(6,8,31),rgb(10,11,19)","rgb(7,8,39),rgb(7,8,37),rgb(6,8,31),rgb(10,10,23)","rgb(8,8,40),rgb(8,8,37),rgb(7,7,32),rgb(10,10,23)","rgb(8,8,40),rgb(8,8,38),rgb(7,7,30),rgb(13,13,22)"]},{"time":"16:40","colors":["rgb(9,11,60),rgb(9,10,59),rgb(9,10,45),rgb(13,12,25)","rgb(9,13,63),rgb(9,10,56),rgb(9,9,51),rgb(11,11,32)","rgb(9,12,63),rgb(9,13,64),rgb(9,11,58),rgb(13,17,44)","rgb(10,13,64),rgb(10,13,66),rgb(11,18,71),rgb(16,19,39)"]},{"time":"17:00","colors":["rgb(2,6,5),rgb(2,6,5),rgb(4,7,6),rgb(12,12,15)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,16)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,7),rgb(12,13,17)"]},{"time":"17:30","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"17:40","colors":["rgb(3,7,2),rgb(2,7,2),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"17:50","colors":["rgb(3,7,2),rgb(2,7,1),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,2),rgb(2,7,3),rgb(12,13,15)"]},{"time":"18:00","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(12,12,14)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"18:10","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,7,5),rgb(11,12,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,4),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"18:20","colors":["rgb(3,6,2),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(2,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]},{"time":"18:30","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,2),rgb(9,11,12)","rgb(5,6,6),rgb(6,7,6),rgb(2,7,3),rgb(12,13,15)"]},{"time":"18:50","colors":["rgb(3,6,2),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,6),rgb(5,7,6),rgb(2,7,3),rgb(12,13,15)"]},{"time":"19:00","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,6),rgb(5,7,6),rgb(2,7,3),rgb(12,13,16)"]},{"time":"19:10","colors":["rgb(2,6,5),rgb(2,6,3),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,5),rgb(5,7,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"19:20","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,5),rgb(5,6,6),rgb(2,7,3),rgb(12,13,15)"]},{"time":"19:30","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(5,7,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"19:40","colors":["rgb(3,6,5),rgb(2,6,3),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,5),rgb(5,7,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"19:50","colors":["rgb(3,6,5),rgb(2,6,4),rgb(4,8,3),rgb(11,12,14)","rgb(4,5,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(5,7,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"20:00","colors":["rgb(3,6,4),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,5),rgb(5,7,6),rgb(2,7,3),rgb(12,13,15)"]},{"time":"20:10","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(5,7,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"20:20","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(5,7,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"20:30","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,8,3),rgb(11,12,14)","rgb(4,5,5),rgb(2,6,3),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(5,6,5),rgb(6,7,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"20:40","colors":["rgb(2,7,3),rgb(2,7,1),rgb(4,8,3),rgb(11,12,14)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,5),rgb(6,7,6),rgb(2,7,3),rgb(12,13,15)"]},{"time":"20:50","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(4,6,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,4),rgb(6,7,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"21:00","colors":["rgb(3,6,2),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,4),rgb(6,7,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"21:20","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(6,7,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"21:30","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,5),rgb(6,7,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"21:40","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,5),rgb(6,7,6),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:00","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,2),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:10","colors":["rgb(2,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,5,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"22:20","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,7,6),rgb(11,12,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,4),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:30","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:40","colors":["rgb(2,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"22:50","colors":["rgb(2,7,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(4,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"23:00","colors":["rgb(2,7,2),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"23:10","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"23:20","colors":["rgb(2,7,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"23:30","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"23:40","colors":["rgb(3,7,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,4),rgb(12,13,15)"]},{"time":"23:50","colors":["rgb(3,7,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,3),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]}]},{"day":"19.01.2018","times":[{"time":"00:00","colors":["rgb(3,6,4),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"00:10","colors":["rgb(2,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,4),rgb(12,13,15)"]},{"time":"00:20","colors":["rgb(3,6,4),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(4,5,5),rgb(2,6,4),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(12,13,16)"]},{"time":"00:30","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(4,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"00:40","colors":["rgb(2,7,2),rgb(2,7,2),rgb(4,8,2),rgb(11,12,13)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,7,4),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"00:50","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]},{"time":"01:10","colors":["rgb(2,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,13)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"01:20","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"01:30","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"01:40","colors":["rgb(3,6,4),rgb(2,7,2),rgb(4,8,3),rgb(11,12,13)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"01:50","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,13)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"02:00","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"02:10","colors":["rgb(2,7,2),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"02:30","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,13)","rgb(2,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"02:40","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,13)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,3),rgb(12,13,15)"]},{"time":"02:50","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"03:00","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,13)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"03:10","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"03:20","colors":["rgb(2,6,4),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]},{"time":"03:30","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]},{"time":"03:40","colors":["rgb(3,7,2),rgb(2,7,2),rgb(4,8,3),rgb(11,12,13)","rgb(2,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"03:50","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,7,3),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"04:00","colors":["rgb(2,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,13)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"04:10","colors":["rgb(3,7,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,13)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"04:20","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"04:30","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"04:40","colors":["rgb(3,6,2),rgb(2,7,1),rgb(4,8,2),rgb(11,12,13)","rgb(4,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"04:50","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,7,4),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"05:00","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"05:40","colors":["rgb(2,6,4),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(2,6,5),rgb(2,6,3),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"05:50","colors":["rgb(3,7,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,2),rgb(12,13,14)"]},{"time":"06:00","colors":["rgb(3,6,4),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"06:10","colors":["rgb(2,7,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,13)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]},{"time":"06:20","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(4,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,2),rgb(9,11,13)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,4),rgb(12,13,15)"]},{"time":"06:40","colors":["rgb(3,6,11),rgb(3,6,9),rgb(4,8,9),rgb(11,11,16)","rgb(3,6,12),rgb(3,6,10),rgb(3,6,8),rgb(9,10,17)","rgb(4,6,13),rgb(3,6,11),rgb(3,6,10),rgb(9,10,16)","rgb(4,7,15),rgb(4,6,13),rgb(3,6,11),rgb(12,13,18)"]},{"time":"06:50","colors":["rgb(10,18,81),rgb(9,15,72),rgb(10,10,54),rgb(13,12,27)","rgb(9,16,78),rgb(10,19,79),rgb(8,10,63),rgb(11,11,34)","rgb(11,18,82),rgb(12,22,87),rgb(10,14,74),rgb(12,12,39)","rgb(15,30,108),rgb(16,36,119),rgb(17,37,117),rgb(16,17,44)"]},{"time":"07:00","colors":["rgb(41,73,225),rgb(39,71,215),rgb(38,65,195),rgb(21,24,81)","rgb(49,88,248),rgb(46,82,235),rgb(42,72,214),rgb(23,30,100)","rgb(56,102,254),rgb(56,102,254),rgb(46,77,226),rgb(26,33,111)","rgb(56,99,254),rgb(54,93,252),rgb(46,75,229),rgb(27,32,106)"]},{"time":"07:10","colors":["rgb(215,254,254),rgb(249,250,254),rgb(200,243,253),rgb(67,110,210)","rgb(215,254,254),rgb(250,250,254),rgb(241,251,254),rgb(96,138,221)","rgb(203,254,254),rgb(241,252,254),rgb(250,250,252),rgb(121,145,226)","rgb(179,254,254),rgb(202,254,254),rgb(235,253,253),rgb(111,138,230)"]},{"time":"07:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(250,249,254),rgb(152,225,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(183,232,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(201,233,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(208,232,240)"]},{"time":"07:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(211,233,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(233,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"07:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(252,249,254),rgb(176,231,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(192,233,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(202,233,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(229,232,240)"]},{"time":"07:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(234,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(234,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(231,228,240)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(251,248,254),rgb(200,205,230)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(222,221,238)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(229,228,240)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(232,228,239)"]},{"time":"15:50","colors":["rgb(208,254,254),rgb(239,253,254),rgb(230,236,244),rgb(100,106,141)","rgb(218,254,254),rgb(248,251,254),rgb(250,249,255),rgb(137,139,170)","rgb(223,254,254),rgb(250,250,254),rgb(250,249,255),rgb(141,143,175)","rgb(222,254,254),rgb(250,250,255),rgb(250,249,255),rgb(130,120,155)"]},{"time":"16:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(243,243,253),rgb(149,156,222)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(175,172,227)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(177,173,227)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(194,167,227)"]},{"time":"16:30","colors":["rgb(27,53,142),rgb(32,59,154),rgb(40,66,170),rgb(21,24,64)","rgb(42,72,187),rgb(30,56,148),rgb(43,71,187),rgb(24,31,88)","rgb(56,98,243),rgb(38,65,173),rgb(42,71,190),rgb(26,36,102)","rgb(57,100,253),rgb(46,76,206),rgb(41,69,193),rgb(25,30,86)"]},{"time":"16:40","colors":["rgb(6,8,29),rgb(4,7,14),rgb(4,7,9),rgb(12,12,16)","rgb(8,10,46),rgb(5,7,22),rgb(3,6,9),rgb(9,10,17)","rgb(9,13,59),rgb(5,7,23),rgb(3,6,10),rgb(9,10,17)","rgb(6,7,27),rgb(4,7,14),rgb(3,6,10),rgb(12,13,18)"]},{"time":"16:50","colors":["rgb(3,6,6),rgb(3,6,7),rgb(4,7,8),rgb(12,12,15)","rgb(3,6,6),rgb(3,6,9),rgb(3,6,8),rgb(9,10,15)","rgb(3,6,7),rgb(3,6,8),rgb(3,6,8),rgb(9,10,16)","rgb(6,6,11),rgb(7,7,12),rgb(3,6,9),rgb(12,13,18)"]},{"time":"17:00","colors":["rgb(2,6,5),rgb(2,7,3),rgb(4,8,3),rgb(11,12,14)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,3),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,14)","rgb(5,6,7),rgb(6,7,7),rgb(2,6,5),rgb(12,13,17)"]},{"time":"17:10","colors":["rgb(2,6,4),rgb(2,7,3),rgb(4,8,3),rgb(12,12,14)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(4,6,6),rgb(6,7,7),rgb(2,6,4),rgb(12,13,16)"]},{"time":"17:20","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,2),rgb(9,11,12)","rgb(4,6,5),rgb(6,7,6),rgb(2,7,3),rgb(12,13,15)"]},{"time":"17:30","colors":["rgb(3,7,2),rgb(2,7,1),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,5),rgb(6,7,6),rgb(2,7,3),rgb(12,13,15)"]},{"time":"17:40","colors":["rgb(2,6,5),rgb(2,6,5),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(6,6,6),rgb(7,7,6),rgb(2,7,3),rgb(12,13,15)"]},{"time":"17:50","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,8,4),rgb(11,12,14)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(6,6,6),rgb(6,7,6),rgb(2,7,3),rgb(12,13,16)"]},{"time":"18:00","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,5),rgb(6,7,6),rgb(2,7,3),rgb(12,13,15)"]},{"time":"18:10","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,6),rgb(6,7,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"18:20","colors":["rgb(3,7,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(6,6,6),rgb(6,7,7),rgb(2,7,4),rgb(12,13,16)"]},{"time":"18:30","colors":["rgb(2,6,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(6,6,6),rgb(6,7,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"18:40","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,2),rgb(9,11,13)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,16)"]},{"time":"19:10","colors":["rgb(3,6,2),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"19:20","colors":["rgb(3,7,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"19:30","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(4,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"19:40","colors":["rgb(2,6,5),rgb(2,6,5),rgb(4,7,6),rgb(11,12,14)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,4),rgb(9,10,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"19:50","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,3),rgb(12,13,15)"]},{"time":"20:00","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"20:10","colors":["rgb(2,7,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"20:20","colors":["rgb(3,6,2),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,3),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"20:50","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,7,5),rgb(11,12,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,2),rgb(2,7,3),rgb(12,13,15)"]},{"time":"21:00","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,7,5),rgb(11,12,14)","rgb(4,5,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(4,6,5),rgb(2,6,3),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"21:10","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"21:20","colors":["rgb(3,6,2),rgb(2,7,1),rgb(4,8,2),rgb(11,12,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"22:00","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,7,4),rgb(12,12,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,4),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:10","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,5,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,13)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:20","colors":["rgb(2,6,5),rgb(2,6,5),rgb(4,7,5),rgb(11,12,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,13)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,14)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,5),rgb(12,13,15)"]},{"time":"22:30","colors":["rgb(3,6,4),rgb(2,7,1),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"22:40","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:50","colors":["rgb(3,6,4),rgb(2,7,2),rgb(4,8,2),rgb(11,12,14)","rgb(2,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"23:00","colors":["rgb(3,6,5),rgb(2,7,3),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"23:10","colors":["rgb(3,7,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"23:20","colors":["rgb(2,6,5),rgb(2,6,5),rgb(4,7,4),rgb(11,12,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,4),rgb(9,10,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(12,13,17)"]},{"time":"23:30","colors":["rgb(2,7,3),rgb(2,7,1),rgb(4,8,2),rgb(12,12,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,14)"]},{"time":"23:40","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,7,4),rgb(11,12,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,4),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"23:50","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(4,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,3),rgb(2,7,2),rgb(12,13,15)"]}]},{"day":"20.01.2018","times":[{"time":"00:00","colors":["rgb(2,6,5),rgb(2,7,2),rgb(4,8,2),rgb(11,12,13)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"00:20","colors":["rgb(3,7,2),rgb(2,7,1),rgb(4,8,2),rgb(11,12,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,7,3),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"00:30","colors":["rgb(2,6,3),rgb(2,7,1),rgb(4,8,2),rgb(11,12,13)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"00:40","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,16)"]},{"time":"01:10","colors":["rgb(2,7,2),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"01:20","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,7,5),rgb(11,12,14)","rgb(4,5,5),rgb(2,6,5),rgb(2,6,4),rgb(9,11,12)","rgb(4,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"01:30","colors":["rgb(3,6,5),rgb(2,7,2),rgb(4,8,2),rgb(11,12,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]},{"time":"01:40","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,7,3),rgb(11,11,14)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"01:50","colors":["rgb(2,7,3),rgb(2,7,1),rgb(4,7,2),rgb(11,11,14)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"02:00","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,7,2),rgb(11,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"02:10","colors":["rgb(2,7,2),rgb(2,7,1),rgb(4,8,2),rgb(11,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"02:20","colors":["rgb(2,7,2),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"02:30","colors":["rgb(3,7,2),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"02:40","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,7,5),rgb(11,11,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"02:50","colors":["rgb(3,6,5),rgb(2,7,3),rgb(4,8,2),rgb(11,11,14)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,4),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(12,13,16)"]},{"time":"03:00","colors":["rgb(3,6,2),rgb(2,7,1),rgb(4,7,2),rgb(11,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"03:10","colors":["rgb(3,6,4),rgb(2,7,2),rgb(4,7,2),rgb(11,11,14)","rgb(4,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"03:20","colors":["rgb(2,6,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"03:30","colors":["rgb(3,6,5),rgb(2,6,4),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"03:40","colors":["rgb(2,6,3),rgb(2,7,2),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"03:50","colors":["rgb(2,6,3),rgb(2,7,2),rgb(4,8,2),rgb(11,12,13)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,7,4),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"04:10","colors":["rgb(3,6,4),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"04:20","colors":["rgb(3,6,2),rgb(2,7,1),rgb(4,8,2),rgb(11,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"04:30","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,7,5),rgb(11,11,14)","rgb(4,5,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"04:40","colors":["rgb(3,7,3),rgb(2,7,2),rgb(4,7,2),rgb(11,11,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"04:50","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,7,3),rgb(11,11,13)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,3),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"05:00","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,7,2),rgb(11,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,5,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,3),rgb(12,13,15)"]},{"time":"05:10","colors":["rgb(2,7,3),rgb(2,7,1),rgb(4,7,2),rgb(11,11,13)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"05:20","colors":["rgb(3,6,2),rgb(2,7,1),rgb(4,7,2),rgb(11,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"05:30","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,2),rgb(11,11,13)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"05:50","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,7,5),rgb(11,11,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,13)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,3),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,2),rgb(12,13,15)"]},{"time":"06:00","colors":["rgb(3,6,2),rgb(2,7,1),rgb(4,7,2),rgb(11,11,13)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"06:10","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,7,3),rgb(11,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]},{"time":"06:20","colors":["rgb(3,6,4),rgb(2,7,3),rgb(4,8,3),rgb(11,11,14)","rgb(4,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,4),rgb(12,13,16)"]},{"time":"06:30","colors":["rgb(3,6,6),rgb(2,6,6),rgb(4,7,6),rgb(11,12,15)","rgb(3,6,6),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(3,6,6),rgb(2,6,6),rgb(2,6,5),rgb(12,13,17)"]},{"time":"06:40","colors":["rgb(7,8,40),rgb(8,9,51),rgb(9,9,36),rgb(12,11,20)","rgb(7,8,37),rgb(8,8,43),rgb(7,8,36),rgb(10,10,20)","rgb(6,8,35),rgb(7,8,41),rgb(6,7,31),rgb(10,10,20)","rgb(6,8,35),rgb(7,8,37),rgb(6,7,25),rgb(13,13,21)"]},{"time":"06:50","colors":["rgb(26,54,166),rgb(37,70,201),rgb(39,68,185),rgb(19,22,63)","rgb(22,50,150),rgb(30,58,171),rgb(24,51,147),rgb(17,23,70)","rgb(20,45,140),rgb(26,52,158),rgb(23,48,143),rgb(17,22,72)","rgb(20,44,140),rgb(26,50,157),rgb(26,50,152),rgb(20,22,72)"]},{"time":"07:10","colors":["rgb(241,252,254),rgb(250,250,255),rgb(201,243,253),rgb(74,116,217)","rgb(238,253,254),rgb(246,251,254),rgb(177,254,254),rgb(83,138,220)","rgb(208,254,254),rgb(216,254,254),rgb(194,254,254),rgb(93,150,234)","rgb(187,254,254),rgb(214,254,254),rgb(209,254,254),rgb(100,141,237)"]},{"time":"07:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(249,249,254),rgb(166,211,240)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(182,216,240)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(196,226,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(203,230,240)"]},{"time":"07:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(218,233,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(231,232,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"07:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,231,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(221,232,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(231,232,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(234,231,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,231,240)"]},{"time":"15:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(249,250,253),rgb(181,231,240)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(197,232,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(215,233,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(221,232,239)"]},{"time":"16:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(237,250,254),rgb(124,207,240)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(158,209,239)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(170,227,241)","rgb(254,248,255),rgb(254,248,255),rgb(253,248,255),rgb(181,224,238)"]},{"time":"16:10","colors":["rgb(253,249,255),rgb(251,249,255),rgb(225,248,254),rgb(101,168,238)","rgb(254,248,255),rgb(253,249,255),rgb(248,250,254),rgb(139,175,239)","rgb(254,248,255),rgb(254,248,255),rgb(251,249,254),rgb(150,198,240)","rgb(254,248,255),rgb(254,248,255),rgb(252,249,254),rgb(147,195,238)"]},{"time":"16:20","colors":["rgb(103,250,254),rgb(102,243,254),rgb(88,179,249),rgb(49,74,177)","rgb(115,254,254),rgb(112,253,254),rgb(104,221,254),rgb(60,97,184)","rgb(126,254,254),rgb(120,254,254),rgb(112,238,254),rgb(67,107,200)","rgb(131,254,254),rgb(122,254,254),rgb(116,244,254),rgb(68,95,200)"]},{"time":"16:30","colors":["rgb(40,70,214),rgb(38,67,202),rgb(29,54,160),rgb(19,22,76)","rgb(46,81,232),rgb(42,72,211),rgb(36,63,188),rgb(21,29,93)","rgb(48,82,238),rgb(46,77,227),rgb(41,67,203),rgb(24,31,105)","rgb(49,81,245),rgb(47,77,234),rgb(43,71,216),rgb(25,30,97)"]},{"time":"16:40","colors":["rgb(8,9,58),rgb(8,9,55),rgb(9,8,41),rgb(12,11,24)","rgb(8,10,63),rgb(8,9,58),rgb(8,8,51),rgb(11,10,30)","rgb(9,10,67),rgb(9,10,65),rgb(8,9,58),rgb(11,11,33)","rgb(10,11,72),rgb(9,10,66),rgb(9,9,61),rgb(14,13,31)"]},{"time":"16:50","colors":["rgb(3,6,11),rgb(3,6,11),rgb(4,7,10),rgb(11,11,16)","rgb(4,6,13),rgb(3,6,12),rgb(3,6,10),rgb(9,10,17)","rgb(4,6,13),rgb(4,6,13),rgb(3,6,11),rgb(9,10,17)","rgb(4,7,15),rgb(4,6,14),rgb(3,6,12),rgb(12,13,18)"]},{"time":"17:00","colors":["rgb(2,6,4),rgb(2,7,3),rgb(4,8,3),rgb(11,11,14)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,3),rgb(9,10,13)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(12,13,17)"]},{"time":"17:10","colors":["rgb(2,6,5),rgb(2,6,5),rgb(3,7,5),rgb(11,11,14)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,14)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,5),rgb(12,13,17)"]},{"time":"17:20","colors":["rgb(2,6,5),rgb(2,6,5),rgb(3,8,3),rgb(11,11,13)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,4),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,14)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,5),rgb(12,12,17)"]},{"time":"17:30","colors":["rgb(2,6,4),rgb(2,7,3),rgb(4,8,3),rgb(11,11,14)","rgb(2,6,5),rgb(2,6,3),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(9,10,13)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,4),rgb(12,13,16)"]},{"time":"17:40","colors":["rgb(2,7,3),rgb(2,7,2),rgb(3,8,3),rgb(11,11,14)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,4),rgb(12,13,16)"]},{"time":"17:50","colors":["rgb(2,7,3),rgb(2,7,2),rgb(3,8,3),rgb(11,11,13)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,4),rgb(12,13,15)"]},{"time":"18:00","colors":["rgb(2,7,3),rgb(2,7,2),rgb(3,8,3),rgb(11,11,13)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,4),rgb(12,13,15)"]},{"time":"18:10","colors":["rgb(3,6,5),rgb(2,7,3),rgb(4,8,3),rgb(11,11,13)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,7,5),rgb(2,7,4),rgb(2,6,5),rgb(12,13,16)"]},{"time":"18:20","colors":["rgb(3,7,4),rgb(2,7,3),rgb(4,8,3),rgb(11,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,6),rgb(3,6,5),rgb(3,6,5),rgb(12,13,17)"]},{"time":"18:30","colors":["rgb(2,6,4),rgb(2,7,3),rgb(4,8,3),rgb(11,11,14)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,5),rgb(2,6,5),rgb(3,6,5),rgb(12,13,16)"]},{"time":"18:40","colors":["rgb(2,7,4),rgb(2,7,3),rgb(4,8,3),rgb(11,11,14)","rgb(2,7,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,5),rgb(12,13,17)"]},{"time":"18:50","colors":["rgb(3,7,4),rgb(2,7,3),rgb(4,8,3),rgb(11,11,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(12,13,16)"]},{"time":"19:00","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(11,11,14)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,4),rgb(12,13,15)"]},{"time":"19:10","colors":["rgb(3,7,3),rgb(2,7,2),rgb(4,8,3),rgb(11,11,13)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(9,11,13)","rgb(3,6,5),rgb(3,7,4),rgb(3,7,4),rgb(12,13,16)"]},{"time":"19:20","colors":["rgb(2,7,4),rgb(2,7,2),rgb(4,8,3),rgb(11,11,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(9,11,13)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,4),rgb(12,13,15)"]},{"time":"19:40","colors":["rgb(2,6,4),rgb(2,7,2),rgb(3,8,3),rgb(11,11,13)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,4),rgb(12,13,15)"]},{"time":"19:50","colors":["rgb(2,7,3),rgb(2,7,2),rgb(3,8,3),rgb(11,11,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,5),rgb(12,13,16)"]},{"time":"20:00","colors":["rgb(2,6,3),rgb(2,7,2),rgb(3,8,3),rgb(11,11,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,4),rgb(12,13,16)"]},{"time":"20:10","colors":["rgb(3,6,4),rgb(2,7,2),rgb(4,8,3),rgb(11,11,13)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,4),rgb(2,7,4),rgb(12,13,15)"]},{"time":"20:30","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(11,11,13)","rgb(2,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,3),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,4),rgb(12,13,16)"]},{"time":"20:40","colors":["rgb(2,7,3),rgb(2,7,2),rgb(3,8,2),rgb(11,11,13)","rgb(2,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,4),rgb(12,13,15)"]},{"time":"20:50","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,7,3),rgb(11,11,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,4),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(12,13,16)"]},{"time":"21:00","colors":["rgb(3,6,4),rgb(2,7,2),rgb(3,8,3),rgb(11,11,14)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,4),rgb(12,13,16)"]},{"time":"21:10","colors":["rgb(2,7,3),rgb(2,7,2),rgb(3,8,3),rgb(11,11,14)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,2),rgb(9,11,13)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,4),rgb(12,13,16)"]},{"time":"21:20","colors":["rgb(2,7,3),rgb(2,7,2),rgb(3,8,3),rgb(11,11,14)","rgb(3,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"21:30","colors":["rgb(2,7,3),rgb(2,7,2),rgb(3,8,2),rgb(11,11,13)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"21:40","colors":["rgb(3,6,4),rgb(2,7,2),rgb(3,8,2),rgb(11,11,14)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(12,13,16)"]},{"time":"21:50","colors":["rgb(2,7,3),rgb(2,7,2),rgb(3,8,3),rgb(11,11,13)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:00","colors":["rgb(3,7,3),rgb(2,7,2),rgb(3,8,3),rgb(11,11,13)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,4),rgb(12,13,15)"]},{"time":"22:10","colors":["rgb(2,6,3),rgb(2,7,2),rgb(3,8,2),rgb(11,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:20","colors":["rgb(3,6,5),rgb(2,7,3),rgb(3,8,2),rgb(11,11,13)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:30","colors":["rgb(3,6,3),rgb(2,7,1),rgb(3,8,2),rgb(11,11,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]},{"time":"22:50","colors":["rgb(3,6,5),rgb(2,6,5),rgb(3,7,5),rgb(11,11,13)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,3),rgb(12,13,15)"]},{"time":"23:00","colors":["rgb(3,7,2),rgb(2,7,2),rgb(3,8,2),rgb(11,11,13)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"23:10","colors":["rgb(3,7,3),rgb(2,7,2),rgb(3,8,2),rgb(11,11,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"23:20","colors":["rgb(3,6,3),rgb(2,7,2),rgb(3,8,2),rgb(11,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"23:30","colors":["rgb(2,7,2),rgb(2,7,1),rgb(3,8,2),rgb(11,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,3),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"23:40","colors":["rgb(3,6,3),rgb(2,7,2),rgb(3,8,2),rgb(11,11,13)","rgb(4,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,3),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"23:50","colors":["rgb(3,6,3),rgb(2,7,2),rgb(3,8,2),rgb(11,11,14)","rgb(2,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]}]},{"day":"21.01.2018","times":[{"time":"00:00","colors":["rgb(2,7,3),rgb(2,7,2),rgb(3,8,2),rgb(11,11,13)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"00:10","colors":["rgb(2,6,4),rgb(2,7,2),rgb(3,8,2),rgb(11,11,14)","rgb(2,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"00:20","colors":["rgb(3,6,5),rgb(2,6,5),rgb(3,7,5),rgb(11,11,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,14)","rgb(4,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(12,13,17)"]},{"time":"00:30","colors":["rgb(3,6,3),rgb(2,7,2),rgb(3,8,2),rgb(11,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"00:40","colors":["rgb(3,6,3),rgb(2,7,2),rgb(3,8,2),rgb(11,11,13)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"00:50","colors":["rgb(3,7,2),rgb(2,7,2),rgb(3,8,2),rgb(11,11,13)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"01:00","colors":["rgb(3,6,3),rgb(2,7,2),rgb(3,8,2),rgb(11,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"01:10","colors":["rgb(3,6,5),rgb(2,6,5),rgb(3,7,5),rgb(11,11,13)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"01:20","colors":["rgb(3,6,5),rgb(2,7,2),rgb(3,8,2),rgb(11,11,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"01:30","colors":["rgb(3,6,3),rgb(2,7,2),rgb(3,8,2),rgb(11,11,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"01:40","colors":["rgb(2,7,3),rgb(2,7,2),rgb(3,8,2),rgb(11,11,13)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"01:50","colors":["rgb(2,6,5),rgb(2,6,5),rgb(3,7,5),rgb(11,11,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,4),rgb(12,13,15)"]},{"time":"02:00","colors":["rgb(3,6,4),rgb(2,7,1),rgb(4,7,2),rgb(11,11,14)","rgb(4,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"02:10","colors":["rgb(3,6,2),rgb(2,7,1),rgb(3,7,2),rgb(10,11,13)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"02:20","colors":["rgb(3,6,2),rgb(2,7,1),rgb(3,7,2),rgb(10,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]},{"time":"02:30","colors":["rgb(3,6,3),rgb(2,7,1),rgb(3,7,2),rgb(10,11,13)","rgb(4,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,5,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"02:40","colors":["rgb(3,6,2),rgb(2,7,1),rgb(3,7,2),rgb(10,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"02:50","colors":["rgb(3,6,3),rgb(2,7,1),rgb(3,7,2),rgb(10,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"03:00","colors":["rgb(2,7,3),rgb(2,7,2),rgb(3,7,2),rgb(10,11,13)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"03:10","colors":["rgb(2,6,5),rgb(2,6,5),rgb(3,6,5),rgb(10,11,13)","rgb(3,6,5),rgb(2,6,5),rgb(2,7,2),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"03:20","colors":["rgb(3,7,2),rgb(2,7,2),rgb(3,7,2),rgb(10,11,13)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"03:30","colors":["rgb(3,6,5),rgb(2,6,5),rgb(3,6,5),rgb(10,10,13)","rgb(5,5,5),rgb(2,6,5),rgb(2,6,3),rgb(9,11,12)","rgb(4,5,5),rgb(2,6,4),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"03:40","colors":["rgb(3,6,3),rgb(2,7,2),rgb(3,7,2),rgb(10,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,2),rgb(12,13,15)"]},{"time":"03:50","colors":["rgb(3,7,3),rgb(2,7,1),rgb(3,7,2),rgb(10,11,13)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,3),rgb(12,13,15)"]},{"time":"04:00","colors":["rgb(2,6,5),rgb(2,6,5),rgb(3,6,5),rgb(10,10,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,3),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"04:10","colors":["rgb(4,6,2),rgb(2,7,1),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(12,13,15)"]},{"time":"04:20","colors":["rgb(3,6,3),rgb(2,7,2),rgb(3,7,2),rgb(10,10,13)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"04:30","colors":["rgb(3,6,4),rgb(2,7,1),rgb(3,7,2),rgb(9,11,13)","rgb(3,6,5),rgb(2,6,3),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,14)"]},{"time":"04:40","colors":["rgb(2,6,5),rgb(2,6,5),rgb(2,7,3),rgb(9,10,13)","rgb(4,5,5),rgb(2,6,3),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"04:50","colors":["rgb(3,6,3),rgb(2,7,1),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,5,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"05:00","colors":["rgb(2,7,3),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"05:20","colors":["rgb(3,6,3),rgb(2,7,1),rgb(3,7,2),rgb(10,10,13)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,3),rgb(12,13,15)"]},{"time":"05:30","colors":["rgb(3,6,3),rgb(2,7,1),rgb(3,7,2),rgb(10,11,13)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"05:40","colors":["rgb(3,6,3),rgb(2,7,2),rgb(3,7,2),rgb(10,11,13)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,2),rgb(12,13,15)"]},{"time":"05:50","colors":["rgb(2,6,3),rgb(2,7,1),rgb(3,7,2),rgb(10,11,13)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"06:00","colors":["rgb(2,7,3),rgb(2,7,1),rgb(3,7,2),rgb(10,11,13)","rgb(4,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,3),rgb(12,13,15)"]},{"time":"06:10","colors":["rgb(2,7,2),rgb(2,7,2),rgb(3,7,2),rgb(10,11,13)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"06:20","colors":["rgb(2,6,5),rgb(2,6,5),rgb(3,6,6),rgb(10,10,16)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,16)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(9,10,15)","rgb(2,6,5),rgb(2,6,5),rgb(2,6,5),rgb(12,13,17)"]},{"time":"06:30","colors":["rgb(3,6,9),rgb(3,6,10),rgb(4,7,14),rgb(11,11,20)","rgb(3,6,9),rgb(3,6,11),rgb(4,6,12),rgb(10,10,19)","rgb(3,6,9),rgb(3,6,10),rgb(3,6,9),rgb(9,10,16)","rgb(3,6,9),rgb(3,6,9),rgb(3,6,9),rgb(12,13,18)"]},{"time":"06:40","colors":["rgb(8,9,55),rgb(8,10,58),rgb(9,12,54),rgb(14,13,40)","rgb(8,8,50),rgb(8,10,59),rgb(9,16,66),rgb(14,16,55)","rgb(8,8,47),rgb(8,10,59),rgb(9,13,64),rgb(13,12,51)","rgb(8,8,46),rgb(9,8,55),rgb(9,9,55),rgb(15,14,39)"]},{"time":"06:50","colors":["rgb(31,61,198),rgb(45,88,242),rgb(53,106,250),rgb(43,72,179)","rgb(31,61,193),rgb(47,89,244),rgb(57,117,254),rgb(51,89,208)","rgb(28,55,182),rgb(44,79,233),rgb(53,100,254),rgb(45,73,198)","rgb(26,50,173),rgb(39,67,214),rgb(46,78,232),rgb(36,54,156)"]},{"time":"07:00","colors":["rgb(90,224,254),rgb(125,253,254),rgb(181,253,254),rgb(126,194,241)","rgb(96,223,254),rgb(143,254,254),rgb(222,254,254),rgb(166,221,242)","rgb(93,206,254),rgb(124,253,254),rgb(170,254,254),rgb(130,204,241)","rgb(84,185,254),rgb(104,239,254),rgb(116,245,254),rgb(88,141,236)"]},{"time":"07:10","colors":["rgb(253,249,255),rgb(251,249,255),rgb(250,249,255),rgb(224,232,242)","rgb(251,249,255),rgb(250,249,255),rgb(250,249,255),rgb(230,232,242)","rgb(251,249,255),rgb(250,249,255),rgb(250,249,255),rgb(221,233,242)","rgb(249,250,254),rgb(250,249,255),rgb(250,250,254),rgb(177,227,240)"]},{"time":"07:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"07:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"07:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"07:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"08:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"09:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"10:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"11:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"12:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"13:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"14:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:20","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:30","colors":["rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(235,231,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,242)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(237,230,240)"]},{"time":"15:40","colors":["rgb(254,248,255),rgb(254,248,255),rgb(253,249,254),rgb(224,232,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(231,232,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(231,232,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(236,230,240)"]},{"time":"15:50","colors":["rgb(254,248,255),rgb(254,248,255),rgb(249,249,254),rgb(171,228,240)","rgb(254,248,255),rgb(254,248,255),rgb(253,248,255),rgb(181,231,241)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(180,230,240)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(209,232,238)"]},{"time":"16:00","colors":["rgb(254,248,255),rgb(254,248,255),rgb(238,249,254),rgb(122,200,238)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(150,194,239)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(152,193,238)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(163,208,235)"]},{"time":"16:10","colors":["rgb(254,248,255),rgb(254,248,255),rgb(233,245,253),rgb(104,152,236)","rgb(254,248,255),rgb(254,248,255),rgb(253,249,255),rgb(133,158,239)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(134,156,238)","rgb(254,248,255),rgb(254,248,255),rgb(254,248,255),rgb(136,153,235)"]},{"time":"16:20","colors":["rgb(138,254,254),rgb(153,254,254),rgb(122,238,252),rgb(51,102,197)","rgb(141,254,254),rgb(159,254,254),rgb(151,254,254),rgb(62,125,191)","rgb(145,254,254),rgb(167,254,254),rgb(174,254,254),rgb(74,125,189)","rgb(159,254,254),rgb(187,254,254),rgb(199,254,254),rgb(82,107,193)"]},{"time":"16:30","colors":["rgb(48,103,254),rgb(47,110,254),rgb(45,99,239),rgb(26,36,112)","rgb(49,104,254),rgb(49,111,254),rgb(49,115,254),rgb(30,47,132)","rgb(51,105,254),rgb(51,114,254),rgb(54,129,254),rgb(33,55,134)","rgb(53,113,254),rgb(54,132,254),rgb(61,158,254),rgb(33,52,116)"]},{"time":"16:40","colors":["rgb(13,27,107),rgb(13,31,112),rgb(14,29,101),rgb(15,16,41)","rgb(13,29,109),rgb(14,33,116),rgb(14,35,118),rgb(13,19,55)","rgb(14,32,115),rgb(15,36,124),rgb(15,40,131),rgb(14,22,62)","rgb(16,37,130),rgb(16,40,140),rgb(18,44,148),rgb(17,21,53)"]},{"time":"16:50","colors":["rgb(5,7,20),rgb(5,7,23),rgb(7,8,23),rgb(12,12,19)","rgb(5,6,20),rgb(5,6,24),rgb(5,6,26),rgb(10,10,22)","rgb(5,6,23),rgb(5,7,26),rgb(5,7,28),rgb(10,10,24)","rgb(6,7,29),rgb(6,8,33),rgb(7,8,36),rgb(13,13,23)"]},{"time":"17:00","colors":["rgb(3,6,6),rgb(2,6,6),rgb(4,7,7),rgb(12,12,15)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,6),rgb(9,10,15)","rgb(2,6,5),rgb(2,6,6),rgb(2,6,7),rgb(9,10,16)","rgb(3,6,7),rgb(3,6,8),rgb(3,6,8),rgb(12,13,17)"]},{"time":"17:10","colors":["rgb(3,6,4),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,4),rgb(2,7,2),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,4),rgb(2,7,2),rgb(9,11,13)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,5),rgb(12,13,15)"]},{"time":"17:20","colors":["rgb(2,6,5),rgb(2,6,5),rgb(4,8,4),rgb(12,12,14)","rgb(3,6,5),rgb(2,6,5),rgb(2,6,3),rgb(9,11,12)","rgb(3,6,5),rgb(2,6,4),rgb(2,7,2),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"17:30","colors":["rgb(3,7,3),rgb(2,7,1),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(2,6,4),rgb(2,7,3),rgb(2,7,3),rgb(12,13,15)"]},{"time":"17:40","colors":["rgb(3,6,2),rgb(2,7,1),rgb(4,8,2),rgb(11,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,3),rgb(12,13,15)"]},{"time":"18:00","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(12,12,14)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,6,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"18:10","colors":["rgb(3,6,2),rgb(2,7,1),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(2,6,4),rgb(2,7,2),rgb(2,7,2),rgb(12,13,15)"]},{"time":"18:20","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,2),rgb(9,11,12)","rgb(5,6,5),rgb(7,7,5),rgb(2,7,3),rgb(12,13,15)"]},{"time":"18:30","colors":["rgb(3,6,4),rgb(2,7,2),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,5),rgb(7,7,6),rgb(2,7,3),rgb(12,13,15)"]},{"time":"18:40","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,2),rgb(9,11,12)","rgb(7,6,7),rgb(6,7,6),rgb(2,7,3),rgb(12,13,15)"]},{"time":"18:50","colors":["rgb(2,6,4),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(8,7,8),rgb(10,9,9),rgb(2,7,4),rgb(12,13,15)"]},{"time":"19:00","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,2),rgb(9,11,12)","rgb(8,7,7),rgb(10,9,9),rgb(2,7,3),rgb(12,13,15)"]},{"time":"19:10","colors":["rgb(3,7,3),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,2),rgb(9,11,13)","rgb(8,7,9),rgb(10,8,10),rgb(2,7,4),rgb(12,13,15)"]},{"time":"19:20","colors":["rgb(3,7,2),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(7,7,6),rgb(9,8,8),rgb(2,7,3),rgb(12,13,15)"]},{"time":"19:30","colors":["rgb(3,7,2),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(8,7,6),rgb(10,9,8),rgb(2,7,3),rgb(12,13,15)"]},{"time":"19:40","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(7,7,7),rgb(9,9,8),rgb(2,7,3),rgb(12,13,15)"]},{"time":"19:50","colors":["rgb(3,7,3),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,2),rgb(9,11,13)","rgb(8,6,8),rgb(10,8,9),rgb(2,7,4),rgb(12,13,16)"]},{"time":"20:00","colors":["rgb(3,6,2),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(8,7,7),rgb(10,8,8),rgb(2,7,3),rgb(12,13,15)"]},{"time":"20:10","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,2),rgb(9,11,13)","rgb(8,7,7),rgb(10,8,8),rgb(2,7,4),rgb(12,13,15)"]},{"time":"20:20","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,2),rgb(9,11,12)","rgb(6,6,7),rgb(8,7,8),rgb(2,7,3),rgb(12,13,15)"]},{"time":"20:30","colors":["rgb(2,7,3),rgb(2,7,1),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,13)","rgb(6,6,7),rgb(7,7,8),rgb(2,7,3),rgb(12,13,15)"]},{"time":"20:40","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(5,6,6),rgb(7,7,7),rgb(2,7,3),rgb(12,13,16)"]},{"time":"20:50","colors":["rgb(2,6,4),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,5),rgb(2,7,1),rgb(2,7,2),rgb(9,11,13)","rgb(8,7,9),rgb(10,8,10),rgb(2,7,3),rgb(12,13,16)"]},{"time":"21:00","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(8,7,6),rgb(10,8,8),rgb(2,7,3),rgb(12,13,15)"]},{"time":"21:10","colors":["rgb(2,7,3),rgb(2,7,2),rgb(4,8,3),rgb(12,12,14)","rgb(3,6,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(8,7,7),rgb(10,9,8),rgb(2,7,3),rgb(12,13,15)"]},{"time":"21:20","colors":["rgb(3,6,3),rgb(2,7,1),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(8,6,8),rgb(10,8,9),rgb(2,7,3),rgb(12,13,15)"]},{"time":"21:30","colors":["rgb(3,7,2),rgb(2,7,2),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(8,7,7),rgb(10,8,8),rgb(2,7,2),rgb(12,13,15)"]},{"time":"21:40","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(12,12,14)","rgb(2,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(8,7,7),rgb(11,9,8),rgb(2,7,3),rgb(12,13,15)"]},{"time":"21:50","colors":["rgb(3,6,5),rgb(2,6,5),rgb(4,8,3),rgb(11,12,14)","rgb(3,6,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(8,7,7),rgb(11,9,8),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:00","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(8,7,7),rgb(10,9,9),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:10","colors":["rgb(3,6,5),rgb(2,6,4),rgb(4,8,2),rgb(12,12,14)","rgb(4,5,5),rgb(2,7,2),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(8,6,7),rgb(10,8,9),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:20","colors":["rgb(2,7,3),rgb(2,7,1),rgb(4,8,2),rgb(12,12,14)","rgb(3,7,2),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(4,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(8,7,6),rgb(10,9,8),rgb(2,7,3),rgb(12,13,15)"]},{"time":"22:30","colors":["rgb(3,6,3),rgb(2,7,2),rgb(4,8,2),rgb(12,12,14)","rgb(3,6,3),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(3,6,4),rgb(2,7,1),rgb(2,7,1),rgb(9,11,12)","rgb(8,7,7),rgb(10,9,8),rgb(2,7,3),rgb(12,13,15)"]}]}]}]}}]}

/***/ }),
/* 37 */
/***/ (function(module, exports) {

module.exports = [{"date":"201801150530","rgb":[[0.013314,0.027574,0.021741],[0.013181,0.027043,0.02007],[0.012599,0.02702,0.022767],[0.017008,0.026298,0.028751],[0.011633,0.027863,0.019828],[0.010756,0.028591,0.014987],[0.011188,0.027032,0.020314],[0.014754,0.027117,0.026815],[0.012159,0.028682,0.017167],[0.010539,0.029056,0.012865],[0.01099,0.028274,0.016904],[0.01516,0.027078,0.025933],[0.068158,0.056364,0.076468],[0.039877,0.042938,0.058273],[0.040386,0.042116,0.061143],[0.055724,0.052443,0.073574]]},{"date":"201801150540","rgb":[[0.013424,0.027466,0.022484],[0.013409,0.026614,0.020728],[0.013755,0.026611,0.022458],[0.016373,0.026791,0.029127],[0.011706,0.027488,0.020359],[0.010705,0.027312,0.018566],[0.011017,0.027564,0.018931],[0.01405,0.026987,0.027099],[0.011831,0.02857,0.017618],[0.010452,0.028685,0.013911],[0.010683,0.028158,0.016227],[0.01383,0.02695,0.026694],[0.068684,0.057447,0.074575],[0.040077,0.042803,0.058187],[0.04009,0.042542,0.059953],[0.054825,0.052236,0.07245]]},{"date":"201801150550","rgb":[[0.013978,0.027757,0.02138],[0.012926,0.027567,0.019055],[0.013443,0.027524,0.019716],[0.016472,0.026822,0.02688],[0.011708,0.028845,0.017255],[0.010615,0.029065,0.013019],[0.01082,0.028142,0.015865],[0.014736,0.027279,0.024064],[0.012155,0.028578,0.017603],[0.010624,0.029039,0.01284],[0.010779,0.02819,0.016403],[0.01447,0.027427,0.024591],[0.06877,0.057354,0.074723],[0.039979,0.043269,0.058211],[0.040335,0.042262,0.060707],[0.055951,0.052226,0.07263]]},{"date":"201801150600","rgb":[[0.01289,0.027772,0.021747],[0.012523,0.027275,0.019794],[0.012773,0.027199,0.019946],[0.016389,0.026839,0.027708],[0.011482,0.027632,0.020212],[0.010548,0.028559,0.014584],[0.010777,0.027859,0.016889],[0.013923,0.02686,0.026695],[0.012632,0.028471,0.018785],[0.010819,0.02884,0.014718],[0.010854,0.028746,0.015286],[0.014776,0.027187,0.025866],[0.069777,0.055732,0.076577],[0.040093,0.042583,0.060043],[0.040501,0.042001,0.062062],[0.05627,0.05253,0.07327]]},{"date":"201801150610","rgb":[[0.012145,0.027779,0.017933],[0.01199,0.026666,0.017718],[0.012832,0.025735,0.020153],[0.013694,0.02707,0.025666],[0.011012,0.027256,0.020261],[0.010277,0.028686,0.013348],[0.010389,0.0274,0.016801],[0.012469,0.027162,0.025357],[0.012085,0.028352,0.019706],[0.010451,0.028647,0.014209],[0.010731,0.028228,0.016464],[0.013598,0.027343,0.025793],[0.069502,0.057434,0.07577],[0.040295,0.042183,0.060892],[0.040127,0.04173,0.062549],[0.055197,0.052104,0.073962]]},{"date":"201801150620","rgb":[[0.013009,0.026937,0.02514],[0.012535,0.026279,0.021664],[0.012586,0.026328,0.022166],[0.014846,0.027086,0.027385],[0.012283,0.027036,0.026349],[0.010989,0.026415,0.022396],[0.011091,0.026518,0.022775],[0.013654,0.026953,0.02874],[0.013439,0.027218,0.032136],[0.012032,0.027124,0.027119],[0.01191,0.027193,0.025973],[0.014681,0.026952,0.030849],[0.071283,0.056651,0.084456],[0.041249,0.041532,0.069959],[0.041599,0.041587,0.068325],[0.057746,0.052361,0.076477]]},{"date":"201801150630","rgb":[[0.014707,0.027474,0.040619],[0.013139,0.027169,0.036072],[0.012906,0.02714,0.035082],[0.017634,0.027582,0.043436],[0.016637,0.028072,0.049216],[0.014801,0.027503,0.045013],[0.01396,0.027276,0.041748],[0.017577,0.028019,0.04767],[0.024228,0.030042,0.079424],[0.019139,0.029476,0.060274],[0.017625,0.028441,0.054233],[0.019581,0.028497,0.055251],[0.080924,0.059656,0.13491],[0.051051,0.043948,0.11352],[0.048258,0.043419,0.097196],[0.060847,0.054147,0.094264]]},{"date":"201801150650","rgb":[[0.10721,0.10405,0.51616],[0.12297,0.1406,0.53409],[0.11666,0.12654,0.52296],[0.10859,0.079619,0.52954],[0.10487,0.11346,0.4867],[0.12813,0.15386,0.54101],[0.13465,0.15261,0.54828],[0.13267,0.12051,0.55786],[0.11368,0.12047,0.50477],[0.11296,0.1331,0.48892],[0.10936,0.11435,0.48112],[0.1149,0.090321,0.51172],[0.10343,0.069711,0.27585],[0.090921,0.07607,0.32893],[0.090759,0.071809,0.32411],[0.093048,0.065465,0.27587]]},{"date":"201801150700","rgb":[[0.23936,0.30123,0.9725],[0.24928,0.33953,0.99194],[0.25836,0.34213,0.9969],[0.25874,0.30778,0.99415],[0.25732,0.34711,0.97895],[0.25469,0.35067,0.98045],[0.25986,0.34719,0.99454],[0.26452,0.32485,0.99556],[0.25514,0.33645,0.93575],[0.25073,0.33139,0.93747],[0.24758,0.30961,0.93495],[0.23748,0.26539,0.92024],[0.18046,0.16907,0.54473],[0.18753,0.20431,0.63458],[0.18137,0.18452,0.62159],[0.16293,0.14129,0.52878]]},{"date":"201801150710","rgb":[[0.80831,0.9993,0.99869],[0.883,0.99939,0.99836],[0.91915,0.99704,0.99689],[0.84589,0.9994,0.99846],[0.84785,0.99924,0.99851],[0.90751,0.99891,0.99823],[0.88475,0.99867,0.99731],[0.86693,0.99926,0.99818],[0.7245,0.98539,0.99471],[0.85682,0.99722,0.99832],[0.82071,0.99933,0.99794],[0.77525,0.99596,0.99715],[0.40216,0.5996,0.81579],[0.47175,0.69045,0.84177],[0.50841,0.68379,0.84998],[0.45034,0.56407,0.7976]]},{"date":"201801150720","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.98332,0.97555,0.99865],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99488,0.97601,0.99966],[0.6821,0.73412,0.93927],[0.74996,0.77141,0.9429],[0.77066,0.77616,0.93948],[0.70113,0.70333,0.92206]]},{"date":"201801150730","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.98853,0.97754,0.99915],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99498,0.97636,0.99976],[0.74354,0.83981,0.94156],[0.80261,0.85629,0.94324],[0.83087,0.86548,0.94025],[0.781,0.82357,0.92502]]},{"date":"201801150740","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99571,0.97662,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99606,0.97648,1],[0.86379,0.91348,0.94659],[0.89383,0.90969,0.94877],[0.9078,0.9081,0.94909],[0.90095,0.90733,0.93704]]},{"date":"201801150750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.91464,0.90914,0.94936],[0.92608,0.90668,0.94995],[0.92671,0.90613,0.95001],[0.91803,0.9058,0.9422]]},{"date":"201801150800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92899,0.90516,0.95054],[0.9304,0.90434,0.95054],[0.93038,0.90433,0.95054],[0.92226,0.90545,0.94198]]},{"date":"201801150810","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92785,0.90607,0.94878],[0.93038,0.90433,0.95054],[0.93015,0.90448,0.95052],[0.92241,0.90619,0.9394]]},{"date":"201801150820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.9029,0.94383]]},{"date":"201801150830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.90292,0.94385]]},{"date":"201801150840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92975,0.90293,0.94377]]},{"date":"201801150850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.9297,0.90289,0.94371]]},{"date":"201801150900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.9029,0.94375]]},{"date":"201801150920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90288,0.94381]]},{"date":"201801150930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.9029,0.94384]]},{"date":"201801150940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90289,0.94381]]},{"date":"201801151000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.9297,0.90287,0.94378]]},{"date":"201801151010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99565,0.97663,1],[0.99598,0.97651,1],[0.99608,0.97647,1],[0.99251,0.97769,1],[0.98552,0.98001,1],[0.98713,0.97947,1],[0.99436,0.97706,1],[0.92103,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92074,0.90627,0.94381]]},{"date":"201801151020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99541,0.9767,1],[0.99588,0.97653,1],[0.99608,0.97647,1],[0.99248,0.97769,1],[0.98552,0.98001,1],[0.98669,0.97961,1],[0.99423,0.97709,1],[0.92103,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92068,0.90632,0.94375]]},{"date":"201801151030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90287,0.94387]]},{"date":"201801151040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99466,0.97695,1],[0.99557,0.97665,1],[0.99608,0.97647,1],[0.99096,0.9782,1],[0.98481,0.98024,1],[0.98597,0.97986,1],[0.99318,0.97746,1],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92038,0.90644,0.94376]]},{"date":"201801151050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92968,0.90284,0.94373]]},{"date":"201801151100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90286,0.94384]]},{"date":"201801151110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90286,0.9438]]},{"date":"201801151120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90286,0.94381]]},{"date":"201801151130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90287,0.94382]]},{"date":"201801151140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90287,0.94382]]},{"date":"201801151150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92969,0.90283,0.94377]]},{"date":"201801151200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90287,0.94377]]},{"date":"201801151210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90285,0.94381]]},{"date":"201801151220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90287,0.94385]]},{"date":"201801151230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.90289,0.94386]]},{"date":"201801151240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90287,0.94384]]},{"date":"201801151250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.9297,0.90285,0.94372]]},{"date":"201801151300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90288,0.94379]]},{"date":"201801151310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90288,0.94387]]},{"date":"201801151320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90287,0.94386]]},{"date":"201801151330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90288,0.94389]]},{"date":"201801151340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92975,0.90289,0.94388]]},{"date":"201801151350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.9297,0.90286,0.94374]]},{"date":"201801151400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90289,0.9438]]},{"date":"201801151410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92975,0.90289,0.94386]]},{"date":"201801151420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92975,0.90289,0.94385]]},{"date":"201801151430","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92976,0.90291,0.94388]]},{"date":"201801151440","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92976,0.90289,0.94387]]},{"date":"201801151450","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90287,0.94375]]},{"date":"201801151500","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92969,0.90285,0.94374]]},{"date":"201801151510","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.9297,0.90283,0.94379]]},{"date":"201801151520","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92909,0.90321,0.94379]]},{"date":"201801151530","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92201,0.90784,0.94853],[0.92396,0.90698,0.94997],[0.9289,0.90489,0.95035],[0.92721,0.90414,0.94257]]},{"date":"201801151550","rgb":[[0.98793,0.97892,0.99965],[0.43253,0.57912,0.92745],[0.29426,0.47713,0.967],[0.36695,0.63115,0.98882],[0.63084,0.85004,0.99084],[0.23084,0.38711,0.83203],[0.27041,0.43124,0.88942],[0.27454,0.38237,0.87758],[0.32432,0.59697,0.96176],[0.36173,0.68009,0.94446],[0.34579,0.61344,0.94726],[0.25554,0.35587,0.81684],[0.41965,0.70919,0.91727],[0.36664,0.70916,0.92149],[0.43292,0.86118,0.94381],[0.36314,0.53459,0.8989]]},{"date":"201801151600","rgb":[[0.98389,0.98023,0.9994],[0.37431,0.42805,0.74776],[0.20516,0.24868,0.75175],[0.25418,0.30684,0.86662],[0.59089,0.69319,0.96264],[0.14592,0.19003,0.58848],[0.1755,0.21245,0.62461],[0.17463,0.16969,0.61103],[0.22913,0.33113,0.80711],[0.26057,0.40601,0.80655],[0.24595,0.34827,0.78584],[0.15684,0.15155,0.57558],[0.31443,0.49409,0.83195],[0.28493,0.42807,0.81939],[0.35084,0.57193,0.92523],[0.25932,0.27788,0.75649]]},{"date":"201801151610","rgb":[[0.49796,0.98878,0.99782],[0.20138,0.33759,0.53264],[0.073841,0.057827,0.34178],[0.11886,0.090967,0.45505],[0.3257,0.56817,0.75416],[0.065681,0.066266,0.29881],[0.079306,0.075374,0.3151],[0.069772,0.053084,0.28931],[0.11445,0.12401,0.45976],[0.14095,0.16791,0.48389],[0.11912,0.12598,0.42422],[0.074777,0.066911,0.28737],[0.18747,0.20545,0.59692],[0.16506,0.17627,0.5491],[0.21222,0.23861,0.68879],[0.15552,0.11826,0.45036]]},{"date":"201801151620","rgb":[[0.22937,0.24011,0.79483],[0.075236,0.083232,0.26527],[0.01904,0.028651,0.061543],[0.029864,0.031172,0.10824],[0.13559,0.14903,0.4898],[0.017074,0.028355,0.057264],[0.018423,0.028916,0.057583],[0.023052,0.029253,0.072196],[0.026746,0.031227,0.11209],[0.028194,0.031749,0.11729],[0.025196,0.030672,0.097349],[0.020749,0.029133,0.063082],[0.065534,0.047685,0.20613],[0.058003,0.046269,0.17527],[0.067368,0.049318,0.2331],[0.071258,0.055769,0.15129]]},{"date":"201801151630","rgb":[[0.041558,0.03547,0.21302],[0.020873,0.029234,0.078624],[0.012702,0.026032,0.022711],[0.015557,0.026522,0.030911],[0.029991,0.03154,0.14147],[0.010554,0.025983,0.022298],[0.01073,0.026463,0.021396],[0.012859,0.026848,0.025787],[0.01213,0.027107,0.028429],[0.011344,0.026595,0.025376],[0.01115,0.026339,0.025135],[0.012644,0.026951,0.027245],[0.042631,0.042131,0.073415],[0.040336,0.041626,0.067518],[0.041696,0.042081,0.072961],[0.056077,0.052146,0.07706]]},{"date":"201801151640","rgb":[[0.018718,0.027648,0.045739],[0.015209,0.026465,0.025786],[0.014279,0.025026,0.021145],[0.014801,0.026635,0.026283],[0.01358,0.028271,0.03155],[0.010284,0.028719,0.011024],[0.010303,0.027461,0.016014],[0.012127,0.02692,0.023609],[0.011076,0.028622,0.016607],[0.010309,0.02888,0.011668],[0.010329,0.028694,0.013434],[0.012861,0.027291,0.023896],[0.041015,0.042505,0.062403],[0.039546,0.042754,0.056903],[0.04059,0.04208,0.062131],[0.055135,0.05211,0.074186]]},{"date":"201801151650","rgb":[[0.014358,0.026906,0.029192],[0.012285,0.027733,0.017878],[0.012647,0.027461,0.015168],[0.014476,0.027039,0.025344],[0.011787,0.027217,0.022703],[0.010287,0.028768,0.011701],[0.010284,0.028714,0.012766],[0.012108,0.027351,0.023367],[0.010565,0.029033,0.013341],[0.010207,0.028866,0.011367],[0.010296,0.028843,0.011998],[0.012473,0.027175,0.024494],[0.040544,0.042777,0.059372],[0.039255,0.04336,0.0552],[0.040102,0.04273,0.059235],[0.054625,0.052838,0.071106]]},{"date":"201801151700","rgb":[[0.014821,0.027553,0.02352],[0.012965,0.025894,0.022067],[0.012433,0.026791,0.017363],[0.013803,0.027267,0.024604],[0.012095,0.027887,0.020208],[0.010265,0.026959,0.017107],[0.010311,0.028708,0.012687],[0.011725,0.026892,0.022947],[0.010626,0.028953,0.013427],[0.010238,0.02897,0.010486],[0.010178,0.02869,0.012483],[0.011916,0.027343,0.022083],[0.040398,0.04338,0.057672],[0.0394,0.042882,0.056001],[0.03961,0.042976,0.05675],[0.054339,0.052396,0.071489]]},{"date":"201801151710","rgb":[[0.013355,0.027713,0.021674],[0.01491,0.025743,0.018374],[0.018234,0.023903,0.01632],[0.014029,0.026542,0.025989],[0.011451,0.02784,0.019442],[0.010226,0.028875,0.010552],[0.01029,0.028531,0.012707],[0.01192,0.026921,0.023296],[0.010593,0.028899,0.013563],[0.010235,0.02885,0.011305],[0.01027,0.028579,0.013127],[0.012214,0.027343,0.023226],[0.039995,0.043098,0.058707],[0.039064,0.043397,0.054312],[0.039724,0.04305,0.05677],[0.05427,0.052005,0.070937]]},{"date":"201801151720","rgb":[[0.014395,0.028208,0.019204],[0.017884,0.025197,0.014211],[0.014658,0.026101,0.01565],[0.014661,0.027222,0.023787],[0.011895,0.028116,0.018622],[0.0102,0.02882,0.0107],[0.010186,0.028803,0.011074],[0.012318,0.027884,0.020819],[0.010712,0.028628,0.014013],[0.010223,0.028988,0.0093231],[0.010146,0.028878,0.010537],[0.012666,0.0278,0.019492],[0.039832,0.04345,0.057185],[0.039059,0.043404,0.05407],[0.039465,0.043162,0.055712],[0.05416,0.052781,0.069688]]},{"date":"201801151730","rgb":[[0.013152,0.027588,0.020801],[0.012881,0.026432,0.018747],[0.013507,0.025509,0.019151],[0.012948,0.026761,0.024778],[0.011272,0.028538,0.016676],[0.010259,0.02857,0.011156],[0.010243,0.028312,0.013285],[0.012084,0.026916,0.023114],[0.010679,0.028752,0.013795],[0.010153,0.02888,0.010916],[0.010167,0.028849,0.012196],[0.011697,0.027,0.022295],[0.040359,0.042925,0.059418],[0.039126,0.043022,0.056183],[0.039716,0.042819,0.057225],[0.053543,0.052336,0.072244]]},{"date":"201801151740","rgb":[[0.012233,0.027648,0.02235],[0.011775,0.026939,0.018264],[0.012427,0.02541,0.020597],[0.013142,0.026755,0.02442],[0.011327,0.028285,0.017348],[0.010175,0.028674,0.011139],[0.01017,0.028571,0.01211],[0.011592,0.027011,0.022973],[0.010652,0.028513,0.015056],[0.010153,0.028782,0.011749],[0.010233,0.028695,0.012626],[0.011783,0.027216,0.022636],[0.040046,0.042733,0.058953],[0.039086,0.043254,0.055191],[0.039459,0.043254,0.056176],[0.05407,0.052285,0.070956]]},{"date":"201801151750","rgb":[[0.012986,0.027788,0.020894],[0.013279,0.027183,0.015343],[0.013354,0.02686,0.015414],[0.013687,0.027374,0.024449],[0.010927,0.027917,0.018034],[0.010243,0.028839,0.011045],[0.0102,0.028822,0.011298],[0.012187,0.026828,0.023112],[0.01073,0.028784,0.014418],[0.010195,0.028887,0.011312],[0.010248,0.028646,0.012692],[0.012021,0.027478,0.022936],[0.040291,0.043013,0.057475],[0.039118,0.043331,0.054554],[0.039664,0.043208,0.056207],[0.05477,0.052034,0.072298]]},{"date":"201801151800","rgb":[[0.013473,0.027409,0.023107],[0.012686,0.026664,0.018373],[0.01352,0.024881,0.021178],[0.014088,0.027029,0.02329],[0.011784,0.02837,0.017082],[0.010195,0.028941,0.0088756],[0.010188,0.028263,0.012073],[0.011916,0.028188,0.018088],[0.010701,0.028861,0.013961],[0.010223,0.028971,0.0091023],[0.010206,0.028807,0.01149],[0.011719,0.028086,0.019187],[0.040158,0.043077,0.058151],[0.039068,0.04338,0.053645],[0.039696,0.043079,0.055908],[0.054538,0.052894,0.070701]]},{"date":"201801151810","rgb":[[0.013167,0.027493,0.021974],[0.014442,0.026128,0.016205],[0.012841,0.026051,0.018086],[0.013077,0.027043,0.024616],[0.011132,0.02792,0.018053],[0.010202,0.028907,0.010333],[0.010172,0.028638,0.012012],[0.011682,0.027108,0.022681],[0.010736,0.028904,0.013874],[0.010162,0.028877,0.010324],[0.010237,0.028777,0.012143],[0.011671,0.027377,0.022456],[0.040131,0.043034,0.058537],[0.03908,0.04335,0.053924],[0.039631,0.042547,0.058443],[0.054573,0.052423,0.072742]]},{"date":"201801151820","rgb":[[0.012832,0.027662,0.020274],[0.014101,0.026332,0.017069],[0.013273,0.026836,0.01308],[0.01355,0.02697,0.022278],[0.0111,0.028669,0.015312],[0.010254,0.028899,0.010206],[0.010209,0.028889,0.010125],[0.011621,0.028021,0.019318],[0.010445,0.028858,0.013172],[0.010206,0.028841,0.010574],[0.010171,0.028749,0.012162],[0.011432,0.027935,0.019101],[0.040117,0.043396,0.057398],[0.039237,0.043351,0.054097],[0.039516,0.043309,0.055977],[0.054094,0.052769,0.069729]]},{"date":"201801151830","rgb":[[0.012786,0.027561,0.020135],[0.014641,0.026228,0.016201],[0.014636,0.025741,0.016116],[0.012875,0.027662,0.021691],[0.011021,0.02852,0.016061],[0.010186,0.028853,0.010153],[0.010163,0.028795,0.010565],[0.011494,0.027996,0.018302],[0.010506,0.028743,0.013298],[0.010214,0.028843,0.011628],[0.010153,0.028729,0.012],[0.01163,0.027804,0.020757],[0.040061,0.04351,0.056307],[0.039037,0.043261,0.05394],[0.039241,0.043178,0.054841],[0.054157,0.05244,0.070646]]},{"date":"201801151840","rgb":[[0.01336,0.028397,0.016833],[0.012977,0.027191,0.014188],[0.013857,0.026716,0.01318],[0.013874,0.027852,0.020081],[0.011081,0.028939,0.014613],[0.010201,0.028917,0.0088625],[0.010166,0.028788,0.010636],[0.011634,0.028405,0.018365],[0.010574,0.029008,0.012958],[0.010203,0.028962,0.010239],[0.010158,0.028806,0.01139],[0.011831,0.02785,0.02038],[0.040143,0.043425,0.056966],[0.039179,0.043326,0.054206],[0.039408,0.043008,0.056019],[0.055108,0.052715,0.070917]]},{"date":"201801151850","rgb":[[0.012691,0.027567,0.020472],[0.01161,0.027426,0.016183],[0.013661,0.025546,0.018809],[0.013557,0.026935,0.023552],[0.010948,0.028424,0.015778],[0.010172,0.028873,0.0097251],[0.010198,0.028373,0.012359],[0.011411,0.026607,0.022899],[0.010485,0.028694,0.013467],[0.01014,0.028941,0.010459],[0.010169,0.02876,0.011885],[0.011524,0.027298,0.021535],[0.039899,0.043016,0.057398],[0.038984,0.043224,0.054344],[0.039808,0.04301,0.056386],[0.054438,0.052442,0.071237]]},{"date":"201801151900","rgb":[[0.01331,0.027573,0.019289],[0.013452,0.026624,0.016358],[0.014417,0.026145,0.014368],[0.012839,0.026999,0.024081],[0.010762,0.028826,0.013759],[0.010158,0.028859,0.010305],[0.010189,0.028773,0.010883],[0.011442,0.027408,0.019117],[0.010383,0.028812,0.013291],[0.010206,0.028797,0.011704],[0.010212,0.028691,0.012288],[0.011465,0.027832,0.019773],[0.039816,0.043251,0.057022],[0.039057,0.04334,0.054315],[0.039421,0.042856,0.056846],[0.053948,0.052575,0.070764]]},{"date":"201801151910","rgb":[[0.013218,0.027344,0.02209],[0.013479,0.026844,0.014823],[0.012575,0.025905,0.018978],[0.01316,0.026931,0.024204],[0.011175,0.028165,0.016689],[0.010177,0.028806,0.010175],[0.010207,0.028827,0.010966],[0.011179,0.027258,0.020668],[0.010556,0.028623,0.014693],[0.01018,0.028835,0.011351],[0.010178,0.028669,0.011901],[0.011454,0.02719,0.021499],[0.039957,0.042648,0.059837],[0.039269,0.043338,0.054854],[0.039534,0.043087,0.056445],[0.054133,0.052335,0.071069]]},{"date":"201801151920","rgb":[[0.0131,0.02795,0.018183],[0.015245,0.026068,0.012816],[0.012276,0.026295,0.016696],[0.013131,0.027599,0.020309],[0.010802,0.028734,0.012979],[0.010173,0.029002,0.0083639],[0.010177,0.028863,0.0099198],[0.011152,0.028306,0.016459],[0.01044,0.028893,0.011906],[0.010197,0.028929,0.0090451],[0.010124,0.02884,0.010161],[0.011315,0.028054,0.019379],[0.039754,0.04341,0.056011],[0.039084,0.043334,0.052902],[0.039331,0.04316,0.054432],[0.054745,0.052768,0.068706]]},{"date":"201801151930","rgb":[[0.013077,0.027943,0.019579],[0.012385,0.02736,0.015848],[0.012062,0.027528,0.013465],[0.013437,0.027618,0.022192],[0.010797,0.028483,0.015283],[0.010189,0.028888,0.010213],[0.010175,0.028778,0.011187],[0.011612,0.027728,0.019998],[0.010677,0.028889,0.013957],[0.010178,0.028923,0.010609],[0.010145,0.028827,0.011613],[0.011949,0.027865,0.020351],[0.040216,0.043348,0.057904],[0.039036,0.043358,0.054887],[0.039745,0.043297,0.05744],[0.055224,0.052566,0.071207]]},{"date":"201801151940","rgb":[[0.012497,0.027352,0.019796],[0.013786,0.02681,0.013458],[0.013057,0.026727,0.015404],[0.013837,0.026806,0.022395],[0.010693,0.028114,0.015359],[0.010185,0.028897,0.0094942],[0.010205,0.028779,0.010759],[0.011002,0.027215,0.019829],[0.010478,0.02874,0.013054],[0.010156,0.02892,0.0098638],[0.010177,0.02881,0.011369],[0.011149,0.02726,0.020375],[0.039891,0.04312,0.05717],[0.03901,0.043232,0.054796],[0.039383,0.043221,0.055835],[0.053807,0.052738,0.069326]]},{"date":"201801151950","rgb":[[0.012645,0.027207,0.021443],[0.014714,0.02613,0.016689],[0.012317,0.026865,0.015664],[0.012448,0.027115,0.022811],[0.010788,0.028176,0.016089],[0.010201,0.028917,0.0093883],[0.010163,0.028783,0.010987],[0.011118,0.027156,0.020395],[0.010443,0.028694,0.013966],[0.010127,0.028785,0.010461],[0.010158,0.028644,0.01175],[0.011073,0.02702,0.021282],[0.040007,0.04287,0.059025],[0.039082,0.043162,0.054493],[0.039583,0.042414,0.057636],[0.053574,0.05248,0.071857]]},{"date":"201801152000","rgb":[[0.01299,0.027262,0.021984],[0.014311,0.026319,0.01522],[0.016996,0.024551,0.015436],[0.013968,0.027028,0.023269],[0.01082,0.028235,0.01612],[0.0102,0.028721,0.011325],[0.010198,0.028526,0.012493],[0.011702,0.027276,0.021518],[0.010626,0.029066,0.013107],[0.010216,0.028865,0.011209],[0.010253,0.028608,0.012664],[0.01188,0.027349,0.022151],[0.040215,0.043283,0.057131],[0.039284,0.043022,0.055741],[0.039701,0.042829,0.057414],[0.054971,0.05265,0.070829]]},{"date":"201801152010","rgb":[[0.012959,0.027475,0.021413],[0.013754,0.026668,0.016172],[0.013122,0.026717,0.015023],[0.013766,0.027099,0.024088],[0.011148,0.028566,0.015329],[0.010234,0.028963,0.0098946],[0.010203,0.028856,0.010631],[0.011567,0.027838,0.019205],[0.010591,0.028838,0.013805],[0.010181,0.028903,0.010993],[0.010204,0.028792,0.011732],[0.011872,0.027358,0.022068],[0.040144,0.043435,0.056731],[0.039317,0.043193,0.055054],[0.039753,0.043248,0.055829],[0.055136,0.052601,0.070254]]},{"date":"201801152020","rgb":[[0.012702,0.028027,0.018421],[0.011817,0.027309,0.015846],[0.013906,0.026154,0.015987],[0.013033,0.027042,0.022922],[0.010941,0.028661,0.014566],[0.010236,0.028922,0.010354],[0.010159,0.028749,0.011449],[0.011863,0.027574,0.02061],[0.010668,0.028868,0.013967],[0.010201,0.028867,0.010384],[0.010226,0.028798,0.012632],[0.011874,0.027322,0.022171],[0.040307,0.042716,0.05902],[0.039389,0.043057,0.056267],[0.039746,0.042831,0.05807],[0.054558,0.052676,0.071765]]},{"date":"201801152030","rgb":[[0.013002,0.027487,0.020642],[0.01322,0.02665,0.01677],[0.011886,0.027301,0.01505],[0.013632,0.026907,0.02403],[0.01096,0.028618,0.015052],[0.010177,0.028817,0.010053],[0.010213,0.028777,0.011469],[0.011641,0.027641,0.019885],[0.010743,0.028885,0.014174],[0.010244,0.028956,0.010303],[0.010177,0.02881,0.011641],[0.011891,0.027755,0.022153],[0.040634,0.043281,0.058926],[0.039616,0.043155,0.056127],[0.039784,0.043167,0.05666],[0.055351,0.052474,0.072004]]},{"date":"201801152040","rgb":[[0.012293,0.028055,0.01768],[0.013451,0.026232,0.017155],[0.011947,0.02729,0.015177],[0.01362,0.027083,0.024842],[0.01081,0.028596,0.015665],[0.010241,0.028749,0.012065],[0.010213,0.028582,0.012917],[0.011634,0.027219,0.02327],[0.010581,0.028835,0.01431],[0.010254,0.028763,0.011666],[0.010181,0.028706,0.012401],[0.011428,0.02691,0.023778],[0.040333,0.042904,0.058198],[0.039244,0.043286,0.054884],[0.039749,0.042915,0.056248],[0.054784,0.052069,0.07219]]},{"date":"201801152050","rgb":[[0.013167,0.027785,0.017896],[0.013366,0.027133,0.013351],[0.012593,0.026307,0.016965],[0.013901,0.027695,0.02026],[0.010722,0.029033,0.013491],[0.01022,0.028919,0.0093628],[0.010169,0.02892,0.010186],[0.011299,0.028332,0.017542],[0.01039,0.028906,0.012526],[0.010242,0.028742,0.011128],[0.010155,0.028793,0.011106],[0.011667,0.027986,0.01964],[0.039674,0.043107,0.057284],[0.039211,0.043306,0.054564],[0.039349,0.043087,0.056385],[0.053847,0.052877,0.067996]]},{"date":"201801152100","rgb":[[0.012289,0.028431,0.016346],[0.012607,0.026951,0.016122],[0.012505,0.026713,0.016646],[0.013908,0.027673,0.022082],[0.010624,0.029084,0.012806],[0.010185,0.028886,0.0096595],[0.010205,0.028764,0.012205],[0.012117,0.027695,0.020734],[0.010382,0.029004,0.011812],[0.010233,0.028885,0.010236],[0.010194,0.02877,0.012151],[0.012059,0.027748,0.019787],[0.039793,0.043246,0.056873],[0.03894,0.043212,0.053783],[0.039582,0.043079,0.05679],[0.055265,0.05267,0.06959]]},{"date":"201801152110","rgb":[[0.01313,0.027552,0.023155],[0.013128,0.027004,0.016691],[0.012448,0.026648,0.018086],[0.014664,0.027124,0.024108],[0.011029,0.027797,0.017896],[0.010198,0.028827,0.010887],[0.010231,0.028673,0.011945],[0.012685,0.027742,0.021186],[0.010521,0.028362,0.0148],[0.010255,0.02877,0.011367],[0.010268,0.028811,0.011588],[0.012144,0.027885,0.020802],[0.040895,0.043084,0.060029],[0.03942,0.043411,0.055074],[0.039778,0.043518,0.056393],[0.05533,0.05222,0.070794]]},{"date":"201801152120","rgb":[[0.011535,0.027257,0.019542],[0.011379,0.025935,0.020194],[0.013443,0.025874,0.018475],[0.01353,0.026902,0.025338],[0.010683,0.028433,0.015093],[0.010225,0.028353,0.012708],[0.010232,0.028541,0.013218],[0.011685,0.027118,0.022986],[0.010464,0.028798,0.013605],[0.010195,0.028792,0.010961],[0.010173,0.028691,0.012358],[0.01195,0.02698,0.023606],[0.039819,0.042777,0.059066],[0.039028,0.04323,0.054895],[0.039488,0.042909,0.057868],[0.054177,0.052213,0.071973]]},{"date":"201801152130","rgb":[[0.012295,0.02786,0.017724],[0.012939,0.027162,0.01366],[0.014709,0.025966,0.016066],[0.01501,0.026611,0.025203],[0.010829,0.028305,0.015553],[0.010174,0.028793,0.010087],[0.010224,0.028712,0.0124],[0.011941,0.027157,0.02232],[0.010609,0.028749,0.013484],[0.010193,0.028841,0.010841],[0.010172,0.028523,0.012118],[0.012109,0.027421,0.022586],[0.039967,0.042983,0.057986],[0.039068,0.043334,0.054171],[0.039778,0.04328,0.056353],[0.055022,0.052245,0.071145]]},{"date":"201801152140","rgb":[[0.01366,0.027052,0.017965],[0.014421,0.026575,0.01422],[0.011915,0.02711,0.016475],[0.01402,0.026649,0.025963],[0.010662,0.028841,0.013513],[0.010209,0.02886,0.010519],[0.010188,0.028833,0.011728],[0.01229,0.027214,0.022605],[0.010615,0.028868,0.013552],[0.010199,0.028842,0.010674],[0.010196,0.028795,0.011885],[0.012556,0.027543,0.022192],[0.040257,0.043184,0.057685],[0.039378,0.043087,0.05516],[0.039506,0.042832,0.057396],[0.054732,0.052362,0.072259]]},{"date":"201801152150","rgb":[[0.011814,0.028332,0.015644],[0.011995,0.027747,0.013517],[0.01309,0.026282,0.016506],[0.013119,0.027079,0.023336],[0.010637,0.028612,0.01413],[0.010177,0.02887,0.0099755],[0.010198,0.028743,0.011445],[0.011683,0.027445,0.020684],[0.010475,0.029024,0.012915],[0.010227,0.029005,0.010628],[0.010125,0.028652,0.01117],[0.011899,0.028067,0.019222],[0.040134,0.043047,0.057341],[0.039214,0.043223,0.054682],[0.039339,0.043081,0.056188],[0.053858,0.052675,0.070076]]},{"date":"201801152200","rgb":[[0.012588,0.027549,0.017539],[0.016863,0.024944,0.01401],[0.013085,0.026279,0.016444],[0.013964,0.026862,0.024681],[0.010672,0.028514,0.014987],[0.010171,0.028876,0.0097521],[0.010141,0.028723,0.010868],[0.011553,0.02712,0.021904],[0.010648,0.028808,0.014338],[0.010169,0.028732,0.011563],[0.010178,0.028641,0.01235],[0.011793,0.027283,0.022943],[0.040472,0.043108,0.057051],[0.039209,0.043258,0.054817],[0.039586,0.043062,0.05554],[0.054364,0.052878,0.070312]]},{"date":"201801152210","rgb":[[0.012419,0.027869,0.016121],[0.014218,0.026565,0.014679],[0.012336,0.025998,0.018804],[0.013763,0.027025,0.023472],[0.010693,0.028772,0.014097],[0.010174,0.028874,0.010216],[0.01025,0.028874,0.011529],[0.01198,0.027161,0.022064],[0.010665,0.028675,0.01441],[0.01023,0.028836,0.011153],[0.010207,0.028819,0.011508],[0.012835,0.027229,0.023193],[0.040341,0.042921,0.059178],[0.039258,0.04345,0.054284],[0.03993,0.042588,0.058165],[0.054732,0.052462,0.072616]]},{"date":"201801152230","rgb":[[0.01176,0.027812,0.016918],[0.012229,0.026325,0.017033],[0.013882,0.025655,0.017237],[0.013334,0.027019,0.023822],[0.010576,0.028367,0.015189],[0.010189,0.028883,0.0097936],[0.010198,0.028762,0.011157],[0.011795,0.027468,0.021582],[0.010406,0.028721,0.013006],[0.010144,0.028884,0.010031],[0.010183,0.028924,0.010998],[0.011358,0.027804,0.019627],[0.040087,0.042615,0.058865],[0.039122,0.043251,0.054621],[0.039394,0.043089,0.055872],[0.054481,0.052642,0.070901]]},{"date":"201801152240","rgb":[[0.012738,0.028192,0.017647],[0.013357,0.026378,0.017745],[0.012503,0.027039,0.018709],[0.018268,0.026954,0.026518],[0.011481,0.028875,0.015796],[0.0104,0.02889,0.011918],[0.010378,0.028856,0.013033],[0.015612,0.027662,0.023713],[0.011522,0.028473,0.017472],[0.010443,0.028895,0.013212],[0.010408,0.028729,0.013749],[0.014513,0.026903,0.02427],[0.040479,0.042398,0.060095],[0.039159,0.043321,0.055149],[0.039702,0.042871,0.056866],[0.055424,0.052272,0.071604]]},{"date":"201801152250","rgb":[[0.012323,0.028287,0.016935],[0.013994,0.026607,0.013721],[0.012879,0.026871,0.016608],[0.018312,0.026925,0.024481],[0.011231,0.028715,0.01542],[0.010262,0.028974,0.010702],[0.010283,0.028881,0.011374],[0.015566,0.028187,0.020789],[0.011574,0.029098,0.015467],[0.010308,0.028989,0.010827],[0.010294,0.028925,0.011665],[0.014869,0.028151,0.019853],[0.040522,0.042995,0.058024],[0.039368,0.043566,0.054686],[0.039759,0.043352,0.055286],[0.055538,0.05305,0.068534]]},{"date":"201801152300","rgb":[[0.012035,0.027794,0.017285],[0.01439,0.026357,0.014399],[0.013295,0.026469,0.015674],[0.016599,0.02694,0.025509],[0.010768,0.028787,0.013852],[0.010197,0.028894,0.010307],[0.010178,0.028684,0.011501],[0.014243,0.027378,0.02249],[0.010886,0.028876,0.014863],[0.010177,0.028913,0.010301],[0.01019,0.028879,0.010734],[0.013839,0.02751,0.021707],[0.039764,0.043238,0.056295],[0.039172,0.04329,0.054493],[0.039182,0.043153,0.055201],[0.054924,0.052404,0.071047]]},{"date":"201801152310","rgb":[[0.011786,0.027717,0.018961],[0.012622,0.027031,0.015897],[0.013206,0.026038,0.018853],[0.0144,0.026725,0.027858],[0.01077,0.028245,0.014301],[0.010187,0.028775,0.011173],[0.010165,0.028396,0.012754],[0.013077,0.027069,0.022687],[0.010805,0.028705,0.01417],[0.010213,0.02875,0.012218],[0.010184,0.028693,0.012736],[0.012118,0.027125,0.022907],[0.039898,0.04306,0.057161],[0.039107,0.043276,0.055457],[0.039217,0.042795,0.056692],[0.054489,0.052311,0.071264]]},{"date":"201801152320","rgb":[[0.012209,0.027468,0.019446],[0.015042,0.025908,0.015927],[0.014729,0.025428,0.01942],[0.014587,0.027272,0.025433],[0.011014,0.027776,0.017787],[0.010285,0.028854,0.011769],[0.010389,0.028626,0.012886],[0.012673,0.027647,0.022332],[0.011266,0.028008,0.01872],[0.01041,0.028962,0.013174],[0.010406,0.028729,0.013738],[0.012578,0.027247,0.023661],[0.040215,0.042864,0.059255],[0.039327,0.043307,0.055225],[0.03968,0.042512,0.058633],[0.055168,0.052488,0.072388]]},{"date":"201801152330","rgb":[[0.012312,0.027442,0.019222],[0.012843,0.02655,0.01641],[0.012288,0.026574,0.018578],[0.014724,0.02703,0.025756],[0.010866,0.028622,0.014877],[0.010254,0.028857,0.01209],[0.010255,0.028625,0.013103],[0.012239,0.027238,0.022815],[0.011182,0.028676,0.016341],[0.010219,0.028854,0.012379],[0.010237,0.028641,0.01294],[0.011927,0.027643,0.022678],[0.040303,0.042843,0.058952],[0.039224,0.043284,0.055469],[0.039477,0.042891,0.056255],[0.054928,0.052147,0.07259]]},{"date":"201801152340","rgb":[[0.012601,0.027112,0.018648],[0.012472,0.026265,0.017481],[0.013389,0.025118,0.021724],[0.014856,0.026867,0.024223],[0.010977,0.028816,0.015509],[0.010254,0.028824,0.011452],[0.010329,0.026589,0.018562],[0.012567,0.027024,0.023596],[0.011005,0.028892,0.014331],[0.010258,0.02891,0.011726],[0.010257,0.028014,0.014466],[0.011772,0.027353,0.021393],[0.039752,0.043439,0.056092],[0.039064,0.043342,0.053879],[0.039314,0.043183,0.055222],[0.055521,0.052692,0.069188]]},{"date":"201801152350","rgb":[[0.011968,0.028199,0.015194],[0.012838,0.027218,0.013842],[0.013679,0.026855,0.01326],[0.014244,0.026623,0.025107],[0.01088,0.028909,0.013925],[0.010262,0.028863,0.010983],[0.010224,0.028865,0.010971],[0.012857,0.027575,0.020761],[0.011426,0.02884,0.01506],[0.01031,0.028942,0.011707],[0.010198,0.028798,0.01247],[0.011728,0.027219,0.022284],[0.039891,0.043105,0.057757],[0.039255,0.043426,0.054234],[0.039443,0.043253,0.056201],[0.054692,0.052517,0.070995]]},{"date":"201801160000","rgb":[[0.011981,0.027975,0.019103],[0.013349,0.026769,0.014948],[0.012661,0.02627,0.018935],[0.013858,0.026992,0.024633],[0.011162,0.028779,0.016401],[0.010234,0.02885,0.010923],[0.010284,0.028901,0.011905],[0.012099,0.027217,0.023834],[0.011223,0.028837,0.016584],[0.010294,0.029055,0.011153],[0.010293,0.028792,0.01331],[0.011563,0.027446,0.02159],[0.040219,0.042998,0.058579],[0.039123,0.043476,0.055286],[0.039563,0.043261,0.056208],[0.054858,0.052508,0.07274]]},{"date":"201801160010","rgb":[[0.012442,0.028168,0.016555],[0.011451,0.027342,0.01611],[0.012896,0.027106,0.015451],[0.014225,0.026862,0.025778],[0.010918,0.029282,0.013461],[0.010173,0.028832,0.01019],[0.010226,0.028854,0.011035],[0.01216,0.027981,0.0206],[0.011024,0.029022,0.013799],[0.010262,0.028955,0.011384],[0.010239,0.028888,0.011618],[0.011946,0.027543,0.021757],[0.040003,0.04344,0.056277],[0.039152,0.043344,0.054018],[0.039351,0.043036,0.055437],[0.055521,0.052277,0.071479]]},{"date":"201801160020","rgb":[[0.012639,0.027792,0.016998],[0.014096,0.0257,0.017115],[0.012881,0.026511,0.016623],[0.013104,0.027172,0.023174],[0.010691,0.028904,0.01376],[0.010193,0.028874,0.0099282],[0.010204,0.028834,0.012011],[0.01138,0.027884,0.01965],[0.010882,0.028752,0.015291],[0.010224,0.02892,0.011146],[0.010196,0.028743,0.012356],[0.011471,0.027557,0.020712],[0.04003,0.042932,0.058744],[0.039027,0.043301,0.054829],[0.03923,0.04302,0.056202],[0.054834,0.052616,0.070715]]},{"date":"201801160030","rgb":[[0.012237,0.027714,0.018214],[0.011756,0.027292,0.016512],[0.012728,0.026342,0.017961],[0.013761,0.026938,0.025559],[0.010713,0.028632,0.014621],[0.010216,0.028782,0.011401],[0.010175,0.028581,0.011467],[0.011918,0.027209,0.023138],[0.011142,0.0285,0.015776],[0.01028,0.028915,0.012505],[0.010209,0.028579,0.012698],[0.012231,0.026731,0.024975],[0.040322,0.042442,0.059517],[0.039646,0.043252,0.055758],[0.039673,0.043162,0.056868],[0.056537,0.052211,0.072172]]},{"date":"201801160040","rgb":[[0.012122,0.027965,0.017465],[0.013838,0.026481,0.015503],[0.013008,0.026572,0.016932],[0.014213,0.027034,0.024836],[0.010839,0.028819,0.013213],[0.010157,0.028853,0.010071],[0.010161,0.028732,0.010669],[0.012452,0.027747,0.019669],[0.011048,0.028707,0.014909],[0.010184,0.028893,0.011179],[0.010203,0.028752,0.011655],[0.012907,0.027488,0.021214],[0.039937,0.043463,0.057119],[0.039028,0.043347,0.053827],[0.039248,0.043366,0.055076],[0.055625,0.052586,0.071022]]},{"date":"201801160050","rgb":[[0.012569,0.028375,0.016261],[0.013962,0.027012,0.013451],[0.013478,0.026903,0.015233],[0.014893,0.027176,0.023028],[0.010854,0.02894,0.014171],[0.010205,0.02887,0.010621],[0.0102,0.028687,0.012309],[0.011859,0.028131,0.019449],[0.010921,0.029054,0.014715],[0.010256,0.028837,0.012034],[0.010288,0.028814,0.012129],[0.012089,0.027433,0.020932],[0.039955,0.043565,0.056488],[0.039293,0.043394,0.054262],[0.039493,0.043377,0.055043],[0.05542,0.053054,0.069314]]},{"date":"201801160100","rgb":[[0.012516,0.027311,0.018688],[0.013265,0.026723,0.014858],[0.01305,0.025966,0.017651],[0.012935,0.026901,0.025566],[0.010814,0.0286,0.014549],[0.01022,0.028805,0.011311],[0.010253,0.028757,0.011625],[0.011535,0.02749,0.021841],[0.010776,0.028692,0.01539],[0.01027,0.028955,0.011746],[0.010161,0.028836,0.012009],[0.011421,0.027434,0.021078],[0.039579,0.042392,0.058988],[0.039047,0.043261,0.054828],[0.039386,0.043264,0.05545],[0.053963,0.052432,0.071311]]},{"date":"201801160110","rgb":[[0.012216,0.028095,0.014832],[0.016647,0.02524,0.011449],[0.014975,0.025915,0.014966],[0.013165,0.027424,0.022363],[0.010653,0.028984,0.013194],[0.010198,0.028947,0.0096665],[0.010201,0.028847,0.010899],[0.011957,0.027384,0.021149],[0.010541,0.029087,0.012782],[0.0102,0.02894,0.0096742],[0.010145,0.02882,0.011368],[0.011304,0.028084,0.019143],[0.039892,0.043341,0.057808],[0.03896,0.043299,0.053865],[0.039344,0.042978,0.056717],[0.054475,0.052727,0.070036]]},{"date":"201801160120","rgb":[[0.01244,0.027298,0.016953],[0.014943,0.025296,0.017679],[0.016198,0.025034,0.015735],[0.01296,0.027299,0.023175],[0.010571,0.028809,0.013384],[0.010212,0.028863,0.01019],[0.010218,0.02882,0.01083],[0.011748,0.027855,0.020359],[0.010772,0.028688,0.014857],[0.010265,0.028996,0.011146],[0.010225,0.028578,0.013036],[0.012058,0.02747,0.021309],[0.039634,0.043309,0.056573],[0.039042,0.043402,0.053588],[0.039458,0.043122,0.055493],[0.054457,0.052757,0.070349]]},{"date":"201801160130","rgb":[[0.012326,0.027987,0.017501],[0.012209,0.027123,0.016634],[0.013012,0.025597,0.020124],[0.014001,0.027001,0.023711],[0.010646,0.029056,0.01339],[0.010222,0.028874,0.011331],[0.010158,0.028285,0.012556],[0.011608,0.027734,0.020111],[0.010802,0.029096,0.013495],[0.010222,0.028929,0.01118],[0.01015,0.028736,0.011782],[0.011085,0.027718,0.018992],[0.039916,0.043334,0.056797],[0.039292,0.043381,0.054755],[0.039367,0.043151,0.05538],[0.053713,0.05303,0.068601]]},{"date":"201801160140","rgb":[[0.012131,0.027951,0.018367],[0.011954,0.027327,0.015851],[0.011856,0.027146,0.01757],[0.013498,0.026824,0.025462],[0.011173,0.028609,0.015717],[0.010256,0.028876,0.011277],[0.010268,0.028604,0.012876],[0.012321,0.027299,0.023472],[0.011073,0.02873,0.015851],[0.010279,0.028866,0.012131],[0.010263,0.028763,0.013363],[0.011955,0.027087,0.023281],[0.040319,0.043133,0.05827],[0.039261,0.043385,0.05486],[0.039581,0.043084,0.056899],[0.055393,0.052356,0.071983]]},{"date":"201801160150","rgb":[[0.012282,0.027025,0.020681],[0.01116,0.027097,0.017355],[0.010932,0.026751,0.018906],[0.013306,0.02712,0.025226],[0.010901,0.028461,0.015819],[0.010274,0.028822,0.012294],[0.010226,0.028552,0.01306],[0.011619,0.026994,0.024536],[0.011044,0.028736,0.016159],[0.010324,0.028912,0.012195],[0.01033,0.028832,0.013274],[0.011704,0.02731,0.021586],[0.040272,0.043081,0.058873],[0.039289,0.0431,0.056244],[0.039481,0.042767,0.057954],[0.054686,0.05209,0.072628]]},{"date":"201801160200","rgb":[[0.01172,0.027447,0.018937],[0.013475,0.025855,0.018293],[0.013099,0.024979,0.021476],[0.012778,0.026875,0.025735],[0.010821,0.028445,0.014984],[0.010185,0.028752,0.010899],[0.010229,0.027621,0.015431],[0.011803,0.027355,0.022353],[0.010963,0.028388,0.016148],[0.010185,0.028676,0.012571],[0.010213,0.028554,0.013182],[0.011865,0.026963,0.024792],[0.040474,0.042427,0.061286],[0.039356,0.043295,0.055721],[0.039712,0.042717,0.05836],[0.055386,0.052462,0.073331]]},{"date":"201801160210","rgb":[[0.012028,0.027691,0.019028],[0.012235,0.026632,0.017549],[0.012006,0.026939,0.017284],[0.013455,0.027166,0.025068],[0.010834,0.028527,0.015791],[0.010277,0.028885,0.01146],[0.010287,0.028249,0.013621],[0.011964,0.027047,0.023637],[0.011242,0.028686,0.017039],[0.010362,0.028935,0.012225],[0.010252,0.028668,0.013101],[0.01178,0.026723,0.022986],[0.040484,0.042576,0.059969],[0.039198,0.043197,0.055563],[0.039361,0.042486,0.057431],[0.054578,0.052517,0.071449]]},{"date":"201801160220","rgb":[[0.011734,0.027603,0.017708],[0.015811,0.025284,0.016468],[0.013557,0.025637,0.018225],[0.013133,0.02692,0.022656],[0.010706,0.028509,0.014577],[0.010241,0.02894,0.010566],[0.010191,0.028737,0.011694],[0.011357,0.027531,0.020338],[0.011132,0.028286,0.017249],[0.010273,0.028899,0.011974],[0.010237,0.028729,0.01231],[0.011467,0.027689,0.020581],[0.039946,0.042478,0.05991],[0.039173,0.043148,0.055004],[0.039354,0.043065,0.054543],[0.053756,0.052584,0.069969]]},{"date":"201801160230","rgb":[[0.012246,0.027711,0.01876],[0.012328,0.02725,0.015934],[0.0119,0.026807,0.019535],[0.014138,0.026848,0.026337],[0.010952,0.027766,0.018433],[0.010225,0.02875,0.011836],[0.010378,0.028079,0.014786],[0.012248,0.027,0.024532],[0.01134,0.02836,0.016992],[0.01035,0.02891,0.012341],[0.010404,0.028557,0.014266],[0.012121,0.027428,0.022591],[0.04016,0.04286,0.058992],[0.039062,0.043111,0.055474],[0.039559,0.042672,0.058839],[0.055033,0.052428,0.072697]]},{"date":"201801160240","rgb":[[0.012727,0.027306,0.017656],[0.013137,0.026996,0.015244],[0.012109,0.026913,0.017337],[0.014303,0.027073,0.023555],[0.010723,0.028986,0.013079],[0.010282,0.028962,0.010918],[0.01026,0.028886,0.011034],[0.01211,0.028029,0.020536],[0.010982,0.028791,0.015583],[0.010261,0.028935,0.012004],[0.0103,0.028787,0.012246],[0.012005,0.027861,0.020401],[0.039984,0.043348,0.057945],[0.039082,0.043392,0.054639],[0.039309,0.043342,0.055447],[0.054507,0.053181,0.068676]]},{"date":"201801160250","rgb":[[0.012477,0.027208,0.020454],[0.015888,0.025272,0.017439],[0.014206,0.026106,0.017567],[0.014002,0.02675,0.026635],[0.010888,0.028507,0.015284],[0.01027,0.028884,0.011478],[0.010251,0.028625,0.012246],[0.012245,0.027275,0.023359],[0.010839,0.0287,0.014834],[0.010182,0.028834,0.010782],[0.010218,0.028646,0.012279],[0.011852,0.027405,0.021176],[0.039997,0.04273,0.059292],[0.039192,0.043165,0.055634],[0.039498,0.042765,0.056501],[0.055058,0.052446,0.072389]]},{"date":"201801160300","rgb":[[0.012667,0.027912,0.016791],[0.012908,0.026923,0.015745],[0.011712,0.026663,0.017485],[0.013143,0.02727,0.024685],[0.010902,0.0287,0.014576],[0.010235,0.028879,0.010569],[0.010171,0.02875,0.011599],[0.011898,0.027622,0.020567],[0.01089,0.028612,0.015244],[0.010247,0.028846,0.012192],[0.010206,0.028775,0.012322],[0.011575,0.02771,0.020772],[0.04003,0.042967,0.058566],[0.039121,0.043386,0.054492],[0.039487,0.043247,0.055296],[0.054665,0.052803,0.069517]]},{"date":"201801160310","rgb":[[0.012719,0.027357,0.021821],[0.012739,0.027603,0.015987],[0.01386,0.026291,0.019763],[0.015343,0.026936,0.026258],[0.011073,0.028341,0.016486],[0.010477,0.028986,0.012689],[0.010379,0.028376,0.014314],[0.012711,0.027262,0.024008],[0.011225,0.028816,0.015737],[0.010486,0.028958,0.013093],[0.010342,0.028681,0.013022],[0.012226,0.026997,0.024251],[0.040378,0.043154,0.058856],[0.039348,0.043511,0.055424],[0.039622,0.043202,0.057356],[0.055226,0.052462,0.071846]]},{"date":"201801160320","rgb":[[0.012853,0.027963,0.019092],[0.013118,0.026434,0.017248],[0.012581,0.026695,0.01857],[0.015036,0.026677,0.026534],[0.01106,0.027896,0.018284],[0.010252,0.028752,0.012815],[0.010426,0.02862,0.013786],[0.012507,0.027332,0.024421],[0.011474,0.028717,0.017272],[0.010243,0.028853,0.012307],[0.010292,0.028789,0.013019],[0.012093,0.027713,0.022294],[0.040721,0.043027,0.059402],[0.039573,0.043066,0.05705],[0.039952,0.042575,0.05973],[0.05578,0.052444,0.074359]]},{"date":"201801160330","rgb":[[0.012826,0.028237,0.017206],[0.013336,0.026905,0.015397],[0.013335,0.027259,0.015497],[0.014667,0.02711,0.025165],[0.010713,0.02881,0.014263],[0.010264,0.028877,0.011357],[0.010206,0.028689,0.012157],[0.012337,0.027581,0.022615],[0.011267,0.02896,0.014751],[0.010315,0.028892,0.012306],[0.010359,0.028598,0.013711],[0.012273,0.027682,0.022515],[0.040496,0.043007,0.059017],[0.039338,0.043431,0.055355],[0.039494,0.04274,0.057487],[0.055087,0.052755,0.072023]]},{"date":"201801160340","rgb":[[0.012697,0.027684,0.019873],[0.012353,0.027608,0.014473],[0.012448,0.026958,0.018616],[0.014329,0.026963,0.026935],[0.011333,0.027897,0.018656],[0.010338,0.028844,0.013299],[0.010396,0.02871,0.013207],[0.012316,0.027351,0.02431],[0.011716,0.028374,0.017911],[0.010275,0.028816,0.012322],[0.010398,0.028289,0.014631],[0.011922,0.027204,0.024203],[0.04021,0.042949,0.058091],[0.039281,0.043451,0.055178],[0.039593,0.043064,0.056357],[0.054546,0.052765,0.071127]]},{"date":"201801160350","rgb":[[0.012963,0.028015,0.016802],[0.012983,0.026957,0.014511],[0.011619,0.026204,0.019374],[0.014287,0.026636,0.025451],[0.011082,0.029185,0.014139],[0.010202,0.028939,0.0097189],[0.010205,0.028455,0.012506],[0.01196,0.027728,0.021622],[0.011285,0.029045,0.015096],[0.010268,0.028969,0.011085],[0.010258,0.028777,0.012584],[0.012118,0.027299,0.022239],[0.039758,0.043053,0.058872],[0.0391,0.043395,0.054189],[0.039359,0.042932,0.05675],[0.054698,0.052781,0.071233]]},{"date":"201801160400","rgb":[[0.011791,0.028,0.017888],[0.012178,0.027005,0.016357],[0.014357,0.025672,0.018356],[0.01401,0.027011,0.024837],[0.010908,0.028593,0.014632],[0.010247,0.02883,0.011758],[0.010346,0.028659,0.013105],[0.01206,0.027148,0.024034],[0.011134,0.028919,0.016058],[0.010314,0.028894,0.012393],[0.010242,0.028649,0.012505],[0.011595,0.027403,0.021651],[0.040127,0.042743,0.05883],[0.039263,0.04355,0.05484],[0.039432,0.042966,0.056096],[0.055074,0.052491,0.07174]]},{"date":"201801160410","rgb":[[0.012358,0.027561,0.018806],[0.013796,0.026249,0.017047],[0.012957,0.026369,0.017717],[0.01397,0.02707,0.024248],[0.011005,0.028523,0.015925],[0.010282,0.028898,0.011695],[0.010192,0.02866,0.011768],[0.011707,0.027811,0.019896],[0.011268,0.028983,0.015397],[0.010235,0.028832,0.011977],[0.010225,0.028841,0.011707],[0.0116,0.028195,0.019241],[0.040086,0.042758,0.058833],[0.039274,0.043272,0.055483],[0.039294,0.043261,0.05566],[0.054166,0.052678,0.069815]]},{"date":"201801160420","rgb":[[0.012612,0.027588,0.019759],[0.013037,0.027351,0.013265],[0.014062,0.026085,0.017601],[0.01354,0.026845,0.024448],[0.010838,0.028454,0.015514],[0.010268,0.02893,0.010876],[0.010188,0.028775,0.011768],[0.012053,0.027389,0.022344],[0.011116,0.028701,0.016057],[0.010262,0.028754,0.012413],[0.01026,0.028746,0.012234],[0.011691,0.02738,0.021197],[0.040115,0.042961,0.058044],[0.039148,0.043333,0.054445],[0.039412,0.043449,0.055569],[0.054801,0.052933,0.070238]]},{"date":"201801160430","rgb":[[0.012569,0.027662,0.016843],[0.013254,0.026297,0.016273],[0.013835,0.025166,0.020152],[0.013612,0.027258,0.023509],[0.010719,0.028942,0.013078],[0.010217,0.028847,0.010977],[0.010234,0.028601,0.0123],[0.012232,0.027543,0.021907],[0.011004,0.02894,0.014618],[0.01015,0.028814,0.011759],[0.010225,0.028447,0.013785],[0.011919,0.027472,0.021998],[0.040146,0.043037,0.058951],[0.039155,0.043358,0.054158],[0.039549,0.042876,0.057036],[0.055323,0.052584,0.070634]]},{"date":"201801160440","rgb":[[0.0122,0.02784,0.01574],[0.013245,0.026363,0.015405],[0.012595,0.026139,0.017407],[0.013079,0.027036,0.022938],[0.010623,0.029009,0.012846],[0.010176,0.028891,0.0094519],[0.010194,0.028816,0.011287],[0.011509,0.027501,0.020815],[0.0107,0.028187,0.015782],[0.010158,0.028865,0.010306],[0.010172,0.028795,0.011665],[0.011342,0.02748,0.020124],[0.039893,0.042201,0.060175],[0.039066,0.043314,0.054671],[0.039317,0.042658,0.057218],[0.054298,0.052447,0.071024]]},{"date":"201801160450","rgb":[[0.012329,0.027433,0.019937],[0.011933,0.026583,0.017948],[0.013415,0.025451,0.020151],[0.013741,0.026855,0.026893],[0.011223,0.028873,0.015791],[0.010358,0.028915,0.011358],[0.010318,0.028633,0.012867],[0.012819,0.027258,0.02391],[0.011165,0.028778,0.016706],[0.010651,0.029147,0.012621],[0.010588,0.028859,0.013546],[0.011926,0.027615,0.021584],[0.04013,0.042736,0.059388],[0.039486,0.043436,0.054808],[0.039971,0.043465,0.056787],[0.054241,0.052717,0.070325]]},{"date":"201801160500","rgb":[[0.012473,0.026902,0.021512],[0.012112,0.026724,0.018453],[0.012993,0.025544,0.021275],[0.013785,0.02706,0.025445],[0.011021,0.027951,0.018172],[0.010357,0.028867,0.013129],[0.010272,0.026503,0.018799],[0.012044,0.02719,0.024861],[0.011855,0.027343,0.022054],[0.010568,0.028912,0.014111],[0.010524,0.027318,0.017873],[0.011985,0.026834,0.024976],[0.040393,0.04239,0.060709],[0.039467,0.042931,0.0574],[0.039572,0.042651,0.057902],[0.054436,0.052543,0.072125]]},{"date":"201801160510","rgb":[[0.013243,0.027519,0.018862],[0.012941,0.027721,0.015312],[0.012824,0.02719,0.0173],[0.016185,0.026563,0.026466],[0.011359,0.027109,0.021037],[0.010477,0.028736,0.013923],[0.010528,0.027836,0.016364],[0.013452,0.027081,0.025786],[0.011663,0.027629,0.020462],[0.010551,0.028908,0.013697],[0.010579,0.028543,0.014171],[0.012903,0.027072,0.023567],[0.040396,0.042041,0.06231],[0.039718,0.043237,0.056658],[0.039937,0.042837,0.058507],[0.055417,0.052361,0.072335]]},{"date":"201801160520","rgb":[[0.012658,0.02813,0.018673],[0.014101,0.026351,0.017351],[0.013703,0.026107,0.019151],[0.014388,0.026615,0.025604],[0.01126,0.028321,0.017834],[0.01034,0.028834,0.012538],[0.010274,0.028608,0.013267],[0.012074,0.027234,0.023276],[0.011627,0.027905,0.019824],[0.010394,0.028773,0.013689],[0.010555,0.028197,0.01601],[0.012564,0.02717,0.02444],[0.04069,0.04244,0.062004],[0.039636,0.04286,0.057537],[0.040085,0.041812,0.061407],[0.055233,0.052365,0.07313]]},{"date":"201801160530","rgb":[[0.012841,0.027047,0.022682],[0.014377,0.025451,0.021956],[0.013087,0.026369,0.022981],[0.014722,0.026959,0.028641],[0.011425,0.027894,0.019529],[0.010494,0.027994,0.015718],[0.010844,0.02645,0.021041],[0.013485,0.027016,0.02703],[0.011934,0.027352,0.022645],[0.01064,0.028272,0.01592],[0.010516,0.02721,0.017951],[0.012059,0.027147,0.02494],[0.040379,0.042068,0.062351],[0.039427,0.042393,0.058439],[0.039946,0.041827,0.061075],[0.054935,0.052531,0.07392]]},{"date":"201801160540","rgb":[[0.013261,0.027281,0.02331],[0.01275,0.027561,0.017472],[0.012353,0.027023,0.020807],[0.016066,0.026792,0.027491],[0.012659,0.028385,0.01891],[0.010572,0.028927,0.01367],[0.010856,0.028348,0.015551],[0.014061,0.027381,0.025055],[0.012792,0.027867,0.021323],[0.01084,0.02884,0.015194],[0.010995,0.027601,0.01871],[0.012817,0.027077,0.024841],[0.040656,0.042516,0.061152],[0.039504,0.042529,0.058392],[0.039796,0.042269,0.059264],[0.054867,0.052448,0.071982]]},{"date":"201801160550","rgb":[[0.013269,0.027535,0.023442],[0.013988,0.026194,0.020944],[0.013593,0.027229,0.022059],[0.017368,0.026507,0.030309],[0.012528,0.027945,0.020879],[0.010792,0.026676,0.020426],[0.011157,0.026796,0.02154],[0.015532,0.027146,0.025831],[0.012336,0.027757,0.022548],[0.01106,0.028204,0.017045],[0.01149,0.027831,0.01942],[0.012944,0.027202,0.024041],[0.040887,0.042655,0.061077],[0.039805,0.042388,0.059041],[0.039829,0.042338,0.060282],[0.055009,0.052589,0.072055]]},{"date":"201801160600","rgb":[[0.01324,0.027662,0.022208],[0.011923,0.026751,0.021399],[0.012873,0.027179,0.022522],[0.017602,0.026716,0.030219],[0.011717,0.028184,0.018358],[0.010413,0.028388,0.014234],[0.010755,0.028206,0.016032],[0.014703,0.026955,0.026269],[0.011893,0.027835,0.020576],[0.010474,0.028835,0.013487],[0.010469,0.028271,0.015232],[0.013096,0.027322,0.025229],[0.040644,0.042245,0.062912],[0.039605,0.043016,0.057036],[0.039834,0.04254,0.059256],[0.055888,0.052274,0.075191]]},{"date":"201801160610","rgb":[[0.012428,0.027854,0.018674],[0.012924,0.027298,0.01537],[0.014359,0.026398,0.016771],[0.015151,0.026816,0.025822],[0.011287,0.028388,0.017273],[0.010469,0.029072,0.012763],[0.010477,0.028686,0.013943],[0.012798,0.027294,0.024298],[0.011778,0.028889,0.017546],[0.010386,0.028961,0.012519],[0.010379,0.028829,0.012837],[0.012567,0.027535,0.022024],[0.041278,0.042783,0.059902],[0.03958,0.04341,0.056115],[0.039958,0.043424,0.056572],[0.055796,0.052361,0.072682]]},{"date":"201801160620","rgb":[[0.012196,0.026922,0.02349],[0.011434,0.026518,0.02171],[0.011814,0.026471,0.021664],[0.014982,0.02656,0.028848],[0.01136,0.027111,0.021867],[0.010643,0.026088,0.02177],[0.010528,0.026616,0.019926],[0.012816,0.027035,0.025814],[0.01206,0.027456,0.023491],[0.010678,0.026259,0.021525],[0.010746,0.026952,0.019794],[0.012145,0.027054,0.025509],[0.040991,0.042059,0.063107],[0.039599,0.042183,0.059997],[0.039955,0.041562,0.061887],[0.055349,0.052516,0.074549]]},{"date":"201801160630","rgb":[[0.014711,0.026812,0.041133],[0.013177,0.027093,0.035027],[0.01298,0.027175,0.034372],[0.01546,0.027372,0.040717],[0.015299,0.027363,0.046288],[0.013683,0.027134,0.041803],[0.012674,0.02701,0.038678],[0.014131,0.02747,0.038602],[0.017836,0.028198,0.0559],[0.018626,0.028161,0.064222],[0.015418,0.027481,0.048669],[0.013132,0.027128,0.03009],[0.042002,0.042412,0.073784],[0.040956,0.041684,0.072579],[0.041522,0.041675,0.070913],[0.05533,0.052579,0.075001]]},{"date":"201801160640","rgb":[[0.041804,0.034227,0.22248],[0.03353,0.033704,0.17341],[0.030327,0.032977,0.15343],[0.029386,0.032925,0.14115],[0.051942,0.034651,0.31204],[0.045718,0.033634,0.24856],[0.038994,0.034979,0.20142],[0.030566,0.033068,0.14728],[0.071004,0.050768,0.39414],[0.05317,0.038981,0.30935],[0.038479,0.033507,0.19999],[0.019731,0.029087,0.069911],[0.05549,0.046426,0.15473],[0.052801,0.045784,0.14391],[0.047291,0.044098,0.10989],[0.059084,0.053551,0.094782]]},{"date":"201801160650","rgb":[[0.10812,0.086549,0.5558],[0.13882,0.1524,0.6012],[0.12691,0.12784,0.55984],[0.10863,0.065179,0.53297],[0.1333,0.14255,0.60522],[0.1534,0.17725,0.62422],[0.15107,0.16418,0.59654],[0.10674,0.091135,0.47134],[0.092455,0.06898,0.47263],[0.19217,0.23404,0.72154],[0.1939,0.21137,0.67609],[0.054919,0.056596,0.21982],[0.071903,0.051304,0.23889],[0.09951,0.092736,0.32137],[0.13403,0.15339,0.42093],[0.069036,0.056754,0.16424]]},{"date":"201801160700","rgb":[[0.29666,0.47318,0.99366],[0.28342,0.46819,0.99504],[0.28364,0.45179,0.99511],[0.27708,0.40479,0.99472],[0.33311,0.53256,0.99346],[0.33026,0.53481,0.99472],[0.31901,0.52349,0.99484],[0.25561,0.37908,0.87358],[0.44643,0.70325,0.99433],[0.38998,0.6197,0.99443],[0.38309,0.65431,0.99382],[0.14356,0.18433,0.5149],[0.28993,0.37137,0.59503],[0.24535,0.33897,0.60232],[0.20949,0.2787,0.56741],[0.13396,0.080001,0.42993]]},{"date":"201801160710","rgb":[[0.33123,0.50962,0.99305],[0.34922,0.54759,0.994],[0.33219,0.49486,0.99419],[0.34747,0.49142,0.99221],[0.40118,0.66949,0.994],[0.39872,0.64021,0.99474],[0.38783,0.59746,0.99468],[0.33859,0.48885,0.87448],[0.4925,0.77132,0.99402],[0.45657,0.7112,0.99452],[0.4001,0.60354,0.99269],[0.16024,0.17463,0.52101],[0.30019,0.37274,0.64938],[0.38887,0.45168,0.64591],[0.23777,0.28965,0.5864],[0.16971,0.11925,0.50487]]},{"date":"201801160730","rgb":[[0.93802,0.9915,0.99416],[0.98635,0.98059,0.99655],[0.99478,0.97689,1],[0.99202,0.97789,0.99998],[0.93922,0.99109,0.99302],[0.98431,0.98426,0.98461],[0.98471,0.98242,0.99186],[0.84452,0.87112,0.98311],[0.96351,0.98892,0.98868],[0.98361,0.98463,0.98448],[0.9735,0.98578,0.98551],[0.49473,0.66307,0.97235],[0.51906,0.61882,0.9161],[0.61483,0.67266,0.91712],[0.59063,0.65885,0.91738],[0.40449,0.59271,0.91948]]},{"date":"201801160740","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99589,0.97656,0.99989],[0.93843,0.97686,0.99509],[0.99608,0.97647,1],[0.99433,0.97758,0.99775],[0.98699,0.98245,0.98817],[0.83187,0.98355,0.99268],[0.71092,0.88929,0.93812],[0.76869,0.88935,0.92769],[0.77796,0.88953,0.92974],[0.83734,0.89538,0.93688]]},{"date":"201801160750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99519,0.97674,0.99994],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99322,0.97745,1],[0.986,0.97985,1],[0.93002,0.90468,0.95054],[0.9261,0.90622,0.95054],[0.92112,0.90786,0.95054],[0.91968,0.90669,0.94371]]},{"date":"201801160800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92975,0.90294,0.94381]]},{"date":"201801160830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92976,0.90295,0.94389]]},{"date":"201801160840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92977,0.90296,0.94381]]},{"date":"201801160850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90291,0.94375]]},{"date":"201801160900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90293,0.94379]]},{"date":"201801160910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90291,0.94383]]},{"date":"201801160920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99479,0.97728,0.99842],[0.98246,0.98112,0.99425],[0.93038,0.90433,0.95054],[0.92711,0.90658,0.94725],[0.92077,0.91094,0.93867],[0.91976,0.91002,0.93062]]},{"date":"201801160930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92975,0.90293,0.94388]]},{"date":"201801160940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.90292,0.94385]]},{"date":"201801160950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90291,0.94374]]},{"date":"201801161000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90289,0.94381]]},{"date":"201801161010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90288,0.94387]]},{"date":"201801161020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.9029,0.9438]]},{"date":"201801161030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.9029,0.94389]]},{"date":"201801161040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92975,0.90292,0.94381]]},{"date":"201801161050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99529,0.97674,1],[0.99582,0.97656,1],[0.99608,0.97647,1],[0.99236,0.97772,1],[0.98546,0.98002,1],[0.9865,0.97968,1],[0.99382,0.97724,1],[0.92103,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92049,0.90636,0.94373]]},{"date":"201801161100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99581,0.97658,1],[0.99607,0.97647,1],[0.99608,0.97647,1],[0.99321,0.97745,1],[0.986,0.97985,1],[0.98782,0.97925,1],[0.99484,0.9769,1],[0.92111,0.90786,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92107,0.9062,0.94384]]},{"date":"201801161110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.90289,0.94382]]},{"date":"201801161120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90288,0.94384]]},{"date":"201801161130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92975,0.9029,0.94385]]},{"date":"201801161140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.90289,0.94384]]},{"date":"201801161150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90286,0.94379]]},{"date":"201801161200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90289,0.94379]]},{"date":"201801161210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9951,0.97682,1],[0.99576,0.97658,1],[0.99608,0.97647,1],[0.99174,0.97795,1],[0.98513,0.98013,1],[0.98641,0.97971,1],[0.99372,0.97725,1],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92048,0.9064,0.94381]]},{"date":"201801161220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99541,0.9767,1],[0.99595,0.97652,1],[0.99608,0.97647,1],[0.99251,0.97769,1],[0.98552,0.98001,1],[0.98701,0.9795,1],[0.99429,0.97707,1],[0.92103,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.9207,0.90634,0.94384]]},{"date":"201801161230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99532,0.97674,1],[0.99576,0.97658,1],[0.99608,0.97647,1],[0.99236,0.97772,1],[0.98546,0.98002,1],[0.98641,0.97971,1],[0.99372,0.97725,1],[0.92103,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.9205,0.90642,0.94384]]},{"date":"201801161240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.9029,0.94387]]},{"date":"201801161250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90288,0.94375]]},{"date":"201801161300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99408,0.97716,1],[0.99486,0.97689,1],[0.99608,0.97647,1],[0.99018,0.97846,1],[0.98458,0.98031,1],[0.98511,0.98014,1],[0.99195,0.97786,1],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92029,0.90648,0.94379]]},{"date":"201801161310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92975,0.90291,0.94389]]},{"date":"201801161320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.90289,0.94388]]},{"date":"201801161330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99256,0.97761,0.9998],[0.99608,0.97647,1],[0.99608,0.97646,1],[0.99162,0.97845,0.99829],[0.96448,0.9847,0.99021],[0.93,0.90461,0.95054],[0.92342,0.90809,0.947],[0.91977,0.91135,0.93856],[0.91984,0.90998,0.93066]]},{"date":"201801161340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92976,0.90292,0.9439]]},{"date":"201801161350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90289,0.94376]]},{"date":"201801161400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99552,0.97666,1],[0.99582,0.97656,1],[0.99608,0.97647,1],[0.99251,0.97769,1],[0.98552,0.98001,1],[0.9865,0.97968,1],[0.99382,0.97724,1],[0.92103,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92055,0.90641,0.9438]]},{"date":"201801161410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92977,0.90292,0.94388]]},{"date":"201801161420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92977,0.90291,0.94388]]},{"date":"201801161430","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99565,0.97662,1],[0.99598,0.97651,1],[0.99608,0.97647,1],[0.99311,0.97746,1],[0.98591,0.97987,1],[0.98713,0.97947,1],[0.99436,0.97706,1],[0.92107,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92081,0.90635,0.94388]]},{"date":"201801161440","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92978,0.90292,0.9439]]},{"date":"201801161450","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.9029,0.94378]]},{"date":"201801161500","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90288,0.94376]]},{"date":"201801161510","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99581,0.97658,1],[0.99607,0.97647,1],[0.99608,0.97647,1],[0.99321,0.97745,1],[0.986,0.97985,1],[0.98782,0.97925,1],[0.99484,0.9769,1],[0.92111,0.90786,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92106,0.90618,0.94379]]},{"date":"201801161520","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90286,0.94382]]},{"date":"201801161530","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99093,0.9778,0.99979],[0.99608,0.97647,1],[0.99608,0.97646,1],[0.99162,0.97839,0.99842],[0.95433,0.98419,0.9977],[0.9301,0.90456,0.95054],[0.92343,0.90798,0.94728],[0.91601,0.91171,0.93956],[0.91715,0.90704,0.9432]]},{"date":"201801161540","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.98814,0.97798,0.99972],[0.99608,0.97647,1],[0.99608,0.97646,1],[0.99129,0.97906,0.99625],[0.93417,0.987,0.99327],[0.92949,0.90501,0.95044],[0.92305,0.90878,0.94446],[0.91136,0.91233,0.93853],[0.91296,0.90812,0.94218]]},{"date":"201801161550","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.97357,0.97904,0.99883],[0.99608,0.97647,1],[0.9958,0.97659,0.99988],[0.9899,0.98026,0.99329],[0.87153,0.98989,0.99126],[0.92455,0.90758,0.94912],[0.91846,0.91067,0.94169],[0.89715,0.91309,0.93854],[0.89907,0.91158,0.93186]]},{"date":"201801161600","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99583,0.97663,0.99968],[0.92278,0.97216,0.9938],[0.99608,0.97647,1],[0.99386,0.97793,0.99708],[0.98381,0.98289,0.98727],[0.71685,0.9255,0.98947],[0.74565,0.91245,0.94607],[0.81654,0.91032,0.93849],[0.8113,0.89772,0.9366],[0.85933,0.89943,0.94107]]},{"date":"201801161610","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99565,0.97674,0.99943],[0.85478,0.88042,0.98685],[0.99608,0.97647,1],[0.99376,0.97797,0.99657],[0.97681,0.97689,0.98553],[0.48405,0.58871,0.9529],[0.57661,0.6045,0.93587],[0.66126,0.66513,0.92734],[0.62481,0.63453,0.91609],[0.7279,0.82476,0.93322]]},{"date":"201801161620","rgb":[[0.4386,0.91056,0.99588],[0.47863,0.99324,0.99864],[0.47275,0.89975,0.99666],[0.4365,0.74591,0.99476],[0.42696,0.8577,0.99651],[0.46312,0.91791,0.99692],[0.47322,0.89629,0.99703],[0.36398,0.59481,0.86762],[0.41676,0.77933,0.99579],[0.42927,0.76517,0.9966],[0.4453,0.77792,0.98723],[0.15276,0.19042,0.50016],[0.24893,0.34568,0.61992],[0.28103,0.35874,0.66854],[0.26135,0.30703,0.62259],[0.25265,0.26647,0.7493]]},{"date":"201801161630","rgb":[[0.20361,0.26038,0.92702],[0.20983,0.28449,0.92515],[0.2272,0.29969,0.96375],[0.25789,0.32681,0.99395],[0.23106,0.33127,0.97733],[0.2374,0.34574,0.97942],[0.29413,0.42058,0.99406],[0.24827,0.34311,0.82932],[0.20023,0.24114,0.77801],[0.20847,0.26732,0.80076],[0.25726,0.33357,0.88572],[0.09073,0.11427,0.32019],[0.1037,0.094444,0.33862],[0.11992,0.11145,0.38149],[0.12221,0.11244,0.37115],[0.10973,0.068753,0.38114]]},{"date":"201801161640","rgb":[[0.048446,0.035083,0.31084],[0.048017,0.035195,0.30867],[0.053491,0.037623,0.34685],[0.076929,0.04565,0.4182],[0.050331,0.037973,0.34753],[0.049816,0.03961,0.33883],[0.063281,0.051991,0.37344],[0.07795,0.06607,0.3625],[0.065305,0.04563,0.40671],[0.068226,0.061269,0.39355],[0.086821,0.096224,0.43951],[0.03403,0.043919,0.12917],[0.06564,0.052323,0.20662],[0.071668,0.063488,0.24295],[0.075917,0.074826,0.24052],[0.066563,0.05523,0.13804]]},{"date":"201801161650","rgb":[[0.017901,0.027919,0.051403],[0.016263,0.027731,0.046453],[0.017321,0.027715,0.046703],[0.024002,0.028129,0.054595],[0.017249,0.02819,0.049469],[0.015654,0.027352,0.045906],[0.015617,0.027447,0.04473],[0.019561,0.027617,0.043062],[0.020009,0.029114,0.060254],[0.017702,0.028367,0.049122],[0.017116,0.028414,0.04862],[0.014549,0.027377,0.031337],[0.044254,0.042606,0.080925],[0.043002,0.042509,0.076914],[0.042722,0.041984,0.072699],[0.057618,0.052252,0.081417]]},{"date":"201801161700","rgb":[[0.012369,0.027133,0.027483],[0.012485,0.026483,0.023344],[0.012997,0.026286,0.025474],[0.015382,0.02722,0.035796],[0.012093,0.02708,0.029302],[0.011294,0.026676,0.02439],[0.011509,0.026769,0.026195],[0.014652,0.02713,0.032963],[0.013823,0.027177,0.034934],[0.011996,0.027036,0.029035],[0.012151,0.02718,0.030959],[0.012743,0.027041,0.026572],[0.041067,0.042255,0.065058],[0.040025,0.041684,0.065149],[0.040233,0.041727,0.065931],[0.054887,0.051831,0.073213]]},{"date":"201801161710","rgb":[[0.011669,0.027133,0.021684],[0.011184,0.026469,0.019546],[0.011568,0.025855,0.021537],[0.014741,0.026963,0.027649],[0.011161,0.027461,0.019751],[0.010228,0.027896,0.015073],[0.010237,0.025678,0.021315],[0.013722,0.026981,0.024336],[0.011536,0.027222,0.022145],[0.010388,0.027607,0.016799],[0.010495,0.026366,0.0204],[0.011964,0.027059,0.023314],[0.040869,0.042338,0.061683],[0.039415,0.0423,0.058648],[0.039399,0.042267,0.059296],[0.054729,0.052571,0.07073]]},{"date":"201801161720","rgb":[[0.014723,0.027478,0.025886],[0.013748,0.027044,0.023266],[0.014237,0.027342,0.025197],[0.019704,0.026292,0.031447],[0.013379,0.027866,0.023384],[0.011687,0.028213,0.019466],[0.011915,0.027265,0.023135],[0.016554,0.026497,0.027375],[0.013668,0.02772,0.021854],[0.011374,0.028937,0.015509],[0.011541,0.027557,0.020614],[0.012203,0.027514,0.022838],[0.041285,0.042838,0.060257],[0.039817,0.043225,0.057012],[0.040577,0.042257,0.060915],[0.055414,0.052411,0.071626]]},{"date":"201801161730","rgb":[[0.012778,0.027442,0.020573],[0.01332,0.026823,0.016114],[0.013861,0.025955,0.019396],[0.016065,0.026931,0.026422],[0.011441,0.028383,0.018184],[0.010529,0.029001,0.013035],[0.010528,0.028294,0.014644],[0.01507,0.026953,0.025157],[0.011757,0.028279,0.02006],[0.010524,0.028938,0.014105],[0.010954,0.028129,0.017143],[0.012441,0.027281,0.02464],[0.040504,0.042591,0.061455],[0.03958,0.042967,0.057428],[0.039923,0.042414,0.059543],[0.055567,0.051854,0.073063]]},{"date":"201801161740","rgb":[[0.012263,0.027429,0.019989],[0.015039,0.02575,0.016234],[0.012679,0.026063,0.019601],[0.015413,0.026878,0.026142],[0.011111,0.028471,0.017175],[0.010389,0.029006,0.012323],[0.010235,0.028823,0.012303],[0.013451,0.027422,0.022493],[0.011744,0.02795,0.019145],[0.010417,0.028765,0.013234],[0.010281,0.028653,0.013256],[0.012173,0.027026,0.022915],[0.040468,0.042838,0.060714],[0.039585,0.043532,0.055826],[0.0397,0.042827,0.05814],[0.055041,0.052184,0.071383]]},{"date":"201801161750","rgb":[[0.012827,0.027165,0.022709],[0.012103,0.026347,0.020148],[0.011841,0.026855,0.019358],[0.015417,0.02686,0.026767],[0.011825,0.027277,0.022107],[0.01052,0.028528,0.014504],[0.010359,0.027813,0.015952],[0.013985,0.027121,0.025976],[0.011912,0.027261,0.023273],[0.010886,0.027233,0.019669],[0.010818,0.027395,0.018805],[0.012677,0.027001,0.024403],[0.040639,0.042502,0.061037],[0.039786,0.041569,0.061868],[0.039911,0.042644,0.059158],[0.05533,0.052411,0.072122]]},{"date":"201801161800","rgb":[[0.011809,0.0275,0.017559],[0.015167,0.025918,0.012783],[0.013175,0.026902,0.015473],[0.013622,0.027298,0.024569],[0.010662,0.028272,0.015059],[0.010188,0.028807,0.010451],[0.010207,0.028709,0.012432],[0.013064,0.027414,0.022018],[0.010823,0.028536,0.015328],[0.010243,0.02894,0.01044],[0.010247,0.028799,0.01199],[0.011861,0.027444,0.021248],[0.039969,0.042723,0.05893],[0.039272,0.043365,0.055002],[0.039407,0.043025,0.056878],[0.0547,0.052199,0.072379]]},{"date":"201801161810","rgb":[[0.011663,0.02799,0.01814],[0.011477,0.027359,0.016308],[0.013909,0.026087,0.01717],[0.014141,0.026857,0.026002],[0.01088,0.028597,0.015235],[0.010177,0.028841,0.010599],[0.010255,0.028774,0.011814],[0.013981,0.027491,0.020727],[0.011248,0.028747,0.015978],[0.010277,0.028926,0.011184],[0.010202,0.028844,0.011594],[0.012148,0.027674,0.021256],[0.040323,0.042707,0.060477],[0.039433,0.043411,0.05532],[0.039518,0.043238,0.056388],[0.055322,0.052626,0.071948]]},{"date":"201801161820","rgb":[[0.012167,0.027054,0.019488],[0.012339,0.027225,0.014556],[0.012184,0.02615,0.020502],[0.015267,0.026679,0.027662],[0.010822,0.027742,0.017478],[0.010175,0.028778,0.011696],[0.010251,0.027307,0.016802],[0.013321,0.026818,0.0255],[0.010994,0.028165,0.017141],[0.01022,0.028841,0.012206],[0.010314,0.028588,0.013314],[0.012257,0.027152,0.023863],[0.040151,0.042113,0.061637],[0.039316,0.043087,0.05587],[0.039896,0.042455,0.058942],[0.05552,0.052506,0.073011]]},{"date":"201801161830","rgb":[[0.013583,0.026338,0.018931],[0.015597,0.024725,0.01982],[0.015413,0.024505,0.021357],[0.015009,0.027141,0.026168],[0.010604,0.028361,0.014669],[0.010232,0.028425,0.012722],[0.010191,0.028016,0.013984],[0.01316,0.027185,0.023264],[0.010759,0.028385,0.016221],[0.010198,0.028701,0.012941],[0.010363,0.028235,0.015336],[0.012394,0.027176,0.023545],[0.040209,0.041977,0.061289],[0.039171,0.043104,0.056092],[0.039677,0.04164,0.06085],[0.055092,0.052387,0.073053]]},{"date":"201801161840","rgb":[[0.012664,0.027475,0.019202],[0.013575,0.026856,0.014961],[0.013321,0.026512,0.018295],[0.01614,0.026677,0.028056],[0.011109,0.028463,0.016554],[0.01051,0.028748,0.013494],[0.010473,0.028152,0.014724],[0.014095,0.027322,0.022996],[0.011671,0.028001,0.019759],[0.011032,0.028371,0.017201],[0.010756,0.028103,0.01715],[0.01259,0.02711,0.024308],[0.0405,0.04249,0.060349],[0.039665,0.042927,0.057508],[0.039909,0.042695,0.058933],[0.055537,0.052557,0.071191]]},{"date":"201801161850","rgb":[[0.012196,0.027805,0.016203],[0.012387,0.02607,0.018489],[0.013073,0.026803,0.015768],[0.014135,0.027621,0.023468],[0.010499,0.028913,0.012908],[0.01022,0.02887,0.010473],[0.010196,0.02864,0.012581],[0.012576,0.02758,0.022066],[0.010999,0.029144,0.013788],[0.010191,0.028812,0.011578],[0.010154,0.028664,0.012455],[0.011985,0.027728,0.021333],[0.040059,0.043118,0.057487],[0.039092,0.04334,0.054129],[0.039546,0.043032,0.056884],[0.054823,0.052685,0.070836]]},{"date":"201801161900","rgb":[[0.011895,0.026707,0.020311],[0.012633,0.025226,0.021426],[0.013551,0.025658,0.019128],[0.015025,0.026985,0.025734],[0.010642,0.027725,0.016838],[0.010222,0.027308,0.015845],[0.010194,0.028707,0.01264],[0.013196,0.027207,0.023821],[0.01077,0.028129,0.016591],[0.010193,0.02881,0.012508],[0.010209,0.028382,0.013776],[0.01202,0.027074,0.023568],[0.039994,0.042182,0.06034],[0.039076,0.042804,0.056297],[0.039525,0.042177,0.059331],[0.055574,0.05254,0.072631]]},{"date":"201801161910","rgb":[[0.013113,0.027551,0.016483],[0.019169,0.023764,0.013455],[0.024617,0.023334,0.017021],[0.030676,0.026556,0.0284],[0.010758,0.029007,0.013763],[0.010296,0.028967,0.0097485],[0.011174,0.028511,0.0109],[0.02184,0.026042,0.022708],[0.011032,0.028865,0.014599],[0.010173,0.028804,0.011092],[0.010183,0.028822,0.011908],[0.013739,0.02803,0.01877],[0.040548,0.043284,0.057293],[0.039144,0.043371,0.053925],[0.039551,0.043423,0.054765],[0.056424,0.052521,0.069512]]},{"date":"201801161920","rgb":[[0.0122,0.027068,0.020778],[0.015125,0.025691,0.016218],[0.020365,0.025594,0.02207],[0.03082,0.026515,0.034511],[0.010684,0.028067,0.01624],[0.010284,0.028948,0.011691],[0.010511,0.027581,0.016104],[0.021663,0.02649,0.028149],[0.011104,0.027998,0.018058],[0.01025,0.028787,0.013015],[0.010331,0.028197,0.014876],[0.014884,0.026714,0.026018],[0.04076,0.042036,0.062982],[0.039409,0.042637,0.05776],[0.040126,0.04226,0.060253],[0.057219,0.052357,0.073438]]},{"date":"201801161930","rgb":[[0.012526,0.027772,0.017731],[0.011736,0.027713,0.014023],[0.018041,0.026221,0.019168],[0.029527,0.026152,0.031827],[0.010819,0.028536,0.014962],[0.010153,0.028805,0.01013],[0.010584,0.028254,0.013773],[0.022024,0.025978,0.025792],[0.010953,0.028425,0.016724],[0.010175,0.028804,0.011519],[0.01029,0.028717,0.01339],[0.013416,0.027258,0.022702],[0.040143,0.042965,0.059168],[0.039262,0.043356,0.054834],[0.039601,0.043116,0.056584],[0.056465,0.052442,0.072473]]},{"date":"201801161940","rgb":[[0.012243,0.027815,0.016576],[0.014411,0.026306,0.015431],[0.018258,0.026153,0.019274],[0.029193,0.026327,0.031258],[0.010743,0.028773,0.014421],[0.010237,0.028952,0.011283],[0.010552,0.028275,0.013229],[0.021953,0.026105,0.027706],[0.010825,0.028951,0.014051],[0.010259,0.028981,0.011173],[0.010216,0.028818,0.012099],[0.014092,0.027137,0.023027],[0.040159,0.042989,0.058075],[0.039177,0.043309,0.054615],[0.039491,0.043056,0.055808],[0.056495,0.052417,0.07224]]},{"date":"201801161950","rgb":[[0.012252,0.02763,0.018595],[0.014688,0.026298,0.013928],[0.019559,0.026034,0.019691],[0.031292,0.026191,0.031685],[0.010895,0.028504,0.015217],[0.01024,0.028971,0.01113],[0.010888,0.028424,0.012836],[0.02258,0.026002,0.026045],[0.010953,0.02867,0.015415],[0.010194,0.028865,0.011794],[0.010266,0.028369,0.013658],[0.013969,0.027338,0.023514],[0.040408,0.043005,0.05852],[0.039461,0.043359,0.055271],[0.039787,0.042518,0.05788],[0.057502,0.052487,0.072225]]},{"date":"201801162000","rgb":[[0.012529,0.027034,0.020145],[0.013222,0.026985,0.015377],[0.018444,0.026775,0.019793],[0.030434,0.026473,0.034885],[0.010862,0.028389,0.016611],[0.010215,0.028767,0.011875],[0.010222,0.028693,0.012796],[0.022076,0.026221,0.02701],[0.010868,0.027339,0.019372],[0.010154,0.028818,0.012358],[0.010186,0.028445,0.013298],[0.012987,0.027019,0.024654],[0.040063,0.042015,0.061226],[0.039287,0.043127,0.055763],[0.039607,0.042625,0.057738],[0.056484,0.052272,0.073937]]},{"date":"201801162010","rgb":[[0.012477,0.027719,0.015818],[0.014422,0.026464,0.014411],[0.018399,0.025947,0.020316],[0.029942,0.026177,0.030879],[0.01076,0.028893,0.014385],[0.010262,0.028812,0.011409],[0.010563,0.02852,0.012435],[0.021753,0.025916,0.024741],[0.010725,0.028786,0.015171],[0.010224,0.028876,0.01183],[0.010205,0.028649,0.013051],[0.013346,0.026907,0.023919],[0.039982,0.043494,0.057432],[0.039251,0.043389,0.055342],[0.039461,0.042948,0.057135],[0.056485,0.052404,0.072167]]},{"date":"201801162020","rgb":[[0.012111,0.027773,0.017978],[0.014627,0.026207,0.014891],[0.018754,0.02617,0.019033],[0.030708,0.026212,0.028949],[0.010744,0.028713,0.01461],[0.010202,0.02882,0.011129],[0.01082,0.028467,0.01228],[0.022063,0.025924,0.025476],[0.010714,0.028289,0.016183],[0.010211,0.028891,0.012237],[0.010284,0.028551,0.013728],[0.01389,0.026838,0.022988],[0.040306,0.042733,0.058434],[0.039341,0.043281,0.054637],[0.039604,0.043257,0.056407],[0.057307,0.052784,0.070613]]},{"date":"201801162030","rgb":[[0.012588,0.028003,0.016332],[0.011701,0.027282,0.015781],[0.01792,0.026243,0.019064],[0.02994,0.026076,0.030848],[0.010745,0.028639,0.013907],[0.010195,0.028794,0.011487],[0.010409,0.028397,0.012993],[0.021356,0.026239,0.026259],[0.010844,0.028725,0.015202],[0.010219,0.028847,0.012236],[0.0103,0.028755,0.013403],[0.013017,0.026962,0.023396],[0.040219,0.04263,0.060103],[0.039323,0.043054,0.05581],[0.039586,0.042505,0.059302],[0.056057,0.052475,0.072962]]},{"date":"201801162040","rgb":[[0.012481,0.027913,0.01669],[0.013337,0.026905,0.015285],[0.01913,0.02624,0.01813],[0.030159,0.026186,0.02926],[0.010808,0.029101,0.013427],[0.010224,0.028845,0.011529],[0.010428,0.028777,0.012497],[0.022124,0.026302,0.023005],[0.011449,0.029027,0.015228],[0.010441,0.029006,0.012334],[0.010473,0.028756,0.012881],[0.013316,0.027823,0.020542],[0.040425,0.042933,0.059325],[0.039343,0.043439,0.055169],[0.039806,0.04251,0.058985],[0.056273,0.05289,0.070558]]},{"date":"201801162050","rgb":[[0.012882,0.027943,0.01785],[0.015075,0.025714,0.017402],[0.020795,0.026116,0.020796],[0.032589,0.026235,0.032832],[0.011022,0.029178,0.014014],[0.010501,0.029007,0.012272],[0.011249,0.028286,0.014517],[0.023376,0.026299,0.026651],[0.011705,0.02871,0.017034],[0.010593,0.02885,0.013869],[0.010664,0.028193,0.016409],[0.013545,0.026845,0.023987],[0.040768,0.042953,0.059899],[0.039443,0.043375,0.055214],[0.039989,0.042408,0.06025],[0.057217,0.052163,0.072366]]},{"date":"201801162100","rgb":[[0.013302,0.027393,0.021715],[0.012873,0.026922,0.020119],[0.02112,0.026375,0.025851],[0.035716,0.02638,0.036768],[0.011676,0.028279,0.01827],[0.010658,0.028206,0.015595],[0.01107,0.028076,0.016881],[0.024467,0.026704,0.028509],[0.013397,0.02833,0.02],[0.010809,0.029203,0.013375],[0.010881,0.028433,0.016297],[0.014661,0.02715,0.02495],[0.041526,0.042424,0.061802],[0.040082,0.042804,0.058852],[0.040635,0.041959,0.061846],[0.058251,0.051985,0.073685]]},{"date":"201801162110","rgb":[[0.012227,0.027054,0.020956],[0.01239,0.026787,0.018072],[0.019012,0.026254,0.024517],[0.032964,0.026745,0.036473],[0.011072,0.028134,0.017636],[0.010275,0.028697,0.012978],[0.011524,0.027724,0.016397],[0.02329,0.025986,0.028156],[0.012287,0.027931,0.021271],[0.010537,0.028802,0.014259],[0.010724,0.027835,0.017101],[0.013102,0.026931,0.025301],[0.040555,0.042121,0.062429],[0.039668,0.042796,0.057968],[0.03986,0.042604,0.058853],[0.055978,0.052132,0.072406]]},{"date":"201801162120","rgb":[[0.01289,0.02774,0.02066],[0.012433,0.02755,0.016444],[0.022592,0.025553,0.02448],[0.033917,0.02654,0.035842],[0.011412,0.028933,0.015794],[0.010447,0.029046,0.012843],[0.01087,0.028613,0.014893],[0.023911,0.026579,0.028091],[0.012181,0.028847,0.018419],[0.010379,0.028968,0.013021],[0.010625,0.028581,0.015061],[0.014069,0.027045,0.024277],[0.041087,0.042469,0.061295],[0.039543,0.043401,0.055902],[0.040222,0.042867,0.058498],[0.056927,0.052273,0.073002]]},{"date":"201801162130","rgb":[[0.013418,0.027458,0.017964],[0.0141,0.02668,0.014777],[0.01934,0.026403,0.020387],[0.031752,0.026503,0.030104],[0.010925,0.028825,0.014737],[0.010284,0.028951,0.010732],[0.010927,0.028484,0.012343],[0.022275,0.025966,0.022712],[0.011742,0.029125,0.016234],[0.010424,0.02903,0.0128],[0.01054,0.029087,0.01324],[0.013939,0.027951,0.020013],[0.040318,0.042553,0.059726],[0.039565,0.043545,0.055179],[0.039802,0.043602,0.056781],[0.056212,0.052556,0.071248]]},{"date":"201801162150","rgb":[[0.012948,0.027104,0.019729],[0.013451,0.026205,0.017798],[0.018309,0.025717,0.021998],[0.030449,0.026483,0.032349],[0.01093,0.028218,0.016173],[0.010282,0.028825,0.012195],[0.010764,0.027941,0.014481],[0.021979,0.02631,0.027571],[0.011214,0.028407,0.016416],[0.010362,0.02882,0.01306],[0.010413,0.028573,0.013937],[0.013412,0.026903,0.02376],[0.040321,0.042602,0.059971],[0.039477,0.04313,0.055604],[0.039597,0.04233,0.058653],[0.056322,0.052634,0.072201]]},{"date":"201801162200","rgb":[[0.012605,0.026755,0.021987],[0.012748,0.025938,0.019772],[0.021109,0.024672,0.021894],[0.031582,0.026119,0.034491],[0.010852,0.027922,0.016999],[0.010248,0.028175,0.013532],[0.010633,0.028292,0.013371],[0.022518,0.026579,0.027881],[0.011154,0.028327,0.018044],[0.01029,0.028792,0.013032],[0.010491,0.028017,0.015984],[0.014313,0.026699,0.026533],[0.040365,0.04258,0.061151],[0.039832,0.042952,0.057026],[0.040327,0.042702,0.059064],[0.057086,0.052225,0.074222]]},{"date":"201801162210","rgb":[[0.013607,0.027287,0.017571],[0.012389,0.027165,0.01557],[0.018532,0.026664,0.019063],[0.03133,0.026479,0.030111],[0.011015,0.028711,0.015271],[0.010249,0.028902,0.011227],[0.010891,0.028542,0.012103],[0.022745,0.026132,0.024336],[0.012378,0.029341,0.015578],[0.010644,0.029097,0.012253],[0.010491,0.028916,0.013541],[0.013515,0.027648,0.021153],[0.040724,0.043112,0.05899],[0.039746,0.043321,0.056337],[0.040208,0.043533,0.056669],[0.057262,0.052207,0.071077]]},{"date":"201801162230","rgb":[[0.012349,0.027731,0.019557],[0.012816,0.027,0.016419],[0.01873,0.026998,0.019525],[0.031584,0.026295,0.032024],[0.011083,0.028471,0.015875],[0.01032,0.028936,0.011334],[0.01094,0.028485,0.012513],[0.02319,0.025811,0.024919],[0.01172,0.028748,0.016058],[0.010346,0.028981,0.01183],[0.010428,0.028932,0.012643],[0.013536,0.027732,0.020995],[0.040631,0.043105,0.059554],[0.039392,0.043621,0.055431],[0.039742,0.043159,0.057088],[0.056777,0.052343,0.072173]]},{"date":"201801162240","rgb":[[0.01212,0.027927,0.017282],[0.013521,0.026739,0.015191],[0.017869,0.026577,0.018215],[0.030545,0.026301,0.029979],[0.010761,0.028443,0.015699],[0.010203,0.028849,0.011745],[0.010904,0.028438,0.012454],[0.022275,0.026017,0.02536],[0.01171,0.028412,0.018001],[0.010442,0.028956,0.012777],[0.01037,0.028765,0.013172],[0.013162,0.027063,0.022261],[0.04114,0.042147,0.062746],[0.039884,0.043418,0.056243],[0.039828,0.042526,0.058068],[0.056213,0.052561,0.071163]]},{"date":"201801162250","rgb":[[0.012379,0.027928,0.017182],[0.012996,0.025441,0.020123],[0.011699,0.025893,0.020585],[0.015403,0.027634,0.024109],[0.011036,0.028995,0.014497],[0.01023,0.028221,0.013232],[0.010285,0.028288,0.013772],[0.01351,0.027656,0.02245],[0.011318,0.028537,0.016685],[0.010261,0.028958,0.011018],[0.010299,0.028727,0.012944],[0.012098,0.028106,0.020251],[0.040367,0.042495,0.060552],[0.039456,0.043418,0.055055],[0.039539,0.042205,0.059539],[0.05529,0.052505,0.070613]]},{"date":"201801162300","rgb":[[0.012165,0.028343,0.016016],[0.012313,0.027759,0.014151],[0.012507,0.027396,0.015645],[0.014973,0.027028,0.024656],[0.01081,0.028955,0.01437],[0.010315,0.028844,0.01149],[0.010261,0.028717,0.012271],[0.0133,0.028131,0.020003],[0.011891,0.029322,0.015862],[0.010513,0.029055,0.012639],[0.010499,0.028616,0.014258],[0.013052,0.027796,0.020358],[0.040546,0.043114,0.05815],[0.039517,0.043296,0.055737],[0.039854,0.04317,0.057099],[0.055712,0.052981,0.069924]]},{"date":"201801162310","rgb":[[0.01226,0.027623,0.017386],[0.013746,0.026707,0.013758],[0.014073,0.025438,0.0191],[0.01427,0.027144,0.024475],[0.010912,0.028864,0.014412],[0.010256,0.028969,0.010543],[0.01026,0.028649,0.012017],[0.012686,0.027836,0.021863],[0.011332,0.02929,0.014508],[0.010275,0.028897,0.011532],[0.010361,0.028685,0.012614],[0.012364,0.02815,0.020706],[0.040567,0.042907,0.059173],[0.039506,0.043544,0.054778],[0.039724,0.042651,0.058067],[0.055143,0.052538,0.070377]]},{"date":"201801162320","rgb":[[0.011884,0.026704,0.021734],[0.011823,0.027092,0.01636],[0.012351,0.025481,0.021124],[0.013536,0.026713,0.025498],[0.010822,0.027531,0.01811],[0.010249,0.028883,0.011554],[0.010226,0.027787,0.014647],[0.01147,0.026726,0.023066],[0.01118,0.02826,0.018231],[0.010265,0.028815,0.012639],[0.01025,0.028105,0.01496],[0.011461,0.026877,0.022973],[0.040121,0.042613,0.059577],[0.039182,0.043226,0.055251],[0.039386,0.042604,0.058018],[0.054236,0.052418,0.071515]]},{"date":"201801162330","rgb":[[0.011702,0.028161,0.015832],[0.012713,0.026249,0.017503],[0.013159,0.024849,0.021441],[0.012697,0.027018,0.023499],[0.010603,0.029062,0.012652],[0.010149,0.028796,0.010453],[0.010199,0.027405,0.015058],[0.011328,0.027121,0.02149],[0.011,0.029129,0.014116],[0.010226,0.028897,0.011908],[0.010216,0.028773,0.012976],[0.011496,0.027596,0.021362],[0.040073,0.043177,0.058817],[0.039241,0.043239,0.0551],[0.039341,0.043161,0.056708],[0.054738,0.05224,0.072261]]},{"date":"201801162340","rgb":[[0.012535,0.027954,0.016019],[0.011758,0.026597,0.017359],[0.011674,0.02558,0.021242],[0.014012,0.026655,0.024832],[0.010696,0.028992,0.013556],[0.010184,0.028883,0.010217],[0.010198,0.028501,0.011814],[0.011314,0.027543,0.02051],[0.010712,0.029122,0.014107],[0.010162,0.028791,0.011281],[0.010176,0.028775,0.012117],[0.011883,0.027368,0.021186],[0.040274,0.042839,0.058648],[0.039103,0.043324,0.054755],[0.039673,0.043203,0.054948],[0.055193,0.052684,0.070212]]},{"date":"201801162350","rgb":[[0.012083,0.028398,0.015645],[0.012226,0.027177,0.014814],[0.013688,0.026509,0.013749],[0.013672,0.027162,0.023429],[0.010814,0.028814,0.01406],[0.010279,0.028894,0.010647],[0.010189,0.028803,0.010842],[0.011891,0.027712,0.020406],[0.011164,0.029137,0.01406],[0.01029,0.029048,0.01018],[0.010467,0.0289,0.011655],[0.012361,0.027986,0.018856],[0.040126,0.043241,0.057313],[0.039259,0.043352,0.054004],[0.039798,0.043282,0.055939],[0.055118,0.052914,0.068777]]},{"date":"201801170000","rgb":[[0.012024,0.026948,0.020615],[0.013936,0.02499,0.020859],[0.012617,0.025962,0.01982],[0.013299,0.026871,0.026404],[0.010769,0.028211,0.016411],[0.010216,0.028222,0.013957],[0.010266,0.028395,0.013366],[0.011913,0.027017,0.023962],[0.011435,0.028137,0.018188],[0.010369,0.028733,0.013252],[0.010238,0.028622,0.013252],[0.011609,0.026998,0.023409],[0.040545,0.042158,0.062029],[0.039382,0.043145,0.057337],[0.039916,0.042709,0.059028],[0.054455,0.052113,0.073531]]},{"date":"201801170010","rgb":[[0.013446,0.027581,0.016382],[0.013793,0.02615,0.017194],[0.013897,0.02652,0.0156],[0.014961,0.026997,0.02533],[0.011024,0.029403,0.014148],[0.010269,0.028818,0.012105],[0.010221,0.028608,0.012899],[0.012547,0.028016,0.021554],[0.011774,0.028707,0.017752],[0.010421,0.028975,0.013078],[0.010375,0.028474,0.014598],[0.012423,0.027656,0.022452],[0.040625,0.043193,0.058526],[0.03937,0.043278,0.05565],[0.03983,0.042603,0.058507],[0.055718,0.052199,0.071853]]},{"date":"201801170020","rgb":[[0.012757,0.028387,0.015104],[0.013605,0.027162,0.012881],[0.012525,0.027655,0.014187],[0.014409,0.027953,0.020024],[0.010756,0.029159,0.012769],[0.01027,0.0289,0.010753],[0.010234,0.028763,0.011697],[0.011899,0.028096,0.020496],[0.011069,0.029271,0.014822],[0.01038,0.02898,0.012189],[0.01035,0.028921,0.013028],[0.011751,0.027899,0.019624],[0.040186,0.04345,0.056683],[0.039378,0.043528,0.054275],[0.039666,0.043504,0.05521],[0.054995,0.052881,0.067836]]},{"date":"201801170030","rgb":[[0.0126,0.027996,0.019655],[0.012911,0.027303,0.01539],[0.012191,0.027033,0.019047],[0.013614,0.027142,0.026485],[0.011348,0.027643,0.019315],[0.010394,0.02896,0.01313],[0.010389,0.02839,0.014137],[0.012406,0.027181,0.024171],[0.011424,0.028648,0.017666],[0.010445,0.028972,0.013176],[0.010533,0.028588,0.014459],[0.011445,0.027187,0.022413],[0.040437,0.042533,0.060322],[0.039343,0.043281,0.055923],[0.03964,0.043075,0.057366],[0.054975,0.052317,0.071043]]},{"date":"201801170040","rgb":[[0.013022,0.027751,0.018859],[0.012419,0.027151,0.015223],[0.012489,0.026983,0.017185],[0.014751,0.026818,0.024484],[0.010967,0.028854,0.015337],[0.010235,0.028873,0.011603],[0.010224,0.028739,0.01201],[0.012459,0.027563,0.02158],[0.011304,0.029204,0.014754],[0.010201,0.028953,0.011468],[0.010158,0.028738,0.011807],[0.011257,0.027972,0.019608],[0.040189,0.043324,0.057755],[0.039164,0.043345,0.054523],[0.039327,0.043181,0.056375],[0.055403,0.052597,0.069983]]},{"date":"201801170050","rgb":[[0.012514,0.028294,0.01816],[0.012753,0.027616,0.015616],[0.013103,0.02697,0.01826],[0.014366,0.027211,0.025245],[0.011188,0.028654,0.016171],[0.01032,0.029021,0.011476],[0.010344,0.02825,0.01391],[0.012244,0.027265,0.023101],[0.010891,0.028985,0.014027],[0.010272,0.028914,0.011487],[0.010255,0.028735,0.012467],[0.011685,0.027483,0.021082],[0.03995,0.043277,0.057426],[0.039256,0.043507,0.054854],[0.039476,0.043488,0.055822],[0.055067,0.052508,0.070912]]},{"date":"201801170110","rgb":[[0.013922,0.026893,0.021482],[0.013694,0.025719,0.020978],[0.01484,0.026234,0.018476],[0.014681,0.026962,0.026549],[0.011067,0.027877,0.018272],[0.010346,0.028894,0.012354],[0.010439,0.028439,0.013762],[0.013021,0.027199,0.023921],[0.010908,0.02908,0.01406],[0.010222,0.028902,0.011894],[0.010247,0.028789,0.01256],[0.012668,0.027217,0.022458],[0.039934,0.042761,0.058932],[0.039059,0.043284,0.054743],[0.039559,0.043104,0.056706],[0.055005,0.05206,0.072616]]},{"date":"201801170120","rgb":[[0.012631,0.027506,0.021516],[0.01185,0.0277,0.016342],[0.012518,0.026498,0.022083],[0.015796,0.026908,0.029652],[0.01126,0.027572,0.019709],[0.010485,0.028526,0.013611],[0.010575,0.02757,0.016984],[0.012462,0.027415,0.026297],[0.011418,0.027994,0.018749],[0.01043,0.028887,0.012895],[0.010477,0.027823,0.016474],[0.01282,0.0272,0.0263],[0.0402,0.042474,0.060852],[0.039336,0.043276,0.055881],[0.039835,0.042564,0.059381],[0.055518,0.052185,0.074092]]},{"date":"201801170130","rgb":[[0.013092,0.027845,0.020087],[0.012148,0.027713,0.016983],[0.014099,0.026133,0.021347],[0.015754,0.02692,0.026963],[0.011739,0.028491,0.017517],[0.010487,0.028966,0.012572],[0.010617,0.028453,0.015221],[0.013232,0.027452,0.023827],[0.011809,0.027692,0.020634],[0.010382,0.028763,0.013676],[0.010751,0.028578,0.015375],[0.012541,0.027097,0.02444],[0.040261,0.042234,0.062284],[0.039283,0.043137,0.056171],[0.039849,0.042779,0.057717],[0.055777,0.051929,0.072571]]},{"date":"201801170140","rgb":[[0.013064,0.02808,0.019717],[0.015389,0.025759,0.017684],[0.013759,0.027157,0.016236],[0.014926,0.02736,0.025203],[0.011339,0.028882,0.016527],[0.010294,0.028846,0.012208],[0.010563,0.028591,0.013966],[0.01237,0.027326,0.023938],[0.011439,0.028834,0.016923],[0.010235,0.028871,0.01142],[0.010441,0.029009,0.012726],[0.011741,0.027691,0.02101],[0.04058,0.042489,0.060018],[0.039345,0.043261,0.055112],[0.03979,0.043065,0.056442],[0.054729,0.052209,0.071195]]},{"date":"201801170150","rgb":[[0.012597,0.027048,0.022506],[0.011704,0.027271,0.017983],[0.012395,0.026174,0.021419],[0.014477,0.026935,0.026993],[0.011322,0.028213,0.017322],[0.010372,0.02891,0.012978],[0.010366,0.027308,0.016897],[0.012576,0.027047,0.024279],[0.011185,0.028597,0.017133],[0.010264,0.028912,0.011738],[0.010309,0.028713,0.012764],[0.012069,0.027529,0.022245],[0.040081,0.042801,0.060304],[0.039232,0.043285,0.056416],[0.039579,0.043014,0.057247],[0.054317,0.052411,0.072442]]},{"date":"201801170200","rgb":[[0.012104,0.028012,0.016504],[0.012808,0.027054,0.015914],[0.01315,0.026935,0.015306],[0.014222,0.026995,0.024236],[0.010913,0.028711,0.014684],[0.010234,0.028854,0.01128],[0.010233,0.028704,0.012411],[0.012333,0.02712,0.023922],[0.011143,0.028562,0.016731],[0.010297,0.028896,0.011653],[0.010255,0.028839,0.011965],[0.012455,0.027667,0.022794],[0.040322,0.043259,0.058559],[0.039394,0.04342,0.054864],[0.03948,0.043252,0.055101],[0.055283,0.052344,0.071771]]},{"date":"201801170210","rgb":[[0.012661,0.027004,0.0229],[0.012139,0.026172,0.019748],[0.012431,0.026071,0.019432],[0.014366,0.027138,0.025102],[0.011293,0.028054,0.017968],[0.0103,0.028836,0.012535],[0.010239,0.028396,0.01349],[0.012094,0.027507,0.023303],[0.011542,0.027939,0.019557],[0.010329,0.028818,0.013073],[0.010295,0.028631,0.013611],[0.012258,0.027135,0.024534],[0.040871,0.042118,0.062901],[0.039485,0.043147,0.057131],[0.039947,0.042749,0.058675],[0.055633,0.051912,0.073917]]},{"date":"201801170220","rgb":[[0.012008,0.026819,0.019985],[0.014225,0.026197,0.014863],[0.014711,0.025908,0.015932],[0.013656,0.027202,0.022553],[0.011085,0.028178,0.016153],[0.010315,0.028913,0.011569],[0.010252,0.028771,0.011988],[0.012542,0.028147,0.019645],[0.011537,0.028654,0.017027],[0.010311,0.028932,0.012076],[0.01022,0.028777,0.012664],[0.011879,0.027876,0.020316],[0.040651,0.042728,0.060016],[0.039404,0.04338,0.055397],[0.039537,0.043115,0.056278],[0.05458,0.052562,0.070929]]},{"date":"201801170230","rgb":[[0.012483,0.027784,0.016193],[0.0141,0.026342,0.014541],[0.012486,0.026184,0.017782],[0.013072,0.027175,0.022176],[0.010728,0.028814,0.014482],[0.010191,0.028826,0.011437],[0.010207,0.028798,0.011926],[0.01141,0.02728,0.021577],[0.011025,0.028388,0.017255],[0.010192,0.028725,0.012298],[0.010238,0.028688,0.013393],[0.01162,0.026877,0.024271],[0.040236,0.042466,0.059173],[0.039225,0.043226,0.055247],[0.039356,0.042923,0.056081],[0.053725,0.052464,0.071627]]},{"date":"201801170250","rgb":[[0.011971,0.026901,0.0207],[0.012478,0.02523,0.021535],[0.012992,0.026324,0.016749],[0.013382,0.027034,0.02572],[0.010972,0.027513,0.017698],[0.010227,0.02731,0.015844],[0.010174,0.028645,0.012022],[0.012015,0.027017,0.023578],[0.011131,0.028288,0.017225],[0.010313,0.028807,0.012292],[0.010215,0.028709,0.012114],[0.012328,0.026886,0.025313],[0.040294,0.042043,0.062141],[0.039356,0.043033,0.057027],[0.039735,0.042654,0.057487],[0.054365,0.052251,0.073724]]},{"date":"201801170320","rgb":[[0.012619,0.027783,0.018614],[0.012634,0.027059,0.014978],[0.013147,0.025076,0.021609],[0.014792,0.026862,0.024692],[0.011204,0.028563,0.016563],[0.01027,0.028738,0.012123],[0.010241,0.027652,0.015534],[0.012064,0.027034,0.024246],[0.011216,0.028723,0.016654],[0.010244,0.028897,0.011866],[0.010277,0.028413,0.014387],[0.012067,0.027045,0.024616],[0.040418,0.043173,0.058977],[0.039161,0.043276,0.055462],[0.039452,0.0426,0.058058],[0.054724,0.052257,0.072031]]},{"date":"201801170330","rgb":[[0.012034,0.026907,0.02173],[0.011653,0.0272,0.016543],[0.012581,0.026719,0.017613],[0.013879,0.026776,0.027024],[0.011291,0.027792,0.01897],[0.010328,0.028887,0.012643],[0.010355,0.028258,0.014759],[0.012024,0.026996,0.025275],[0.011513,0.027932,0.020194],[0.010465,0.028825,0.013048],[0.010332,0.028231,0.014653],[0.012104,0.026855,0.026204],[0.040504,0.042698,0.060487],[0.039613,0.043254,0.056763],[0.039738,0.042388,0.058494],[0.054939,0.0522,0.072784]]},{"date":"201801170340","rgb":[[0.012404,0.028179,0.015777],[0.012137,0.027025,0.015476],[0.012526,0.026759,0.017055],[0.013899,0.026975,0.023982],[0.010876,0.029046,0.014639],[0.010178,0.028779,0.010759],[0.010227,0.028694,0.012057],[0.011573,0.027099,0.022748],[0.01181,0.02846,0.016629],[0.010268,0.028901,0.011524],[0.010217,0.028741,0.01262],[0.011678,0.027056,0.022866],[0.040719,0.042968,0.058537],[0.039241,0.043338,0.055055],[0.039348,0.04277,0.057283],[0.054213,0.052229,0.071809]]},{"date":"201801170350","rgb":[[0.011942,0.027854,0.018395],[0.012473,0.027316,0.014788],[0.013273,0.026687,0.015288],[0.013829,0.026872,0.026133],[0.010956,0.02828,0.016003],[0.01024,0.028945,0.010625],[0.010266,0.028758,0.012003],[0.012169,0.027366,0.022302],[0.01136,0.028346,0.018455],[0.010306,0.028946,0.012074],[0.01027,0.028546,0.013481],[0.012298,0.027237,0.023642],[0.040668,0.04257,0.061038],[0.039463,0.043581,0.055631],[0.039498,0.043012,0.056696],[0.054608,0.052171,0.072718]]},{"date":"201801170400","rgb":[[0.012809,0.027858,0.017448],[0.012905,0.027028,0.014772],[0.012546,0.027262,0.015126],[0.014085,0.027256,0.023411],[0.011154,0.029038,0.014518],[0.010253,0.028849,0.010739],[0.010262,0.028874,0.011452],[0.012087,0.028236,0.019622],[0.01142,0.028931,0.016427],[0.01036,0.02899,0.012509],[0.010246,0.028855,0.012306],[0.012304,0.027756,0.02138],[0.040674,0.042933,0.059549],[0.039642,0.043509,0.055148],[0.039691,0.042867,0.05694],[0.054814,0.052669,0.072049]]},{"date":"201801170410","rgb":[[0.012478,0.027993,0.017479],[0.015303,0.02551,0.016553],[0.013051,0.026943,0.016079],[0.014093,0.027033,0.02428],[0.010907,0.027786,0.017733],[0.010284,0.028897,0.011397],[0.010316,0.028646,0.012284],[0.011721,0.027189,0.022762],[0.011416,0.028652,0.016784],[0.010184,0.02878,0.011621],[0.010322,0.028887,0.012321],[0.012057,0.027306,0.022801],[0.040261,0.042996,0.058582],[0.039134,0.043399,0.054505],[0.039732,0.043327,0.055951],[0.054105,0.052644,0.070375]]},{"date":"201801170430","rgb":[[0.016764,0.027589,0.021497],[0.013891,0.0277,0.021559],[0.015885,0.027278,0.022347],[0.019445,0.026378,0.028436],[0.014933,0.0282,0.020639],[0.011941,0.027892,0.020421],[0.013355,0.027702,0.023013],[0.017064,0.026887,0.026453],[0.015854,0.028066,0.020531],[0.011806,0.028821,0.017132],[0.012999,0.028449,0.02046],[0.014261,0.027706,0.022425],[0.041941,0.042607,0.060143],[0.039824,0.04307,0.056787],[0.040265,0.042735,0.059065],[0.056504,0.052174,0.072244]]},{"date":"201801170440","rgb":[[0.014465,0.027442,0.022465],[0.013788,0.026928,0.019304],[0.01381,0.027273,0.02266],[0.017833,0.026564,0.026826],[0.012891,0.02825,0.019574],[0.010868,0.028776,0.01533],[0.011501,0.028403,0.017982],[0.013501,0.027654,0.023752],[0.012831,0.028272,0.019622],[0.010738,0.029168,0.013631],[0.011293,0.028365,0.017436],[0.012188,0.027281,0.023243],[0.040888,0.0423,0.060581],[0.039217,0.043357,0.055412],[0.040109,0.042673,0.058546],[0.054903,0.052496,0.071522]]},{"date":"201801170450","rgb":[[0.013522,0.027703,0.01919],[0.014266,0.026442,0.016222],[0.015551,0.026134,0.016633],[0.014406,0.027066,0.024705],[0.011263,0.028248,0.017151],[0.010397,0.028786,0.013178],[0.010327,0.02848,0.013909],[0.012121,0.027151,0.023703],[0.011517,0.029016,0.015354],[0.010349,0.028862,0.012733],[0.010431,0.028635,0.013779],[0.011952,0.02745,0.020989],[0.040562,0.042591,0.060697],[0.039125,0.043259,0.055019],[0.039609,0.042827,0.057992],[0.055165,0.052018,0.073465]]},{"date":"201801170500","rgb":[[0.012462,0.027042,0.021439],[0.013085,0.026591,0.018006],[0.012611,0.026694,0.017493],[0.013844,0.027238,0.026896],[0.011237,0.02882,0.015253],[0.010464,0.02866,0.013857],[0.010294,0.028641,0.01333],[0.012652,0.027242,0.023456],[0.01131,0.028367,0.017728],[0.010452,0.028425,0.014493],[0.010537,0.027672,0.016977],[0.012466,0.02675,0.0251],[0.040885,0.042547,0.062556],[0.039585,0.042829,0.057793],[0.039863,0.042843,0.059427],[0.055323,0.052383,0.073555]]},{"date":"201801170510","rgb":[[0.012143,0.027431,0.018525],[0.012182,0.027647,0.012951],[0.012934,0.026479,0.016726],[0.014382,0.027272,0.024171],[0.010973,0.029113,0.013796],[0.010258,0.028907,0.010666],[0.010195,0.028711,0.01192],[0.013608,0.027878,0.021197],[0.011444,0.029136,0.015634],[0.010348,0.02893,0.01196],[0.010259,0.028497,0.013316],[0.012001,0.027866,0.02033],[0.040706,0.042747,0.060087],[0.039638,0.04346,0.055398],[0.039715,0.042494,0.057705],[0.055131,0.052188,0.072678]]},{"date":"201801170520","rgb":[[0.011946,0.026745,0.021297],[0.011927,0.027103,0.01539],[0.012624,0.026703,0.01672],[0.013635,0.026854,0.026043],[0.010686,0.028975,0.013248],[0.010204,0.028921,0.0099176],[0.010197,0.028845,0.011153],[0.011832,0.027625,0.021512],[0.011302,0.028697,0.016634],[0.010263,0.028915,0.01103],[0.010198,0.028826,0.011998],[0.011453,0.027717,0.020522],[0.040379,0.042431,0.06089],[0.039269,0.043173,0.055154],[0.039276,0.042971,0.055538],[0.053777,0.052383,0.071209]]},{"date":"201801170540","rgb":[[0.0118,0.027639,0.018998],[0.012102,0.026955,0.016599],[0.011673,0.026694,0.018227],[0.014158,0.027324,0.025298],[0.011197,0.028417,0.016169],[0.010282,0.028883,0.011896],[0.010286,0.028691,0.012821],[0.013423,0.026862,0.02454],[0.011915,0.028375,0.019346],[0.01033,0.028946,0.012647],[0.010365,0.028771,0.013243],[0.012089,0.027249,0.022965],[0.040945,0.041963,0.063249],[0.039539,0.04298,0.056848],[0.039699,0.043004,0.05689],[0.054706,0.052294,0.072848]]},{"date":"201801170600","rgb":[[0.012353,0.027486,0.019441],[0.012563,0.027034,0.016262],[0.012532,0.0271,0.016624],[0.014906,0.027169,0.025386],[0.011278,0.028585,0.016001],[0.010296,0.028818,0.012162],[0.010448,0.028721,0.013525],[0.013353,0.027424,0.023817],[0.011729,0.028227,0.019805],[0.010483,0.028951,0.012949],[0.010837,0.028005,0.016969],[0.012435,0.027256,0.024018],[0.041309,0.042302,0.063011],[0.039814,0.043363,0.056723],[0.03983,0.042718,0.059025],[0.055428,0.052362,0.073682]]},{"date":"201801170610","rgb":[[0.012053,0.026341,0.022455],[0.012534,0.026801,0.016817],[0.01156,0.026112,0.020093],[0.01324,0.026583,0.026173],[0.010807,0.027101,0.01963],[0.010309,0.028695,0.013195],[0.010279,0.028171,0.014228],[0.011652,0.02687,0.024215],[0.011608,0.027954,0.019795],[0.010414,0.028811,0.013525],[0.010336,0.028342,0.014597],[0.011586,0.026689,0.023773],[0.040523,0.041939,0.063094],[0.039544,0.042809,0.057845],[0.039417,0.042553,0.058617],[0.05436,0.052191,0.073492]]},{"date":"201801170620","rgb":[[0.013146,0.027008,0.02355],[0.013959,0.025755,0.020271],[0.012699,0.026308,0.021762],[0.014969,0.026724,0.028002],[0.011698,0.027053,0.024078],[0.010556,0.026153,0.021232],[0.010806,0.026512,0.021349],[0.012616,0.027338,0.025571],[0.012012,0.027028,0.023637],[0.010597,0.026294,0.021099],[0.011075,0.026633,0.021511],[0.012115,0.026868,0.023811],[0.040736,0.042108,0.062263],[0.039536,0.042832,0.05776],[0.039893,0.041631,0.060999],[0.054665,0.052636,0.072557]]},{"date":"201801170630","rgb":[[0.013222,0.026965,0.031346],[0.012859,0.026986,0.030147],[0.01244,0.027165,0.032007],[0.016201,0.027137,0.038826],[0.012252,0.027236,0.028222],[0.011795,0.026885,0.02688],[0.012218,0.027154,0.029829],[0.013686,0.027158,0.034147],[0.012542,0.027042,0.028156],[0.011911,0.027115,0.026649],[0.012352,0.027159,0.030362],[0.012553,0.027072,0.02785],[0.041618,0.041516,0.065853],[0.040429,0.041972,0.064151],[0.040932,0.041658,0.0676],[0.055803,0.052491,0.076212]]},{"date":"201801170640","rgb":[[0.041138,0.033713,0.2275],[0.033422,0.032618,0.17844],[0.029016,0.031865,0.1538],[0.030527,0.032923,0.15588],[0.051806,0.036635,0.3441],[0.045251,0.034027,0.26279],[0.038641,0.033712,0.20679],[0.029626,0.03189,0.14293],[0.079299,0.053875,0.50346],[0.058347,0.041068,0.39335],[0.045146,0.034808,0.27519],[0.019073,0.028753,0.068768],[0.065857,0.050883,0.22785],[0.071517,0.061362,0.26369],[0.058765,0.046642,0.19586],[0.059848,0.053522,0.10433]]},{"date":"201801170650","rgb":[[0.12184,0.16859,0.73383],[0.097783,0.14906,0.6488],[0.085159,0.11683,0.5854],[0.079268,0.07253,0.56222],[0.17901,0.28234,0.93213],[0.15163,0.23185,0.80591],[0.12659,0.18352,0.70469],[0.089381,0.10646,0.51618],[0.22538,0.43526,0.99452],[0.19941,0.33215,0.95772],[0.16985,0.24807,0.84651],[0.055461,0.060563,0.29063],[0.13711,0.21029,0.51831],[0.12439,0.17939,0.47544],[0.10917,0.13167,0.44012],[0.084282,0.059416,0.31763]]},{"date":"201801170710","rgb":[[0.39544,0.99853,0.99823],[0.37011,0.95657,0.99673],[0.36666,0.86421,0.99658],[0.34249,0.73608,0.99447],[0.62282,0.99909,0.99845],[0.44002,0.99182,0.99734],[0.38414,0.9004,0.9964],[0.30477,0.63123,0.92056],[0.88461,0.98935,0.99881],[0.64358,0.99636,0.99781],[0.45644,0.94869,0.99292],[0.22399,0.36763,0.81194],[0.50153,0.61152,0.91909],[0.50973,0.54397,0.79925],[0.44405,0.55474,0.80806],[0.28419,0.41119,0.90414]]},{"date":"201801170720","rgb":[[0.56819,0.99914,0.99851],[0.64832,0.99918,0.99882],[0.66373,0.99932,0.99793],[0.64736,0.99907,0.99871],[0.54536,0.99932,0.99852],[0.6118,0.99918,0.99892],[0.60965,0.99916,0.99891],[0.4544,0.81114,0.9533],[0.47055,0.999,0.99855],[0.47984,0.99589,0.99817],[0.52061,0.98244,0.99403],[0.24393,0.37224,0.84033],[0.25818,0.45887,0.8458],[0.30603,0.52949,0.83875],[0.29527,0.47102,0.86405],[0.2843,0.39563,0.91381]]},{"date":"201801170730","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99331,0.97758,0.99937],[0.84686,0.93586,0.99205],[0.99567,0.9766,1],[0.98907,0.9798,0.9964],[0.97149,0.98005,0.98588],[0.52588,0.8362,0.99065],[0.65931,0.90995,0.94227],[0.71835,0.90316,0.93399],[0.64772,0.82485,0.92692],[0.64627,0.89799,0.94131]]},{"date":"201801170740","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99239,0.97797,0.99908],[0.99608,0.97647,1],[0.99595,0.97651,1],[0.99091,0.97964,0.99446],[0.95945,0.98659,0.98753],[0.92904,0.90508,0.9501],[0.92281,0.9093,0.94293],[0.90067,0.91306,0.93856],[0.91949,0.91002,0.93088]]},{"date":"201801170750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93036,0.90438,0.95054],[0.92616,0.90619,0.95054],[0.92675,0.90422,0.94386]]},{"date":"201801170800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.90292,0.94389]]},{"date":"201801170820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92975,0.90291,0.94395]]},{"date":"201801170830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92976,0.90293,0.94397]]},{"date":"201801170840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92977,0.90294,0.9439]]},{"date":"201801170900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90291,0.94387]]},{"date":"201801170910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99466,0.97695,1],[0.99557,0.97665,1],[0.99608,0.97647,1],[0.99102,0.97818,1],[0.98481,0.98024,1],[0.98597,0.97986,1],[0.99318,0.97746,1],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92036,0.90642,0.94387]]},{"date":"201801170920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90289,0.94394]]},{"date":"201801170930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.90291,0.94396]]},{"date":"201801170940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.9029,0.94393]]},{"date":"201801170950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90289,0.94382]]},{"date":"201801171000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90287,0.94389]]},{"date":"201801171010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90286,0.94395]]},{"date":"201801171020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90287,0.94388]]},{"date":"201801171030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90287,0.94398]]},{"date":"201801171040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.90289,0.9439]]},{"date":"201801171050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92969,0.90284,0.94383]]},{"date":"201801171100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90286,0.94395]]},{"date":"201801171110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90286,0.94391]]},{"date":"201801171120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90286,0.94392]]},{"date":"201801171130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.90287,0.94393]]},{"date":"201801171150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99503,0.97683,1],[0.99576,0.97658,1],[0.99608,0.97647,1],[0.99174,0.97795,1],[0.98513,0.98013,1],[0.98641,0.97971,1],[0.99372,0.97725,1],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92045,0.90635,0.94385]]},{"date":"201801171200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90287,0.94388]]},{"date":"201801171210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92972,0.90285,0.94392]]},{"date":"201801171220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99534,0.97673,1],[0.99588,0.97653,1],[0.99608,0.97647,1],[0.99251,0.97769,1],[0.98552,0.98001,1],[0.98676,0.97959,1],[0.99417,0.97711,1],[0.92103,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92069,0.90631,0.94393]]},{"date":"201801171230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92975,0.90289,0.94397]]},{"date":"201801171250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90285,0.94383]]},{"date":"201801171300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90288,0.9439]]},{"date":"201801171310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.90288,0.94398]]},{"date":"201801171320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99414,0.97713,1],[0.99525,0.97676,1],[0.99608,0.97647,1],[0.99018,0.97846,1],[0.98458,0.98031,1],[0.98549,0.98002,1],[0.99248,0.9777,1],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92028,0.90644,0.94394]]},{"date":"201801171330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.90288,0.944]]},{"date":"201801171340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9955,0.97667,1],[0.99598,0.97651,1],[0.99608,0.97647,1],[0.99251,0.97769,1],[0.98552,0.98001,1],[0.98713,0.97947,1],[0.99436,0.97706,1],[0.92103,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92079,0.90631,0.94396]]},{"date":"201801171350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90286,0.94385]]},{"date":"201801171400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92974,0.90289,0.94391]]},{"date":"201801171410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99559,0.97663,1],[0.99598,0.97651,1],[0.99608,0.97647,1],[0.99273,0.9776,1],[0.98553,0.98001,1],[0.98712,0.97948,1],[0.99436,0.97706,1],[0.92107,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.9208,0.90631,0.94394]]},{"date":"201801171420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92975,0.90289,0.94396]]},{"date":"201801171430","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92977,0.90291,0.94399]]},{"date":"201801171440","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92976,0.90289,0.94398]]},{"date":"201801171450","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92973,0.90287,0.94386]]},{"date":"201801171500","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.9297,0.90285,0.94384]]},{"date":"201801171510","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90284,0.9439]]},{"date":"201801171520","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.9297,0.90284,0.94391]]},{"date":"201801171530","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92971,0.90285,0.94394]]},{"date":"201801171540","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99488,0.97689,1],[0.99608,0.97647,1],[0.99609,0.97645,1],[0.99188,0.97806,0.99936],[0.97995,0.98199,0.99836],[0.93026,0.90445,0.95054],[0.92418,0.90737,0.94871],[0.91993,0.91098,0.93983],[0.91954,0.90979,0.93178]]},{"date":"201801171550","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.95572,0.98035,0.99852],[0.99608,0.97647,1],[0.99526,0.97687,0.99962],[0.9882,0.98115,0.99205],[0.8805,0.98556,0.99366],[0.87659,0.91323,0.94624],[0.90856,0.9123,0.94147],[0.8834,0.91389,0.93899],[0.8852,0.90918,0.94261]]},{"date":"201801171600","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99538,0.97671,1],[0.99555,0.97678,0.99943],[0.85805,0.89016,0.98455],[0.99236,0.97772,1],[0.98546,0.98093,0.99657],[0.97627,0.97923,0.98569],[0.55295,0.72384,0.96539],[0.61913,0.71491,0.93709],[0.71603,0.76178,0.93149],[0.67346,0.72145,0.921],[0.74657,0.84155,0.93375]]},{"date":"201801171610","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99408,0.97716,1],[0.99437,0.97721,0.99937],[0.83997,0.86776,0.98375],[0.99018,0.97846,1],[0.98458,0.98129,0.99624],[0.97472,0.97825,0.9859],[0.47148,0.6567,0.96812],[0.54193,0.61369,0.93918],[0.64817,0.6979,0.93352],[0.6099,0.6642,0.92613],[0.59102,0.82224,0.9354]]},{"date":"201801171620","rgb":[[0.49703,0.99924,0.99874],[0.62022,0.9992,0.99834],[0.6863,0.99904,0.99811],[0.72406,0.99902,0.99795],[0.47201,0.99916,0.99905],[0.65784,0.9991,0.99828],[0.73547,0.99917,0.99807],[0.59757,0.80285,0.90908],[0.44737,0.99382,0.99865],[0.61605,0.9948,0.99806],[0.86506,0.98346,0.99012],[0.29411,0.30856,0.68831],[0.26457,0.39612,0.66648],[0.33084,0.48898,0.71819],[0.37013,0.43349,0.69733],[0.2752,0.33304,0.83713]]},{"date":"201801171630","rgb":[[0.30887,0.42194,0.99342],[0.25319,0.35621,0.99633],[0.26155,0.35775,0.99687],[0.28665,0.37553,0.9951],[0.31484,0.46279,0.99383],[0.2659,0.40825,0.99714],[0.27273,0.41376,0.99635],[0.25118,0.3725,0.83263],[0.31137,0.45052,0.99417],[0.29123,0.46314,0.99598],[0.32076,0.53255,0.98266],[0.10537,0.13999,0.38748],[0.15395,0.16879,0.48421],[0.19205,0.24125,0.55801],[0.19142,0.26219,0.51369],[0.14702,0.072492,0.46408]]},{"date":"201801171640","rgb":[[0.061949,0.039826,0.40605],[0.058757,0.041175,0.39029],[0.065262,0.04252,0.42333],[0.085002,0.049921,0.50244],[0.069335,0.04718,0.43231],[0.078958,0.077657,0.42821],[0.088139,0.09271,0.46647],[0.090189,0.089284,0.44158],[0.084597,0.066364,0.44869],[0.094988,0.10253,0.44177],[0.126,0.14146,0.52258],[0.039765,0.050079,0.15375],[0.06958,0.05836,0.22082],[0.081519,0.080836,0.26768],[0.086179,0.084227,0.26588],[0.06693,0.056072,0.15228]]},{"date":"201801171650","rgb":[[0.021217,0.029047,0.071964],[0.018728,0.028535,0.061112],[0.025442,0.029983,0.1021],[0.031412,0.03286,0.14354],[0.022939,0.029,0.085211],[0.022513,0.028765,0.087149],[0.024857,0.029049,0.10544],[0.027676,0.032369,0.12676],[0.024704,0.029301,0.095058],[0.024634,0.029046,0.10276],[0.025826,0.030008,0.10661],[0.016041,0.028308,0.049339],[0.044469,0.042605,0.085344],[0.045859,0.042831,0.095959],[0.046493,0.043093,0.096968],[0.057581,0.052349,0.081711]]},{"date":"201801171700","rgb":[[0.012713,0.027146,0.031334],[0.012179,0.027082,0.029141],[0.012511,0.027093,0.030053],[0.01558,0.027384,0.038981],[0.012486,0.027231,0.031252],[0.012007,0.027041,0.029502],[0.0123,0.027206,0.031493],[0.014888,0.027502,0.03827],[0.012862,0.027172,0.030658],[0.012315,0.027294,0.028728],[0.012649,0.027297,0.033066],[0.012057,0.027086,0.026878],[0.041782,0.041273,0.066297],[0.040628,0.041202,0.065984],[0.04036,0.041914,0.06564],[0.054308,0.051782,0.073045]]},{"date":"201801171710","rgb":[[0.012325,0.026871,0.023067],[0.011884,0.027107,0.017778],[0.012188,0.025775,0.022144],[0.013748,0.026805,0.029128],[0.011403,0.027083,0.021852],[0.010375,0.028091,0.015222],[0.010503,0.025933,0.021678],[0.012422,0.027371,0.026283],[0.012776,0.027869,0.02155],[0.010961,0.028501,0.015373],[0.011204,0.026835,0.021623],[0.012566,0.027291,0.023618],[0.041771,0.042583,0.061289],[0.039869,0.042414,0.059628],[0.040519,0.042245,0.060784],[0.055402,0.051913,0.071497]]},{"date":"201801171720","rgb":[[0.012501,0.026955,0.023019],[0.013413,0.026695,0.017216],[0.012345,0.026172,0.021273],[0.014709,0.026504,0.027715],[0.011444,0.027971,0.018962],[0.01035,0.028531,0.013518],[0.010288,0.027725,0.015614],[0.012149,0.027187,0.024655],[0.011925,0.027546,0.021849],[0.010567,0.028553,0.014797],[0.010822,0.027367,0.018909],[0.012179,0.02722,0.024491],[0.040903,0.041511,0.064283],[0.039519,0.04285,0.057258],[0.039853,0.041776,0.061602],[0.054483,0.051729,0.073077]]},{"date":"201801171730","rgb":[[0.011868,0.027431,0.02082],[0.013729,0.025836,0.019022],[0.011929,0.025987,0.021865],[0.015044,0.026672,0.02623],[0.010879,0.028665,0.015006],[0.010279,0.028442,0.013642],[0.010451,0.026256,0.020393],[0.012686,0.027319,0.024242],[0.011141,0.028835,0.01585],[0.01026,0.028887,0.012154],[0.01054,0.028164,0.015444],[0.012208,0.027186,0.021708],[0.040884,0.042458,0.060225],[0.039666,0.043253,0.056027],[0.040352,0.042285,0.059675],[0.055443,0.052137,0.070255]]},{"date":"201801171740","rgb":[[0.013033,0.027903,0.01557],[0.012962,0.026904,0.015215],[0.014159,0.026562,0.015836],[0.013865,0.027247,0.023371],[0.011113,0.028874,0.01392],[0.01025,0.02879,0.011625],[0.010344,0.028691,0.012704],[0.012228,0.027738,0.020672],[0.012374,0.028707,0.017489],[0.01053,0.029016,0.013325],[0.01084,0.02888,0.014564],[0.011863,0.027616,0.021285],[0.040985,0.043464,0.057069],[0.039634,0.043286,0.055752],[0.040376,0.043525,0.056975],[0.055113,0.05239,0.069111]]},{"date":"201801171750","rgb":[[0.012853,0.027892,0.015961],[0.013477,0.026959,0.01293],[0.013387,0.026577,0.01549],[0.015854,0.026678,0.023716],[0.010697,0.028936,0.013892],[0.010214,0.028866,0.010036],[0.01022,0.02879,0.011534],[0.012031,0.027989,0.020563],[0.01116,0.028956,0.014556],[0.010169,0.028914,0.010809],[0.010247,0.028833,0.012634],[0.01176,0.027925,0.018993],[0.041105,0.042981,0.058332],[0.039257,0.043411,0.053814],[0.039477,0.043562,0.05513],[0.055369,0.052335,0.068324]]},{"date":"201801171800","rgb":[[0.011832,0.028228,0.016297],[0.012516,0.027349,0.013799],[0.013598,0.026222,0.015887],[0.013351,0.027126,0.02371],[0.010564,0.029087,0.012411],[0.010174,0.02894,0.008664],[0.010204,0.028937,0.010519],[0.011217,0.027746,0.019247],[0.011047,0.028842,0.015076],[0.010172,0.028791,0.010895],[0.010172,0.028639,0.012289],[0.011602,0.027516,0.020797],[0.039815,0.043191,0.057467],[0.039056,0.043374,0.053793],[0.039118,0.043408,0.054531],[0.054791,0.052648,0.069133]]},{"date":"201801171810","rgb":[[0.013229,0.026766,0.016657],[0.014089,0.026051,0.014837],[0.0133,0.026587,0.014655],[0.01592,0.027395,0.022771],[0.010557,0.029016,0.013213],[0.010192,0.02881,0.0095129],[0.010157,0.028773,0.010368],[0.012046,0.028031,0.020343],[0.01086,0.028775,0.014277],[0.010185,0.028859,0.010184],[0.010147,0.028771,0.011806],[0.011545,0.027722,0.019594],[0.039999,0.04279,0.058112],[0.039149,0.043402,0.054035],[0.039295,0.043251,0.054568],[0.054533,0.052212,0.070333]]},{"date":"201801171820","rgb":[[0.012898,0.026216,0.021832],[0.013158,0.026446,0.016315],[0.012158,0.025978,0.020861],[0.015735,0.026836,0.026643],[0.010675,0.027211,0.018475],[0.010212,0.028624,0.012704],[0.010229,0.028474,0.013079],[0.013874,0.027406,0.023607],[0.010806,0.028017,0.017405],[0.010177,0.028748,0.012466],[0.01021,0.028526,0.013566],[0.012716,0.027072,0.023237],[0.040383,0.042679,0.05951],[0.039324,0.043356,0.054759],[0.039729,0.04276,0.0573],[0.054352,0.05275,0.071603]]},{"date":"201801171830","rgb":[[0.012332,0.027871,0.016668],[0.012323,0.027496,0.014186],[0.012695,0.026993,0.016658],[0.016915,0.026192,0.027788],[0.010771,0.029019,0.014027],[0.010205,0.028791,0.011544],[0.010222,0.028803,0.012125],[0.013538,0.027431,0.023421],[0.010882,0.028885,0.015089],[0.010269,0.028899,0.012325],[0.010229,0.028703,0.01293],[0.013485,0.027465,0.022891],[0.040309,0.042705,0.059538],[0.03918,0.043281,0.054952],[0.039435,0.042529,0.058419],[0.055046,0.052028,0.072566]]},{"date":"201801171840","rgb":[[0.012158,0.028099,0.016506],[0.01485,0.026201,0.013647],[0.012171,0.027315,0.01539],[0.014041,0.027055,0.023692],[0.010882,0.02897,0.013528],[0.010212,0.028866,0.010757],[0.010227,0.028754,0.011995],[0.012787,0.027269,0.022394],[0.010871,0.028917,0.014346],[0.010293,0.028918,0.011491],[0.01022,0.028758,0.012292],[0.012142,0.028222,0.018787],[0.04024,0.043309,0.057353],[0.039198,0.043396,0.054378],[0.039971,0.043036,0.057591],[0.055426,0.052716,0.069999]]},{"date":"201801171850","rgb":[[0.012201,0.027265,0.019496],[0.012436,0.026113,0.018888],[0.012236,0.027044,0.016839],[0.013725,0.027162,0.024952],[0.010747,0.028139,0.016428],[0.010255,0.028826,0.011217],[0.010217,0.028718,0.012154],[0.012256,0.0274,0.023122],[0.011055,0.028226,0.017793],[0.010296,0.028783,0.01253],[0.010286,0.028117,0.014486],[0.01213,0.027002,0.024811],[0.040202,0.042106,0.06268],[0.03954,0.042315,0.058936],[0.039764,0.042181,0.059825],[0.055952,0.052058,0.073879]]},{"date":"201801171900","rgb":[[0.01173,0.027884,0.018846],[0.011428,0.02638,0.018775],[0.012506,0.025677,0.020108],[0.013833,0.026936,0.025552],[0.010961,0.028366,0.016147],[0.010179,0.028526,0.012035],[0.010282,0.027666,0.015335],[0.012119,0.02727,0.02301],[0.010972,0.028543,0.01647],[0.010352,0.02881,0.012627],[0.010568,0.028383,0.015455],[0.012022,0.027527,0.022744],[0.040232,0.042571,0.060082],[0.039357,0.043392,0.055768],[0.039767,0.042411,0.058574],[0.055142,0.052197,0.072506]]},{"date":"201801171910","rgb":[[0.01186,0.027429,0.018059],[0.015585,0.025014,0.017025],[0.013182,0.025949,0.017588],[0.013365,0.027217,0.025834],[0.010651,0.028747,0.01357],[0.010208,0.028953,0.010784],[0.010208,0.02847,0.01266],[0.011813,0.02693,0.023549],[0.010771,0.028614,0.014731],[0.010205,0.028798,0.011716],[0.010322,0.028521,0.013842],[0.011899,0.026926,0.023176],[0.039998,0.042781,0.05922],[0.039264,0.043076,0.056062],[0.039672,0.042166,0.060026],[0.054387,0.052368,0.071775]]},{"date":"201801171920","rgb":[[0.011635,0.027423,0.018046],[0.014592,0.025847,0.015396],[0.013007,0.026286,0.016933],[0.013179,0.026701,0.025092],[0.010725,0.028144,0.016447],[0.010237,0.028799,0.012045],[0.010199,0.028578,0.013052],[0.011645,0.026633,0.024288],[0.010936,0.02856,0.015726],[0.010343,0.028966,0.012582],[0.010341,0.028603,0.013617],[0.011505,0.026788,0.023328],[0.039812,0.042845,0.058971],[0.039219,0.043459,0.055036],[0.039622,0.042762,0.05784],[0.05371,0.052255,0.071632]]},{"date":"201801171930","rgb":[[0.012018,0.027027,0.019222],[0.012968,0.025966,0.017766],[0.011174,0.026945,0.017649],[0.012915,0.0267,0.026206],[0.010655,0.027953,0.016738],[0.010217,0.028694,0.012365],[0.01025,0.028454,0.013168],[0.011642,0.026872,0.024006],[0.010804,0.028208,0.01644],[0.010248,0.028822,0.01255],[0.010326,0.028331,0.01443],[0.011472,0.027185,0.0224],[0.040533,0.042242,0.062311],[0.039467,0.042761,0.058037],[0.04005,0.04162,0.061914],[0.054448,0.052484,0.071714]]},{"date":"201801171940","rgb":[[0.014063,0.027196,0.024398],[0.012134,0.026842,0.021176],[0.015069,0.02655,0.018869],[0.016275,0.026735,0.027693],[0.011904,0.027561,0.021649],[0.010626,0.028695,0.014351],[0.010706,0.02854,0.015082],[0.013227,0.027468,0.025386],[0.011976,0.027443,0.022099],[0.010671,0.028745,0.014891],[0.010706,0.028583,0.015314],[0.012167,0.027056,0.024591],[0.04087,0.042668,0.059797],[0.039855,0.04336,0.056154],[0.039906,0.043303,0.056603],[0.055812,0.052178,0.071941]]},{"date":"201801171950","rgb":[[0.011991,0.028723,0.015221],[0.01654,0.025421,0.013932],[0.013785,0.026698,0.015192],[0.013463,0.028086,0.020861],[0.010897,0.029313,0.012767],[0.010221,0.028922,0.0096458],[0.010225,0.028828,0.012009],[0.012292,0.028294,0.01833],[0.011809,0.02907,0.014298],[0.01035,0.029016,0.011011],[0.010288,0.028872,0.012607],[0.012176,0.02837,0.018641],[0.040203,0.043399,0.057212],[0.03976,0.043517,0.055112],[0.039638,0.043463,0.05563],[0.055255,0.053049,0.067006]]},{"date":"201801172000","rgb":[[0.011682,0.028001,0.017136],[0.013412,0.025706,0.018438],[0.011515,0.025667,0.021157],[0.01321,0.026692,0.026353],[0.010705,0.028568,0.015021],[0.010227,0.028734,0.012543],[0.010191,0.027308,0.016075],[0.011982,0.027349,0.02292],[0.010901,0.028738,0.015837],[0.01024,0.028846,0.012036],[0.010179,0.028779,0.012419],[0.011939,0.027528,0.02124],[0.040032,0.042846,0.058975],[0.039129,0.043176,0.055408],[0.039496,0.042825,0.057007],[0.054389,0.052604,0.07154]]},{"date":"201801172010","rgb":[[0.012338,0.02813,0.01528],[0.011494,0.027702,0.014548],[0.012283,0.026674,0.016872],[0.013477,0.026863,0.024818],[0.010527,0.02889,0.013375],[0.010174,0.028789,0.010969],[0.010205,0.028762,0.011565],[0.011628,0.027719,0.020616],[0.010744,0.02888,0.013559],[0.01019,0.02885,0.011386],[0.010142,0.028715,0.01245],[0.011812,0.027799,0.019642],[0.039764,0.043274,0.05802],[0.039095,0.043307,0.054518],[0.039589,0.042898,0.057788],[0.054217,0.052178,0.070954]]},{"date":"201801172020","rgb":[[0.012104,0.02758,0.017416],[0.012435,0.027202,0.013552],[0.012962,0.026777,0.01581],[0.013123,0.027471,0.022298],[0.010681,0.029048,0.013835],[0.010214,0.028913,0.0098942],[0.010243,0.028827,0.011546],[0.012279,0.02811,0.019986],[0.011168,0.028847,0.015293],[0.010253,0.028984,0.011269],[0.010417,0.028696,0.01403],[0.012355,0.027396,0.022346],[0.040364,0.043317,0.057502],[0.039359,0.043388,0.054985],[0.03985,0.042641,0.058245],[0.054348,0.052778,0.070533]]},{"date":"201801172030","rgb":[[0.012839,0.027324,0.017295],[0.012992,0.026134,0.017707],[0.012216,0.02677,0.01642],[0.012741,0.027126,0.02444],[0.010588,0.028934,0.013283],[0.010221,0.028853,0.010587],[0.010154,0.028722,0.012386],[0.011656,0.027499,0.021879],[0.010885,0.028774,0.014896],[0.010221,0.028854,0.012178],[0.0102,0.028745,0.012382],[0.011958,0.027351,0.022016],[0.040055,0.042992,0.058535],[0.039118,0.043259,0.05513],[0.039545,0.042818,0.057401],[0.053732,0.05206,0.072822]]},{"date":"201801172040","rgb":[[0.013107,0.027775,0.017987],[0.01277,0.027128,0.01529],[0.011781,0.026704,0.01818],[0.013879,0.027317,0.025081],[0.010951,0.02867,0.015334],[0.010307,0.028972,0.010546],[0.010218,0.028631,0.011511],[0.012154,0.027923,0.020774],[0.011815,0.029104,0.016484],[0.010618,0.029158,0.012647],[0.010382,0.028979,0.012604],[0.011855,0.027781,0.020732],[0.040629,0.043138,0.058164],[0.039722,0.043643,0.054794],[0.039877,0.043486,0.055781],[0.054758,0.053014,0.068131]]},{"date":"201801172050","rgb":[[0.012202,0.027377,0.018661],[0.012111,0.026656,0.017328],[0.011372,0.027297,0.016342],[0.01363,0.027042,0.024675],[0.010921,0.028935,0.014707],[0.010225,0.028894,0.010606],[0.010169,0.02861,0.011627],[0.012294,0.02765,0.0208],[0.011386,0.028657,0.016681],[0.010228,0.02886,0.011389],[0.010261,0.028771,0.012579],[0.011513,0.027134,0.021852],[0.040167,0.042847,0.059477],[0.03929,0.043403,0.053978],[0.039422,0.043194,0.05582],[0.054358,0.052615,0.070367]]},{"date":"201801172100","rgb":[[0.012707,0.027751,0.015732],[0.011761,0.026932,0.016599],[0.013805,0.025856,0.017783],[0.01355,0.026962,0.022647],[0.010671,0.029049,0.013266],[0.010202,0.028872,0.010246],[0.010202,0.028815,0.012009],[0.011903,0.027609,0.021359],[0.010731,0.028748,0.014922],[0.010219,0.028891,0.011029],[0.010254,0.028822,0.01269],[0.011904,0.027758,0.020779],[0.040405,0.043339,0.057208],[0.039146,0.043337,0.054681],[0.039452,0.042969,0.055949],[0.054952,0.052572,0.069611]]},{"date":"201801172110","rgb":[[0.012359,0.027685,0.017285],[0.015254,0.024492,0.020626],[0.014517,0.024502,0.021407],[0.013693,0.026909,0.024417],[0.010775,0.029222,0.013554],[0.010215,0.028301,0.012455],[0.010222,0.027183,0.016902],[0.011805,0.02754,0.021205],[0.011024,0.02855,0.017091],[0.01034,0.028958,0.011627],[0.010327,0.028516,0.013197],[0.011769,0.027191,0.022678],[0.040106,0.042695,0.059434],[0.039477,0.043286,0.055037],[0.039522,0.043174,0.056161],[0.053931,0.052059,0.070739]]},{"date":"201801172120","rgb":[[0.012732,0.028071,0.01581],[0.013919,0.026342,0.014271],[0.015302,0.025561,0.015931],[0.013515,0.026894,0.023788],[0.010647,0.028945,0.012868],[0.010218,0.028866,0.010603],[0.010242,0.028799,0.012202],[0.011928,0.027839,0.021081],[0.010804,0.028831,0.014443],[0.010197,0.028813,0.011101],[0.010282,0.028849,0.012477],[0.011867,0.027571,0.020868],[0.040202,0.043146,0.05775],[0.039129,0.043326,0.055024],[0.039684,0.042627,0.057221],[0.054309,0.052163,0.070939]]},{"date":"201801172130","rgb":[[0.012189,0.027765,0.017238],[0.013503,0.027045,0.013982],[0.011394,0.026177,0.020125],[0.013656,0.02696,0.024624],[0.010941,0.028879,0.014611],[0.010301,0.028935,0.011876],[0.010244,0.028632,0.013245],[0.011829,0.027591,0.021997],[0.011148,0.029024,0.015183],[0.010396,0.029038,0.012191],[0.010309,0.028785,0.012404],[0.011785,0.027888,0.019502],[0.040194,0.043207,0.058348],[0.039582,0.043541,0.0546],[0.0396,0.043565,0.056167],[0.053661,0.052869,0.068534]]},{"date":"201801172140","rgb":[[0.013208,0.027156,0.01922],[0.014314,0.025821,0.016704],[0.011651,0.026235,0.01986],[0.014203,0.026901,0.026167],[0.011049,0.028311,0.016513],[0.010301,0.028901,0.012241],[0.010281,0.02866,0.012896],[0.012502,0.02772,0.022349],[0.011144,0.028523,0.0171],[0.010517,0.029052,0.012779],[0.010506,0.028908,0.013353],[0.011806,0.027327,0.021884],[0.040771,0.042137,0.06237],[0.039567,0.043135,0.05646],[0.039934,0.043023,0.057859],[0.054673,0.052122,0.072063]]},{"date":"201801172150","rgb":[[0.012127,0.028105,0.01679],[0.011546,0.027384,0.015146],[0.012933,0.026064,0.018895],[0.013747,0.027026,0.024465],[0.010876,0.028819,0.014292],[0.01022,0.028869,0.010673],[0.010233,0.028681,0.012436],[0.012266,0.027216,0.023484],[0.011496,0.029125,0.015957],[0.010592,0.029034,0.012192],[0.010348,0.028698,0.013168],[0.012014,0.027291,0.022872],[0.040181,0.043038,0.058452],[0.039396,0.043482,0.055739],[0.03948,0.043239,0.056396],[0.054418,0.05217,0.071538]]},{"date":"201801172200","rgb":[[0.011846,0.028007,0.01783],[0.013145,0.026429,0.016757],[0.013758,0.026242,0.017861],[0.013954,0.026962,0.025359],[0.011062,0.028681,0.016146],[0.010303,0.028887,0.012565],[0.010283,0.028396,0.014114],[0.012664,0.027583,0.023327],[0.011695,0.028496,0.018618],[0.01067,0.029092,0.013701],[0.010681,0.028262,0.015873],[0.012109,0.027131,0.023806],[0.040803,0.042359,0.060782],[0.039768,0.042671,0.058188],[0.040126,0.042188,0.06042],[0.055396,0.052115,0.071978]]},{"date":"201801172210","rgb":[[0.014076,0.027347,0.02513],[0.013465,0.027128,0.020901],[0.013377,0.027269,0.020653],[0.015889,0.027004,0.027604],[0.012358,0.027434,0.022608],[0.010742,0.027854,0.017202],[0.01094,0.026739,0.02095],[0.013459,0.027254,0.026452],[0.012211,0.027606,0.022948],[0.010838,0.028142,0.017137],[0.011031,0.027807,0.018585],[0.01202,0.02714,0.025124],[0.041409,0.042237,0.0619],[0.039904,0.042576,0.059543],[0.040243,0.041277,0.063747],[0.055253,0.051768,0.073424]]},{"date":"201801172220","rgb":[[0.012296,0.027816,0.017297],[0.014042,0.026479,0.015784],[0.014888,0.025437,0.017652],[0.013956,0.027555,0.022308],[0.01102,0.029068,0.014362],[0.010331,0.028899,0.011525],[0.010241,0.028722,0.012133],[0.01192,0.027832,0.02191],[0.011447,0.029032,0.016723],[0.010425,0.029039,0.012954],[0.010607,0.028258,0.016327],[0.012284,0.027611,0.021815],[0.040262,0.043057,0.058739],[0.039818,0.043426,0.05489],[0.039809,0.043181,0.057734],[0.054619,0.052405,0.069926]]},{"date":"201801172230","rgb":[[0.012286,0.028247,0.016829],[0.015459,0.02495,0.018289],[0.016657,0.025314,0.016619],[0.016988,0.027285,0.023848],[0.011019,0.029231,0.013998],[0.010272,0.028859,0.010949],[0.010289,0.028765,0.011863],[0.015481,0.027144,0.022943],[0.011528,0.028903,0.016754],[0.010609,0.029125,0.012947],[0.01047,0.028888,0.012976],[0.013068,0.027392,0.022141],[0.040541,0.042954,0.059238],[0.039503,0.043564,0.055192],[0.03958,0.043685,0.054819],[0.054695,0.052607,0.069442]]},{"date":"201801172240","rgb":[[0.012367,0.027552,0.018298],[0.014455,0.025411,0.018905],[0.012678,0.026678,0.016765],[0.013761,0.027101,0.024932],[0.010834,0.028939,0.01439],[0.010266,0.028885,0.011746],[0.01025,0.028796,0.011734],[0.011844,0.027885,0.020658],[0.01167,0.028613,0.018143],[0.010593,0.028912,0.013468],[0.010601,0.028742,0.014305],[0.011752,0.027435,0.021957],[0.040424,0.042285,0.061249],[0.039641,0.04315,0.057347],[0.039941,0.042258,0.059995],[0.05401,0.0523,0.071489]]},{"date":"201801172250","rgb":[[0.012353,0.027865,0.017053],[0.015606,0.025794,0.013425],[0.013479,0.026632,0.015594],[0.014224,0.0274,0.023316],[0.011379,0.029083,0.014919],[0.010351,0.029016,0.011872],[0.010302,0.028749,0.012017],[0.012744,0.02801,0.020981],[0.012098,0.02913,0.016796],[0.010704,0.029187,0.012893],[0.010666,0.028746,0.013975],[0.012377,0.027555,0.021786],[0.040681,0.042828,0.059683],[0.03986,0.043265,0.056708],[0.040047,0.043096,0.057603],[0.05444,0.052613,0.070112]]},{"date":"201801172300","rgb":[[0.013316,0.027529,0.01804],[0.012979,0.027237,0.014139],[0.013586,0.027207,0.015497],[0.017575,0.027188,0.024017],[0.011057,0.029258,0.013366],[0.01033,0.029007,0.010842],[0.010279,0.028893,0.011347],[0.014766,0.028133,0.020617],[0.012208,0.029236,0.015082],[0.010426,0.029071,0.012397],[0.010374,0.028969,0.012566],[0.012932,0.027999,0.020385],[0.040745,0.043487,0.057495],[0.039729,0.043537,0.055173],[0.039784,0.043652,0.055464],[0.054844,0.052786,0.068854]]},{"date":"201801172310","rgb":[[0.012588,0.027171,0.020691],[0.013033,0.026874,0.015414],[0.013474,0.026846,0.017012],[0.017665,0.026718,0.026239],[0.011332,0.028905,0.016298],[0.010366,0.028907,0.011745],[0.010384,0.028843,0.012825],[0.016178,0.027355,0.024137],[0.012568,0.028067,0.020604],[0.010559,0.028852,0.013904],[0.010833,0.028704,0.015469],[0.013696,0.027247,0.024803],[0.041357,0.042522,0.061195],[0.039799,0.043324,0.056925],[0.040112,0.042748,0.058881],[0.055242,0.051927,0.071756]]},{"date":"201801172320","rgb":[[0.012116,0.028198,0.016688],[0.012608,0.027019,0.015114],[0.012431,0.027156,0.016254],[0.015316,0.02754,0.023803],[0.01109,0.029167,0.014655],[0.01032,0.028944,0.010861],[0.010304,0.028882,0.011433],[0.014643,0.02795,0.020738],[0.012067,0.029145,0.015987],[0.010581,0.029043,0.012194],[0.010434,0.028841,0.012924],[0.012951,0.027323,0.022198],[0.041015,0.043453,0.057774],[0.039826,0.043729,0.055465],[0.039748,0.043747,0.055693],[0.054792,0.052942,0.068495]]},{"date":"201801172330","rgb":[[0.012328,0.026784,0.022285],[0.012738,0.026339,0.018463],[0.013676,0.025912,0.019359],[0.015285,0.026749,0.026475],[0.011217,0.027766,0.018627],[0.010361,0.028463,0.013799],[0.010382,0.028159,0.014649],[0.01329,0.027136,0.024601],[0.012717,0.027793,0.020732],[0.01085,0.028987,0.013755],[0.010703,0.028594,0.014749],[0.012703,0.027696,0.022502],[0.041096,0.042192,0.062141],[0.03977,0.042429,0.059221],[0.040203,0.043157,0.057721],[0.055079,0.052259,0.071268]]},{"date":"201801172340","rgb":[[0.012545,0.027802,0.018711],[0.015177,0.025877,0.014698],[0.013019,0.026374,0.017949],[0.015245,0.027412,0.024156],[0.011143,0.028608,0.016345],[0.010339,0.029007,0.010626],[0.010297,0.028863,0.011437],[0.012651,0.027598,0.022143],[0.01224,0.02881,0.017925],[0.010542,0.02913,0.012812],[0.010599,0.028896,0.013316],[0.012181,0.027234,0.022968],[0.041121,0.042958,0.060113],[0.039975,0.043784,0.055585],[0.040148,0.043377,0.056753],[0.054909,0.052441,0.070819]]},{"date":"201801172350","rgb":[[0.012568,0.028057,0.017752],[0.013671,0.026816,0.016035],[0.012195,0.027102,0.018455],[0.015857,0.026811,0.026522],[0.011468,0.029061,0.015783],[0.010342,0.028933,0.012156],[0.010314,0.028643,0.01284],[0.012605,0.027509,0.022972],[0.012067,0.028855,0.017447],[0.010573,0.029067,0.012489],[0.010488,0.028803,0.013768],[0.012181,0.027255,0.021885],[0.040982,0.043074,0.058463],[0.039936,0.043633,0.055022],[0.039895,0.043259,0.056362],[0.054601,0.052256,0.071597]]},{"date":"201801180000","rgb":[[0.013232,0.02735,0.019151],[0.012376,0.027007,0.016355],[0.012923,0.02649,0.017202],[0.014058,0.027023,0.025257],[0.010997,0.028913,0.014934],[0.010253,0.028835,0.011542],[0.010211,0.028614,0.01194],[0.012455,0.027577,0.021507],[0.01172,0.028764,0.017785],[0.0104,0.028969,0.013084],[0.010287,0.028765,0.012994],[0.01133,0.027098,0.022243],[0.040422,0.042734,0.060008],[0.039857,0.043375,0.05597],[0.039598,0.043392,0.056007],[0.054993,0.052642,0.07182]]},{"date":"201801180010","rgb":[[0.012475,0.028453,0.014379],[0.013962,0.026882,0.011549],[0.013342,0.027162,0.013942],[0.014463,0.027731,0.021681],[0.01118,0.029498,0.01288],[0.010336,0.029051,0.010147],[0.010282,0.028895,0.011515],[0.012258,0.028221,0.020361],[0.011702,0.029353,0.015816],[0.010625,0.029038,0.012352],[0.010432,0.028948,0.01232],[0.01219,0.027996,0.020691],[0.040875,0.043128,0.057786],[0.039705,0.043615,0.055574],[0.03993,0.043451,0.056156],[0.055498,0.052731,0.070947]]},{"date":"201801180020","rgb":[[0.012329,0.027452,0.019899],[0.012047,0.026759,0.017285],[0.012167,0.026523,0.01804],[0.013471,0.026905,0.024883],[0.010996,0.02858,0.016373],[0.01034,0.028975,0.012069],[0.010296,0.028392,0.013601],[0.012076,0.027525,0.022857],[0.011977,0.027843,0.019949],[0.010521,0.028997,0.0137],[0.010682,0.02848,0.015752],[0.01179,0.027161,0.023654],[0.041169,0.042224,0.061481],[0.039479,0.043375,0.05583],[0.039781,0.042875,0.058189],[0.054788,0.052604,0.071757]]},{"date":"201801180030","rgb":[[0.012846,0.027577,0.01838],[0.017343,0.024839,0.015066],[0.013063,0.026954,0.016097],[0.014078,0.027322,0.023557],[0.011018,0.028919,0.014705],[0.010323,0.028893,0.011934],[0.010239,0.028787,0.012123],[0.012148,0.028087,0.020625],[0.01191,0.028741,0.017245],[0.010427,0.029036,0.012622],[0.010489,0.028909,0.013236],[0.012024,0.02764,0.021453],[0.040834,0.042695,0.0595],[0.039706,0.042868,0.057287],[0.039713,0.042794,0.05769],[0.054731,0.053123,0.070184]]},{"date":"201801180040","rgb":[[0.012188,0.027339,0.019833],[0.012161,0.027128,0.015761],[0.011464,0.027427,0.016594],[0.014414,0.026597,0.026139],[0.01081,0.028418,0.015903],[0.010304,0.028881,0.012201],[0.010203,0.028715,0.011841],[0.011775,0.027476,0.022368],[0.01158,0.028643,0.017731],[0.010401,0.028833,0.013538],[0.010461,0.028811,0.014102],[0.012224,0.027268,0.022671],[0.040574,0.042687,0.059838],[0.039616,0.04326,0.055461],[0.039583,0.043068,0.056651],[0.054605,0.052959,0.071182]]},{"date":"201801180050","rgb":[[0.012641,0.027191,0.019921],[0.014315,0.026251,0.016297],[0.012749,0.026193,0.019517],[0.013834,0.027423,0.024462],[0.010848,0.028724,0.015014],[0.010291,0.028927,0.010793],[0.010231,0.028366,0.013059],[0.012145,0.027628,0.021792],[0.011577,0.028781,0.016514],[0.010467,0.029079,0.012243],[0.010441,0.028883,0.013254],[0.012267,0.027258,0.022011],[0.04123,0.043197,0.058363],[0.039647,0.043657,0.054856],[0.039735,0.043262,0.056642],[0.055122,0.052705,0.071368]]},{"date":"201801180100","rgb":[[0.012595,0.027533,0.018799],[0.013869,0.02665,0.014963],[0.013017,0.026669,0.017558],[0.014073,0.027002,0.025327],[0.011016,0.028721,0.015296],[0.010278,0.028879,0.011543],[0.010323,0.028739,0.01324],[0.01203,0.027485,0.022821],[0.011927,0.02882,0.016983],[0.010479,0.028995,0.012718],[0.010533,0.028294,0.015222],[0.011895,0.027522,0.022126],[0.0412,0.042762,0.059781],[0.039704,0.043245,0.055755],[0.039796,0.043009,0.058162],[0.055023,0.052438,0.072169]]},{"date":"201801180110","rgb":[[0.012464,0.027221,0.019403],[0.014333,0.026407,0.013758],[0.013758,0.026585,0.014557],[0.013142,0.02697,0.023988],[0.010886,0.028749,0.014816],[0.010359,0.028958,0.012167],[0.01026,0.028789,0.012194],[0.012301,0.027525,0.021035],[0.011684,0.028556,0.017664],[0.010366,0.028935,0.011633],[0.010468,0.028707,0.01367],[0.011924,0.02748,0.022132],[0.040587,0.042187,0.060707],[0.039332,0.043527,0.055262],[0.039455,0.043264,0.056431],[0.054772,0.052672,0.069697]]},{"date":"201801180120","rgb":[[0.013158,0.02729,0.018526],[0.014675,0.026419,0.013774],[0.014243,0.025619,0.018539],[0.014856,0.026818,0.025233],[0.011225,0.028413,0.016958],[0.010414,0.028956,0.01202],[0.010399,0.028354,0.014134],[0.012704,0.027373,0.023808],[0.011637,0.028126,0.019205],[0.010645,0.029001,0.01376],[0.010617,0.028359,0.015701],[0.011997,0.026951,0.023837],[0.041063,0.04267,0.060121],[0.039932,0.043184,0.056909],[0.040002,0.042133,0.061078],[0.055193,0.052315,0.071847]]},{"date":"201801180130","rgb":[[0.012,0.027874,0.01889],[0.011783,0.026957,0.01761],[0.013013,0.026761,0.01665],[0.014046,0.027301,0.025151],[0.011136,0.028883,0.014883],[0.010365,0.029011,0.011734],[0.010345,0.02874,0.012992],[0.01246,0.027528,0.022765],[0.011925,0.028637,0.017471],[0.010522,0.028972,0.012735],[0.01064,0.028703,0.01464],[0.012018,0.027342,0.022308],[0.040966,0.042534,0.0608],[0.03977,0.043357,0.056569],[0.039878,0.042738,0.058336],[0.055713,0.05247,0.070411]]},{"date":"201801180140","rgb":[[0.012326,0.028448,0.015941],[0.013445,0.025508,0.020114],[0.012472,0.02741,0.01508],[0.015313,0.027204,0.021581],[0.011038,0.029126,0.014377],[0.010312,0.02879,0.012014],[0.010306,0.028836,0.012298],[0.011974,0.028191,0.019283],[0.01143,0.02904,0.015226],[0.0104,0.029058,0.011683],[0.010372,0.028989,0.01234],[0.011602,0.028073,0.019477],[0.040697,0.043121,0.058321],[0.039417,0.043537,0.055269],[0.039665,0.043543,0.056017],[0.054846,0.053117,0.068073]]},{"date":"201801180150","rgb":[[0.012887,0.027586,0.018949],[0.011507,0.027069,0.017652],[0.013162,0.026048,0.019919],[0.013737,0.027114,0.025821],[0.010932,0.027601,0.018699],[0.010296,0.028769,0.013094],[0.010297,0.02764,0.015994],[0.012167,0.026895,0.02576],[0.011627,0.028715,0.016899],[0.010452,0.028918,0.013342],[0.010427,0.027949,0.015785],[0.012437,0.026936,0.023164],[0.040368,0.043297,0.058125],[0.03948,0.043477,0.055475],[0.039618,0.042801,0.057604],[0.055014,0.052658,0.070713]]},{"date":"201801180200","rgb":[[0.012833,0.028428,0.015568],[0.01213,0.027168,0.015653],[0.01212,0.027421,0.014835],[0.013998,0.027386,0.022753],[0.011008,0.029257,0.014189],[0.010257,0.028877,0.010392],[0.01021,0.028783,0.011448],[0.012056,0.027489,0.021225],[0.012318,0.02882,0.017099],[0.010409,0.028977,0.012801],[0.010305,0.028777,0.012789],[0.011814,0.027382,0.022295],[0.041042,0.043266,0.058161],[0.039483,0.043579,0.054801],[0.039696,0.043507,0.055719],[0.055569,0.05309,0.068529]]},{"date":"201801180210","rgb":[[0.012354,0.027394,0.020036],[0.01207,0.02724,0.016293],[0.013508,0.026575,0.016696],[0.014127,0.027178,0.024281],[0.01129,0.028912,0.015785],[0.010322,0.02881,0.012799],[0.010363,0.028839,0.012782],[0.01253,0.027262,0.023173],[0.012042,0.028588,0.017959],[0.010476,0.028914,0.013449],[0.010832,0.028397,0.015484],[0.012076,0.027388,0.022609],[0.040524,0.042888,0.059357],[0.039473,0.043375,0.055639],[0.039561,0.04216,0.060026],[0.055353,0.052643,0.070727]]},{"date":"201801180220","rgb":[[0.012103,0.028239,0.017363],[0.012184,0.027565,0.013762],[0.015279,0.024969,0.018026],[0.01337,0.027143,0.023262],[0.01097,0.029128,0.014647],[0.010256,0.028908,0.010828],[0.010242,0.028622,0.012337],[0.012089,0.027533,0.020544],[0.011272,0.028838,0.016516],[0.010348,0.029019,0.011931],[0.010295,0.028844,0.012293],[0.01211,0.027494,0.020431],[0.039973,0.042797,0.059047],[0.039131,0.043482,0.05403],[0.03942,0.043349,0.055845],[0.054242,0.053187,0.069535]]},{"date":"201801180230","rgb":[[0.012436,0.027348,0.020924],[0.012023,0.027418,0.016143],[0.013645,0.026676,0.01803],[0.014369,0.026912,0.027552],[0.010936,0.028425,0.01718],[0.010272,0.028845,0.011422],[0.010367,0.028455,0.013944],[0.012463,0.027152,0.024526],[0.01124,0.028513,0.016925],[0.010246,0.028871,0.012457],[0.010504,0.028457,0.014884],[0.012473,0.026883,0.025502],[0.040578,0.043119,0.059317],[0.039293,0.043307,0.055334],[0.039936,0.043205,0.057555],[0.055941,0.052245,0.07341]]},{"date":"201801180240","rgb":[[0.012581,0.027728,0.01892],[0.012249,0.027327,0.016011],[0.013135,0.026253,0.017524],[0.013898,0.026631,0.02624],[0.010911,0.029081,0.014406],[0.010274,0.028875,0.012123],[0.01017,0.028576,0.012305],[0.011904,0.027356,0.022203],[0.011051,0.02899,0.014736],[0.010298,0.028867,0.011881],[0.010214,0.02878,0.011894],[0.012005,0.027763,0.020742],[0.039996,0.043088,0.05827],[0.039161,0.043314,0.05466],[0.039405,0.042967,0.056226],[0.055037,0.052384,0.07186]]},{"date":"201801180250","rgb":[[0.01271,0.027367,0.020783],[0.015057,0.026318,0.015023],[0.013177,0.026333,0.018851],[0.014015,0.02703,0.025996],[0.011002,0.028534,0.016405],[0.010271,0.028781,0.011566],[0.01031,0.028478,0.013131],[0.01203,0.026952,0.02372],[0.010994,0.028356,0.016722],[0.010289,0.028899,0.012158],[0.010254,0.028801,0.012932],[0.011791,0.027147,0.023091],[0.040343,0.042504,0.061447],[0.039166,0.043464,0.054601],[0.039618,0.043076,0.056538],[0.055852,0.052212,0.072498]]},{"date":"201801180300","rgb":[[0.012947,0.027849,0.018022],[0.017824,0.023499,0.021502],[0.015632,0.024521,0.021457],[0.014282,0.027313,0.024174],[0.011083,0.028863,0.014744],[0.010273,0.027559,0.015101],[0.010265,0.028249,0.013473],[0.012124,0.028311,0.019498],[0.010965,0.0284,0.016069],[0.01021,0.028842,0.01152],[0.010172,0.028696,0.012501],[0.012024,0.027112,0.021837],[0.04024,0.04316,0.058577],[0.039089,0.043275,0.054886],[0.039353,0.043078,0.05563],[0.055058,0.052922,0.069975]]},{"date":"201801180310","rgb":[[0.012147,0.027265,0.019195],[0.01291,0.026166,0.018598],[0.011937,0.026875,0.017378],[0.013226,0.026877,0.026736],[0.010904,0.027931,0.017011],[0.010371,0.02868,0.012729],[0.010302,0.028107,0.014832],[0.012175,0.027281,0.024876],[0.011067,0.028465,0.016953],[0.010237,0.028773,0.01259],[0.010365,0.028286,0.014235],[0.012243,0.027052,0.024346],[0.039706,0.042573,0.058781],[0.039085,0.043295,0.054313],[0.039368,0.042797,0.056782],[0.054717,0.052559,0.072349]]},{"date":"201801180320","rgb":[[0.012285,0.028138,0.017304],[0.011526,0.027604,0.015526],[0.012077,0.027553,0.016513],[0.014139,0.02724,0.025985],[0.011096,0.028372,0.016286],[0.010272,0.028891,0.012274],[0.010352,0.028775,0.013018],[0.013313,0.027195,0.0249],[0.011153,0.028485,0.01677],[0.010276,0.028879,0.01215],[0.01046,0.028906,0.013095],[0.012252,0.027354,0.023199],[0.040216,0.042759,0.059676],[0.039135,0.04336,0.05475],[0.039718,0.043385,0.055577],[0.055808,0.052489,0.072096]]},{"date":"201801180330","rgb":[[0.012587,0.027014,0.022589],[0.012491,0.026835,0.018064],[0.012422,0.025973,0.021802],[0.014664,0.027,0.028377],[0.01143,0.028385,0.017616],[0.010342,0.028937,0.012425],[0.010297,0.027393,0.0163],[0.013195,0.02731,0.023687],[0.011548,0.027805,0.01891],[0.010364,0.028627,0.013894],[0.010384,0.028324,0.014906],[0.012717,0.026873,0.025683],[0.040391,0.042489,0.060744],[0.039257,0.043104,0.056033],[0.039726,0.042183,0.059296],[0.055717,0.052574,0.074545]]},{"date":"201801180340","rgb":[[0.012696,0.027492,0.019333],[0.01554,0.025943,0.014458],[0.014086,0.026709,0.014466],[0.014504,0.026912,0.024463],[0.010788,0.028676,0.014591],[0.010256,0.028965,0.0099222],[0.010246,0.028801,0.011632],[0.011522,0.027799,0.019821],[0.010802,0.028686,0.015061],[0.01023,0.028883,0.010691],[0.010185,0.028698,0.012153],[0.011545,0.027731,0.019953],[0.039668,0.042914,0.057275],[0.039001,0.043349,0.053908],[0.039272,0.043309,0.055341],[0.054428,0.053081,0.070996]]},{"date":"201801180350","rgb":[[0.014085,0.026906,0.021007],[0.015528,0.026238,0.01522],[0.014118,0.026337,0.016907],[0.015752,0.026687,0.025344],[0.011162,0.028475,0.016798],[0.010318,0.028626,0.012289],[0.010304,0.028622,0.012586],[0.012442,0.028031,0.020959],[0.011352,0.028542,0.016622],[0.010329,0.028979,0.011591],[0.010328,0.028875,0.012427],[0.012447,0.027866,0.02094],[0.040223,0.043291,0.058116],[0.039174,0.043466,0.054645],[0.039602,0.043092,0.056919],[0.05613,0.053117,0.069315]]},{"date":"201801180400","rgb":[[0.012899,0.027737,0.019723],[0.013956,0.026591,0.015324],[0.012284,0.026717,0.018514],[0.015156,0.026709,0.027933],[0.011326,0.027741,0.019477],[0.010379,0.028986,0.012498],[0.010358,0.028031,0.01519],[0.013173,0.027398,0.025105],[0.011328,0.028985,0.015296],[0.010263,0.028937,0.011778],[0.010246,0.028599,0.013184],[0.012427,0.027272,0.023379],[0.040072,0.042993,0.058727],[0.039042,0.043336,0.054217],[0.039557,0.04288,0.057241],[0.055082,0.052701,0.075171]]},{"date":"201801180410","rgb":[[0.014663,0.027839,0.019516],[0.012949,0.028217,0.015166],[0.013404,0.027563,0.018329],[0.016956,0.026598,0.026869],[0.011997,0.028575,0.018691],[0.0107,0.029107,0.013075],[0.01047,0.028787,0.013914],[0.013672,0.027534,0.023859],[0.011887,0.028973,0.016797],[0.010612,0.029157,0.013261],[0.010642,0.028939,0.013783],[0.013182,0.027355,0.023507],[0.040246,0.043194,0.059139],[0.039688,0.0434,0.054773],[0.039949,0.043499,0.056838],[0.056565,0.05287,0.070135]]},{"date":"201801180420","rgb":[[0.013027,0.027967,0.019161],[0.013495,0.026466,0.018268],[0.012903,0.026804,0.019323],[0.015292,0.026994,0.025749],[0.0116,0.027887,0.019698],[0.010565,0.028787,0.014196],[0.01049,0.027929,0.01611],[0.013055,0.027016,0.025337],[0.011494,0.028249,0.018035],[0.010552,0.02895,0.013295],[0.01057,0.028565,0.014772],[0.012157,0.026767,0.024473],[0.039985,0.042883,0.058187],[0.039301,0.043157,0.056417],[0.0397,0.042599,0.05777],[0.054824,0.052526,0.072509]]},{"date":"201801180430","rgb":[[0.012921,0.027765,0.018869],[0.011919,0.026789,0.01816],[0.014205,0.025914,0.019796],[0.014778,0.027266,0.025022],[0.011259,0.028635,0.016601],[0.010312,0.028818,0.012499],[0.010404,0.028604,0.013522],[0.012649,0.027433,0.023629],[0.011432,0.028523,0.01661],[0.010247,0.028882,0.012156],[0.010396,0.028614,0.013391],[0.011679,0.027726,0.020852],[0.040108,0.042793,0.058829],[0.039225,0.043213,0.05521],[0.039486,0.043345,0.055745],[0.055243,0.052722,0.072102]]},{"date":"201801180440","rgb":[[0.013669,0.027708,0.021256],[0.012996,0.027926,0.016219],[0.013872,0.027259,0.019791],[0.016584,0.026577,0.027035],[0.011923,0.027904,0.019348],[0.010654,0.02861,0.015086],[0.010827,0.028054,0.017057],[0.013737,0.027202,0.025513],[0.011688,0.028072,0.01874],[0.010486,0.028539,0.014176],[0.010816,0.027905,0.017332],[0.012645,0.027001,0.024825],[0.040049,0.042732,0.059288],[0.039404,0.043499,0.055283],[0.039897,0.042577,0.058589],[0.055863,0.052769,0.076187]]},{"date":"201801180450","rgb":[[0.0133,0.027171,0.021219],[0.015602,0.025457,0.015663],[0.013489,0.026143,0.016237],[0.013709,0.027102,0.022718],[0.010958,0.028312,0.015471],[0.010215,0.028897,0.010481],[0.010203,0.028803,0.011877],[0.011413,0.027363,0.021431],[0.010499,0.028816,0.013604],[0.010148,0.028875,0.010565],[0.010147,0.02858,0.012937],[0.011943,0.027505,0.022331],[0.039969,0.043018,0.059009],[0.039076,0.043335,0.054649],[0.039375,0.042963,0.057007],[0.054694,0.052854,0.071937]]},{"date":"201801180500","rgb":[[0.013038,0.02723,0.023482],[0.011889,0.026997,0.017218],[0.012677,0.025424,0.020489],[0.013381,0.026635,0.025183],[0.011337,0.027835,0.018741],[0.010211,0.028792,0.01079],[0.010238,0.028427,0.013155],[0.011712,0.026939,0.024039],[0.010735,0.028354,0.015402],[0.010216,0.028845,0.011465],[0.010242,0.028506,0.013216],[0.011779,0.027094,0.023999],[0.040259,0.042533,0.060847],[0.039278,0.043068,0.056467],[0.040025,0.042299,0.060304],[0.054495,0.052688,0.074095]]},{"date":"201801180510","rgb":[[0.013226,0.027274,0.022843],[0.011941,0.026802,0.017815],[0.012654,0.026502,0.017281],[0.012994,0.02698,0.026544],[0.010933,0.02808,0.016678],[0.010193,0.028778,0.011628],[0.010243,0.028002,0.014282],[0.011475,0.026609,0.023877],[0.010786,0.028575,0.015572],[0.010212,0.028778,0.012022],[0.010263,0.028447,0.013123],[0.011683,0.027126,0.024121],[0.040404,0.042616,0.061462],[0.039185,0.043045,0.056087],[0.039781,0.042044,0.060766],[0.054554,0.052377,0.073632]]},{"date":"201801180520","rgb":[[0.01329,0.027429,0.023724],[0.011956,0.027318,0.016134],[0.013003,0.026224,0.017001],[0.01275,0.026988,0.023597],[0.010967,0.028273,0.016015],[0.010207,0.028923,0.0099932],[0.010167,0.028704,0.011225],[0.011404,0.027412,0.020975],[0.010607,0.028482,0.015382],[0.010175,0.028854,0.011965],[0.010212,0.028628,0.012958],[0.011472,0.027333,0.022001],[0.040296,0.042785,0.059967],[0.03944,0.043219,0.055952],[0.039599,0.042722,0.058045],[0.054591,0.052764,0.071543]]},{"date":"201801180530","rgb":[[0.013087,0.027914,0.020256],[0.011725,0.027171,0.015667],[0.014436,0.025189,0.018556],[0.012854,0.027358,0.0219],[0.011124,0.0285,0.016188],[0.010178,0.02891,0.010568],[0.010158,0.028844,0.011406],[0.011288,0.027788,0.019845],[0.010705,0.028875,0.01418],[0.010192,0.028827,0.011208],[0.010258,0.028826,0.01151],[0.011969,0.027832,0.020069],[0.040263,0.043177,0.058059],[0.039161,0.043358,0.053699],[0.039397,0.042988,0.056433],[0.054497,0.05304,0.07005]]},{"date":"201801180540","rgb":[[0.014344,0.027226,0.023557],[0.013099,0.027014,0.014418],[0.012516,0.026583,0.016623],[0.013461,0.026793,0.025165],[0.011079,0.028425,0.016389],[0.010204,0.028872,0.011349],[0.01024,0.028775,0.01221],[0.011395,0.027382,0.022149],[0.01091,0.028388,0.016875],[0.010294,0.028867,0.012685],[0.010335,0.028218,0.014752],[0.011902,0.027183,0.024565],[0.040592,0.042843,0.060799],[0.039438,0.043321,0.056039],[0.039749,0.042614,0.058993],[0.054533,0.052647,0.073295]]},{"date":"201801180550","rgb":[[0.013362,0.027234,0.026054],[0.012088,0.026762,0.018315],[0.012068,0.026027,0.020047],[0.014221,0.026816,0.027142],[0.011187,0.027537,0.018121],[0.010187,0.028791,0.012119],[0.010226,0.02857,0.01298],[0.012171,0.027217,0.023286],[0.010681,0.028385,0.016018],[0.010189,0.02876,0.012557],[0.010293,0.028476,0.013918],[0.012399,0.027148,0.024839],[0.040512,0.042264,0.061921],[0.039394,0.043108,0.057001],[0.039871,0.04229,0.059907],[0.055122,0.052673,0.073867]]},{"date":"201801180600","rgb":[[0.013824,0.028362,0.019193],[0.014491,0.02644,0.014029],[0.012732,0.027251,0.013386],[0.013531,0.027734,0.02076],[0.010924,0.028909,0.01372],[0.010208,0.028908,0.0094177],[0.010248,0.028885,0.010684],[0.011817,0.028194,0.018745],[0.010612,0.028958,0.012581],[0.010212,0.028963,0.0096518],[0.01033,0.028798,0.010517],[0.012636,0.028305,0.018321],[0.040823,0.043135,0.058646],[0.0394,0.043352,0.053221],[0.039527,0.043509,0.054804],[0.055121,0.053415,0.069293]]},{"date":"201801180610","rgb":[[0.014943,0.026788,0.02566],[0.012178,0.02705,0.016811],[0.013354,0.02662,0.015931],[0.013294,0.027062,0.023863],[0.011269,0.028408,0.016304],[0.010156,0.028758,0.011106],[0.010196,0.028583,0.011834],[0.011895,0.027797,0.020523],[0.010714,0.028713,0.015417],[0.010178,0.028778,0.012207],[0.010381,0.028094,0.014789],[0.012093,0.027318,0.022456],[0.041069,0.042259,0.062378],[0.039354,0.043224,0.055581],[0.039906,0.042227,0.05973],[0.055456,0.052549,0.072601]]},{"date":"201801180620","rgb":[[0.012617,0.027325,0.023197],[0.012943,0.027481,0.013686],[0.015152,0.025651,0.016579],[0.014504,0.026978,0.024312],[0.011027,0.028013,0.017284],[0.010179,0.028847,0.009306],[0.010208,0.028795,0.011183],[0.013072,0.02823,0.019089],[0.010778,0.028537,0.015595],[0.010231,0.028945,0.011002],[0.010269,0.028552,0.012742],[0.012543,0.027719,0.022675],[0.040572,0.043071,0.060536],[0.039385,0.043248,0.055465],[0.040028,0.043177,0.057038],[0.056158,0.052982,0.070013]]},{"date":"201801180630","rgb":[[0.013531,0.027303,0.024582],[0.01189,0.027317,0.014541],[0.011673,0.026953,0.016082],[0.013283,0.026853,0.023522],[0.010878,0.028406,0.01585],[0.01019,0.028906,0.010259],[0.010177,0.02879,0.011405],[0.011649,0.028107,0.019116],[0.010693,0.028633,0.014878],[0.010128,0.028818,0.010294],[0.010217,0.028821,0.01164],[0.011786,0.02739,0.021892],[0.040318,0.042804,0.060745],[0.03925,0.043347,0.054982],[0.039596,0.042609,0.057629],[0.054945,0.052555,0.072371]]},{"date":"201801180640","rgb":[[0.018542,0.028679,0.056635],[0.011617,0.027388,0.019408],[0.011267,0.027735,0.015798],[0.013461,0.026959,0.027219],[0.012032,0.026975,0.02649],[0.010266,0.027556,0.015489],[0.010317,0.027792,0.015289],[0.012074,0.027076,0.025015],[0.011134,0.027793,0.020214],[0.010355,0.028474,0.013446],[0.01066,0.027278,0.019013],[0.012642,0.027087,0.026071],[0.040944,0.042466,0.063978],[0.039872,0.041828,0.060801],[0.040253,0.041503,0.063919],[0.054732,0.052746,0.075283]]},{"date":"201801180650","rgb":[[0.042044,0.03449,0.27145],[0.013977,0.02731,0.041535],[0.012172,0.026631,0.027003],[0.01428,0.027485,0.036354],[0.017425,0.028157,0.069512],[0.012148,0.026955,0.031906],[0.011983,0.026966,0.03032],[0.013359,0.027192,0.034189],[0.013795,0.027322,0.038432],[0.012621,0.027043,0.03291],[0.015615,0.027377,0.048159],[0.014307,0.027583,0.040152],[0.045278,0.042748,0.09361],[0.044618,0.042221,0.091068],[0.045733,0.042442,0.095844],[0.059149,0.053838,0.097714]]},{"date":"201801180700","rgb":[[0.10708,0.085372,0.62643],[0.02461,0.031867,0.11172],[0.018005,0.028063,0.060384],[0.024087,0.029469,0.088576],[0.035135,0.036632,0.18651],[0.024371,0.02985,0.10763],[0.021797,0.029023,0.087425],[0.02212,0.02931,0.083887],[0.025996,0.030656,0.11721],[0.024951,0.030472,0.11182],[0.035539,0.03281,0.18072],[0.025551,0.03074,0.10943],[0.063603,0.045921,0.22759],[0.064363,0.046808,0.22729],[0.063723,0.046722,0.22397],[0.071478,0.057217,0.18929]]},{"date":"201801180710","rgb":[[0.48735,0.90632,0.98424],[0.12383,0.17893,0.56887],[0.08089,0.066563,0.43939],[0.10003,0.058144,0.5112],[0.19928,0.31013,0.69645],[0.12737,0.15889,0.58707],[0.12175,0.13622,0.5269],[0.10242,0.08044,0.49767],[0.12959,0.14703,0.61041],[0.13014,0.16143,0.58545],[0.16557,0.20603,0.72087],[0.12755,0.11243,0.54423],[0.19176,0.22891,0.74614],[0.21041,0.25983,0.83115],[0.19515,0.22413,0.77867],[0.19169,0.16725,0.67457]]},{"date":"201801180720","rgb":[[0.39959,0.89599,0.98564],[0.15035,0.24054,0.67088],[0.12245,0.14788,0.55893],[0.14982,0.15356,0.63994],[0.19363,0.34391,0.74711],[0.1805,0.27683,0.76069],[0.18093,0.24822,0.70841],[0.14825,0.16611,0.63556],[0.18352,0.27778,0.767],[0.17512,0.27423,0.72289],[0.22894,0.36403,0.90092],[0.19401,0.23709,0.73895],[0.25203,0.39197,0.8243],[0.2476,0.38146,0.88498],[0.24568,0.36722,0.89165],[0.25425,0.31103,0.82106]]},{"date":"201801180730","rgb":[[0.86555,0.93729,0.99499],[0.2376,0.34581,0.80862],[0.17449,0.21942,0.71806],[0.19556,0.20159,0.77479],[0.31503,0.46282,0.8825],[0.23606,0.38736,0.89112],[0.22582,0.33315,0.85247],[0.18802,0.21631,0.75094],[0.25876,0.44124,0.89671],[0.23869,0.40693,0.82213],[0.29364,0.51782,0.9391],[0.23806,0.31529,0.85431],[0.32881,0.6394,0.8942],[0.32265,0.59827,0.9159],[0.30969,0.543,0.90964],[0.29759,0.39714,0.86564]]},{"date":"201801180740","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99324,0.97731,0.99975],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.81575,0.91369,0.94339],[0.88762,0.91178,0.94723],[0.89616,0.90921,0.9463],[0.90475,0.90923,0.93939]]},{"date":"201801180750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9175,0.90749,0.9504],[0.92795,0.90542,0.95047],[0.92836,0.90554,0.95052],[0.92633,0.90461,0.9434]]},{"date":"201801180800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92774,0.90497,0.9503],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92977,0.90297,0.94384]]},{"date":"201801180810","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92726,0.90506,0.95039],[0.93031,0.90437,0.95054],[0.93038,0.90433,0.95054],[0.92978,0.90296,0.94389]]},{"date":"201801180820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99485,0.97691,1],[0.99557,0.97665,1],[0.99608,0.97647,1],[0.99096,0.9782,1],[0.98481,0.98024,1],[0.98595,0.97987,1],[0.99318,0.97746,1],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92102,0.90789,0.95054],[0.92041,0.9065,0.94386]]},{"date":"201801180830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92978,0.90297,0.94392]]},{"date":"201801180840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.93038,0.90433,0.95054],[0.92979,0.90299,0.94384]]}]

/***/ }),
/* 38 */
/***/ (function(module, exports) {

module.exports = [{"date":"201712152020","rgb":[[0.012601,0.027813,0.015274],[0.01589,0.025557,0.013815],[0.012015,0.027113,0.015018],[0.012803,0.027589,0.020791],[0.011362,0.028859,0.013929],[0.010477,0.028845,0.011591],[0.010519,0.028733,0.012266],[0.012618,0.02746,0.021682],[0.011299,0.029031,0.013814],[0.010484,0.028872,0.011921],[0.010473,0.028801,0.012349],[0.012797,0.02745,0.021918],[0.038554,0.043277,0.05766],[0.037147,0.043389,0.054519],[0.037359,0.043083,0.056181],[0.052695,0.052136,0.069572]]},{"date":"201712152030","rgb":[[0.012721,0.027115,0.01869],[0.01471,0.026205,0.014182],[0.012419,0.02615,0.018504],[0.012827,0.027037,0.024363],[0.010827,0.027503,0.017568],[0.010411,0.028636,0.012555],[0.010468,0.028628,0.012507],[0.011691,0.027244,0.022373],[0.011007,0.028055,0.016669],[0.010362,0.028699,0.012192],[0.010509,0.028407,0.013889],[0.012094,0.027055,0.024599],[0.03868,0.042878,0.060079],[0.036946,0.042947,0.056082],[0.037408,0.042772,0.057873],[0.052208,0.051715,0.072754]]},{"date":"201712152040","rgb":[[0.013565,0.027697,0.014687],[0.014908,0.025778,0.01575],[0.016403,0.024834,0.016139],[0.014067,0.027279,0.021663],[0.010923,0.028965,0.013271],[0.010412,0.02886,0.010053],[0.010381,0.028598,0.011215],[0.012685,0.027554,0.02082],[0.010949,0.029042,0.01355],[0.010369,0.028858,0.010332],[0.010477,0.028865,0.011791],[0.012994,0.028177,0.019738],[0.038549,0.043232,0.057606],[0.036821,0.043486,0.055125],[0.037601,0.043126,0.056954],[0.052585,0.0521,0.070466]]},{"date":"201712152050","rgb":[[0.012062,0.028223,0.015513],[0.014055,0.026236,0.014574],[0.012504,0.027164,0.014667],[0.014278,0.026703,0.023786],[0.010839,0.028961,0.012744],[0.010447,0.028854,0.011398],[0.010438,0.02876,0.0118],[0.012138,0.027795,0.020645],[0.010826,0.028526,0.014507],[0.010464,0.028848,0.011575],[0.010443,0.028406,0.013289],[0.012582,0.026906,0.023237],[0.038197,0.042903,0.05861],[0.036768,0.043115,0.05484],[0.03733,0.042898,0.056819],[0.05267,0.051825,0.070207]]},{"date":"201712152100","rgb":[[0.011989,0.02784,0.016114],[0.01398,0.025636,0.017265],[0.013967,0.024965,0.020073],[0.014077,0.026491,0.023476],[0.010875,0.029032,0.014276],[0.010397,0.02877,0.0106],[0.010388,0.028332,0.01281],[0.011962,0.027687,0.020293],[0.011122,0.029051,0.013897],[0.010407,0.028808,0.012078],[0.010393,0.028656,0.012787],[0.011965,0.027071,0.022932],[0.038013,0.043189,0.05883],[0.036859,0.043155,0.05505],[0.037463,0.042901,0.057036],[0.052189,0.051824,0.071053]]},{"date":"201712152110","rgb":[[0.012496,0.02782,0.015347],[0.013751,0.026655,0.013159],[0.012738,0.026915,0.014983],[0.013334,0.02722,0.021957],[0.011101,0.028924,0.013945],[0.010486,0.02885,0.010942],[0.010436,0.028724,0.011643],[0.012081,0.027712,0.020909],[0.010944,0.028984,0.013788],[0.010375,0.028717,0.011962],[0.010395,0.028715,0.01225],[0.012728,0.027341,0.021921],[0.038334,0.04277,0.059037],[0.037015,0.043239,0.055374],[0.037385,0.042798,0.056987],[0.052166,0.051635,0.071262]]},{"date":"201712152120","rgb":[[0.012315,0.027429,0.017825],[0.016402,0.025226,0.013173],[0.013562,0.0268,0.012994],[0.012734,0.027276,0.021909],[0.0109,0.028869,0.014052],[0.010402,0.028817,0.010613],[0.010338,0.028686,0.010744],[0.012286,0.027733,0.020657],[0.010905,0.028435,0.015233],[0.01041,0.028798,0.011675],[0.010429,0.028687,0.011819],[0.012099,0.027415,0.021851],[0.037746,0.043493,0.05756],[0.036883,0.043196,0.054078],[0.036985,0.043368,0.054827],[0.051693,0.051784,0.070317]]},{"date":"201712152130","rgb":[[0.012212,0.027871,0.016504],[0.013258,0.026264,0.016505],[0.013787,0.025585,0.018603],[0.013678,0.027188,0.022131],[0.010909,0.028744,0.014492],[0.010428,0.028667,0.01214],[0.010428,0.028451,0.013274],[0.012747,0.027087,0.023518],[0.010969,0.028544,0.015162],[0.010452,0.028885,0.011544],[0.010451,0.02846,0.013415],[0.013371,0.026961,0.02493],[0.037898,0.042612,0.059568],[0.036854,0.043173,0.055445],[0.037301,0.042491,0.057949],[0.051898,0.051632,0.072277]]},{"date":"201712152140","rgb":[[0.01189,0.027995,0.015549],[0.013122,0.026495,0.015849],[0.012529,0.026812,0.015226],[0.013583,0.027349,0.021847],[0.010613,0.028702,0.01305],[0.010406,0.028799,0.0098181],[0.010378,0.028799,0.010408],[0.012409,0.027573,0.020699],[0.01069,0.028861,0.012922],[0.01037,0.028851,0.0098384],[0.010295,0.028695,0.010982],[0.012298,0.027737,0.020447],[0.03792,0.043093,0.057851],[0.036942,0.043198,0.053982],[0.037282,0.043208,0.055032],[0.052641,0.052185,0.070091]]},{"date":"201712152150","rgb":[[0.012826,0.027574,0.014647],[0.014167,0.026587,0.011586],[0.012431,0.026907,0.01481],[0.012983,0.027384,0.02001],[0.010729,0.028769,0.012089],[0.010378,0.028809,0.0090626],[0.010372,0.028803,0.010063],[0.011986,0.028462,0.017366],[0.010798,0.028915,0.012712],[0.010337,0.02888,0.0084782],[0.010348,0.028788,0.011242],[0.012015,0.027857,0.019273],[0.037772,0.043251,0.055703],[0.036631,0.043201,0.053248],[0.037006,0.043111,0.054277],[0.051833,0.052281,0.068415]]},{"date":"201712152200","rgb":[[0.012033,0.026828,0.020735],[0.011411,0.025961,0.019769],[0.011933,0.025616,0.020396],[0.013786,0.026625,0.024814],[0.010748,0.02846,0.014056],[0.010383,0.028372,0.011703],[0.010389,0.028143,0.013285],[0.011355,0.027533,0.019756],[0.010931,0.028558,0.014371],[0.01035,0.028786,0.011392],[0.010338,0.028695,0.01247],[0.011914,0.027733,0.020228],[0.037835,0.043175,0.058108],[0.03693,0.043129,0.054705],[0.037246,0.043122,0.0552],[0.052441,0.05221,0.069428]]},{"date":"201712152210","rgb":[[0.012233,0.028034,0.014289],[0.014012,0.026538,0.012331],[0.016504,0.024999,0.014488],[0.013352,0.027496,0.019694],[0.010677,0.028984,0.012101],[0.010395,0.028828,0.0089209],[0.010421,0.028769,0.010878],[0.011568,0.02774,0.01827],[0.010794,0.02891,0.012447],[0.010399,0.028897,0.0094664],[0.010359,0.028769,0.010986],[0.011658,0.027719,0.018583],[0.037567,0.04289,0.057541],[0.036716,0.04309,0.053878],[0.036951,0.04312,0.055567],[0.050764,0.05221,0.068406]]},{"date":"201712152220","rgb":[[0.011901,0.028063,0.015927],[0.015361,0.025473,0.015486],[0.013596,0.026015,0.017189],[0.01383,0.0271,0.021406],[0.010771,0.028956,0.012707],[0.010395,0.028814,0.010402],[0.01044,0.028815,0.011485],[0.012419,0.027649,0.020763],[0.010795,0.028876,0.013571],[0.010374,0.028775,0.01134],[0.010378,0.028574,0.012809],[0.0121,0.02735,0.02317],[0.037888,0.043574,0.056015],[0.036635,0.04325,0.053949],[0.037379,0.043279,0.05567],[0.052812,0.051807,0.069834]]},{"date":"201712152230","rgb":[[0.012107,0.027865,0.015393],[0.014122,0.025705,0.017093],[0.016135,0.025203,0.014422],[0.013645,0.027196,0.023273],[0.010762,0.028908,0.012645],[0.010372,0.028795,0.010611],[0.010426,0.028766,0.01157],[0.012012,0.027035,0.023071],[0.010716,0.028932,0.013044],[0.010332,0.028896,0.0099246],[0.010375,0.028713,0.012089],[0.01232,0.027368,0.021626],[0.037474,0.042953,0.056769],[0.036717,0.04322,0.054243],[0.036949,0.042904,0.055669],[0.05184,0.05172,0.071452]]},{"date":"201712152240","rgb":[[0.012258,0.027883,0.014789],[0.012715,0.027248,0.012046],[0.012591,0.026859,0.014975],[0.012844,0.026975,0.021583],[0.010642,0.028881,0.012307],[0.010338,0.028761,0.0090373],[0.010349,0.028722,0.011265],[0.011534,0.027783,0.018706],[0.010681,0.02895,0.012463],[0.010339,0.028851,0.0089251],[0.010323,0.028705,0.010367],[0.011925,0.027866,0.018972],[0.037665,0.043023,0.056943],[0.036698,0.043057,0.053768],[0.036996,0.043116,0.055113],[0.051479,0.052005,0.068953]]},{"date":"201712152250","rgb":[[0.012747,0.027496,0.01699],[0.01245,0.027396,0.013165],[0.013201,0.026918,0.013255],[0.013471,0.027315,0.02264],[0.010712,0.028989,0.012935],[0.010404,0.028874,0.0096178],[0.010345,0.028775,0.010169],[0.011783,0.027463,0.020576],[0.010965,0.028922,0.013519],[0.010382,0.028884,0.01015],[0.010355,0.02875,0.01186],[0.012652,0.027435,0.022816],[0.038545,0.042849,0.058923],[0.036786,0.043362,0.054368],[0.037344,0.043311,0.054597],[0.052624,0.051977,0.071522]]},{"date":"201712152300","rgb":[[0.012103,0.028472,0.013829],[0.013063,0.027336,0.012289],[0.013242,0.026536,0.014866],[0.013493,0.027147,0.021411],[0.010806,0.029021,0.012687],[0.01035,0.02878,0.0091804],[0.010374,0.028814,0.0097781],[0.01217,0.027817,0.01842],[0.010768,0.0291,0.012916],[0.010388,0.028846,0.010278],[0.010387,0.028806,0.011151],[0.011839,0.02785,0.01986],[0.03781,0.043422,0.055849],[0.036403,0.043264,0.053205],[0.036678,0.043278,0.054664],[0.051562,0.052689,0.067291]]},{"date":"201712152310","rgb":[[0.01279,0.027184,0.017198],[0.013175,0.026785,0.014171],[0.013422,0.026385,0.015861],[0.013269,0.027054,0.022816],[0.011096,0.028594,0.014636],[0.010421,0.028693,0.011483],[0.010404,0.028519,0.0123],[0.012102,0.027027,0.022073],[0.011243,0.0289,0.014256],[0.010417,0.028729,0.012556],[0.010434,0.028556,0.013372],[0.012885,0.02693,0.023565],[0.03828,0.042418,0.060234],[0.036943,0.043297,0.05554],[0.037343,0.042518,0.057873],[0.051904,0.051852,0.071266]]},{"date":"201712152320","rgb":[[0.012296,0.027569,0.015088],[0.01229,0.026547,0.016558],[0.013095,0.02661,0.014676],[0.012688,0.027232,0.021332],[0.010785,0.028868,0.012895],[0.01035,0.02876,0.0097132],[0.01038,0.028755,0.011422],[0.012059,0.028023,0.018736],[0.010939,0.028726,0.013437],[0.010346,0.028833,0.010611],[0.010351,0.028775,0.011513],[0.012019,0.027548,0.020948],[0.037872,0.042887,0.057685],[0.036623,0.043313,0.054008],[0.036992,0.043123,0.055387],[0.052008,0.052193,0.068999]]},{"date":"201712152330","rgb":[[0.011595,0.027949,0.016296],[0.014027,0.026402,0.014376],[0.012557,0.026087,0.018397],[0.013614,0.026693,0.024041],[0.010656,0.028984,0.01164],[0.010337,0.028799,0.0087822],[0.010391,0.028678,0.010633],[0.012139,0.027463,0.019652],[0.01078,0.028915,0.012785],[0.010356,0.02878,0.010476],[0.010312,0.028589,0.012021],[0.012323,0.027477,0.022073],[0.038112,0.043316,0.056372],[0.036698,0.043372,0.053646],[0.037076,0.042973,0.055575],[0.052977,0.05231,0.068943]]},{"date":"201712152340","rgb":[[0.0113,0.027771,0.016729],[0.012643,0.026862,0.015174],[0.012255,0.026603,0.016892],[0.012667,0.027407,0.022203],[0.010987,0.028585,0.014698],[0.010464,0.028822,0.011613],[0.010445,0.028687,0.012161],[0.012725,0.027779,0.020354],[0.01097,0.02842,0.015135],[0.010368,0.028754,0.011511],[0.01042,0.028777,0.012205],[0.012904,0.027657,0.021305],[0.038017,0.042152,0.06106],[0.037096,0.043207,0.055879],[0.037562,0.043148,0.056738],[0.05282,0.051727,0.072329]]},{"date":"201712152350","rgb":[[0.012509,0.02688,0.019369],[0.013471,0.026718,0.013573],[0.012988,0.027093,0.014648],[0.013838,0.027254,0.022258],[0.011054,0.02898,0.014299],[0.010395,0.028719,0.010876],[0.010367,0.028654,0.012089],[0.012142,0.02786,0.020135],[0.010939,0.028492,0.015008],[0.010432,0.028887,0.010792],[0.010401,0.028687,0.012221],[0.012642,0.027676,0.021419],[0.038276,0.042937,0.059651],[0.036886,0.043155,0.05479],[0.037042,0.043252,0.055431],[0.052135,0.051929,0.071289]]},{"date":"201712160000","rgb":[[0.012853,0.027701,0.014386],[0.016834,0.024983,0.013999],[0.012621,0.026261,0.016251],[0.013206,0.027226,0.020713],[0.010807,0.028862,0.012687],[0.010367,0.028784,0.009584],[0.010391,0.028825,0.010492],[0.012052,0.028277,0.017178],[0.010851,0.028944,0.013142],[0.010373,0.028856,0.0096704],[0.010352,0.028819,0.0099534],[0.011928,0.028474,0.017233],[0.038023,0.043028,0.05707],[0.036677,0.043213,0.053752],[0.037056,0.043262,0.054768],[0.051948,0.052495,0.068477]]},{"date":"201712160010","rgb":[[0.011997,0.02793,0.015624],[0.013479,0.026684,0.013832],[0.012636,0.026741,0.015859],[0.013105,0.026613,0.024104],[0.010803,0.028654,0.013926],[0.010399,0.02878,0.01071],[0.010416,0.028661,0.011981],[0.012322,0.027189,0.023039],[0.010978,0.028656,0.014989],[0.010356,0.028753,0.012206],[0.010341,0.028332,0.013345],[0.012587,0.026861,0.024913],[0.038041,0.042971,0.058836],[0.036909,0.042984,0.0552],[0.037243,0.0428,0.056778],[0.051889,0.051478,0.072729]]},{"date":"201712160020","rgb":[[0.012606,0.02725,0.016897],[0.012518,0.027289,0.013534],[0.014048,0.026143,0.015343],[0.013467,0.026622,0.021924],[0.010798,0.028573,0.01392],[0.010377,0.028795,0.010477],[0.010396,0.028763,0.011787],[0.011747,0.02762,0.019504],[0.010759,0.028686,0.013933],[0.01039,0.028798,0.011469],[0.01038,0.028727,0.012312],[0.012107,0.027547,0.020956],[0.037405,0.043159,0.057382],[0.036691,0.043078,0.05462],[0.037194,0.042924,0.056003],[0.051937,0.052242,0.070537]]},{"date":"201712160030","rgb":[[0.012472,0.027946,0.015416],[0.01768,0.024231,0.015604],[0.01787,0.024174,0.015752],[0.014835,0.026798,0.022949],[0.010929,0.028862,0.013977],[0.010389,0.028768,0.010642],[0.010385,0.028719,0.011552],[0.012742,0.027362,0.022666],[0.010756,0.029039,0.01329],[0.010362,0.028787,0.011718],[0.010408,0.028734,0.012521],[0.012675,0.027126,0.023482],[0.037968,0.043051,0.057986],[0.036802,0.043287,0.054845],[0.037254,0.043164,0.055333],[0.053046,0.052135,0.071902]]},{"date":"201712160040","rgb":[[0.012009,0.027601,0.018259],[0.013747,0.025796,0.018132],[0.013224,0.025096,0.020502],[0.013029,0.026844,0.024565],[0.010828,0.028814,0.01345],[0.010421,0.028706,0.011421],[0.010395,0.028105,0.013694],[0.012072,0.027449,0.020499],[0.010978,0.028696,0.014353],[0.010401,0.028807,0.01164],[0.010408,0.028679,0.012755],[0.012386,0.027625,0.021325],[0.038054,0.042199,0.060559],[0.03653,0.042948,0.055896],[0.037225,0.042441,0.057718],[0.052705,0.052019,0.072174]]},{"date":"201712160050","rgb":[[0.012037,0.027853,0.016156],[0.012271,0.025875,0.018606],[0.01343,0.025927,0.017558],[0.012993,0.027833,0.020718],[0.010893,0.02884,0.01345],[0.010378,0.028772,0.010286],[0.01037,0.028726,0.0107],[0.012183,0.027515,0.020614],[0.010793,0.028977,0.013067],[0.010354,0.028828,0.010618],[0.010417,0.028825,0.011614],[0.011847,0.027298,0.020842],[0.037774,0.04316,0.057982],[0.036665,0.04305,0.054379],[0.036829,0.042941,0.055277],[0.051898,0.05241,0.068802]]},{"date":"201712160100","rgb":[[0.012002,0.027858,0.016314],[0.01539,0.025285,0.016123],[0.013503,0.025977,0.016799],[0.013531,0.026507,0.024792],[0.010891,0.028723,0.014287],[0.010375,0.028715,0.011495],[0.010428,0.028592,0.012378],[0.012323,0.027278,0.022091],[0.010968,0.028707,0.014495],[0.010456,0.028912,0.011161],[0.010527,0.02871,0.013091],[0.012562,0.026847,0.023453],[0.037908,0.042945,0.0594],[0.036766,0.043137,0.055037],[0.037083,0.042545,0.058063],[0.051781,0.051748,0.072773]]},{"date":"201712160110","rgb":[[0.012426,0.027758,0.017158],[0.016844,0.02489,0.014439],[0.015761,0.02539,0.015128],[0.013691,0.026982,0.022952],[0.010928,0.028464,0.015002],[0.010414,0.028717,0.01118],[0.010484,0.028754,0.012414],[0.012771,0.027384,0.021579],[0.010783,0.028274,0.015421],[0.010369,0.02872,0.011971],[0.010398,0.028293,0.013866],[0.011987,0.026827,0.02346],[0.038029,0.042192,0.060928],[0.036831,0.043132,0.055466],[0.037242,0.042777,0.057488],[0.051665,0.051876,0.071569]]},{"date":"201712160120","rgb":[[0.012186,0.027471,0.017116],[0.012547,0.025632,0.019393],[0.014248,0.02581,0.016594],[0.013088,0.027158,0.021535],[0.010746,0.029007,0.013412],[0.010357,0.028695,0.0098072],[0.010386,0.028738,0.011628],[0.012219,0.027646,0.019404],[0.01079,0.028829,0.013348],[0.01039,0.028846,0.010819],[0.010353,0.028476,0.012924],[0.011651,0.027684,0.020171],[0.038173,0.043148,0.058405],[0.036834,0.043207,0.054401],[0.037173,0.043021,0.056288],[0.05113,0.052158,0.068811]]},{"date":"201712160130","rgb":[[0.01187,0.027468,0.017738],[0.013922,0.02488,0.020062],[0.013017,0.025022,0.021163],[0.012685,0.026718,0.02511],[0.010745,0.028723,0.014132],[0.010426,0.028338,0.012595],[0.010429,0.025837,0.020507],[0.012307,0.026807,0.02353],[0.011017,0.028396,0.015879],[0.010374,0.02877,0.011373],[0.010421,0.02817,0.014077],[0.012552,0.026934,0.024774],[0.03796,0.041928,0.062265],[0.036764,0.043111,0.055054],[0.037334,0.042586,0.057819],[0.052139,0.051569,0.072924]]},{"date":"201712160140","rgb":[[0.012896,0.027262,0.01703],[0.013651,0.026198,0.015777],[0.016944,0.024047,0.017701],[0.013321,0.026252,0.024887],[0.010682,0.028759,0.012682],[0.010373,0.028859,0.0098471],[0.010399,0.028484,0.01192],[0.011703,0.026675,0.021625],[0.010864,0.028609,0.013389],[0.010421,0.02881,0.01105],[0.010307,0.028642,0.011728],[0.01154,0.026953,0.022563],[0.037472,0.042606,0.059003],[0.036636,0.042881,0.055211],[0.037035,0.042715,0.056937],[0.050646,0.051977,0.071412]]},{"date":"201712160150","rgb":[[0.013367,0.02719,0.015666],[0.016302,0.025001,0.014543],[0.013323,0.025415,0.019299],[0.013424,0.027308,0.021582],[0.010674,0.028786,0.012565],[0.010342,0.028765,0.0094691],[0.010353,0.02874,0.01106],[0.011792,0.027683,0.019332],[0.010756,0.028778,0.013803],[0.010355,0.028838,0.010661],[0.010338,0.028674,0.011827],[0.011703,0.02781,0.018815],[0.037896,0.04272,0.057356],[0.036556,0.043173,0.054095],[0.036868,0.043058,0.054851],[0.051102,0.052311,0.069042]]},{"date":"201712160200","rgb":[[0.012311,0.026866,0.019551],[0.016261,0.025097,0.016535],[0.01363,0.024944,0.020923],[0.013625,0.02715,0.023617],[0.010881,0.02866,0.014711],[0.010393,0.028721,0.011147],[0.010367,0.02681,0.017216],[0.012474,0.026814,0.023533],[0.011018,0.028719,0.01461],[0.01043,0.028891,0.011913],[0.010427,0.028441,0.012842],[0.012834,0.026858,0.023132],[0.03783,0.042162,0.060722],[0.037105,0.043218,0.054572],[0.037379,0.042874,0.05647],[0.051907,0.052053,0.070764]]},{"date":"201712160210","rgb":[[0.01175,0.02789,0.016286],[0.013873,0.026419,0.013908],[0.012394,0.026651,0.015427],[0.012725,0.02686,0.023154],[0.010624,0.028909,0.012565],[0.010384,0.028805,0.010847],[0.01035,0.028693,0.010837],[0.011545,0.027763,0.019135],[0.010689,0.029036,0.012604],[0.010365,0.02882,0.010388],[0.010329,0.028733,0.010976],[0.011955,0.027878,0.018589],[0.037467,0.04313,0.056103],[0.036576,0.043079,0.053337],[0.036781,0.042972,0.054306],[0.050955,0.052524,0.067347]]},{"date":"201712160220","rgb":[[0.012653,0.027737,0.015229],[0.013933,0.025512,0.018416],[0.016062,0.023891,0.020798],[0.013497,0.02693,0.023762],[0.01075,0.028737,0.013788],[0.010378,0.028724,0.011241],[0.010347,0.027652,0.014829],[0.011841,0.026532,0.023786],[0.010678,0.028907,0.01312],[0.010341,0.02884,0.010678],[0.010329,0.028667,0.011798],[0.011822,0.027568,0.020703],[0.037259,0.042953,0.057904],[0.036488,0.043145,0.054045],[0.036851,0.043002,0.055113],[0.051358,0.05209,0.070952]]},{"date":"201712160230","rgb":[[0.011947,0.027236,0.019425],[0.013546,0.026688,0.013884],[0.012285,0.026879,0.016474],[0.012509,0.026935,0.023977],[0.010917,0.028707,0.014227],[0.010429,0.028824,0.011388],[0.010387,0.02869,0.011781],[0.011959,0.027623,0.020131],[0.010915,0.028906,0.013661],[0.010351,0.028867,0.010423],[0.010397,0.028699,0.01276],[0.012147,0.027608,0.020405],[0.037688,0.042451,0.059788],[0.036441,0.043152,0.054182],[0.036833,0.042765,0.056805],[0.05168,0.051843,0.071285]]},{"date":"201712160240","rgb":[[0.011979,0.028179,0.014999],[0.014002,0.026526,0.013041],[0.013806,0.025588,0.017758],[0.012804,0.027396,0.020733],[0.010759,0.028942,0.012703],[0.010408,0.028806,0.010522],[0.010386,0.028686,0.012235],[0.011739,0.028039,0.018132],[0.010741,0.028993,0.012199],[0.010349,0.028773,0.010144],[0.010339,0.028758,0.010846],[0.011888,0.027732,0.019232],[0.037929,0.043139,0.057585],[0.036538,0.043177,0.054241],[0.037039,0.043205,0.055452],[0.051956,0.052177,0.070006]]},{"date":"201712160250","rgb":[[0.012552,0.027596,0.014813],[0.014767,0.025446,0.015935],[0.013049,0.025229,0.020522],[0.013194,0.027,0.022504],[0.010632,0.028881,0.012422],[0.010367,0.028875,0.0084237],[0.010403,0.028523,0.011878],[0.01176,0.027847,0.019546],[0.010721,0.028923,0.012113],[0.010374,0.028905,0.010344],[0.010367,0.028753,0.01167],[0.011703,0.027295,0.02137],[0.038236,0.04315,0.056796],[0.036743,0.043291,0.053796],[0.037015,0.042762,0.056213],[0.052033,0.05228,0.069666]]},{"date":"201712160300","rgb":[[0.012111,0.028104,0.015268],[0.012285,0.026805,0.016123],[0.013463,0.026435,0.016079],[0.013851,0.02717,0.023805],[0.010952,0.028788,0.014305],[0.010428,0.028786,0.011521],[0.010434,0.028615,0.012794],[0.012577,0.027309,0.022719],[0.011105,0.029026,0.014248],[0.010364,0.028745,0.011804],[0.010415,0.028654,0.011851],[0.012917,0.027211,0.022869],[0.038052,0.042732,0.060083],[0.036892,0.043227,0.055365],[0.037245,0.042836,0.058079],[0.052295,0.052091,0.073277]]},{"date":"201712160310","rgb":[[0.012564,0.026332,0.01965],[0.014301,0.02482,0.019939],[0.013557,0.025434,0.018971],[0.014186,0.027035,0.022464],[0.010892,0.028942,0.013523],[0.010442,0.028551,0.011865],[0.010393,0.028492,0.012051],[0.012354,0.027374,0.022427],[0.0109,0.028995,0.01334],[0.010451,0.028873,0.011029],[0.010409,0.028638,0.012039],[0.012977,0.027463,0.021769],[0.038157,0.042777,0.058971],[0.036849,0.043288,0.054376],[0.037329,0.043061,0.056667],[0.052511,0.052064,0.071164]]},{"date":"201712160320","rgb":[[0.0123,0.027092,0.018531],[0.014508,0.026025,0.013729],[0.012585,0.027137,0.014755],[0.012727,0.026626,0.024209],[0.011029,0.028119,0.016053],[0.010369,0.028734,0.011492],[0.010433,0.028656,0.012885],[0.011983,0.026991,0.023097],[0.010938,0.028105,0.016674],[0.010347,0.028793,0.010937],[0.010416,0.028617,0.012533],[0.012197,0.026975,0.024062],[0.038336,0.042455,0.06136],[0.036652,0.043049,0.054801],[0.037203,0.042226,0.058961],[0.051596,0.051876,0.072337]]},{"date":"201712160330","rgb":[[0.012717,0.026981,0.017827],[0.01414,0.025079,0.018739],[0.012838,0.025955,0.017715],[0.013219,0.02698,0.02406],[0.010906,0.028665,0.014424],[0.010446,0.028668,0.012043],[0.010407,0.028649,0.011969],[0.012012,0.027432,0.020311],[0.010917,0.028576,0.014789],[0.010407,0.028783,0.012056],[0.010454,0.028526,0.012957],[0.012683,0.027186,0.022923],[0.037565,0.042834,0.05887],[0.036827,0.043182,0.055297],[0.037049,0.043036,0.056769],[0.052475,0.052339,0.070768]]},{"date":"201712160340","rgb":[[0.012198,0.027565,0.016354],[0.013278,0.026443,0.015727],[0.012449,0.025158,0.021402],[0.013962,0.026439,0.024089],[0.010946,0.028825,0.013599],[0.010412,0.028768,0.01077],[0.010402,0.027486,0.014889],[0.011834,0.027241,0.021789],[0.010936,0.028939,0.01391],[0.010401,0.028865,0.011061],[0.010351,0.028695,0.01142],[0.012575,0.027614,0.021552],[0.037816,0.042903,0.059068],[0.036754,0.04327,0.054449],[0.037303,0.042751,0.056511],[0.051814,0.052225,0.070701]]},{"date":"201712160350","rgb":[[0.012988,0.027394,0.015583],[0.015016,0.025896,0.01354],[0.014369,0.02609,0.015205],[0.013153,0.026956,0.020188],[0.010808,0.028925,0.013233],[0.010378,0.028821,0.010036],[0.010421,0.028811,0.01134],[0.01185,0.027958,0.018433],[0.010726,0.028988,0.013014],[0.010329,0.028792,0.010391],[0.010316,0.02874,0.011311],[0.01162,0.028058,0.018789],[0.037522,0.043326,0.056461],[0.036664,0.043137,0.053899],[0.036766,0.043109,0.054455],[0.051344,0.052564,0.068722]]},{"date":"201712160400","rgb":[[0.012096,0.027435,0.017734],[0.013836,0.026436,0.01561],[0.013745,0.026222,0.01572],[0.012838,0.027769,0.020706],[0.010876,0.028696,0.013724],[0.010413,0.028817,0.010921],[0.0104,0.028719,0.011308],[0.011658,0.02801,0.018731],[0.01088,0.029021,0.013087],[0.010366,0.02878,0.010875],[0.010392,0.028823,0.011666],[0.011685,0.027464,0.020941],[0.037727,0.042692,0.059313],[0.036509,0.043155,0.054472],[0.037045,0.043195,0.055702],[0.051708,0.052348,0.070516]]},{"date":"201712160410","rgb":[[0.012211,0.028099,0.015869],[0.013708,0.026222,0.015859],[0.017503,0.024358,0.014602],[0.01399,0.026789,0.022183],[0.010856,0.028913,0.013584],[0.010426,0.028857,0.010274],[0.010402,0.028745,0.01128],[0.011939,0.0278,0.019161],[0.010923,0.028974,0.012892],[0.010367,0.028808,0.011535],[0.01038,0.0288,0.011708],[0.011789,0.027635,0.019866],[0.038073,0.043098,0.058151],[0.036622,0.04327,0.055384],[0.036977,0.043239,0.055397],[0.051827,0.052839,0.067885]]},{"date":"201712160420","rgb":[[0.013147,0.02759,0.01369],[0.016656,0.025146,0.013927],[0.016058,0.024021,0.020172],[0.012742,0.0272,0.02013],[0.010764,0.029038,0.011782],[0.010383,0.028842,0.009127],[0.010382,0.028791,0.0098441],[0.011398,0.028702,0.015312],[0.010861,0.029023,0.012906],[0.010381,0.028768,0.010584],[0.010427,0.028836,0.011016],[0.011648,0.028153,0.018406],[0.037852,0.043406,0.056],[0.036841,0.043262,0.054938],[0.036903,0.043297,0.054588],[0.052101,0.052756,0.066111]]},{"date":"201712160430","rgb":[[0.01235,0.027864,0.014459],[0.01688,0.024905,0.013818],[0.013359,0.026712,0.014112],[0.012623,0.027697,0.019149],[0.010792,0.028683,0.013874],[0.010422,0.028866,0.010105],[0.010416,0.028762,0.011218],[0.011685,0.028097,0.017992],[0.0109,0.029074,0.013733],[0.010352,0.028814,0.010166],[0.01041,0.028787,0.011597],[0.011864,0.027799,0.019963],[0.037663,0.042631,0.059094],[0.036685,0.043254,0.054648],[0.03691,0.042832,0.056243],[0.052308,0.052056,0.0698]]},{"date":"201712160440","rgb":[[0.01213,0.027749,0.016593],[0.013132,0.025118,0.020959],[0.013617,0.025708,0.018948],[0.013562,0.026608,0.024443],[0.010821,0.028969,0.013432],[0.010356,0.027901,0.013521],[0.010367,0.028459,0.012259],[0.011955,0.027366,0.021054],[0.010998,0.029113,0.014152],[0.010442,0.028824,0.011737],[0.010418,0.028608,0.012593],[0.012132,0.026973,0.024056],[0.038128,0.042523,0.060007],[0.036936,0.042589,0.056804],[0.037111,0.042475,0.058597],[0.052492,0.051507,0.073448]]},{"date":"201712160450","rgb":[[0.012079,0.027762,0.016207],[0.016269,0.02538,0.013051],[0.015555,0.025239,0.016523],[0.012995,0.027408,0.019776],[0.010787,0.028933,0.012845],[0.010357,0.028731,0.01055],[0.010387,0.02875,0.011103],[0.011319,0.027739,0.01771],[0.01091,0.028862,0.013461],[0.010392,0.028809,0.011061],[0.010386,0.028781,0.011832],[0.011717,0.028012,0.019041],[0.038003,0.04286,0.058202],[0.036725,0.043124,0.054367],[0.036821,0.04298,0.055707],[0.051392,0.052492,0.069329]]},{"date":"201712160500","rgb":[[0.012398,0.027565,0.017577],[0.013539,0.026765,0.014266],[0.012412,0.027031,0.014804],[0.013558,0.027117,0.022286],[0.011012,0.028419,0.015618],[0.01042,0.028814,0.010894],[0.01047,0.028711,0.012547],[0.012109,0.027656,0.020794],[0.011052,0.028628,0.015361],[0.010369,0.028792,0.01132],[0.010399,0.02872,0.012262],[0.012314,0.027308,0.021252],[0.038191,0.043029,0.05809],[0.036795,0.043036,0.055203],[0.037162,0.0429,0.057],[0.052484,0.052474,0.070017]]},{"date":"201712160510","rgb":[[0.012307,0.028043,0.014508],[0.016888,0.024569,0.016724],[0.01352,0.026719,0.013547],[0.013096,0.026807,0.02372],[0.010722,0.029019,0.011473],[0.010421,0.028873,0.0090882],[0.010374,0.028798,0.010099],[0.011501,0.027502,0.020054],[0.010666,0.028987,0.012041],[0.010372,0.028799,0.010521],[0.010302,0.02867,0.011125],[0.012017,0.027555,0.019526],[0.037549,0.043332,0.056222],[0.036538,0.043301,0.054274],[0.03675,0.043171,0.056196],[0.051774,0.051906,0.07057]]},{"date":"201712160520","rgb":[[0.01238,0.027792,0.014781],[0.013556,0.025826,0.016791],[0.014236,0.025071,0.019052],[0.012561,0.02735,0.019846],[0.010623,0.028946,0.012227],[0.010427,0.028769,0.010035],[0.010404,0.02875,0.011045],[0.011599,0.028284,0.015817],[0.010743,0.028784,0.013479],[0.010369,0.028857,0.009952],[0.01042,0.028782,0.01143],[0.012165,0.028116,0.018516],[0.037641,0.042549,0.059173],[0.03654,0.043092,0.055392],[0.036805,0.042841,0.056656],[0.051621,0.051667,0.0713]]},{"date":"201712160530","rgb":[[0.011668,0.027848,0.017181],[0.015296,0.025709,0.013918],[0.014196,0.026099,0.014974],[0.013213,0.026838,0.022955],[0.010753,0.028809,0.012954],[0.010399,0.028787,0.010379],[0.010328,0.028794,0.010846],[0.011818,0.027542,0.020374],[0.01086,0.02878,0.013413],[0.01034,0.028797,0.010371],[0.010414,0.028799,0.010785],[0.012131,0.028034,0.018811],[0.037754,0.042672,0.060077],[0.036653,0.043129,0.055532],[0.037237,0.04266,0.056762],[0.052016,0.052108,0.071359]]},{"date":"201712160540","rgb":[[0.012377,0.027708,0.015179],[0.016853,0.023988,0.019188],[0.015652,0.025051,0.016595],[0.013568,0.026797,0.021648],[0.010989,0.028699,0.014136],[0.010453,0.028615,0.012066],[0.010477,0.028638,0.012732],[0.012069,0.026904,0.022724],[0.011026,0.028903,0.01394],[0.010419,0.028804,0.011331],[0.010461,0.028717,0.012324],[0.012492,0.027379,0.022166],[0.038007,0.042772,0.057536],[0.03675,0.04323,0.054519],[0.036855,0.042848,0.056378],[0.052013,0.0522,0.070194]]},{"date":"201712160550","rgb":[[0.013314,0.027246,0.015702],[0.013131,0.026421,0.015035],[0.012336,0.026872,0.015966],[0.01323,0.027236,0.021292],[0.010807,0.028924,0.012604],[0.010369,0.028807,0.0095045],[0.010409,0.028695,0.011693],[0.011806,0.028202,0.01769],[0.010742,0.028812,0.013423],[0.010329,0.028781,0.0099802],[0.01032,0.028712,0.01161],[0.011831,0.02789,0.019246],[0.037636,0.04324,0.057002],[0.036635,0.043132,0.053975],[0.037343,0.04323,0.055572],[0.051968,0.052709,0.068032]]},{"date":"201712160600","rgb":[[0.012595,0.027088,0.017377],[0.014723,0.026073,0.013057],[0.012056,0.026944,0.015836],[0.013325,0.026553,0.02376],[0.010759,0.028714,0.01371],[0.010356,0.028754,0.010009],[0.010378,0.028731,0.011632],[0.01163,0.027045,0.021717],[0.010779,0.028777,0.013879],[0.010339,0.028775,0.010359],[0.010384,0.028707,0.012429],[0.011979,0.02725,0.021559],[0.037558,0.042634,0.059889],[0.036561,0.043049,0.054798],[0.037039,0.042956,0.05734],[0.051614,0.052103,0.072163]]},{"date":"201712160610","rgb":[[0.012469,0.027818,0.016314],[0.017255,0.02475,0.013729],[0.01536,0.02463,0.018619],[0.012987,0.027391,0.021968],[0.010771,0.028935,0.01308],[0.010364,0.028721,0.010506],[0.010398,0.028583,0.011218],[0.012193,0.027974,0.01907],[0.010819,0.028833,0.014002],[0.010327,0.02871,0.011325],[0.01036,0.028578,0.012438],[0.01233,0.027215,0.022246],[0.037846,0.042751,0.058964],[0.036658,0.043083,0.055092],[0.036924,0.042461,0.05769],[0.052142,0.05174,0.072088]]},{"date":"201712160620","rgb":[[0.012264,0.02772,0.016805],[0.01425,0.026179,0.014711],[0.014905,0.025585,0.014723],[0.013397,0.026397,0.024238],[0.010973,0.028348,0.01572],[0.010521,0.028667,0.012861],[0.010402,0.02841,0.013362],[0.01208,0.026808,0.024229],[0.01138,0.027626,0.019605],[0.010556,0.028423,0.014237],[0.010571,0.028043,0.015574],[0.012568,0.026867,0.025137],[0.038313,0.041956,0.067],[0.037349,0.041359,0.063839],[0.037521,0.041388,0.064277],[0.052294,0.051717,0.075524]]},{"date":"201712160630","rgb":[[0.013057,0.027265,0.017751],[0.015544,0.02447,0.019866],[0.014606,0.024914,0.019886],[0.012826,0.026915,0.024046],[0.012017,0.026846,0.027567],[0.011339,0.026305,0.024838],[0.011314,0.026611,0.023358],[0.012898,0.026888,0.030835],[0.013104,0.026986,0.036767],[0.012323,0.026929,0.032069],[0.012342,0.026993,0.031365],[0.014079,0.027195,0.037068],[0.0428,0.042079,0.091999],[0.040318,0.042028,0.083146],[0.039727,0.042296,0.079581],[0.054905,0.052664,0.090076]]},{"date":"201712160640","rgb":[[0.013653,0.027115,0.030233],[0.015121,0.025791,0.021975],[0.013694,0.025499,0.022879],[0.014633,0.026551,0.027895],[0.023164,0.029391,0.10225],[0.020955,0.027966,0.080953],[0.019182,0.027522,0.068371],[0.020203,0.02841,0.069439],[0.036533,0.033754,0.19303],[0.03155,0.033228,0.16222],[0.026525,0.030931,0.13044],[0.027254,0.030588,0.12155],[0.073713,0.048648,0.32659],[0.069616,0.047695,0.27962],[0.064773,0.047937,0.24382],[0.073539,0.058747,0.22686]]},{"date":"201712160650","rgb":[[0.021891,0.029057,0.09949],[0.018387,0.027881,0.070382],[0.01637,0.027152,0.048745],[0.016174,0.0273,0.043917],[0.067272,0.052994,0.46327],[0.056891,0.044819,0.4011],[0.052148,0.037384,0.35899],[0.050552,0.036436,0.33502],[0.10905,0.13737,0.63721],[0.087208,0.11912,0.56165],[0.075541,0.079317,0.50447],[0.071371,0.047915,0.48805],[0.18047,0.20777,0.80753],[0.16266,0.1907,0.73333],[0.14329,0.15341,0.65895],[0.13495,0.10747,0.61871]]},{"date":"201712160700","rgb":[[0.05929,0.073225,0.29769],[0.046635,0.059195,0.23061],[0.035734,0.042965,0.17114],[0.032144,0.033788,0.15564],[0.21472,0.36029,0.99349],[0.20422,0.3336,0.97752],[0.19246,0.28506,0.9432],[0.17594,0.224,0.89298],[0.27033,0.60736,0.99486],[0.25561,0.52228,0.99617],[0.24596,0.43857,0.99616],[0.24937,0.38902,0.99512],[0.3422,0.85015,0.94856],[0.3337,0.77857,0.9487],[0.31814,0.66526,0.9479],[0.32385,0.5719,0.939]]},{"date":"201712160710","rgb":[[0.15954,0.24963,0.61364],[0.13526,0.19154,0.56347],[0.11291,0.12151,0.51141],[0.11197,0.075745,0.51494],[0.55091,0.99932,0.9982],[0.495,0.99861,0.99817],[0.43692,0.98366,0.99787],[0.39312,0.92736,0.99409],[0.91149,0.99222,0.999],[0.85463,0.99625,0.9986],[0.7516,0.99935,0.99855],[0.62301,0.99927,0.99831],[0.92189,0.9083,0.95161],[0.9218,0.90837,0.95161],[0.91187,0.91191,0.95124],[0.85846,0.91848,0.94383]]},{"date":"201712160720","rgb":[[0.41562,0.48843,0.94881],[0.36637,0.45642,0.93631],[0.31321,0.38675,0.91243],[0.29212,0.34856,0.92927],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98432,0.9809,0.99804],[0.97558,0.98126,0.98784],[0.98431,0.9804,0.99999],[0.98431,0.98186,0.99433],[0.98431,0.98405,0.98544],[0.98431,0.98431,0.98431],[0.92087,0.91089,0.94276],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92058,0.91048,0.93121]]},{"date":"201712160730","rgb":[[0.57572,0.87242,0.99087],[0.53822,0.86076,0.98997],[0.50088,0.80748,0.98909],[0.50377,0.82442,0.98885],[0.98431,0.98345,0.98805],[0.98431,0.98378,0.98658],[0.98426,0.98148,0.99612],[0.98261,0.98069,0.99948],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98429,0.98444],[0.98431,0.98265,0.99115],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92059,0.91049,0.93123]]},{"date":"201712160740","rgb":[[0.71382,0.99279,0.99737],[0.69119,0.99439,0.9955],[0.65444,0.995,0.99738],[0.69591,0.99605,0.99636],[0.98431,0.98339,0.98817],[0.98431,0.98424,0.98467],[0.98431,0.98362,0.98725],[0.98419,0.98416,0.98515],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92059,0.91048,0.93121]]},{"date":"201712160750","rgb":[[0.93086,0.99086,0.99182],[0.92326,0.99102,0.99321],[0.9086,0.99243,0.99443],[0.94199,0.99028,0.99344],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92056,0.91045,0.93116]]},{"date":"201712160800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90333,0.94495]]},{"date":"201712160810","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90333,0.94498]]},{"date":"201712160820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90333,0.945]]},{"date":"201712160830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99582,0.97657,1],[0.99607,0.97647,1],[0.99608,0.97647,1],[0.99322,0.97745,1],[0.98601,0.97985,1],[0.98798,0.9792,1],[0.99495,0.97685,1],[0.92199,0.90827,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.9222,0.90652,0.94499]]},{"date":"201712160840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90336,0.94495]]},{"date":"201712160850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90331,0.94488]]},{"date":"201712160900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90332,0.94492]]},{"date":"201712160910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.9033,0.94495]]},{"date":"201712160920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90331,0.94499]]},{"date":"201712160930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90333,0.94501]]},{"date":"201712160940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90331,0.94498]]},{"date":"201712160950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.9033,0.94487]]},{"date":"201712161000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90328,0.94494]]},{"date":"201712161010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90327,0.94499]]},{"date":"201712161020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90329,0.94493]]},{"date":"201712161030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90329,0.94501]]},{"date":"201712161040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94494]]},{"date":"201712161050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93056,0.90326,0.94488]]},{"date":"201712161100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90327,0.94499]]},{"date":"201712161110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90327,0.94494]]},{"date":"201712161120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90328,0.94497]]},{"date":"201712161130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90329,0.94498]]},{"date":"201712161140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90329,0.94497]]},{"date":"201712161150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90325,0.94492]]},{"date":"201712161200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90329,0.94492]]},{"date":"201712161210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90327,0.94496]]},{"date":"201712161220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90329,0.945]]},{"date":"201712161230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.9033,0.94501]]},{"date":"201712161240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.9033,0.94499]]},{"date":"201712161250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90327,0.94488]]},{"date":"201712161300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.9033,0.94495]]},{"date":"201712161310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90329,0.94502]]},{"date":"201712161320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90328,0.94502]]},{"date":"201712161330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99443,0.97703,1],[0.99526,0.97675,1],[0.99608,0.97647,1],[0.99085,0.97823,1],[0.98479,0.98024,1],[0.98551,0.98001,1],[0.9925,0.97769,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92116,0.90682,0.94501]]},{"date":"201712161340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90331,0.94502]]},{"date":"201712161350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90327,0.94489]]},{"date":"201712161400","rgb":[[0.98733,0.97942,1],[0.99013,0.97848,1],[0.99581,0.97657,1],[0.99608,0.97647,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98653,0.97967,1],[0.99384,0.97724,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98456,0.98032,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92115,0.90682,0.94495]]},{"date":"201712161410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.9033,0.945]]},{"date":"201712161420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.9033,0.94502]]},{"date":"201712161430","rgb":[[0.98477,0.9804,1],[0.98452,0.98042,1],[0.98636,0.97974,1],[0.99244,0.97772,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98432,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92118,0.90683,0.945]]},{"date":"201712161440","rgb":[[0.98294,0.98388,0.98951],[0.98331,0.98255,0.99445],[0.98471,0.98036,1],[0.99091,0.97822,1],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98433],[0.98431,0.98303,0.98975],[0.98431,0.98073,0.99882],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98397,0.98585],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92062,0.91051,0.9312]]},{"date":"201712161450","rgb":[[0.95437,0.98862,0.98937],[0.9575,0.98879,0.98931],[0.97124,0.98711,0.98923],[0.98445,0.98225,0.99311],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.9206,0.91048,0.93108]]},{"date":"201712161500","rgb":[[0.69745,0.99258,0.99716],[0.71798,0.99347,0.99716],[0.70776,0.99471,0.99683],[0.7252,0.99526,0.99659],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98433,0.98039,1],[0.98431,0.98041,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92111,0.90678,0.94487]]},{"date":"201712161510","rgb":[[0.60639,0.95439,0.99295],[0.59168,0.97102,0.99435],[0.58119,0.97981,0.99425],[0.60957,0.99214,0.99554],[0.98431,0.98039,1],[0.98431,0.98129,0.99662],[0.98432,0.98376,0.98671],[0.98419,0.98402,0.98596],[0.98431,0.98249,0.99192],[0.98431,0.98425,0.98464],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92057,0.91045,0.93109]]},{"date":"201712161520","rgb":[[0.56937,0.84708,0.98953],[0.54659,0.86999,0.98969],[0.52422,0.87663,0.98951],[0.54058,0.91416,0.9904],[0.98431,0.98339,0.98817],[0.98431,0.98378,0.98658],[0.98429,0.9835,0.98792],[0.98379,0.9832,0.98974],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92057,0.91045,0.93113]]},{"date":"201712161530","rgb":[[0.47837,0.6373,0.98713],[0.44482,0.62922,0.98801],[0.41312,0.5933,0.98624],[0.43032,0.63074,0.98397],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98046,0.99983],[0.98264,0.98049,0.99928],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92112,0.90678,0.94495]]},{"date":"201712161540","rgb":[[0.31324,0.33482,0.79982],[0.26692,0.31336,0.77873],[0.22894,0.26646,0.7759],[0.21855,0.23961,0.83434],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98433,0.98046,0.99964],[0.97939,0.97694,0.99797],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92113,0.9068,0.94487]]},{"date":"201712161550","rgb":[[0.11046,0.19275,0.4435],[0.096773,0.15114,0.40479],[0.081461,0.10176,0.3776],[0.076162,0.061853,0.39781],[0.36292,0.97481,0.99726],[0.38815,0.98823,0.99696],[0.4408,0.99681,0.99812],[0.53411,0.9912,0.99514],[0.39438,0.99942,0.99725],[0.43983,0.99949,0.99868],[0.55828,0.99933,0.99865],[0.72958,0.99919,0.9982],[0.4485,0.92562,0.95057],[0.53574,0.92569,0.95089],[0.67547,0.92564,0.95089],[0.79292,0.92393,0.94324]]},{"date":"201712161600","rgb":[[0.041019,0.054948,0.19042],[0.033869,0.04843,0.14948],[0.028658,0.039558,0.11511],[0.02558,0.031098,0.10342],[0.16689,0.22562,0.84166],[0.17201,0.24563,0.85868],[0.19291,0.27401,0.92283],[0.21933,0.30025,0.97667],[0.19114,0.26611,0.93263],[0.19945,0.29143,0.95273],[0.22071,0.33047,0.99201],[0.24833,0.37213,0.99589],[0.22074,0.28122,0.9404],[0.23176,0.31902,0.9474],[0.25151,0.35666,0.94914],[0.28964,0.41798,0.93936]]},{"date":"201712161610","rgb":[[0.017557,0.027998,0.059738],[0.017076,0.026227,0.047087],[0.015188,0.02603,0.037337],[0.014713,0.027204,0.034953],[0.045695,0.033539,0.26037],[0.04548,0.033813,0.27198],[0.04724,0.035191,0.31133],[0.057946,0.038809,0.38517],[0.046147,0.035943,0.3155],[0.046388,0.037106,0.32616],[0.054044,0.038341,0.37384],[0.075281,0.046073,0.47436],[0.07549,0.051333,0.37777],[0.079536,0.052156,0.39898],[0.090008,0.056972,0.44782],[0.12263,0.083523,0.54442]]},{"date":"201712161620","rgb":[[0.012844,0.027725,0.021522],[0.012464,0.027179,0.018132],[0.0139,0.025728,0.020397],[0.013483,0.026518,0.026797],[0.015401,0.027347,0.047077],[0.014969,0.027033,0.046299],[0.016892,0.027595,0.052833],[0.021706,0.02873,0.075324],[0.018481,0.027817,0.060942],[0.017975,0.027635,0.059133],[0.019913,0.028016,0.071195],[0.025911,0.029698,0.10864],[0.04747,0.043071,0.12003],[0.047028,0.042918,0.11868],[0.049474,0.043058,0.13571],[0.066511,0.057253,0.18161]]},{"date":"201712161630","rgb":[[0.012394,0.027437,0.017877],[0.012396,0.027466,0.013799],[0.014309,0.026011,0.016276],[0.013948,0.027006,0.022779],[0.011754,0.026621,0.024144],[0.01073,0.026025,0.021747],[0.011168,0.02633,0.02291],[0.013604,0.026964,0.030423],[0.011932,0.026657,0.027167],[0.011263,0.026318,0.024353],[0.011598,0.026576,0.026082],[0.014308,0.027153,0.035426],[0.03872,0.041849,0.071224],[0.038103,0.041737,0.069266],[0.038551,0.041974,0.070752],[0.053834,0.052173,0.085057]]},{"date":"201712161640","rgb":[[0.012275,0.027498,0.018522],[0.011927,0.026483,0.01837],[0.012238,0.025519,0.020539],[0.013381,0.02671,0.02562],[0.011023,0.02808,0.015902],[0.010428,0.028712,0.012442],[0.010418,0.027169,0.016416],[0.012509,0.026871,0.025528],[0.011051,0.027901,0.017515],[0.010364,0.028637,0.012839],[0.010451,0.028025,0.014532],[0.012199,0.02707,0.02554],[0.038608,0.042016,0.063283],[0.037196,0.042523,0.058416],[0.037677,0.041901,0.061322],[0.052726,0.051674,0.07498]]},{"date":"201712161650","rgb":[[0.012964,0.02774,0.015612],[0.013289,0.025791,0.01788],[0.012912,0.025652,0.019269],[0.012669,0.026954,0.023769],[0.010837,0.028492,0.013719],[0.010417,0.028792,0.011403],[0.010413,0.028452,0.012741],[0.011698,0.026741,0.021806],[0.010707,0.028841,0.013207],[0.010414,0.028866,0.011119],[0.010361,0.028786,0.011135],[0.011612,0.027186,0.020381],[0.037614,0.043146,0.057287],[0.03655,0.043077,0.05448],[0.036776,0.042943,0.05495],[0.051458,0.052127,0.070173]]},{"date":"201712161700","rgb":[[0.012239,0.027761,0.017013],[0.01541,0.025625,0.014616],[0.012367,0.02664,0.016813],[0.013911,0.027211,0.024236],[0.0109,0.028709,0.014041],[0.010389,0.028821,0.011118],[0.010429,0.028688,0.012515],[0.012086,0.026944,0.023744],[0.010954,0.028888,0.013737],[0.010335,0.028755,0.011104],[0.010408,0.028748,0.012065],[0.013017,0.027267,0.02362],[0.037783,0.043123,0.058439],[0.036628,0.043033,0.055045],[0.037176,0.04272,0.057985],[0.052294,0.051717,0.072192]]},{"date":"201712161710","rgb":[[0.013132,0.027068,0.0177],[0.013368,0.025325,0.020192],[0.012192,0.026138,0.019148],[0.013431,0.026712,0.026421],[0.010937,0.028251,0.016267],[0.010477,0.028255,0.013578],[0.010506,0.027822,0.015591],[0.012283,0.027501,0.023487],[0.011127,0.028121,0.017146],[0.010452,0.028757,0.012234],[0.010535,0.02804,0.014835],[0.012856,0.026992,0.025788],[0.038021,0.042495,0.060996],[0.03729,0.042374,0.057997],[0.037609,0.042215,0.060215],[0.052163,0.051406,0.074277]]},{"date":"201712161720","rgb":[[0.012663,0.02745,0.01704],[0.01402,0.026482,0.01485],[0.013461,0.026666,0.014369],[0.012712,0.027059,0.023135],[0.010999,0.028894,0.014041],[0.010461,0.02882,0.010506],[0.01045,0.028717,0.011616],[0.011725,0.027289,0.021447],[0.011253,0.028977,0.01465],[0.010613,0.029068,0.011846],[0.01041,0.028497,0.013127],[0.012515,0.026963,0.022645],[0.038911,0.042813,0.061176],[0.037781,0.04308,0.057028],[0.037671,0.043176,0.0572],[0.051819,0.051753,0.070649]]},{"date":"201712161730","rgb":[[0.011881,0.028118,0.016993],[0.013213,0.026542,0.015343],[0.01433,0.025151,0.018945],[0.013338,0.026654,0.024787],[0.010784,0.028637,0.013856],[0.010394,0.028791,0.010437],[0.010387,0.028742,0.011006],[0.01158,0.027549,0.020018],[0.010826,0.028819,0.013293],[0.010387,0.028836,0.010369],[0.010339,0.02873,0.011071],[0.011657,0.027919,0.019048],[0.037749,0.042955,0.05802],[0.03651,0.043065,0.053813],[0.036782,0.043052,0.054929],[0.05113,0.051787,0.069702]]},{"date":"201712161740","rgb":[[0.012402,0.028104,0.014583],[0.013401,0.026899,0.012465],[0.013817,0.02643,0.014135],[0.014533,0.02752,0.019272],[0.010721,0.028971,0.012194],[0.010347,0.028816,0.0096355],[0.010371,0.02869,0.011437],[0.011928,0.027929,0.01835],[0.010763,0.029034,0.012517],[0.010383,0.028867,0.01075],[0.010383,0.028655,0.012205],[0.012473,0.028238,0.019116],[0.037725,0.043311,0.057292],[0.03666,0.043327,0.053722],[0.036989,0.043225,0.055987],[0.051881,0.051984,0.068358]]},{"date":"201712161750","rgb":[[0.013179,0.026902,0.016078],[0.015556,0.024783,0.017622],[0.012284,0.025168,0.021458],[0.013335,0.026749,0.023524],[0.010688,0.028756,0.012783],[0.010421,0.028818,0.010483],[0.01035,0.027172,0.015571],[0.011681,0.027627,0.019515],[0.010801,0.028913,0.012984],[0.010427,0.028808,0.01178],[0.010348,0.028751,0.010929],[0.011894,0.027451,0.02107],[0.03807,0.042794,0.058198],[0.036869,0.043072,0.055344],[0.037022,0.043081,0.055446],[0.051844,0.051667,0.070834]]},{"date":"201712161800","rgb":[[0.011852,0.027942,0.015747],[0.012981,0.026957,0.013786],[0.013277,0.026607,0.014846],[0.013838,0.027397,0.019844],[0.010691,0.02894,0.01204],[0.010354,0.028745,0.0089471],[0.010416,0.028772,0.0099484],[0.012105,0.028418,0.017416],[0.010716,0.029012,0.012492],[0.010376,0.02883,0.010953],[0.010352,0.028757,0.010717],[0.012246,0.028138,0.018378],[0.038259,0.042988,0.05956],[0.036689,0.043317,0.05444],[0.036732,0.043277,0.054628],[0.051636,0.052509,0.069122]]},{"date":"201712161810","rgb":[[0.012598,0.02772,0.016025],[0.012722,0.027059,0.013879],[0.012729,0.026859,0.015991],[0.013806,0.027032,0.023614],[0.010835,0.028709,0.013364],[0.010389,0.028779,0.01148],[0.010376,0.028688,0.01178],[0.011914,0.027864,0.019885],[0.011156,0.028932,0.01351],[0.010433,0.028845,0.011292],[0.010426,0.028716,0.012039],[0.01313,0.027639,0.020951],[0.03846,0.043132,0.057265],[0.036937,0.043397,0.054253],[0.037659,0.043122,0.056862],[0.052706,0.052356,0.070016]]},{"date":"201712161820","rgb":[[0.011824,0.02798,0.0166],[0.01239,0.025673,0.019761],[0.014579,0.024506,0.021389],[0.014329,0.026892,0.024769],[0.010892,0.028707,0.013997],[0.010427,0.028132,0.013418],[0.010376,0.026332,0.018584],[0.012493,0.027357,0.021733],[0.011274,0.028817,0.015043],[0.010479,0.02886,0.011453],[0.010529,0.028405,0.014125],[0.012902,0.026995,0.023456],[0.038619,0.042675,0.061606],[0.037388,0.043173,0.056917],[0.037887,0.042398,0.060254],[0.052856,0.051872,0.072718]]},{"date":"201712161830","rgb":[[0.01253,0.027458,0.016531],[0.012458,0.027073,0.014977],[0.015716,0.025468,0.014458],[0.012874,0.026683,0.021543],[0.010901,0.028987,0.012636],[0.010474,0.02893,0.010741],[0.010405,0.028822,0.011034],[0.011592,0.027653,0.019743],[0.010902,0.028954,0.013394],[0.010424,0.02878,0.011571],[0.010402,0.028709,0.012108],[0.011885,0.027773,0.02045],[0.038377,0.042958,0.059241],[0.037042,0.043197,0.055639],[0.037273,0.043112,0.055475],[0.051686,0.052471,0.070313]]},{"date":"201712161840","rgb":[[0.012192,0.027761,0.016222],[0.012114,0.027577,0.012614],[0.012453,0.025956,0.018225],[0.013447,0.026998,0.022892],[0.010964,0.028563,0.014522],[0.010443,0.028775,0.01063],[0.010348,0.028651,0.011748],[0.012167,0.027547,0.02108],[0.011085,0.028625,0.015359],[0.010401,0.028769,0.011385],[0.010384,0.028719,0.012101],[0.012397,0.027735,0.020815],[0.03811,0.042688,0.060569],[0.036957,0.043269,0.055369],[0.037607,0.042822,0.057819],[0.052429,0.051966,0.072609]]},{"date":"201712161850","rgb":[[0.012667,0.028146,0.015186],[0.015868,0.025529,0.01301],[0.012288,0.02715,0.014532],[0.013788,0.027482,0.02151],[0.010812,0.028747,0.011921],[0.010382,0.028828,0.0087776],[0.010361,0.028614,0.011384],[0.012411,0.028267,0.018081],[0.010681,0.02905,0.01262],[0.010345,0.028849,0.0099371],[0.010356,0.028779,0.011609],[0.012536,0.027673,0.019626],[0.037356,0.043256,0.056012],[0.036613,0.043255,0.053987],[0.036969,0.042934,0.056141],[0.051538,0.052729,0.069186]]},{"date":"201712161900","rgb":[[0.011853,0.027435,0.01759],[0.016147,0.023886,0.020789],[0.016743,0.023653,0.021364],[0.013137,0.026758,0.022616],[0.010697,0.028904,0.012705],[0.010449,0.028464,0.011616],[0.010364,0.027801,0.013578],[0.011714,0.027521,0.019661],[0.010702,0.028954,0.013123],[0.010359,0.028867,0.0098288],[0.010364,0.028564,0.011958],[0.012047,0.027726,0.019983],[0.037488,0.043159,0.056933],[0.036481,0.043145,0.053915],[0.036781,0.042918,0.055273],[0.051214,0.052191,0.070045]]},{"date":"201712161910","rgb":[[0.012412,0.027396,0.017359],[0.013948,0.026123,0.016292],[0.013076,0.02488,0.021465],[0.013651,0.02681,0.024513],[0.010914,0.028804,0.013968],[0.010375,0.028709,0.01131],[0.010447,0.027483,0.015627],[0.013056,0.02736,0.02291],[0.010807,0.028264,0.015399],[0.010367,0.028698,0.012262],[0.01059,0.028554,0.013702],[0.013588,0.027115,0.024686],[0.038224,0.042193,0.06122],[0.037181,0.042943,0.056903],[0.038039,0.042315,0.060415],[0.052596,0.051783,0.073416]]},{"date":"201712161920","rgb":[[0.012081,0.027999,0.015848],[0.016871,0.024797,0.015825],[0.01649,0.024805,0.016973],[0.013229,0.026857,0.025178],[0.011007,0.027518,0.017939],[0.010549,0.028706,0.012328],[0.01054,0.028403,0.013376],[0.012913,0.026978,0.024971],[0.010999,0.02894,0.014012],[0.010487,0.028853,0.012079],[0.010549,0.028588,0.013165],[0.012856,0.027625,0.023296],[0.038412,0.042448,0.061402],[0.037253,0.043367,0.055867],[0.037686,0.042582,0.059634],[0.053119,0.051828,0.073872]]},{"date":"201712161930","rgb":[[0.012053,0.027769,0.017512],[0.012341,0.026683,0.016057],[0.012478,0.026632,0.016756],[0.014068,0.026548,0.026536],[0.010899,0.028813,0.013237],[0.010407,0.028776,0.010952],[0.010363,0.028511,0.011941],[0.011939,0.026857,0.023825],[0.010891,0.028997,0.013441],[0.010316,0.028725,0.011213],[0.010345,0.028547,0.012708],[0.012208,0.026777,0.023918],[0.037512,0.043184,0.056751],[0.036628,0.043179,0.054167],[0.036969,0.042629,0.057596],[0.052216,0.052022,0.071935]]},{"date":"201712161940","rgb":[[0.0126,0.027731,0.016938],[0.015276,0.024608,0.020006],[0.012415,0.025478,0.020716],[0.013413,0.026987,0.023833],[0.011908,0.028281,0.018926],[0.011285,0.028098,0.017675],[0.011975,0.027406,0.020367],[0.015362,0.026955,0.025177],[0.012421,0.028543,0.018172],[0.011401,0.028508,0.015705],[0.011853,0.0278,0.019283],[0.015395,0.027207,0.025131],[0.038891,0.042715,0.062229],[0.037968,0.043535,0.057868],[0.038576,0.043107,0.060664],[0.053924,0.052051,0.07215]]},{"date":"201712161950","rgb":[[0.012928,0.027216,0.016651],[0.019029,0.023348,0.018317],[0.016439,0.024032,0.019543],[0.013518,0.027246,0.020967],[0.011342,0.029064,0.015507],[0.010629,0.028887,0.012575],[0.010731,0.028702,0.013515],[0.012988,0.027087,0.022568],[0.011538,0.028754,0.016281],[0.01071,0.02887,0.013121],[0.010773,0.0288,0.013713],[0.013562,0.027237,0.023762],[0.038886,0.042667,0.061541],[0.037752,0.043633,0.0571],[0.038752,0.043218,0.059212],[0.053258,0.051604,0.072715]]},{"date":"201712162000","rgb":[[0.011578,0.028316,0.015204],[0.011306,0.027156,0.014977],[0.014848,0.025667,0.01588],[0.01331,0.02729,0.020378],[0.010767,0.028857,0.012503],[0.01036,0.028757,0.009158],[0.010358,0.028738,0.010554],[0.011324,0.027847,0.017973],[0.010809,0.028755,0.013124],[0.010378,0.028804,0.010116],[0.010379,0.02886,0.010751],[0.012207,0.027911,0.018701],[0.03695,0.043132,0.056379],[0.036375,0.043176,0.053989],[0.036618,0.043113,0.054276],[0.051341,0.052691,0.067714]]},{"date":"201712162010","rgb":[[0.011937,0.027608,0.01639],[0.012136,0.02766,0.012641],[0.012685,0.026544,0.016702],[0.013034,0.027092,0.022276],[0.010708,0.028813,0.012906],[0.010358,0.028738,0.0098624],[0.010365,0.028655,0.010536],[0.011847,0.027777,0.019928],[0.010719,0.028983,0.012287],[0.010344,0.028845,0.0096724],[0.010344,0.02876,0.011018],[0.011709,0.027276,0.022289],[0.037455,0.043255,0.056345],[0.036602,0.043217,0.054253],[0.036886,0.042988,0.055748],[0.051488,0.052292,0.069735]]},{"date":"201712162020","rgb":[[0.011694,0.027657,0.016646],[0.011744,0.027731,0.013207],[0.011428,0.027554,0.013942],[0.013013,0.027774,0.020545],[0.010812,0.028916,0.012955],[0.010339,0.028743,0.010187],[0.010376,0.028682,0.011187],[0.01183,0.027852,0.019499],[0.010722,0.028676,0.014077],[0.010378,0.028831,0.011002],[0.01034,0.028757,0.011516],[0.011905,0.027782,0.020471],[0.037321,0.042926,0.056824],[0.036555,0.043201,0.05336],[0.036885,0.042961,0.054373],[0.051635,0.052508,0.067917]]},{"date":"201712162030","rgb":[[0.012249,0.027608,0.017113],[0.016275,0.024362,0.018948],[0.015541,0.025011,0.016575],[0.013163,0.02674,0.025282],[0.010819,0.0286,0.01387],[0.010355,0.028652,0.011257],[0.010367,0.028469,0.012103],[0.011915,0.026687,0.023009],[0.01067,0.028825,0.013721],[0.01037,0.028764,0.011327],[0.010404,0.028725,0.011905],[0.012197,0.02709,0.021952],[0.037759,0.042632,0.058941],[0.036566,0.043154,0.054278],[0.036792,0.042746,0.055945],[0.051385,0.052231,0.071027]]},{"date":"201712162040","rgb":[[0.01208,0.028008,0.015458],[0.01248,0.027143,0.014025],[0.0126,0.027253,0.013233],[0.013191,0.026863,0.020809],[0.010849,0.028922,0.013338],[0.010354,0.028713,0.010463],[0.010364,0.028757,0.010458],[0.011272,0.02789,0.018113],[0.010747,0.028801,0.01361],[0.010344,0.028823,0.010024],[0.01038,0.028807,0.011032],[0.012089,0.02787,0.020191],[0.037591,0.043203,0.056103],[0.036432,0.043182,0.053882],[0.03658,0.04313,0.054697],[0.051335,0.052136,0.06915]]},{"date":"201712162050","rgb":[[0.013229,0.027902,0.014449],[0.016163,0.024634,0.017681],[0.016089,0.024826,0.017068],[0.013239,0.026964,0.021986],[0.010831,0.028926,0.012577],[0.010331,0.028782,0.010114],[0.010386,0.028786,0.011082],[0.011674,0.027816,0.018529],[0.01069,0.028868,0.01228],[0.010303,0.028734,0.010336],[0.010348,0.028731,0.01144],[0.01185,0.027702,0.019874],[0.037359,0.043382,0.055999],[0.036486,0.043228,0.053522],[0.036676,0.042689,0.055702],[0.051934,0.052357,0.06855]]},{"date":"201712162100","rgb":[[0.012612,0.027945,0.014606],[0.013076,0.02672,0.014145],[0.014105,0.026143,0.014821],[0.013722,0.026958,0.02132],[0.010656,0.028913,0.012195],[0.010319,0.028778,0.0092072],[0.010384,0.028788,0.01034],[0.011649,0.027584,0.019447],[0.010692,0.028979,0.012434],[0.010337,0.028856,0.0096834],[0.010364,0.028806,0.011081],[0.011683,0.027916,0.019404],[0.037589,0.043244,0.05692],[0.036653,0.043152,0.054539],[0.037076,0.043197,0.054738],[0.052405,0.051963,0.070011]]},{"date":"201712162110","rgb":[[0.011913,0.027436,0.01729],[0.014363,0.025994,0.016556],[0.015322,0.025526,0.01511],[0.012601,0.02725,0.022997],[0.010667,0.028391,0.014467],[0.010445,0.028765,0.011104],[0.010472,0.028654,0.012813],[0.012183,0.027621,0.021674],[0.010847,0.028407,0.014649],[0.010378,0.028771,0.011477],[0.010392,0.028717,0.012237],[0.012034,0.027149,0.022611],[0.038133,0.042774,0.059564],[0.036892,0.043204,0.055473],[0.03714,0.042927,0.056369],[0.051949,0.051582,0.071861]]},{"date":"201712162120","rgb":[[0.012915,0.02775,0.015895],[0.013187,0.026192,0.016913],[0.012293,0.026722,0.016695],[0.013503,0.027309,0.021874],[0.010909,0.028965,0.013042],[0.010418,0.028798,0.01099],[0.010399,0.028751,0.012204],[0.011706,0.027578,0.020513],[0.011062,0.028832,0.01383],[0.010418,0.028855,0.010197],[0.010445,0.028815,0.01204],[0.012801,0.027844,0.020427],[0.038255,0.042698,0.05878],[0.036749,0.043202,0.055004],[0.037132,0.042802,0.056843],[0.051552,0.052009,0.071303]]},{"date":"201712162130","rgb":[[0.012336,0.027433,0.018984],[0.012787,0.026964,0.014782],[0.013962,0.026267,0.015341],[0.014344,0.026931,0.02282],[0.011134,0.028259,0.016427],[0.010505,0.028794,0.012596],[0.010557,0.02859,0.013295],[0.012768,0.027314,0.022088],[0.011032,0.02852,0.016184],[0.010488,0.028787,0.012388],[0.010645,0.028303,0.014686],[0.013166,0.027371,0.023123],[0.038445,0.042517,0.060669],[0.037099,0.042965,0.056202],[0.037619,0.042699,0.058808],[0.052476,0.051714,0.072008]]},{"date":"201712162140","rgb":[[0.01246,0.027987,0.01567],[0.014434,0.026431,0.013583],[0.013181,0.027027,0.014867],[0.01447,0.026874,0.022753],[0.011442,0.028855,0.014574],[0.010507,0.028884,0.011398],[0.010605,0.028717,0.012955],[0.013215,0.027426,0.022808],[0.011445,0.028541,0.0162],[0.010544,0.028786,0.012682],[0.010669,0.028773,0.01381],[0.013561,0.027371,0.023033],[0.039362,0.042502,0.061741],[0.037492,0.043304,0.056155],[0.038325,0.042948,0.059083],[0.053274,0.051529,0.073285]]},{"date":"201712162150","rgb":[[0.01255,0.027958,0.014778],[0.014711,0.026009,0.013524],[0.013308,0.026697,0.01448],[0.013849,0.026936,0.023384],[0.010967,0.028815,0.013976],[0.010406,0.028722,0.012152],[0.010439,0.028558,0.01283],[0.012284,0.027648,0.021591],[0.011001,0.02894,0.013463],[0.010378,0.028727,0.011678],[0.010416,0.028752,0.012122],[0.012936,0.027142,0.022334],[0.038317,0.042815,0.059186],[0.036877,0.042965,0.055537],[0.037205,0.043143,0.056362],[0.052327,0.051973,0.071145]]},{"date":"201712162200","rgb":[[0.013575,0.027396,0.015314],[0.01366,0.026736,0.013324],[0.012871,0.027102,0.013253],[0.015287,0.027022,0.019799],[0.010906,0.029022,0.012836],[0.010439,0.028837,0.010393],[0.010442,0.028805,0.011041],[0.012617,0.02833,0.018487],[0.010835,0.029068,0.01329],[0.010428,0.028917,0.011011],[0.01043,0.028763,0.012064],[0.01278,0.027981,0.019641],[0.038476,0.043125,0.058309],[0.036845,0.043275,0.05525],[0.037353,0.043074,0.057157],[0.052516,0.052385,0.070139]]},{"date":"201712162210","rgb":[[0.01216,0.028086,0.01543],[0.012604,0.027043,0.015204],[0.012491,0.026562,0.016261],[0.014116,0.027087,0.021555],[0.010754,0.028708,0.01392],[0.010409,0.028799,0.010806],[0.01039,0.028742,0.011264],[0.012047,0.027538,0.019575],[0.010984,0.02882,0.013998],[0.010485,0.028886,0.011914],[0.010484,0.028798,0.012725],[0.013075,0.027372,0.021347],[0.037989,0.043217,0.057565],[0.036734,0.043272,0.054678],[0.037154,0.04303,0.05572],[0.051598,0.052204,0.069164]]},{"date":"201712162220","rgb":[[0.012005,0.027853,0.016561],[0.013195,0.025737,0.019078],[0.012635,0.026564,0.016859],[0.014248,0.02679,0.024251],[0.010747,0.028067,0.015345],[0.010364,0.028745,0.011694],[0.010401,0.028643,0.012977],[0.012267,0.02722,0.022471],[0.010829,0.028974,0.013335],[0.010352,0.028746,0.010758],[0.010499,0.028729,0.013005],[0.012513,0.027214,0.02337],[0.037595,0.042839,0.058958],[0.036617,0.042848,0.056074],[0.036995,0.043117,0.057011],[0.05173,0.051757,0.072448]]},{"date":"201712162230","rgb":[[0.012954,0.027754,0.014392],[0.01477,0.026143,0.012606],[0.01436,0.025404,0.01823],[0.013819,0.026904,0.02281],[0.010679,0.028755,0.012506],[0.010374,0.028873,0.0089139],[0.010364,0.028748,0.010567],[0.012288,0.027433,0.02026],[0.010675,0.028917,0.012911],[0.010384,0.028874,0.0095129],[0.010377,0.028808,0.010644],[0.012175,0.027778,0.020174],[0.037579,0.04335,0.05714],[0.036646,0.043231,0.053969],[0.037091,0.043032,0.055529],[0.052651,0.052183,0.07046]]},{"date":"201712162240","rgb":[[0.012416,0.028018,0.015798],[0.015381,0.025719,0.013573],[0.014436,0.026387,0.013773],[0.013471,0.027412,0.020975],[0.010696,0.028934,0.011993],[0.010377,0.028807,0.0085924],[0.010361,0.028737,0.010688],[0.011911,0.027776,0.019167],[0.010705,0.029013,0.012414],[0.010326,0.028876,0.0097414],[0.010376,0.028819,0.010743],[0.012307,0.02807,0.018891],[0.037477,0.043257,0.055735],[0.036488,0.043234,0.053593],[0.037168,0.043198,0.054906],[0.051594,0.052321,0.068689]]},{"date":"201712162250","rgb":[[0.01171,0.028051,0.016309],[0.013357,0.026945,0.01334],[0.012513,0.026814,0.015217],[0.012876,0.027268,0.021462],[0.01114,0.028194,0.016436],[0.010539,0.028726,0.012342],[0.01048,0.028596,0.012988],[0.012606,0.027393,0.021491],[0.011219,0.028658,0.015029],[0.01051,0.028795,0.012372],[0.01045,0.028679,0.012836],[0.012239,0.027326,0.021779],[0.038425,0.042796,0.059077],[0.036832,0.043016,0.05575],[0.036984,0.042802,0.056854],[0.051818,0.052229,0.068923]]},{"date":"201712162300","rgb":[[0.012434,0.028131,0.01529],[0.012925,0.027043,0.014432],[0.013022,0.026855,0.015748],[0.013487,0.027233,0.023817],[0.011137,0.028785,0.014173],[0.01041,0.02882,0.01104],[0.010441,0.028467,0.013236],[0.012643,0.027683,0.021872],[0.010962,0.029081,0.013001],[0.010405,0.028829,0.011896],[0.01047,0.028663,0.013087],[0.012792,0.027184,0.02359],[0.038287,0.043238,0.057701],[0.036932,0.04323,0.055042],[0.037668,0.042731,0.058372],[0.052692,0.051827,0.072033]]},{"date":"201712162310","rgb":[[0.012044,0.028199,0.014597],[0.012916,0.026923,0.013417],[0.012186,0.027305,0.013512],[0.012561,0.02738,0.020981],[0.010975,0.029105,0.013376],[0.010458,0.028877,0.011103],[0.01043,0.028698,0.011881],[0.012708,0.027845,0.021029],[0.011051,0.028969,0.013416],[0.010439,0.028888,0.011532],[0.010453,0.028787,0.012037],[0.012756,0.027344,0.022539],[0.03799,0.043073,0.057867],[0.036859,0.043221,0.054501],[0.036958,0.042969,0.055857],[0.051558,0.05186,0.07115]]},{"date":"201712162320","rgb":[[0.013396,0.027459,0.014008],[0.015308,0.025698,0.015129],[0.012417,0.025342,0.020746],[0.014074,0.026989,0.022949],[0.010678,0.028863,0.012343],[0.010405,0.028906,0.010294],[0.010396,0.028482,0.012366],[0.012317,0.027884,0.020245],[0.01068,0.029029,0.011479],[0.010401,0.028894,0.010044],[0.010407,0.028751,0.011583],[0.01247,0.027748,0.020536],[0.037316,0.043469,0.055689],[0.036746,0.043221,0.053964],[0.037155,0.04321,0.055492],[0.052649,0.052419,0.068842]]},{"date":"201712162330","rgb":[[0.012178,0.028015,0.015397],[0.013137,0.026901,0.013922],[0.013589,0.025923,0.017156],[0.01304,0.027291,0.021196],[0.010662,0.028877,0.012401],[0.010366,0.028766,0.010497],[0.010391,0.028797,0.011343],[0.011705,0.027875,0.01975],[0.010677,0.028719,0.013187],[0.010333,0.028735,0.011079],[0.010348,0.028667,0.011639],[0.011639,0.02743,0.020908],[0.037532,0.042782,0.057559],[0.036692,0.043113,0.054425],[0.03704,0.042755,0.056266],[0.051244,0.052009,0.070876]]},{"date":"201712162340","rgb":[[0.012208,0.027553,0.016379],[0.012561,0.025544,0.019357],[0.01466,0.025303,0.017552],[0.013558,0.026955,0.024359],[0.010565,0.028944,0.012503],[0.010362,0.028682,0.010343],[0.010394,0.028689,0.011645],[0.011901,0.027701,0.019618],[0.01059,0.028744,0.0128],[0.010335,0.028791,0.009836],[0.01034,0.028688,0.010926],[0.01177,0.027673,0.020407],[0.037186,0.042937,0.057337],[0.036488,0.043179,0.053978],[0.036901,0.042779,0.056152],[0.052038,0.05185,0.070516]]},{"date":"201712162350","rgb":[[0.012016,0.028189,0.015666],[0.012147,0.026836,0.015857],[0.012692,0.02684,0.014861],[0.012812,0.027422,0.020847],[0.010608,0.028902,0.011911],[0.010368,0.028774,0.0096903],[0.010371,0.028748,0.010155],[0.011364,0.028373,0.016642],[0.010662,0.028983,0.012513],[0.010366,0.028836,0.0094441],[0.010339,0.028783,0.011157],[0.011451,0.02769,0.018679],[0.037214,0.043095,0.05755],[0.036428,0.043152,0.053882],[0.036641,0.042948,0.05519],[0.050918,0.052318,0.06941]]},{"date":"201712170000","rgb":[[0.012285,0.027889,0.016328],[0.0131,0.02599,0.018357],[0.01297,0.02549,0.019958],[0.013805,0.027149,0.023292],[0.01074,0.028894,0.012833],[0.010389,0.028738,0.0098119],[0.010389,0.028436,0.011887],[0.012182,0.027688,0.019905],[0.011018,0.028681,0.014804],[0.010429,0.028873,0.011345],[0.010398,0.028597,0.012374],[0.012936,0.027203,0.022451],[0.037847,0.043195,0.057708],[0.036787,0.04322,0.054751],[0.036986,0.043172,0.055087],[0.051921,0.051962,0.070813]]},{"date":"201712170010","rgb":[[0.012785,0.027164,0.016038],[0.015685,0.024392,0.018725],[0.015156,0.024546,0.018668],[0.014437,0.026302,0.021891],[0.010676,0.028813,0.012007],[0.010362,0.028621,0.010133],[0.010358,0.028497,0.011393],[0.01153,0.027686,0.018691],[0.010769,0.028544,0.014401],[0.010357,0.028862,0.010288],[0.010334,0.02866,0.012228],[0.011605,0.027023,0.02251],[0.037434,0.04276,0.057954],[0.036431,0.043282,0.054192],[0.03685,0.042854,0.056396],[0.05059,0.051802,0.070266]]},{"date":"201712170020","rgb":[[0.012908,0.027888,0.016461],[0.013052,0.02616,0.01706],[0.015947,0.024885,0.017476],[0.013685,0.026992,0.023299],[0.0108,0.02897,0.012991],[0.010429,0.028858,0.0098262],[0.010411,0.028746,0.011868],[0.012143,0.027456,0.020594],[0.010968,0.028552,0.014651],[0.010431,0.028915,0.010605],[0.010373,0.028703,0.011961],[0.012189,0.02725,0.021414],[0.037923,0.043153,0.057991],[0.036493,0.043182,0.053708],[0.036909,0.043063,0.056287],[0.052213,0.051784,0.071023]]},{"date":"201712170030","rgb":[[0.011746,0.027701,0.01779],[0.012279,0.027422,0.014382],[0.012654,0.02636,0.017624],[0.013378,0.026585,0.02607],[0.011073,0.028632,0.014537],[0.010429,0.028738,0.011635],[0.010386,0.028196,0.013851],[0.012399,0.026715,0.023818],[0.010805,0.028211,0.015594],[0.010422,0.028849,0.011575],[0.010405,0.028545,0.013454],[0.012434,0.027236,0.023017],[0.037826,0.043047,0.05868],[0.036938,0.0431,0.055657],[0.037176,0.042838,0.056726],[0.051846,0.051778,0.071922]]},{"date":"201712170040","rgb":[[0.011922,0.027979,0.016545],[0.013754,0.026377,0.013984],[0.013233,0.026047,0.016882],[0.012984,0.027355,0.021527],[0.011062,0.028776,0.013651],[0.010451,0.02883,0.010394],[0.010366,0.028676,0.011415],[0.012446,0.028015,0.01912],[0.010832,0.029032,0.013526],[0.010459,0.028883,0.011391],[0.010377,0.028678,0.012542],[0.01221,0.027311,0.020634],[0.038282,0.043113,0.058086],[0.036885,0.04335,0.054494],[0.037608,0.043337,0.055912],[0.052518,0.05184,0.069456]]},{"date":"201712170050","rgb":[[0.012951,0.027456,0.01595],[0.014429,0.026139,0.015287],[0.01181,0.027147,0.015394],[0.012743,0.026769,0.023221],[0.010903,0.028672,0.013709],[0.010466,0.028838,0.011118],[0.010464,0.028796,0.012256],[0.012438,0.027718,0.019439],[0.0109,0.028901,0.013798],[0.010395,0.028777,0.011817],[0.010543,0.028801,0.01301],[0.012689,0.027389,0.0222],[0.03836,0.043373,0.057952],[0.036912,0.043406,0.055077],[0.037618,0.04277,0.058331],[0.052317,0.052089,0.070289]]},{"date":"201712170100","rgb":[[0.01209,0.027215,0.017936],[0.013332,0.024927,0.021134],[0.013563,0.026143,0.015773],[0.013842,0.026381,0.023255],[0.010821,0.028965,0.012937],[0.01038,0.028332,0.011386],[0.010368,0.028737,0.010419],[0.011867,0.027865,0.019444],[0.010793,0.028813,0.013632],[0.010309,0.028677,0.010906],[0.010354,0.028666,0.011761],[0.011912,0.027291,0.0214],[0.037536,0.042946,0.057252],[0.036418,0.04317,0.054627],[0.036896,0.043109,0.055538],[0.051341,0.051553,0.070916]]},{"date":"201712170110","rgb":[[0.012334,0.02791,0.01579],[0.01605,0.025392,0.013124],[0.012579,0.027062,0.014205],[0.013154,0.027412,0.020046],[0.010805,0.02884,0.013875],[0.010468,0.028899,0.011201],[0.010348,0.028617,0.011588],[0.011597,0.027467,0.019893],[0.011096,0.029101,0.013306],[0.010389,0.028802,0.011785],[0.010475,0.028645,0.012728],[0.012053,0.027246,0.021464],[0.038128,0.04323,0.057175],[0.036831,0.04335,0.054321],[0.03686,0.043228,0.055101],[0.050965,0.051802,0.06863]]},{"date":"201712170120","rgb":[[0.011562,0.027962,0.016971],[0.012194,0.026342,0.017507],[0.011464,0.025482,0.021293],[0.012197,0.027294,0.023218],[0.010712,0.028791,0.013073],[0.010358,0.028722,0.010062],[0.010349,0.027722,0.014144],[0.011981,0.027468,0.020277],[0.010682,0.02881,0.013296],[0.010399,0.028815,0.011324],[0.010328,0.028607,0.011889],[0.011667,0.027474,0.021348],[0.037396,0.043006,0.057055],[0.03656,0.043164,0.054034],[0.036954,0.042718,0.055809],[0.051001,0.051564,0.070059]]},{"date":"201712170130","rgb":[[0.012716,0.027833,0.013139],[0.015316,0.025547,0.015003],[0.01668,0.024886,0.013503],[0.012751,0.027426,0.019268],[0.010692,0.028926,0.012439],[0.010414,0.028873,0.010232],[0.010421,0.0288,0.011033],[0.012443,0.028305,0.01798],[0.010822,0.028956,0.012856],[0.010492,0.028952,0.010582],[0.010484,0.02887,0.011812],[0.013035,0.027944,0.020205],[0.03757,0.043591,0.055188],[0.036669,0.043376,0.053566],[0.037399,0.043192,0.055917],[0.052782,0.052351,0.068219]]},{"date":"201712170140","rgb":[[0.012223,0.026799,0.019509],[0.012955,0.026957,0.015282],[0.011766,0.027481,0.014958],[0.014032,0.026503,0.024738],[0.010925,0.0281,0.015624],[0.010468,0.028766,0.012155],[0.010549,0.028539,0.012869],[0.012827,0.027014,0.024545],[0.010857,0.028352,0.015718],[0.010529,0.028751,0.012839],[0.01055,0.028724,0.0136],[0.013343,0.02667,0.025664],[0.037922,0.042092,0.06115],[0.036787,0.042926,0.056758],[0.037689,0.042496,0.059212],[0.052539,0.051542,0.073789]]},{"date":"201712170150","rgb":[[0.012074,0.027908,0.016399],[0.015044,0.025802,0.015303],[0.012931,0.026264,0.016663],[0.014193,0.026272,0.024458],[0.011089,0.02917,0.013502],[0.010374,0.028731,0.010911],[0.010462,0.028808,0.011565],[0.013229,0.027403,0.021658],[0.011207,0.028926,0.014553],[0.010446,0.028859,0.012017],[0.010525,0.028519,0.013306],[0.013383,0.026991,0.024483],[0.037848,0.042491,0.059887],[0.036906,0.043395,0.055064],[0.037676,0.042514,0.058872],[0.052937,0.051602,0.072717]]},{"date":"201712170200","rgb":[[0.013636,0.027158,0.016101],[0.019043,0.023851,0.013284],[0.017034,0.024978,0.013856],[0.013538,0.027247,0.021114],[0.01096,0.028993,0.013508],[0.010462,0.028793,0.0099914],[0.010458,0.028754,0.011134],[0.012778,0.027831,0.020622],[0.011092,0.02866,0.015021],[0.010411,0.028836,0.011235],[0.010478,0.028594,0.01278],[0.013389,0.027288,0.023668],[0.038299,0.043142,0.057964],[0.036758,0.043154,0.054528],[0.037367,0.043214,0.056463],[0.053535,0.051595,0.071226]]},{"date":"201712170210","rgb":[[0.014138,0.027167,0.014271],[0.013342,0.027012,0.01191],[0.015353,0.02553,0.015118],[0.013176,0.027474,0.020484],[0.010645,0.02896,0.012448],[0.01037,0.028827,0.0087687],[0.01035,0.028714,0.011233],[0.011822,0.027879,0.019337],[0.010671,0.028968,0.01338],[0.010353,0.028935,0.0087146],[0.01032,0.028813,0.010686],[0.012166,0.02785,0.019076],[0.037601,0.043208,0.057466],[0.036548,0.043145,0.054198],[0.037177,0.043145,0.055815],[0.052147,0.052086,0.069104]]},{"date":"201712170220","rgb":[[0.012589,0.027655,0.016464],[0.012265,0.026004,0.018885],[0.011578,0.026579,0.017735],[0.0129,0.026936,0.023314],[0.010747,0.02878,0.013135],[0.010381,0.028437,0.011958],[0.010394,0.028698,0.011668],[0.011717,0.027415,0.020782],[0.010775,0.028894,0.013012],[0.010343,0.028779,0.010318],[0.010353,0.028768,0.011653],[0.011445,0.027559,0.019904],[0.037554,0.042767,0.058115],[0.036575,0.043123,0.053578],[0.036617,0.043137,0.054658],[0.050406,0.051954,0.06986]]},{"date":"201712170230","rgb":[[0.012192,0.027575,0.017415],[0.015782,0.025378,0.015207],[0.012961,0.026712,0.015463],[0.014276,0.027672,0.017744],[0.010934,0.028906,0.013635],[0.010358,0.02877,0.0103],[0.010371,0.028707,0.011005],[0.011896,0.028496,0.016498],[0.010805,0.02858,0.014187],[0.010341,0.028775,0.010415],[0.010448,0.028636,0.011459],[0.011742,0.028216,0.017445],[0.037689,0.042941,0.057936],[0.036604,0.043188,0.054308],[0.036746,0.043032,0.05579],[0.051774,0.052339,0.067385]]},{"date":"201712170240","rgb":[[0.012037,0.02727,0.017479],[0.014124,0.025983,0.016261],[0.014355,0.026323,0.013726],[0.012239,0.02675,0.022468],[0.010537,0.028531,0.012627],[0.010345,0.028814,0.009527],[0.01034,0.028704,0.010441],[0.010953,0.027523,0.017312],[0.010678,0.028981,0.013013],[0.01037,0.02888,0.0091111],[0.010333,0.028731,0.011092],[0.011486,0.027723,0.01924],[0.036988,0.043273,0.056044],[0.036371,0.043174,0.05325],[0.036672,0.042959,0.054892],[0.050158,0.052108,0.068247]]},{"date":"201712170250","rgb":[[0.01255,0.027455,0.015782],[0.013627,0.026966,0.012226],[0.01328,0.026411,0.01544],[0.01295,0.02744,0.018232],[0.010845,0.028959,0.012045],[0.010353,0.028821,0.010291],[0.010391,0.028759,0.010953],[0.011318,0.028435,0.01625],[0.010715,0.028963,0.012527],[0.010346,0.028867,0.0094687],[0.010331,0.028784,0.010614],[0.011421,0.02799,0.017357],[0.037328,0.043123,0.057107],[0.03646,0.04308,0.053431],[0.036658,0.043112,0.054877],[0.051262,0.052247,0.066569]]},{"date":"201712170300","rgb":[[0.012298,0.027577,0.016396],[0.014426,0.026299,0.013896],[0.016751,0.024025,0.019316],[0.013142,0.02718,0.021099],[0.010803,0.028887,0.013179],[0.010384,0.028807,0.009794],[0.010349,0.02859,0.011416],[0.01179,0.027617,0.019865],[0.010776,0.029031,0.012752],[0.010351,0.028797,0.010238],[0.010356,0.028784,0.010557],[0.011976,0.027556,0.020483],[0.037418,0.043485,0.055848],[0.036586,0.043287,0.053258],[0.036675,0.04329,0.05432],[0.051852,0.052054,0.068574]]},{"date":"201712170310","rgb":[[0.0126,0.027497,0.016252],[0.017477,0.024465,0.013105],[0.013583,0.026313,0.014849],[0.012754,0.027099,0.022181],[0.010662,0.028726,0.012717],[0.010362,0.028793,0.0099979],[0.010391,0.028784,0.011362],[0.011586,0.027651,0.019326],[0.010787,0.028839,0.013232],[0.01033,0.028816,0.010012],[0.010332,0.028714,0.012015],[0.012032,0.027414,0.020485],[0.037218,0.043024,0.056744],[0.036483,0.043151,0.054061],[0.036785,0.043098,0.055038],[0.050599,0.051802,0.069522]]},{"date":"201712170320","rgb":[[0.011925,0.02788,0.016693],[0.01394,0.026345,0.014683],[0.016071,0.025139,0.016125],[0.013431,0.02681,0.023965],[0.010724,0.028777,0.013296],[0.010347,0.028738,0.010643],[0.010374,0.028764,0.011406],[0.011873,0.027543,0.020366],[0.010596,0.028891,0.012767],[0.010358,0.028794,0.010133],[0.010386,0.028715,0.011506],[0.011965,0.027536,0.020766],[0.037292,0.042534,0.057976],[0.036399,0.043121,0.054255],[0.036894,0.04279,0.056089],[0.051163,0.052111,0.069104]]},{"date":"201712170330","rgb":[[0.012413,0.027978,0.016201],[0.012601,0.026537,0.016751],[0.013866,0.026266,0.015551],[0.014449,0.026629,0.024419],[0.010611,0.028407,0.01334],[0.010382,0.028773,0.0096842],[0.010364,0.028528,0.011968],[0.012178,0.027028,0.022322],[0.010712,0.028824,0.013346],[0.01034,0.028831,0.010575],[0.010357,0.028637,0.01245],[0.011955,0.027047,0.023616],[0.037568,0.043152,0.057842],[0.036465,0.043107,0.054322],[0.03705,0.04245,0.057093],[0.0511,0.051805,0.072582]]},{"date":"201712170340","rgb":[[0.012843,0.027799,0.014334],[0.012942,0.027074,0.013375],[0.014739,0.025549,0.016812],[0.013043,0.027,0.022288],[0.010697,0.028879,0.012359],[0.010359,0.028716,0.010326],[0.01038,0.028699,0.011862],[0.011531,0.027069,0.020938],[0.010676,0.028933,0.013025],[0.010398,0.02889,0.010883],[0.010361,0.028789,0.011692],[0.011972,0.027185,0.022343],[0.037667,0.042968,0.056758],[0.036518,0.043056,0.054221],[0.036908,0.04279,0.056684],[0.051233,0.051808,0.070731]]},{"date":"201712170350","rgb":[[0.011913,0.028656,0.01423],[0.013767,0.026816,0.011969],[0.014884,0.025939,0.014241],[0.014218,0.027555,0.020024],[0.010706,0.028943,0.010991],[0.010366,0.028913,0.0077685],[0.010361,0.028882,0.0092712],[0.011835,0.028807,0.016138],[0.010683,0.029066,0.011856],[0.010343,0.028872,0.0090662],[0.010338,0.028841,0.010454],[0.011946,0.028441,0.017301],[0.037881,0.043309,0.055873],[0.036544,0.04313,0.053578],[0.037143,0.043185,0.05556],[0.052435,0.052266,0.068396]]},{"date":"201712170400","rgb":[[0.011823,0.028202,0.014449],[0.015021,0.026111,0.012379],[0.013329,0.026901,0.01372],[0.014119,0.027001,0.019878],[0.010728,0.028776,0.012775],[0.010368,0.028767,0.010334],[0.010345,0.028764,0.010682],[0.011424,0.028157,0.01713],[0.010656,0.028886,0.013464],[0.010332,0.028788,0.010281],[0.010319,0.0287,0.011769],[0.011623,0.027742,0.020039],[0.037115,0.042949,0.057289],[0.036524,0.043225,0.054116],[0.036597,0.04307,0.054819],[0.05073,0.05202,0.069143]]},{"date":"201712170410","rgb":[[0.011867,0.026957,0.019055],[0.015242,0.0255,0.016087],[0.013588,0.025441,0.018634],[0.012534,0.02667,0.024135],[0.01067,0.028749,0.012581],[0.010383,0.028717,0.01011],[0.010363,0.028473,0.011752],[0.011547,0.027368,0.019593],[0.010643,0.028728,0.013324],[0.010333,0.028746,0.010454],[0.010352,0.028651,0.011817],[0.011176,0.026999,0.020931],[0.037118,0.042658,0.058384],[0.036478,0.043119,0.054592],[0.036629,0.042757,0.056072],[0.050514,0.051503,0.070385]]},{"date":"201712170420","rgb":[[0.011875,0.027978,0.015429],[0.015637,0.02545,0.01341],[0.012806,0.026753,0.01543],[0.014005,0.026974,0.019872],[0.01077,0.028903,0.012336],[0.01035,0.028797,0.0098972],[0.010333,0.028754,0.0097632],[0.011318,0.028294,0.01626],[0.010767,0.028875,0.012885],[0.010353,0.028891,0.0090572],[0.010334,0.028759,0.011307],[0.011383,0.028501,0.015753],[0.037984,0.042988,0.057845],[0.036648,0.043184,0.05367],[0.036804,0.04318,0.054551],[0.051103,0.05251,0.067558]]},{"date":"201712170430","rgb":[[0.012028,0.027456,0.018229],[0.013948,0.025344,0.019079],[0.012195,0.025986,0.019392],[0.01301,0.026795,0.024151],[0.010646,0.028533,0.013945],[0.010352,0.028657,0.01136],[0.010389,0.028669,0.012063],[0.011602,0.027059,0.021759],[0.010742,0.028894,0.013588],[0.010336,0.028763,0.010694],[0.010333,0.028682,0.011464],[0.011991,0.027223,0.021462],[0.037633,0.042617,0.059434],[0.036669,0.042785,0.056354],[0.037082,0.042493,0.058482],[0.051427,0.051518,0.07077]]},{"date":"201712170440","rgb":[[0.012406,0.028077,0.014813],[0.013479,0.026571,0.014931],[0.011535,0.025808,0.02004],[0.013049,0.027154,0.022289],[0.010746,0.02882,0.012629],[0.010337,0.028783,0.0094999],[0.010409,0.028494,0.012411],[0.011717,0.027629,0.01905],[0.010826,0.028939,0.013051],[0.010309,0.028715,0.010907],[0.010329,0.028673,0.012277],[0.011799,0.027153,0.022523],[0.037646,0.042929,0.057275],[0.036542,0.043175,0.054061],[0.036657,0.042814,0.055788],[0.051307,0.051654,0.069747]]},{"date":"201712170450","rgb":[[0.012442,0.028115,0.01459],[0.012861,0.02668,0.015201],[0.012809,0.026163,0.017528],[0.014554,0.02703,0.020603],[0.011272,0.029016,0.013716],[0.010435,0.028789,0.010504],[0.0104,0.028721,0.010762],[0.013114,0.02795,0.020428],[0.011917,0.029439,0.014633],[0.010556,0.028963,0.011641],[0.010601,0.028974,0.011883],[0.015198,0.027199,0.023246],[0.04011,0.042903,0.059185],[0.037452,0.043267,0.055675],[0.037931,0.043216,0.056666],[0.053968,0.051738,0.071572]]},{"date":"201712170500","rgb":[[0.011487,0.027717,0.017157],[0.013281,0.026236,0.016096],[0.01196,0.025965,0.018964],[0.012722,0.027442,0.019849],[0.010656,0.028666,0.012748],[0.010392,0.028725,0.010519],[0.010353,0.028648,0.010988],[0.011521,0.028203,0.01744],[0.010712,0.028918,0.012739],[0.010359,0.028805,0.0099834],[0.010348,0.028791,0.011348],[0.012109,0.028026,0.017841],[0.037817,0.04309,0.056956],[0.036723,0.0431,0.054186],[0.037204,0.043076,0.055107],[0.051794,0.052602,0.067075]]},{"date":"201712170510","rgb":[[0.011908,0.027113,0.019202],[0.0129,0.026739,0.015544],[0.012382,0.025749,0.019862],[0.013104,0.026636,0.025811],[0.010689,0.027757,0.016418],[0.010414,0.02874,0.011933],[0.010373,0.028467,0.012477],[0.012144,0.027031,0.023881],[0.010777,0.028421,0.015065],[0.01039,0.028807,0.01196],[0.010387,0.02856,0.013003],[0.012671,0.02694,0.023795],[0.037693,0.042737,0.059823],[0.036603,0.042952,0.055166],[0.037167,0.042143,0.058739],[0.052065,0.051657,0.072135]]},{"date":"201712170520","rgb":[[0.012352,0.028067,0.015471],[0.012768,0.027226,0.013843],[0.013033,0.02643,0.015224],[0.014025,0.026614,0.022246],[0.010858,0.029008,0.013039],[0.010407,0.02878,0.010819],[0.010365,0.028708,0.011156],[0.012054,0.027864,0.020481],[0.010869,0.028881,0.013246],[0.010343,0.028732,0.011331],[0.01046,0.028812,0.011335],[0.012214,0.027588,0.020458],[0.037796,0.043256,0.057083],[0.036671,0.043236,0.054441],[0.037506,0.043362,0.056388],[0.052347,0.051811,0.07049]]},{"date":"201712170530","rgb":[[0.011887,0.028248,0.014856],[0.015971,0.025442,0.013576],[0.014172,0.025955,0.016464],[0.013386,0.026975,0.022941],[0.010752,0.028662,0.013849],[0.010416,0.028785,0.011365],[0.010407,0.028629,0.012282],[0.01171,0.026911,0.023243],[0.010768,0.028921,0.01301],[0.010336,0.028781,0.010706],[0.010304,0.028671,0.011366],[0.012004,0.027191,0.022185],[0.037978,0.042581,0.059461],[0.036588,0.042909,0.055307],[0.037278,0.04281,0.05702],[0.052299,0.051748,0.071527]]},{"date":"201712170540","rgb":[[0.012461,0.028169,0.015426],[0.012835,0.026756,0.015397],[0.013568,0.02556,0.018787],[0.014056,0.026929,0.021879],[0.010749,0.028961,0.012358],[0.010419,0.028797,0.010563],[0.010479,0.028721,0.011538],[0.012123,0.027587,0.020578],[0.010978,0.028996,0.013509],[0.010448,0.028844,0.011576],[0.010527,0.028798,0.012881],[0.01293,0.027784,0.021821],[0.038048,0.043057,0.058339],[0.037021,0.043101,0.055049],[0.037273,0.042728,0.056878],[0.052513,0.051899,0.070703]]},{"date":"201712170550","rgb":[[0.013327,0.026597,0.01747],[0.017686,0.024119,0.01627],[0.012853,0.026473,0.01642],[0.014001,0.026644,0.021541],[0.010951,0.028768,0.014358],[0.010437,0.028853,0.011527],[0.010438,0.0287,0.011862],[0.012115,0.027179,0.022912],[0.011095,0.028761,0.014683],[0.010473,0.02886,0.012536],[0.010684,0.02863,0.013251],[0.012548,0.027228,0.0239],[0.038637,0.042248,0.061976],[0.037101,0.043194,0.055344],[0.037685,0.042779,0.058353],[0.052451,0.051709,0.07259]]},{"date":"201712170600","rgb":[[0.012759,0.027485,0.016983],[0.014272,0.025777,0.01678],[0.014823,0.024325,0.021186],[0.013765,0.02692,0.022229],[0.011217,0.028264,0.016322],[0.010504,0.028818,0.011744],[0.010532,0.028039,0.014203],[0.012836,0.027636,0.021359],[0.011533,0.028188,0.018488],[0.010593,0.028736,0.013545],[0.01098,0.02864,0.01524],[0.013018,0.026858,0.025295],[0.039304,0.042442,0.062719],[0.0376,0.04326,0.057532],[0.03939,0.042935,0.059869],[0.054079,0.051598,0.073194]]},{"date":"201712170610","rgb":[[0.01277,0.027697,0.015026],[0.014342,0.025853,0.015603],[0.014481,0.025721,0.016375],[0.012932,0.026968,0.022392],[0.01078,0.028966,0.013225],[0.010423,0.028816,0.010954],[0.010401,0.028666,0.012161],[0.012229,0.027618,0.021203],[0.010894,0.028723,0.014602],[0.010404,0.028835,0.011636],[0.010509,0.028559,0.013068],[0.012965,0.027476,0.023639],[0.038415,0.042469,0.06101],[0.036716,0.043181,0.055555],[0.037598,0.043095,0.057913],[0.052733,0.051707,0.072847]]},{"date":"201712170620","rgb":[[0.012731,0.027101,0.018116],[0.014595,0.026029,0.013605],[0.013826,0.025542,0.018423],[0.01351,0.026841,0.022639],[0.01154,0.027865,0.018803],[0.010517,0.028612,0.013119],[0.010481,0.028139,0.013956],[0.012845,0.027114,0.024335],[0.011625,0.027204,0.02171],[0.01067,0.028303,0.015057],[0.010656,0.027786,0.016638],[0.012994,0.026897,0.02573],[0.039002,0.04159,0.066993],[0.037667,0.041808,0.062778],[0.038134,0.041754,0.064189],[0.053354,0.051566,0.075043]]},{"date":"201712170630","rgb":[[0.012311,0.027953,0.017078],[0.013614,0.026503,0.015247],[0.012872,0.027165,0.013453],[0.012841,0.027814,0.019652],[0.013211,0.027042,0.028847],[0.011702,0.026576,0.025179],[0.011838,0.027036,0.023545],[0.014196,0.027008,0.028848],[0.015596,0.027052,0.037379],[0.012482,0.027138,0.032525],[0.012551,0.027222,0.032148],[0.015773,0.027028,0.035725],[0.044579,0.042167,0.082616],[0.041287,0.042416,0.080507],[0.04328,0.04174,0.079641],[0.057763,0.052443,0.087746]]},{"date":"201712170640","rgb":[[0.014549,0.026646,0.028345],[0.013858,0.026275,0.021874],[0.012694,0.025939,0.021115],[0.012575,0.026593,0.02571],[0.024097,0.029463,0.10241],[0.021137,0.02787,0.082858],[0.019198,0.027668,0.065998],[0.020018,0.028409,0.068113],[0.033972,0.033894,0.17411],[0.029362,0.032692,0.14958],[0.026238,0.030545,0.12574],[0.026732,0.030884,0.12044],[0.067456,0.048489,0.25702],[0.064994,0.048712,0.24051],[0.061915,0.048367,0.22313],[0.070352,0.058235,0.20946]]},{"date":"201712170650","rgb":[[0.020678,0.028898,0.091211],[0.017448,0.027883,0.064156],[0.015529,0.026892,0.044877],[0.014997,0.027016,0.037466],[0.071444,0.050733,0.45116],[0.062613,0.050437,0.40783],[0.056202,0.04013,0.38175],[0.057883,0.037871,0.37122],[0.10758,0.11696,0.56368],[0.099972,0.12253,0.52812],[0.086002,0.08676,0.49173],[0.082236,0.049053,0.48808],[0.146,0.13688,0.62786],[0.14741,0.15407,0.61242],[0.13364,0.12519,0.56556],[0.1314,0.082977,0.55197]]},{"date":"201712170700","rgb":[[0.043922,0.055595,0.18894],[0.036071,0.048449,0.14876],[0.027052,0.037351,0.10488],[0.022531,0.030098,0.083223],[0.18232,0.23395,0.82321],[0.18824,0.26018,0.84705],[0.18999,0.25266,0.84876],[0.18231,0.20902,0.80974],[0.20874,0.28077,0.89401],[0.22242,0.31858,0.93621],[0.22602,0.3117,0.94843],[0.21659,0.26775,0.91574],[0.23504,0.2864,0.89293],[0.25312,0.33213,0.9378],[0.25719,0.32773,0.94398],[0.25823,0.29154,0.9173]]},{"date":"201712170710","rgb":[[0.13116,0.21211,0.48271],[0.10948,0.15863,0.43779],[0.083478,0.096028,0.38473],[0.068699,0.050446,0.37269],[0.49755,0.99929,0.99875],[0.50703,0.99947,0.99913],[0.47806,0.99781,0.99873],[0.44559,0.95715,0.99381],[0.65234,0.99922,0.99913],[0.62124,0.99947,0.99949],[0.56426,0.99956,0.99899],[0.49963,0.99933,0.99899],[0.55739,0.92576,0.95047],[0.5971,0.92575,0.95056],[0.56484,0.92605,0.95108],[0.51533,0.92355,0.94339]]},{"date":"201712170720","rgb":[[0.32737,0.3558,0.80969],[0.28278,0.33278,0.78871],[0.23318,0.2695,0.76392],[0.20496,0.21439,0.78315],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98047,0.99955],[0.97803,0.97613,0.9979],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92111,0.90677,0.94512]]},{"date":"201712170730","rgb":[[0.44652,0.61921,0.98869],[0.41594,0.62458,0.98897],[0.37744,0.57791,0.98792],[0.36401,0.54777,0.98653],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98427,0.98048,0.99981],[0.98151,0.97995,0.99896],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92113,0.90678,0.94513]]},{"date":"201712170740","rgb":[[0.61601,0.97882,0.99401],[0.59483,0.98608,0.9943],[0.56458,0.98293,0.99478],[0.574,0.98638,0.99454],[0.98431,0.98426,0.98459],[0.98431,0.9843,0.98443],[0.98434,0.9841,0.98551],[0.98389,0.98391,0.98663],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92058,0.91046,0.93131]]},{"date":"201712170750","rgb":[[0.71523,0.99343,0.99528],[0.71488,0.99429,0.99513],[0.68188,0.99525,0.99693],[0.69689,0.99599,0.99649],[0.98431,0.98429,0.98445],[0.98431,0.98424,0.98463],[0.98431,0.98363,0.98721],[0.98427,0.98415,0.98526],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92055,0.91043,0.93125]]},{"date":"201712170800","rgb":[[0.91853,0.99124,0.99211],[0.92769,0.98977,0.99737],[0.92155,0.99135,0.99483],[0.93919,0.99133,0.99244],[0.98431,0.98431,0.98431],[0.98431,0.98381,0.98657],[0.98431,0.98424,0.98469],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92059,0.91052,0.93121]]},{"date":"201712170810","rgb":[[0.9871,0.97949,1],[0.98856,0.979,1],[0.99531,0.97674,1],[0.99608,0.97647,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98552,0.98001,1],[0.99283,0.97757,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.9844,0.98037,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92115,0.90683,0.94505]]},{"date":"201712170820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90331,0.94509]]},{"date":"201712170830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90332,0.94511]]},{"date":"201712170840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90333,0.94503]]},{"date":"201712170850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90328,0.94497]]},{"date":"201712170900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.9033,0.94501]]},{"date":"201712170910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90328,0.94503]]},{"date":"201712170920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99422,0.9771,1],[0.99526,0.97675,1],[0.99608,0.97647,1],[0.99019,0.97847,1],[0.98458,0.98031,1],[0.98551,0.98001,1],[0.9925,0.97769,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92112,0.9068,0.94504]]},{"date":"201712170930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90331,0.94509]]},{"date":"201712170940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90329,0.94507]]},{"date":"201712170950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90328,0.94496]]},{"date":"201712171000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90326,0.94503]]},{"date":"201712171010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90324,0.94508]]},{"date":"201712171020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90326,0.94502]]},{"date":"201712171030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90326,0.9451]]},{"date":"201712171040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99512,0.97681,1],[0.99581,0.97657,1],[0.99608,0.97647,1],[0.99175,0.97795,1],[0.98514,0.98013,1],[0.98651,0.97969,1],[0.99381,0.97725,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92138,0.90673,0.94501]]},{"date":"201712171050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93055,0.90323,0.94497]]},{"date":"201712171100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90324,0.94508]]},{"date":"201712171110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90325,0.94503]]},{"date":"201712171120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90325,0.94506]]},{"date":"201712171130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99573,0.9766,1],[0.99607,0.97647,1],[0.99608,0.97647,1],[0.99314,0.97746,1],[0.98593,0.97986,1],[0.98785,0.97924,1],[0.99486,0.97689,1],[0.92195,0.90829,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92194,0.90652,0.94504]]},{"date":"201712171140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90327,0.94506]]},{"date":"201712171150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99559,0.97664,1],[0.99605,0.97648,1],[0.99608,0.97647,1],[0.99252,0.97769,1],[0.98553,0.98001,1],[0.98754,0.97933,1],[0.99474,0.97692,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92185,0.90651,0.94499]]},{"date":"201712171200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99497,0.97685,1],[0.99558,0.97665,1],[0.99608,0.97647,1],[0.99174,0.97795,1],[0.98514,0.98013,1],[0.98598,0.97985,1],[0.99321,0.97745,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92121,0.90675,0.945]]},{"date":"201712171210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90324,0.94505]]},{"date":"201712171220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90326,0.94509]]},{"date":"201712171230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90328,0.9451]]},{"date":"201712171240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99565,0.97662,1],[0.99605,0.97648,1],[0.99608,0.97647,1],[0.99275,0.9776,1],[0.98553,0.98001,1],[0.98775,0.97926,1],[0.9948,0.97689,1],[0.92195,0.90829,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92186,0.90656,0.94506]]},{"date":"201712171250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90325,0.94497]]},{"date":"201712171300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90327,0.94504]]},{"date":"201712171310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90326,0.94511]]},{"date":"201712171320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90326,0.94511]]},{"date":"201712171330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90327,0.94512]]},{"date":"201712171340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90328,0.94512]]},{"date":"201712171350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90325,0.94499]]},{"date":"201712171400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90327,0.94505]]},{"date":"201712171410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90328,0.94509]]},{"date":"201712171420","rgb":[[0.98497,0.9803,1],[0.98605,0.97982,1],[0.9931,0.97747,1],[0.99608,0.97647,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98437,0.98038,1],[0.98928,0.97875,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92113,0.9068,0.94509]]},{"date":"201712171430","rgb":[[0.96939,0.98732,0.98877],[0.97466,0.9867,0.98826],[0.97697,0.98617,0.98829],[0.98311,0.98366,0.99],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92063,0.9105,0.93128]]},{"date":"201712171440","rgb":[[0.90968,0.99137,0.9912],[0.92306,0.99089,0.99133],[0.92321,0.99093,0.99284],[0.94396,0.99028,0.99273],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98429,0.98445],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92061,0.91049,0.93127]]},{"date":"201712171450","rgb":[[0.90411,0.9915,0.99187],[0.91356,0.99121,0.99325],[0.91637,0.99175,0.99167],[0.94453,0.99027,0.99218],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92059,0.91046,0.93114]]},{"date":"201712171500","rgb":[[0.82097,0.99304,0.99293],[0.84869,0.99317,0.99311],[0.86623,0.99361,0.99462],[0.90327,0.99264,0.99482],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98433],[0.98431,0.98431,0.98435],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92056,0.91045,0.93114]]},{"date":"201712171510","rgb":[[0.58707,0.93987,0.99277],[0.56672,0.95559,0.99363],[0.53914,0.95006,0.99271],[0.5503,0.95937,0.99224],[0.98431,0.98039,1],[0.98431,0.98103,0.99768],[0.98432,0.98348,0.98805],[0.984,0.98313,0.98976],[0.98431,0.98221,0.99306],[0.98431,0.98418,0.98496],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92056,0.91043,0.93116]]},{"date":"201712171520","rgb":[[0.44136,0.70176,0.98822],[0.41099,0.70763,0.98803],[0.3721,0.66367,0.98712],[0.36219,0.65309,0.9853],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98418,0.98052,0.99985],[0.98227,0.98049,0.99931],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.9211,0.90674,0.94503]]},{"date":"201712171530","rgb":[[0.37361,0.5042,0.97906],[0.32985,0.4907,0.98026],[0.28597,0.42558,0.97393],[0.26609,0.38718,0.978],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98434,0.98046,0.99977],[0.98087,0.97914,0.99875],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92111,0.90675,0.94504]]},{"date":"201712171540","rgb":[[0.17985,0.23706,0.58936],[0.16024,0.19423,0.55924],[0.12,0.13205,0.52332],[0.098833,0.078283,0.52656],[0.70102,0.99916,0.99826],[0.80112,0.99925,0.99883],[0.80779,0.99948,0.99849],[0.74664,0.99319,0.99588],[0.761,0.9992,0.99831],[0.83687,0.99971,0.99871],[0.86732,0.99961,0.99877],[0.81269,0.99944,0.999],[0.72883,0.92554,0.95022],[0.80749,0.92605,0.95073],[0.80611,0.92614,0.95112],[0.76943,0.92404,0.94392]]},{"date":"201712171550","rgb":[[0.085881,0.14956,0.37652],[0.074625,0.12232,0.33354],[0.061019,0.080074,0.28574],[0.050585,0.043682,0.26934],[0.29155,0.79181,0.99584],[0.30656,0.83462,0.99674],[0.32684,0.85952,0.99686],[0.33039,0.79891,0.99213],[0.30708,0.85914,0.99574],[0.3241,0.8771,0.99657],[0.33958,0.87947,0.99748],[0.33925,0.81819,0.99565],[0.32364,0.87069,0.9482],[0.34317,0.87777,0.94906],[0.35542,0.85569,0.94873],[0.35909,0.78867,0.94045]]},{"date":"201712171600","rgb":[[0.033954,0.051952,0.15313],[0.029466,0.047821,0.12264],[0.023707,0.038058,0.08886],[0.020592,0.029888,0.067839],[0.13159,0.19358,0.69066],[0.14999,0.23031,0.75269],[0.16333,0.24254,0.79886],[0.17046,0.22761,0.81256],[0.13869,0.19506,0.69803],[0.15746,0.23257,0.7622],[0.17102,0.2434,0.80502],[0.18048,0.23599,0.83871],[0.14369,0.16712,0.6335],[0.16572,0.20465,0.69439],[0.17716,0.21032,0.72322],[0.19448,0.20862,0.75037]]},{"date":"201712171610","rgb":[[0.018464,0.028005,0.0644],[0.018257,0.026198,0.051187],[0.015311,0.02619,0.038467],[0.014887,0.02673,0.033461],[0.049256,0.032899,0.27812],[0.047676,0.034268,0.29984],[0.049415,0.034136,0.30528],[0.053127,0.034465,0.30882],[0.050457,0.034233,0.3012],[0.049318,0.034681,0.30913],[0.051847,0.035276,0.33377],[0.058337,0.036005,0.34918],[0.073228,0.048696,0.33165],[0.073639,0.048941,0.34061],[0.077244,0.049039,0.35624],[0.094501,0.060747,0.36887]]},{"date":"201712171620","rgb":[[0.0129,0.027338,0.023131],[0.012506,0.026856,0.018872],[0.012844,0.026735,0.018801],[0.014176,0.026717,0.02586],[0.018381,0.027587,0.043418],[0.017219,0.027556,0.043889],[0.019887,0.027883,0.045811],[0.024371,0.027865,0.051879],[0.018807,0.028022,0.046325],[0.018331,0.028363,0.047222],[0.021058,0.028242,0.049069],[0.024937,0.028709,0.057356],[0.046212,0.042422,0.0855],[0.046029,0.042804,0.08523],[0.048566,0.042183,0.087935],[0.063402,0.053514,0.10162]]},{"date":"201712171630","rgb":[[0.013493,0.027874,0.017554],[0.013962,0.026332,0.017305],[0.012881,0.027092,0.015571],[0.014218,0.027219,0.022991],[0.016216,0.026794,0.02685],[0.016088,0.027329,0.024898],[0.016561,0.02667,0.02663],[0.020732,0.025916,0.033374],[0.018748,0.026317,0.027389],[0.018179,0.026692,0.025956],[0.01941,0.025313,0.030034],[0.023796,0.02627,0.037067],[0.045266,0.040516,0.071582],[0.045052,0.040284,0.07086],[0.047102,0.040271,0.07305],[0.061677,0.051547,0.085038]]},{"date":"201712171640","rgb":[[0.01266,0.028455,0.01392],[0.015322,0.025594,0.015667],[0.013367,0.026823,0.0155],[0.013534,0.027321,0.022579],[0.013239,0.028218,0.020312],[0.011716,0.028642,0.016942],[0.013036,0.027757,0.020966],[0.016695,0.0267,0.027899],[0.014533,0.027953,0.022318],[0.01307,0.027545,0.022873],[0.014036,0.027755,0.023697],[0.019399,0.026059,0.031013],[0.042152,0.04196,0.065059],[0.041561,0.042149,0.064228],[0.043128,0.041252,0.066304],[0.058658,0.050919,0.079029]]},{"date":"201712171650","rgb":[[0.011743,0.027504,0.018096],[0.012369,0.026284,0.017819],[0.011434,0.027195,0.016302],[0.01364,0.027024,0.02447],[0.011744,0.028175,0.0187],[0.010801,0.028726,0.013906],[0.011379,0.028452,0.01687],[0.015661,0.027103,0.025031],[0.012094,0.028443,0.018301],[0.011081,0.028746,0.015355],[0.012099,0.028187,0.019546],[0.017409,0.02653,0.027472],[0.039329,0.042457,0.063363],[0.038671,0.04268,0.061111],[0.040911,0.04182,0.065017],[0.057047,0.051102,0.077991]]},{"date":"201712171700","rgb":[[0.012934,0.027719,0.016448],[0.016917,0.024982,0.015561],[0.014496,0.026145,0.014684],[0.012853,0.026739,0.022631],[0.012473,0.02858,0.018294],[0.010944,0.028994,0.014056],[0.011685,0.028829,0.015965],[0.01642,0.026751,0.025878],[0.012743,0.028169,0.019893],[0.011596,0.029209,0.01546],[0.01248,0.028198,0.019746],[0.016956,0.026665,0.027944],[0.040561,0.042056,0.064276],[0.038934,0.04285,0.061051],[0.040951,0.042138,0.064156],[0.056016,0.050941,0.075524]]},{"date":"201712171710","rgb":[[0.01353,0.027325,0.017341],[0.012785,0.02694,0.015907],[0.011898,0.026588,0.017733],[0.013613,0.026933,0.02495],[0.011812,0.028516,0.016902],[0.010876,0.029039,0.012999],[0.011149,0.028567,0.014453],[0.014739,0.026906,0.02582],[0.011743,0.028541,0.016795],[0.010932,0.02899,0.013762],[0.012072,0.028875,0.016446],[0.016074,0.026752,0.027043],[0.039361,0.04257,0.06138],[0.038006,0.042824,0.058188],[0.040034,0.042523,0.061679],[0.05461,0.051082,0.0735]]},{"date":"201712171720","rgb":[[0.012034,0.027856,0.017234],[0.015634,0.025831,0.014292],[0.016357,0.025194,0.014754],[0.01366,0.026903,0.023442],[0.011921,0.028097,0.018267],[0.010848,0.028898,0.013507],[0.011266,0.028314,0.015837],[0.014755,0.027008,0.026022],[0.012075,0.028352,0.018839],[0.010806,0.028755,0.013659],[0.011463,0.028012,0.018299],[0.015856,0.026742,0.026657],[0.039769,0.042155,0.063848],[0.038374,0.043038,0.059796],[0.03941,0.04239,0.062576],[0.054339,0.05111,0.074328]]},{"date":"201712171730","rgb":[[0.0119,0.028147,0.015831],[0.013796,0.026077,0.01553],[0.013826,0.025543,0.017954],[0.01308,0.026537,0.022521],[0.011754,0.028341,0.017716],[0.0107,0.0289,0.012495],[0.010817,0.028405,0.014884],[0.01293,0.027318,0.022815],[0.012264,0.02852,0.017205],[0.010856,0.029194,0.013475],[0.011283,0.028813,0.015925],[0.013767,0.027581,0.023668],[0.039943,0.042261,0.06331],[0.0384,0.043152,0.058663],[0.039649,0.042813,0.060702],[0.053728,0.051296,0.071909]]},{"date":"201712171740","rgb":[[0.013665,0.027026,0.016871],[0.01421,0.024947,0.020306],[0.014438,0.025722,0.016711],[0.013271,0.026938,0.022796],[0.01199,0.028344,0.017616],[0.010911,0.028068,0.016388],[0.0113,0.028467,0.016605],[0.015241,0.027153,0.024697],[0.011997,0.028199,0.019251],[0.011344,0.028029,0.017765],[0.012282,0.027588,0.021069],[0.015979,0.026868,0.027298],[0.040063,0.042369,0.063026],[0.038777,0.042158,0.061916],[0.039282,0.042103,0.0631],[0.054788,0.050755,0.07427]]},{"date":"201712171750","rgb":[[0.013049,0.027418,0.018987],[0.015381,0.025945,0.015104],[0.012671,0.026552,0.017496],[0.014308,0.027,0.025346],[0.013257,0.027929,0.020887],[0.011692,0.028696,0.016713],[0.012564,0.028351,0.018692],[0.018069,0.02629,0.028459],[0.012664,0.028078,0.021159],[0.011954,0.027763,0.020442],[0.013204,0.027795,0.022279],[0.018002,0.026632,0.029667],[0.040365,0.042078,0.064511],[0.039337,0.042167,0.062953],[0.04016,0.042016,0.064947],[0.056243,0.050578,0.076771]]},{"date":"201712171800","rgb":[[0.012852,0.028039,0.016006],[0.012534,0.027285,0.014421],[0.012564,0.026522,0.017215],[0.014109,0.027052,0.02383],[0.011188,0.02889,0.014245],[0.010411,0.028686,0.012169],[0.010518,0.028674,0.012989],[0.014178,0.0273,0.023572],[0.011392,0.028499,0.016355],[0.010587,0.028661,0.013354],[0.011094,0.028008,0.017354],[0.01516,0.026821,0.026595],[0.038762,0.04293,0.059228],[0.037724,0.043554,0.055887],[0.039024,0.042762,0.060894],[0.054796,0.051686,0.074105]]},{"date":"201712171810","rgb":[[0.012317,0.026988,0.019488],[0.013767,0.024735,0.02158],[0.013356,0.02649,0.016444],[0.013559,0.026962,0.023537],[0.011733,0.028156,0.017853],[0.010845,0.026777,0.019405],[0.010894,0.028738,0.013958],[0.013173,0.027282,0.023896],[0.011965,0.02787,0.019961],[0.011114,0.02774,0.017611],[0.011103,0.028843,0.015027],[0.014426,0.027302,0.024151],[0.039152,0.041923,0.062838],[0.037714,0.042985,0.058575],[0.038582,0.042814,0.060461],[0.053541,0.051356,0.073748]]},{"date":"201712171820","rgb":[[0.01328,0.027667,0.014172],[0.017336,0.024722,0.012871],[0.012745,0.026657,0.016024],[0.013626,0.027576,0.021597],[0.010966,0.029033,0.013091],[0.010373,0.028806,0.010039],[0.010433,0.028752,0.011406],[0.013017,0.028033,0.020772],[0.011027,0.029147,0.013453],[0.010375,0.028791,0.011572],[0.01053,0.028775,0.012857],[0.014032,0.026996,0.024114],[0.038466,0.043223,0.057801],[0.036838,0.043486,0.055058],[0.038159,0.043125,0.057366],[0.053353,0.051731,0.071996]]},{"date":"201712171830","rgb":[[0.012845,0.027698,0.015435],[0.012797,0.026582,0.016001],[0.016084,0.025141,0.016149],[0.014632,0.027792,0.018994],[0.010962,0.029073,0.013343],[0.010563,0.028952,0.011532],[0.010563,0.028963,0.011253],[0.013351,0.02864,0.018641],[0.011175,0.028983,0.014171],[0.010702,0.028964,0.013048],[0.010981,0.029066,0.012783],[0.014636,0.027882,0.021786],[0.038934,0.043299,0.057061],[0.038292,0.043457,0.056183],[0.038828,0.043576,0.056561],[0.054785,0.05198,0.069126]]},{"date":"201712171840","rgb":[[0.012741,0.027493,0.016931],[0.012829,0.026754,0.014805],[0.012621,0.026249,0.017626],[0.012832,0.026407,0.023945],[0.010889,0.028724,0.014399],[0.010454,0.028847,0.011532],[0.010422,0.028501,0.012674],[0.012295,0.027149,0.020973],[0.011133,0.028602,0.015053],[0.010606,0.028925,0.012375],[0.010648,0.028842,0.01313],[0.013221,0.027802,0.02032],[0.038757,0.043159,0.057747],[0.037106,0.043404,0.055563],[0.038189,0.043008,0.058133],[0.052763,0.051909,0.070214]]},{"date":"201712171850","rgb":[[0.012293,0.027467,0.016889],[0.017522,0.024482,0.014346],[0.016031,0.024949,0.016174],[0.013322,0.026574,0.024752],[0.011329,0.028895,0.015016],[0.010499,0.028812,0.011773],[0.010609,0.028876,0.012678],[0.013475,0.027544,0.021757],[0.011198,0.028639,0.015496],[0.01052,0.028782,0.012575],[0.010886,0.028511,0.015004],[0.013355,0.027147,0.025158],[0.039107,0.043192,0.059774],[0.037542,0.043392,0.056442],[0.038486,0.043007,0.059858],[0.05343,0.051729,0.072153]]},{"date":"201712171900","rgb":[[0.011656,0.02776,0.017094],[0.013514,0.025304,0.019357],[0.012313,0.026802,0.016577],[0.013973,0.027099,0.024713],[0.011015,0.02858,0.015169],[0.010425,0.028702,0.011788],[0.010469,0.028565,0.012304],[0.012885,0.027122,0.023984],[0.011616,0.028414,0.018003],[0.010482,0.028734,0.012885],[0.010651,0.028537,0.0141],[0.013938,0.026921,0.025794],[0.038652,0.042168,0.063449],[0.037601,0.042383,0.059065],[0.038213,0.042651,0.060615],[0.053256,0.05149,0.07458]]},{"date":"201712171910","rgb":[[0.012184,0.028273,0.014946],[0.01408,0.026271,0.013468],[0.014441,0.026373,0.013069],[0.01335,0.027983,0.018516],[0.010962,0.029076,0.013409],[0.010502,0.028883,0.01084],[0.010435,0.028878,0.010418],[0.012716,0.028648,0.016811],[0.011448,0.029187,0.013704],[0.010506,0.028841,0.011137],[0.010499,0.028906,0.012736],[0.013701,0.028272,0.018003],[0.038975,0.043036,0.058994],[0.037477,0.043442,0.055979],[0.038083,0.043525,0.055982],[0.052753,0.052022,0.068544]]},{"date":"201712171920","rgb":[[0.013555,0.02723,0.015702],[0.019291,0.023434,0.014641],[0.016392,0.024905,0.016549],[0.013592,0.027572,0.020263],[0.011184,0.028883,0.01364],[0.010462,0.028726,0.011976],[0.010539,0.028744,0.011988],[0.013135,0.027969,0.020604],[0.011257,0.02889,0.015025],[0.010472,0.028825,0.012145],[0.010768,0.028679,0.01314],[0.013406,0.027554,0.023056],[0.038959,0.042844,0.059022],[0.03733,0.043239,0.056361],[0.037692,0.042988,0.058183],[0.053496,0.051763,0.070679]]},{"date":"201712171930","rgb":[[0.013357,0.02634,0.020219],[0.01466,0.025351,0.016824],[0.013228,0.02699,0.013973],[0.013032,0.027231,0.022925],[0.011014,0.028597,0.014258],[0.010438,0.02886,0.011106],[0.010593,0.028843,0.012214],[0.013205,0.027938,0.020286],[0.011452,0.029,0.014805],[0.01053,0.028957,0.011439],[0.010867,0.029124,0.013095],[0.014711,0.027478,0.022734],[0.039003,0.042855,0.060501],[0.037701,0.043422,0.055972],[0.038475,0.043523,0.05713],[0.053278,0.051756,0.071447]]},{"date":"201712171940","rgb":[[0.012939,0.026574,0.01913],[0.015379,0.025028,0.017565],[0.012366,0.025689,0.019535],[0.013158,0.026689,0.024796],[0.010841,0.028805,0.013762],[0.010423,0.028661,0.012108],[0.010423,0.028391,0.013354],[0.012251,0.027463,0.022196],[0.011178,0.028169,0.016923],[0.010423,0.028675,0.013017],[0.010555,0.028434,0.014191],[0.013098,0.027174,0.024823],[0.038732,0.042025,0.063316],[0.037242,0.042355,0.059333],[0.037823,0.041996,0.061706],[0.052585,0.05149,0.074413]]},{"date":"201712171950","rgb":[[0.012741,0.027894,0.015864],[0.012629,0.027213,0.015122],[0.012215,0.026474,0.017197],[0.013668,0.026737,0.023611],[0.01092,0.028642,0.01399],[0.010466,0.028822,0.011398],[0.010526,0.02866,0.012329],[0.012812,0.027081,0.022671],[0.011456,0.028591,0.016278],[0.010522,0.028784,0.012643],[0.010554,0.028445,0.013404],[0.013323,0.027098,0.023315],[0.039561,0.042584,0.061374],[0.038037,0.043069,0.057972],[0.038458,0.042812,0.059933],[0.053499,0.05159,0.073016]]},{"date":"201712172000","rgb":[[0.012873,0.027619,0.017166],[0.015081,0.02554,0.016172],[0.012445,0.027342,0.01404],[0.014052,0.026839,0.023571],[0.01126,0.02876,0.015329],[0.010408,0.028734,0.011513],[0.010508,0.028772,0.013094],[0.012746,0.027527,0.022101],[0.011389,0.029112,0.015528],[0.010506,0.028837,0.013013],[0.010696,0.028771,0.013634],[0.013103,0.027624,0.023069],[0.039415,0.043212,0.059977],[0.037853,0.043358,0.057123],[0.038347,0.043031,0.058548],[0.054058,0.051597,0.072793]]},{"date":"201712172010","rgb":[[0.012725,0.02755,0.016062],[0.014976,0.025339,0.017324],[0.012546,0.026111,0.01838],[0.014871,0.026529,0.022943],[0.011087,0.028968,0.013455],[0.010378,0.02877,0.010812],[0.010381,0.028613,0.012449],[0.011952,0.027594,0.021617],[0.011279,0.028665,0.015508],[0.010475,0.028805,0.012357],[0.01043,0.027983,0.014641],[0.012738,0.02705,0.024647],[0.039076,0.042986,0.060508],[0.037658,0.042859,0.057693],[0.038343,0.042723,0.05943],[0.052791,0.051491,0.072625]]},{"date":"201712172020","rgb":[[0.012311,0.027678,0.016454],[0.012916,0.026282,0.017377],[0.013112,0.026357,0.017513],[0.014388,0.026972,0.023096],[0.011157,0.028839,0.013998],[0.01045,0.028769,0.011143],[0.010449,0.028773,0.012111],[0.013272,0.028006,0.020132],[0.011592,0.029082,0.014242],[0.010487,0.028778,0.012286],[0.010658,0.028824,0.01311],[0.013416,0.027294,0.023453],[0.039698,0.043049,0.059768],[0.037504,0.043231,0.056813],[0.038222,0.043089,0.057937],[0.054218,0.051526,0.072072]]},{"date":"201712172030","rgb":[[0.012267,0.027436,0.017521],[0.013172,0.026814,0.014462],[0.01281,0.025464,0.019861],[0.013304,0.026288,0.024003],[0.010985,0.028343,0.01543],[0.010447,0.028808,0.012035],[0.01041,0.027923,0.013854],[0.012277,0.027484,0.02089],[0.011229,0.028729,0.014939],[0.010458,0.028765,0.012483],[0.010485,0.028638,0.012764],[0.012763,0.027762,0.021541],[0.038665,0.043095,0.060312],[0.037347,0.043175,0.055493],[0.037629,0.042607,0.058413],[0.052255,0.051711,0.071437]]},{"date":"201712172040","rgb":[[0.012397,0.027413,0.017511],[0.014589,0.025901,0.016229],[0.014807,0.025764,0.015526],[0.012975,0.027221,0.021988],[0.010893,0.028719,0.014818],[0.010445,0.02878,0.01193],[0.010509,0.028608,0.012531],[0.011945,0.027298,0.022224],[0.011475,0.028599,0.015512],[0.010503,0.028909,0.011944],[0.010551,0.028704,0.012895],[0.012693,0.027308,0.022775],[0.038907,0.042956,0.060296],[0.037577,0.043267,0.056409],[0.038064,0.043075,0.058349],[0.052043,0.051828,0.071214]]},{"date":"201712172050","rgb":[[0.012735,0.027533,0.018015],[0.01473,0.025262,0.018332],[0.015266,0.024678,0.02002],[0.014255,0.026797,0.024467],[0.011353,0.028701,0.014994],[0.010446,0.028778,0.012238],[0.010475,0.028508,0.013435],[0.012621,0.027149,0.023579],[0.011209,0.028967,0.014773],[0.010468,0.028876,0.011849],[0.01047,0.028527,0.013404],[0.013059,0.027572,0.022641],[0.039014,0.043033,0.060596],[0.037214,0.043218,0.057005],[0.037771,0.043283,0.05896],[0.052753,0.051754,0.071532]]},{"date":"201712172100","rgb":[[0.012719,0.02788,0.014969],[0.014912,0.025562,0.016414],[0.014194,0.025689,0.01776],[0.013516,0.02719,0.019875],[0.011269,0.02907,0.014057],[0.010435,0.02874,0.011607],[0.010512,0.028575,0.012617],[0.012586,0.027247,0.021194],[0.011256,0.029292,0.014062],[0.010388,0.028759,0.012301],[0.010533,0.028641,0.013416],[0.012715,0.027673,0.021868],[0.039155,0.04293,0.059736],[0.037207,0.043172,0.055163],[0.037824,0.043297,0.056987],[0.051783,0.051739,0.070709]]},{"date":"201712172110","rgb":[[0.012778,0.02777,0.014592],[0.014772,0.025054,0.018198],[0.015124,0.025695,0.015039],[0.013358,0.026741,0.022404],[0.011062,0.028919,0.014176],[0.010413,0.028758,0.011083],[0.010414,0.02873,0.011452],[0.012095,0.02763,0.021318],[0.011072,0.028785,0.015306],[0.010473,0.028852,0.01181],[0.010478,0.028851,0.011852],[0.012601,0.027722,0.021751],[0.038807,0.042946,0.059744],[0.036968,0.043335,0.056172],[0.037526,0.043339,0.056289],[0.052115,0.051582,0.069035]]},{"date":"201712172120","rgb":[[0.012249,0.027706,0.016214],[0.013553,0.025271,0.019418],[0.013988,0.025435,0.017927],[0.01312,0.026581,0.02417],[0.010814,0.028604,0.014303],[0.010394,0.028584,0.012299],[0.010434,0.028574,0.012406],[0.012296,0.026885,0.022757],[0.011153,0.028757,0.015558],[0.010451,0.028854,0.011173],[0.010483,0.028688,0.012984],[0.013029,0.027607,0.021969],[0.038514,0.041976,0.061739],[0.036894,0.043182,0.055542],[0.037767,0.042922,0.057635],[0.052182,0.051665,0.070634]]},{"date":"201712172130","rgb":[[0.012741,0.027791,0.015334],[0.014921,0.026081,0.013557],[0.012661,0.026987,0.014931],[0.013143,0.026979,0.022604],[0.011236,0.028513,0.015421],[0.010455,0.028815,0.011574],[0.010512,0.028747,0.012082],[0.012181,0.027729,0.020666],[0.011405,0.029223,0.014147],[0.010457,0.028886,0.011188],[0.010495,0.028866,0.011783],[0.012271,0.028149,0.019617],[0.038193,0.043348,0.058206],[0.036983,0.043263,0.055467],[0.037389,0.043218,0.057286],[0.051639,0.051795,0.069677]]},{"date":"201712172140","rgb":[[0.013542,0.027102,0.01639],[0.016772,0.024888,0.014644],[0.016952,0.024644,0.015695],[0.013198,0.026982,0.022289],[0.011314,0.027991,0.017243],[0.010475,0.028739,0.01163],[0.010644,0.028695,0.012791],[0.012672,0.027255,0.022535],[0.011112,0.028955,0.014951],[0.01051,0.028905,0.012728],[0.010568,0.028839,0.012388],[0.012792,0.027444,0.022215],[0.038483,0.042682,0.059632],[0.037238,0.043063,0.056161],[0.037836,0.04325,0.056586],[0.052046,0.05183,0.069626]]},{"date":"201712172150","rgb":[[0.013095,0.027343,0.017993],[0.017684,0.02454,0.015827],[0.016264,0.02394,0.020252],[0.01391,0.026747,0.024651],[0.011735,0.028417,0.016231],[0.010581,0.028825,0.012706],[0.010641,0.028061,0.01518],[0.012867,0.027057,0.024463],[0.012002,0.028816,0.016224],[0.010819,0.029007,0.013424],[0.01082,0.028216,0.015073],[0.014269,0.027315,0.024615],[0.039791,0.04244,0.06104],[0.038039,0.043353,0.05685],[0.039164,0.043098,0.059068],[0.055121,0.051277,0.071907]]},{"date":"201712172200","rgb":[[0.01239,0.028161,0.015898],[0.013293,0.026755,0.01524],[0.014019,0.026369,0.01379],[0.013536,0.027291,0.022046],[0.011645,0.028646,0.016738],[0.01071,0.028973,0.012135],[0.010685,0.028721,0.013414],[0.013769,0.027892,0.02174],[0.011962,0.028643,0.016953],[0.010808,0.0291,0.013463],[0.010988,0.02874,0.014172],[0.014268,0.027446,0.024007],[0.039294,0.042365,0.063007],[0.037934,0.043117,0.057184],[0.038631,0.042884,0.059152],[0.054512,0.051545,0.071665]]},{"date":"201712172210","rgb":[[0.013618,0.026912,0.016642],[0.014565,0.025883,0.015533],[0.014818,0.026058,0.014322],[0.014033,0.026375,0.022968],[0.01145,0.027964,0.017764],[0.010605,0.028749,0.01358],[0.010579,0.028623,0.013646],[0.012841,0.027211,0.023251],[0.011847,0.028623,0.016781],[0.010744,0.028847,0.013541],[0.010819,0.028169,0.015992],[0.014082,0.027357,0.023915],[0.038658,0.042827,0.061386],[0.037644,0.043297,0.056767],[0.038322,0.04311,0.058889],[0.052813,0.051439,0.071603]]},{"date":"201712172220","rgb":[[0.012998,0.027935,0.014943],[0.014172,0.0263,0.013652],[0.015487,0.025698,0.013587],[0.014249,0.026706,0.023906],[0.011141,0.028907,0.014464],[0.010448,0.028826,0.011479],[0.010523,0.028824,0.012752],[0.013012,0.027373,0.022542],[0.011218,0.029067,0.014432],[0.010426,0.028795,0.011975],[0.010609,0.028837,0.012729],[0.013271,0.027403,0.023066],[0.038311,0.042753,0.059613],[0.037071,0.043333,0.054948],[0.037647,0.043231,0.056863],[0.052918,0.051563,0.071231]]},{"date":"201712172230","rgb":[[0.011917,0.027718,0.01652],[0.013976,0.026524,0.013815],[0.014823,0.025245,0.017978],[0.01311,0.0267,0.024501],[0.011303,0.028957,0.013893],[0.010463,0.028846,0.011473],[0.010477,0.028719,0.012026],[0.01243,0.026863,0.02376],[0.011494,0.028988,0.015038],[0.010515,0.028892,0.012578],[0.010588,0.028769,0.012976],[0.012764,0.027245,0.024525],[0.0388,0.042029,0.0628],[0.037302,0.04311,0.056563],[0.037546,0.042898,0.058634],[0.051713,0.051528,0.073765]]},{"date":"201712172240","rgb":[[0.012057,0.027896,0.014789],[0.012923,0.027104,0.014853],[0.012071,0.026483,0.01713],[0.013529,0.026459,0.023513],[0.011297,0.028872,0.01439],[0.010439,0.028902,0.010576],[0.010483,0.028647,0.012254],[0.012773,0.027373,0.022075],[0.011225,0.028953,0.014661],[0.010481,0.028805,0.012035],[0.010552,0.028663,0.013228],[0.013017,0.027834,0.021447],[0.038311,0.043127,0.058026],[0.036905,0.043317,0.054629],[0.037434,0.042948,0.057441],[0.052148,0.051841,0.069862]]},{"date":"201712172250","rgb":[[0.01295,0.027319,0.017363],[0.013984,0.025571,0.018067],[0.012799,0.026813,0.015663],[0.013305,0.026597,0.025833],[0.011409,0.028459,0.016936],[0.010506,0.028844,0.012487],[0.010631,0.02861,0.013788],[0.013335,0.027183,0.024138],[0.011714,0.028654,0.015901],[0.010598,0.028866,0.01292],[0.010684,0.028692,0.013638],[0.013385,0.02703,0.025017],[0.038497,0.042512,0.06117],[0.03747,0.042904,0.057712],[0.038287,0.042437,0.061143],[0.053412,0.051161,0.074756]]},{"date":"201712172300","rgb":[[0.01232,0.028137,0.016214],[0.01516,0.025729,0.014801],[0.014313,0.026056,0.014515],[0.01321,0.026909,0.022489],[0.011929,0.028666,0.016198],[0.010588,0.028794,0.012413],[0.010603,0.028697,0.013217],[0.013078,0.027319,0.023273],[0.012166,0.029075,0.016879],[0.010705,0.028868,0.012978],[0.010799,0.028865,0.013924],[0.013517,0.026965,0.02579],[0.039972,0.042637,0.061081],[0.037819,0.043528,0.05663],[0.038667,0.043403,0.058166],[0.053765,0.051765,0.072465]]},{"date":"201712172310","rgb":[[0.012137,0.028243,0.016073],[0.01187,0.027512,0.014341],[0.012301,0.027091,0.01564],[0.013326,0.026693,0.024187],[0.01337,0.028856,0.017925],[0.011182,0.029207,0.01397],[0.011313,0.028981,0.014598],[0.015293,0.02696,0.025027],[0.015351,0.028101,0.02085],[0.011836,0.029673,0.014924],[0.012349,0.028846,0.017685],[0.016881,0.026843,0.026953],[0.042448,0.042362,0.06376],[0.038942,0.043184,0.060113],[0.040126,0.04303,0.061648],[0.056286,0.050688,0.075711]]},{"date":"201712172320","rgb":[[0.012748,0.027905,0.016977],[0.012795,0.026726,0.015777],[0.011744,0.02727,0.015183],[0.013424,0.027183,0.022359],[0.01564,0.028263,0.018413],[0.012513,0.02938,0.015037],[0.012041,0.028603,0.016725],[0.016215,0.027357,0.023791],[0.017303,0.027709,0.020312],[0.013509,0.029215,0.016021],[0.013411,0.028909,0.018323],[0.017731,0.026931,0.027019],[0.045606,0.041218,0.064319],[0.04185,0.042528,0.06142],[0.042689,0.042278,0.06238],[0.057643,0.051103,0.074397]]},{"date":"201712172330","rgb":[[0.013364,0.02781,0.017323],[0.012771,0.027727,0.012914],[0.014795,0.025587,0.01677],[0.013487,0.027208,0.021484],[0.015244,0.028089,0.021302],[0.013222,0.028421,0.019372],[0.012658,0.027833,0.021103],[0.016344,0.026889,0.025909],[0.017549,0.027368,0.023043],[0.014713,0.02808,0.021157],[0.014876,0.027644,0.023018],[0.018553,0.026352,0.02876],[0.044697,0.041428,0.065827],[0.042915,0.042017,0.063197],[0.043788,0.041617,0.065314],[0.057439,0.051158,0.076075]]},{"date":"201712172340","rgb":[[0.013294,0.028035,0.016182],[0.012918,0.027094,0.014943],[0.013741,0.025422,0.019756],[0.013457,0.02775,0.01925],[0.015406,0.028212,0.020521],[0.012761,0.029152,0.016272],[0.013127,0.028655,0.018276],[0.016701,0.027396,0.024249],[0.017572,0.027541,0.022157],[0.015132,0.028375,0.019083],[0.015629,0.028277,0.020684],[0.018727,0.026448,0.026662],[0.044399,0.041405,0.065523],[0.041889,0.042386,0.062038],[0.044011,0.041673,0.064383],[0.057542,0.050977,0.074956]]},{"date":"201712172350","rgb":[[0.013318,0.027512,0.01814],[0.012747,0.027433,0.014679],[0.015126,0.025442,0.017359],[0.014045,0.027063,0.022288],[0.019083,0.026553,0.025569],[0.01795,0.02728,0.023801],[0.017068,0.027444,0.02389],[0.020503,0.026172,0.031267],[0.022035,0.025386,0.026398],[0.019305,0.026656,0.023876],[0.019074,0.026703,0.025043],[0.022777,0.026139,0.03349],[0.048943,0.040466,0.07256],[0.047181,0.039656,0.069149],[0.047424,0.040287,0.070053],[0.062164,0.051345,0.083442]]},{"date":"201712180000","rgb":[[0.014452,0.026496,0.022704],[0.013814,0.026078,0.019362],[0.012922,0.025915,0.020828],[0.014159,0.026665,0.027086],[0.026106,0.026386,0.03617],[0.024484,0.025193,0.031707],[0.023842,0.02565,0.03361],[0.026142,0.026241,0.041741],[0.029417,0.02581,0.041028],[0.026833,0.025871,0.037047],[0.027791,0.025571,0.04021],[0.029485,0.026678,0.046643],[0.057011,0.041035,0.085031],[0.052913,0.04054,0.081064],[0.05397,0.04034,0.082818],[0.069977,0.052885,0.09567]]},{"date":"201712180010","rgb":[[0.0141,0.027072,0.020567],[0.01308,0.026213,0.019288],[0.01419,0.025377,0.019742],[0.014305,0.026559,0.026184],[0.024156,0.025554,0.033353],[0.022995,0.024956,0.031185],[0.024268,0.025213,0.033067],[0.02541,0.026503,0.04014],[0.027325,0.026181,0.037192],[0.026168,0.025724,0.034604],[0.027781,0.026121,0.038728],[0.029513,0.026294,0.045633],[0.053181,0.041109,0.079506],[0.051507,0.040764,0.077238],[0.052877,0.040378,0.081212],[0.068879,0.052161,0.092487]]},{"date":"201712180020","rgb":[[0.014042,0.027395,0.019863],[0.012928,0.027415,0.015711],[0.014563,0.026133,0.017679],[0.014807,0.026817,0.024357],[0.023065,0.025924,0.031315],[0.023064,0.02522,0.03146],[0.024163,0.025634,0.032009],[0.025738,0.026161,0.038343],[0.026316,0.026402,0.035477],[0.026621,0.025886,0.035106],[0.027621,0.026381,0.03747],[0.030001,0.025991,0.043558],[0.04956,0.041132,0.076759],[0.051077,0.040693,0.076276],[0.052049,0.040782,0.078627],[0.067613,0.051837,0.090768]]},{"date":"201712180030","rgb":[[0.013429,0.027419,0.018219],[0.01526,0.025104,0.020547],[0.014903,0.025161,0.020128],[0.013563,0.026443,0.024809],[0.023495,0.025811,0.03342],[0.023046,0.025253,0.0309],[0.022519,0.025221,0.031844],[0.023777,0.026282,0.037952],[0.025477,0.026382,0.036256],[0.0263,0.025458,0.035757],[0.026526,0.025255,0.037611],[0.02616,0.026581,0.042635],[0.049678,0.041576,0.078076],[0.051537,0.04052,0.077875],[0.05236,0.040196,0.081581],[0.065739,0.051892,0.091484]]},{"date":"201712180040","rgb":[[0.014683,0.026275,0.022892],[0.014875,0.02604,0.01778],[0.014478,0.026304,0.015385],[0.014046,0.027435,0.022322],[0.019418,0.025331,0.030654],[0.019097,0.025737,0.028027],[0.019636,0.025719,0.029745],[0.023262,0.026177,0.035159],[0.019924,0.025596,0.031598],[0.020723,0.025027,0.029995],[0.022483,0.025005,0.031673],[0.026041,0.026344,0.038208],[0.046,0.040672,0.073119],[0.045756,0.040124,0.07112],[0.047999,0.040368,0.074031],[0.063651,0.051565,0.085895]]},{"date":"201712180050","rgb":[[0.013188,0.027718,0.018365],[0.012355,0.026732,0.017011],[0.013664,0.026924,0.014051],[0.013676,0.027153,0.023341],[0.016382,0.026844,0.027647],[0.01391,0.027816,0.023778],[0.014458,0.027488,0.024306],[0.018683,0.025956,0.030052],[0.017127,0.026488,0.028309],[0.014504,0.027455,0.024953],[0.015669,0.02695,0.026462],[0.019151,0.026369,0.032573],[0.044464,0.040364,0.070748],[0.042829,0.041497,0.066509],[0.044242,0.040664,0.068812],[0.059658,0.051746,0.081993]]},{"date":"201712180100","rgb":[[0.013729,0.027148,0.01841],[0.013915,0.02557,0.019482],[0.014309,0.024548,0.021084],[0.014028,0.02713,0.02079],[0.016258,0.026672,0.027382],[0.014434,0.027626,0.024157],[0.015955,0.027341,0.024989],[0.0189,0.026055,0.031147],[0.01864,0.02608,0.029],[0.016754,0.027183,0.024713],[0.017567,0.026749,0.025832],[0.021239,0.026137,0.032931],[0.045324,0.041031,0.071856],[0.04465,0.040713,0.067934],[0.045046,0.04053,0.069277],[0.060437,0.051531,0.081492]]},{"date":"201712180110","rgb":[[0.013513,0.027924,0.017347],[0.013229,0.026875,0.016565],[0.012293,0.025996,0.019191],[0.013922,0.027292,0.02292],[0.018799,0.026191,0.027456],[0.017769,0.026956,0.025347],[0.016348,0.027445,0.024667],[0.018878,0.025978,0.030039],[0.019479,0.025873,0.027894],[0.018775,0.026136,0.026976],[0.018544,0.026008,0.027822],[0.020702,0.025778,0.033529],[0.045596,0.040831,0.069378],[0.044481,0.040943,0.067842],[0.04472,0.040827,0.069162],[0.058971,0.05149,0.079371]]},{"date":"201712180120","rgb":[[0.013019,0.02668,0.021581],[0.013902,0.026193,0.017304],[0.014003,0.025159,0.020164],[0.013889,0.026634,0.025782],[0.017003,0.026156,0.029094],[0.015395,0.027281,0.02535],[0.015892,0.027008,0.026717],[0.019005,0.025999,0.032081],[0.017931,0.02579,0.030063],[0.015956,0.027185,0.026282],[0.016274,0.026935,0.027176],[0.02015,0.026059,0.034144],[0.044318,0.040876,0.069681],[0.041468,0.042013,0.066319],[0.042778,0.04114,0.068599],[0.058447,0.051313,0.080672]]},{"date":"201712180130","rgb":[[0.013024,0.027453,0.020318],[0.013735,0.026389,0.017183],[0.013491,0.026768,0.014869],[0.013554,0.026954,0.024502],[0.018467,0.02578,0.029419],[0.018306,0.026621,0.026242],[0.018655,0.026281,0.02644],[0.02068,0.026204,0.032117],[0.019205,0.025298,0.030364],[0.018178,0.026512,0.026341],[0.019588,0.0257,0.028898],[0.022498,0.026413,0.035317],[0.045537,0.040588,0.072502],[0.044354,0.040808,0.067921],[0.04531,0.04037,0.070621],[0.060323,0.051636,0.082564]]},{"date":"201712180140","rgb":[[0.013259,0.027622,0.019033],[0.014551,0.026513,0.015013],[0.015797,0.0255,0.014831],[0.013706,0.02709,0.022664],[0.020037,0.026005,0.027907],[0.019238,0.02649,0.025443],[0.01916,0.026262,0.026068],[0.022076,0.025825,0.033462],[0.019859,0.025608,0.029957],[0.020231,0.02527,0.028727],[0.0211,0.025181,0.030316],[0.023882,0.02638,0.037805],[0.04538,0.040698,0.071272],[0.045852,0.039899,0.069949],[0.048236,0.040081,0.073027],[0.062557,0.051582,0.085255]]},{"date":"201712180150","rgb":[[0.013577,0.027578,0.018406],[0.014933,0.024902,0.020692],[0.012885,0.026168,0.018698],[0.013424,0.027202,0.022458],[0.018168,0.026636,0.026478],[0.016673,0.026916,0.025637],[0.018066,0.026645,0.02618],[0.020283,0.025979,0.031422],[0.018597,0.026199,0.027297],[0.01712,0.027102,0.025298],[0.019005,0.0263,0.027291],[0.02181,0.026121,0.035269],[0.043362,0.040863,0.068027],[0.042603,0.04173,0.065729],[0.044552,0.040708,0.068721],[0.059526,0.051695,0.080754]]},{"date":"201712180200","rgb":[[0.013155,0.027231,0.019645],[0.015105,0.026234,0.014873],[0.012454,0.026947,0.016223],[0.014065,0.02694,0.021084],[0.016705,0.026881,0.026547],[0.014576,0.027763,0.0231],[0.014496,0.027828,0.023244],[0.017318,0.026289,0.027819],[0.018327,0.026005,0.028796],[0.016627,0.027063,0.025967],[0.015334,0.027455,0.02452],[0.01892,0.026123,0.028918],[0.044888,0.040525,0.070948],[0.044567,0.040844,0.067724],[0.04379,0.04105,0.067185],[0.056803,0.051441,0.075545]]},{"date":"201712180210","rgb":[[0.012849,0.027335,0.019465],[0.015958,0.025151,0.017087],[0.013643,0.026211,0.016655],[0.013115,0.027152,0.022065],[0.015789,0.027214,0.026278],[0.01507,0.027708,0.023933],[0.016856,0.027246,0.02497],[0.01924,0.025849,0.030256],[0.01603,0.027577,0.024778],[0.015372,0.027573,0.024183],[0.018089,0.026425,0.026675],[0.021429,0.02601,0.033155],[0.042042,0.041723,0.066056],[0.041861,0.04208,0.065397],[0.044556,0.041031,0.068218],[0.059285,0.051264,0.081082]]},{"date":"201712180220","rgb":[[0.012982,0.0275,0.018492],[0.012185,0.027835,0.014405],[0.012933,0.026852,0.01549],[0.014054,0.026658,0.024604],[0.014821,0.027392,0.025244],[0.012652,0.027686,0.022728],[0.013511,0.027664,0.023566],[0.016545,0.026671,0.028427],[0.015916,0.026935,0.027246],[0.013546,0.027611,0.023855],[0.014736,0.02749,0.024759],[0.018836,0.026205,0.031183],[0.0432,0.041073,0.067918],[0.041421,0.042005,0.06574],[0.040728,0.042149,0.066153],[0.0564,0.051528,0.077889]]},{"date":"201712180230","rgb":[[0.013786,0.027335,0.018606],[0.014774,0.025722,0.017179],[0.01232,0.026695,0.016656],[0.01403,0.026917,0.024755],[0.015363,0.027018,0.027222],[0.013845,0.027642,0.024288],[0.014966,0.027716,0.024032],[0.018832,0.026088,0.031236],[0.017154,0.027001,0.026731],[0.015207,0.027677,0.024497],[0.016476,0.027136,0.025542],[0.019971,0.02637,0.032884],[0.044183,0.040663,0.07107],[0.042208,0.04157,0.06736],[0.043438,0.041126,0.067882],[0.058719,0.051458,0.081677]]},{"date":"201712180240","rgb":[[0.013264,0.027432,0.018825],[0.014265,0.026462,0.016086],[0.014364,0.025837,0.017625],[0.014077,0.026816,0.022849],[0.016753,0.026966,0.025723],[0.014573,0.027652,0.023867],[0.013768,0.027789,0.02379],[0.017364,0.026395,0.028161],[0.016693,0.026848,0.026804],[0.013894,0.027708,0.024534],[0.014569,0.027565,0.024884],[0.017898,0.026123,0.030081],[0.04224,0.041192,0.069542],[0.040597,0.041706,0.066435],[0.040768,0.042015,0.0664],[0.055996,0.051442,0.077142]]},{"date":"201712180250","rgb":[[0.013313,0.026296,0.023209],[0.012558,0.027,0.017535],[0.013092,0.02653,0.017903],[0.014093,0.026621,0.025297],[0.017112,0.026585,0.026859],[0.016,0.027498,0.025056],[0.016406,0.027086,0.02615],[0.01953,0.025649,0.032204],[0.017371,0.026287,0.027404],[0.01658,0.027366,0.024874],[0.018237,0.026127,0.02768],[0.020693,0.026101,0.034642],[0.043854,0.040782,0.070076],[0.043342,0.041359,0.066909],[0.044176,0.040585,0.070034],[0.059348,0.051935,0.081472]]},{"date":"201712180300","rgb":[[0.013649,0.027284,0.018065],[0.01756,0.024861,0.013554],[0.017214,0.024483,0.016555],[0.013762,0.027156,0.021052],[0.017181,0.027029,0.025548],[0.016109,0.027601,0.023938],[0.017137,0.027405,0.02363],[0.018934,0.026128,0.02953],[0.018481,0.02654,0.02711],[0.016912,0.02756,0.023878],[0.018495,0.026691,0.025622],[0.02111,0.02572,0.032177],[0.044626,0.040691,0.069095],[0.043615,0.041353,0.066359],[0.044341,0.040594,0.068954],[0.05926,0.051441,0.080177]]},{"date":"201712180310","rgb":[[0.012079,0.02809,0.01697],[0.014076,0.026114,0.015239],[0.015569,0.025755,0.014759],[0.013174,0.02746,0.020527],[0.014112,0.027903,0.021727],[0.012255,0.028114,0.019826],[0.012539,0.028486,0.018968],[0.016255,0.026793,0.025412],[0.016022,0.027673,0.023246],[0.012951,0.028119,0.020782],[0.01357,0.027859,0.022115],[0.017207,0.0269,0.026028],[0.042749,0.041646,0.065881],[0.040284,0.042338,0.063383],[0.041115,0.042235,0.063548],[0.056404,0.05155,0.074011]]},{"date":"201712180320","rgb":[[0.01308,0.027417,0.018096],[0.014616,0.026571,0.013938],[0.013024,0.026758,0.015426],[0.013878,0.026673,0.021603],[0.017138,0.027482,0.023517],[0.0153,0.028114,0.022136],[0.016428,0.027803,0.022883],[0.018967,0.026268,0.028206],[0.017079,0.027277,0.024739],[0.015889,0.02775,0.023225],[0.017712,0.027276,0.024504],[0.020334,0.025852,0.031297],[0.044398,0.040913,0.067396],[0.043279,0.041743,0.065294],[0.044404,0.041054,0.066862],[0.058422,0.051312,0.077431]]},{"date":"201712180330","rgb":[[0.011975,0.028535,0.015599],[0.012432,0.026147,0.018289],[0.012704,0.026933,0.014657],[0.012768,0.027593,0.020367],[0.014457,0.02787,0.022803],[0.013139,0.028714,0.019296],[0.014178,0.028273,0.020539],[0.017498,0.026728,0.026678],[0.015217,0.027864,0.0235],[0.013583,0.027991,0.022524],[0.015558,0.027807,0.023466],[0.01912,0.026537,0.029527],[0.042633,0.041459,0.066439],[0.041401,0.042289,0.063165],[0.043374,0.041701,0.064494],[0.057862,0.051487,0.077061]]},{"date":"201712180340","rgb":[[0.013967,0.027688,0.016763],[0.017525,0.024869,0.015976],[0.014241,0.026358,0.015703],[0.013906,0.027214,0.021615],[0.019706,0.026203,0.025824],[0.019472,0.026712,0.023648],[0.020306,0.025816,0.024604],[0.021802,0.026092,0.031146],[0.020434,0.025877,0.026382],[0.02141,0.02508,0.025514],[0.02367,0.024369,0.026633],[0.025226,0.026159,0.033925],[0.045774,0.040731,0.070304],[0.046363,0.039977,0.068525],[0.048855,0.040016,0.070801],[0.062131,0.051673,0.082847]]},{"date":"201712180350","rgb":[[0.013356,0.027368,0.019527],[0.013408,0.026435,0.018278],[0.013021,0.025534,0.020441],[0.013793,0.027279,0.023466],[0.021225,0.025452,0.027409],[0.02085,0.025145,0.025423],[0.021303,0.025185,0.027518],[0.024141,0.026234,0.035199],[0.022339,0.025581,0.02963],[0.022979,0.024878,0.027609],[0.024782,0.024936,0.029958],[0.027209,0.026272,0.038768],[0.047318,0.040449,0.071928],[0.048735,0.039786,0.070418],[0.050382,0.040591,0.073104],[0.065012,0.05188,0.085951]]},{"date":"201712180400","rgb":[[0.013583,0.027571,0.018455],[0.014727,0.026744,0.014067],[0.015086,0.026396,0.014896],[0.014552,0.026727,0.021202],[0.020845,0.025766,0.026689],[0.02064,0.025867,0.024666],[0.020389,0.025674,0.025381],[0.023467,0.025833,0.031409],[0.021729,0.024999,0.029822],[0.021779,0.024643,0.027474],[0.024196,0.024387,0.030141],[0.025443,0.026027,0.036509],[0.046716,0.040503,0.070909],[0.047749,0.039366,0.069286],[0.049588,0.040025,0.070831],[0.06327,0.051874,0.082375]]},{"date":"201712180410","rgb":[[0.014379,0.027329,0.017318],[0.015607,0.025779,0.016176],[0.013104,0.026753,0.016342],[0.01314,0.027011,0.024014],[0.021116,0.025622,0.02702],[0.020601,0.025682,0.024373],[0.020363,0.025633,0.026362],[0.024706,0.026145,0.034314],[0.023136,0.025315,0.029572],[0.023799,0.024102,0.026786],[0.024435,0.02456,0.029675],[0.027596,0.026221,0.038646],[0.047681,0.04076,0.07268],[0.049334,0.039802,0.070067],[0.050349,0.040448,0.073601],[0.065149,0.051893,0.08567]]},{"date":"201712180420","rgb":[[0.014146,0.027621,0.016953],[0.014666,0.025998,0.017581],[0.015611,0.025582,0.015901],[0.013377,0.026922,0.022923],[0.019419,0.026506,0.025605],[0.019373,0.026214,0.025008],[0.021584,0.025373,0.026098],[0.024816,0.026226,0.034129],[0.019147,0.026426,0.026172],[0.020263,0.025918,0.024367],[0.024482,0.024253,0.028154],[0.026503,0.026109,0.036826],[0.045666,0.040489,0.069903],[0.046382,0.040146,0.068439],[0.049048,0.039991,0.071627],[0.063995,0.051268,0.083763]]},{"date":"201712180430","rgb":[[0.015351,0.027221,0.019905],[0.014214,0.026828,0.016186],[0.014944,0.026145,0.01569],[0.014102,0.027189,0.021985],[0.024083,0.02552,0.032925],[0.024841,0.024686,0.031034],[0.024851,0.025384,0.032195],[0.026997,0.026023,0.039238],[0.02425,0.025949,0.032855],[0.025743,0.025492,0.033043],[0.027324,0.026002,0.036995],[0.029474,0.025929,0.043749],[0.049434,0.04097,0.073894],[0.050939,0.040717,0.075137],[0.051856,0.040873,0.077718],[0.066551,0.051703,0.089146]]},{"date":"201712180440","rgb":[[0.014544,0.02721,0.021859],[0.01362,0.026705,0.018813],[0.012353,0.027357,0.017394],[0.013534,0.027261,0.024187],[0.026951,0.026219,0.036466],[0.026713,0.026127,0.034842],[0.027681,0.026311,0.037245],[0.029309,0.026379,0.043881],[0.027925,0.026453,0.037687],[0.028318,0.026798,0.037908],[0.030965,0.025853,0.042842],[0.035107,0.027023,0.049827],[0.051979,0.040901,0.078601],[0.053281,0.040965,0.07892],[0.058006,0.041099,0.083624],[0.07447,0.052433,0.09592]]},{"date":"201712180450","rgb":[[0.014021,0.027086,0.021165],[0.014635,0.026311,0.015965],[0.013265,0.026902,0.016265],[0.014487,0.026634,0.026154],[0.021646,0.025776,0.032087],[0.0221,0.025267,0.029297],[0.023841,0.025184,0.031473],[0.026441,0.026166,0.039586],[0.02502,0.025871,0.035365],[0.025938,0.025526,0.033566],[0.027268,0.02622,0.037015],[0.029823,0.026642,0.044806],[0.050236,0.040925,0.078079],[0.05128,0.041065,0.075082],[0.052968,0.041285,0.078492],[0.069493,0.052173,0.092463]]},{"date":"201712180500","rgb":[[0.013928,0.027205,0.019943],[0.014339,0.026185,0.017346],[0.013333,0.026309,0.017838],[0.014524,0.02639,0.026012],[0.023974,0.025325,0.030516],[0.023522,0.024651,0.028744],[0.02499,0.025284,0.032008],[0.02725,0.026198,0.039721],[0.026064,0.026147,0.033726],[0.026054,0.025781,0.03307],[0.027857,0.026633,0.036515],[0.031397,0.026134,0.04508],[0.051853,0.041029,0.076144],[0.051858,0.041095,0.075716],[0.054225,0.040853,0.079129],[0.071226,0.052088,0.092768]]},{"date":"201712180510","rgb":[[0.01408,0.027332,0.018512],[0.013092,0.025802,0.020887],[0.015106,0.025678,0.016457],[0.013211,0.027162,0.022426],[0.020482,0.025595,0.030234],[0.020426,0.025589,0.027723],[0.021714,0.025171,0.029668],[0.023928,0.025903,0.036725],[0.023541,0.025504,0.030769],[0.024847,0.024837,0.030653],[0.026161,0.025964,0.032951],[0.027506,0.025906,0.040705],[0.049741,0.041015,0.074838],[0.05073,0.040745,0.073691],[0.051768,0.041302,0.075668],[0.065964,0.051253,0.087119]]},{"date":"201712180520","rgb":[[0.015256,0.026668,0.018205],[0.014309,0.026936,0.013427],[0.014498,0.025625,0.017381],[0.014094,0.026762,0.022457],[0.021309,0.025637,0.030214],[0.022765,0.025022,0.028713],[0.024178,0.02511,0.030719],[0.026095,0.026404,0.038143],[0.025352,0.026083,0.033753],[0.025677,0.025399,0.032186],[0.027068,0.026378,0.035838],[0.029677,0.026206,0.043779],[0.050711,0.041247,0.074798],[0.051301,0.04094,0.074928],[0.052594,0.041358,0.077182],[0.069341,0.051815,0.09042]]},{"date":"201712180530","rgb":[[0.0136,0.027907,0.017744],[0.013305,0.026585,0.017384],[0.013391,0.026457,0.017572],[0.014682,0.027457,0.019739],[0.022322,0.025264,0.027531],[0.022046,0.024933,0.026573],[0.02359,0.024825,0.029432],[0.024803,0.026364,0.033637],[0.024191,0.025248,0.030475],[0.024803,0.024607,0.02858],[0.026273,0.025902,0.032971],[0.028375,0.026358,0.040013],[0.050128,0.040822,0.073524],[0.050522,0.040312,0.073096],[0.051953,0.041541,0.075816],[0.067383,0.051596,0.086405]]},{"date":"201712180540","rgb":[[0.014635,0.026802,0.018612],[0.017053,0.024866,0.017962],[0.014816,0.025702,0.018279],[0.013623,0.02675,0.023961],[0.019406,0.026133,0.028165],[0.019059,0.026084,0.026236],[0.021055,0.025277,0.027829],[0.024293,0.026235,0.037188],[0.020225,0.025577,0.030172],[0.021163,0.025009,0.029684],[0.024076,0.025258,0.031764],[0.026819,0.026242,0.040925],[0.046147,0.040691,0.073401],[0.04673,0.040065,0.072394],[0.049144,0.040271,0.075054],[0.064244,0.051826,0.088966]]},{"date":"201712180550","rgb":[[0.013511,0.026658,0.023159],[0.012795,0.027035,0.017434],[0.011985,0.026257,0.020898],[0.013916,0.026697,0.025911],[0.025083,0.02597,0.034146],[0.025449,0.0255,0.032926],[0.026317,0.025832,0.035171],[0.027471,0.026294,0.042764],[0.02705,0.026166,0.037518],[0.027482,0.026382,0.037119],[0.028939,0.025747,0.041452],[0.03231,0.026732,0.048317],[0.051956,0.041043,0.080877],[0.052871,0.040442,0.080436],[0.056135,0.040695,0.083661],[0.072351,0.052417,0.096947]]},{"date":"201712180600","rgb":[[0.01363,0.027429,0.018824],[0.012727,0.027089,0.016109],[0.01466,0.026127,0.017251],[0.014093,0.027044,0.025023],[0.021061,0.025657,0.029636],[0.022454,0.024849,0.028384],[0.023468,0.025055,0.030675],[0.025534,0.026358,0.039814],[0.024711,0.025841,0.033353],[0.025527,0.025399,0.032311],[0.027228,0.02615,0.036284],[0.03015,0.025919,0.045073],[0.050531,0.041132,0.073863],[0.051068,0.04095,0.074479],[0.0525,0.041382,0.077567],[0.069143,0.052136,0.092204]]},{"date":"201712180610","rgb":[[0.014021,0.027578,0.018955],[0.015834,0.025837,0.015667],[0.014046,0.027024,0.01446],[0.013882,0.02733,0.021942],[0.025914,0.026009,0.031711],[0.025445,0.02534,0.029978],[0.026552,0.026392,0.033026],[0.028966,0.026481,0.039188],[0.028055,0.027262,0.035445],[0.027702,0.027128,0.035312],[0.03016,0.026257,0.038712],[0.03545,0.026863,0.046413],[0.052663,0.041353,0.077234],[0.053426,0.041295,0.077101],[0.057772,0.04085,0.081846],[0.074771,0.052375,0.09402]]},{"date":"201712180620","rgb":[[0.013942,0.02763,0.019557],[0.013318,0.026933,0.016193],[0.012855,0.027198,0.014724],[0.013804,0.026676,0.024206],[0.026261,0.026331,0.034684],[0.02589,0.025703,0.032795],[0.026311,0.026054,0.034284],[0.028322,0.02623,0.042784],[0.028152,0.026467,0.038553],[0.028062,0.026812,0.037579],[0.029463,0.026043,0.041661],[0.033789,0.026984,0.04998],[0.052778,0.040971,0.079536],[0.05286,0.041029,0.078803],[0.056575,0.040882,0.082101],[0.072851,0.052731,0.096166]]},{"date":"201712180630","rgb":[[0.014474,0.027344,0.019645],[0.013513,0.026665,0.017778],[0.013351,0.026656,0.01677],[0.013491,0.027084,0.023603],[0.026382,0.026534,0.03542],[0.025756,0.025751,0.035423],[0.026937,0.025882,0.037901],[0.029442,0.026419,0.044815],[0.028428,0.026252,0.039947],[0.028314,0.02585,0.040803],[0.030353,0.025778,0.043357],[0.035541,0.027155,0.051595],[0.053814,0.040798,0.080845],[0.053334,0.040275,0.082057],[0.057239,0.041064,0.085917],[0.074278,0.052772,0.099296]]},{"date":"201712180640","rgb":[[0.01443,0.027594,0.020696],[0.014732,0.02498,0.022694],[0.012822,0.025477,0.021847],[0.013702,0.027415,0.023048],[0.025987,0.026368,0.043003],[0.025278,0.026024,0.043293],[0.025294,0.026403,0.044715],[0.027678,0.028195,0.050635],[0.027972,0.026382,0.04655],[0.028164,0.026072,0.047195],[0.029733,0.027261,0.050832],[0.03333,0.029204,0.059344],[0.053908,0.041583,0.086483],[0.05401,0.041442,0.087343],[0.056361,0.042253,0.091164],[0.073904,0.053436,0.10497]]},{"date":"201712180650","rgb":[[0.015846,0.027967,0.029475],[0.016386,0.026186,0.025055],[0.015515,0.025043,0.02503],[0.015076,0.026725,0.025232],[0.033512,0.030256,0.10062],[0.033965,0.030196,0.10704],[0.034743,0.030755,0.1114],[0.03681,0.031327,0.11245],[0.037368,0.030974,0.11669],[0.037848,0.031659,0.11997],[0.040353,0.032446,0.12753],[0.042933,0.032869,0.13392],[0.061593,0.04537,0.14601],[0.062908,0.046109,0.15135],[0.064872,0.04664,0.15625],[0.081047,0.057533,0.17005]]},{"date":"201712180700","rgb":[[0.022806,0.029543,0.092654],[0.019892,0.030147,0.0689],[0.017089,0.028304,0.050573],[0.016189,0.027326,0.039083],[0.074451,0.055151,0.4077],[0.079546,0.08718,0.40744],[0.083553,0.085237,0.41865],[0.083228,0.056569,0.43134],[0.083998,0.065501,0.42955],[0.087251,0.10077,0.42535],[0.093235,0.098577,0.43732],[0.096701,0.066901,0.45693],[0.10404,0.064245,0.43294],[0.11021,0.085028,0.43558],[0.11592,0.084485,0.44532],[0.13188,0.077966,0.45576]]},{"date":"201712180710","rgb":[[0.069182,0.091253,0.29104],[0.055699,0.075649,0.2377],[0.042494,0.052899,0.1813],[0.033238,0.034952,0.1507],[0.25422,0.41338,0.99629],[0.26345,0.44921,0.9963],[0.27095,0.44203,0.99585],[0.27358,0.39542,0.99124],[0.26505,0.42506,0.99575],[0.275,0.45993,0.99573],[0.28369,0.4503,0.99563],[0.28818,0.41352,0.99566],[0.27173,0.37416,0.94857],[0.27752,0.40151,0.94926],[0.28654,0.39713,0.94909],[0.3022,0.37577,0.94028]]},{"date":"201712180720","rgb":[[0.1687,0.24376,0.53433],[0.15248,0.19865,0.49893],[0.11829,0.13641,0.45999],[0.093609,0.081033,0.44688],[0.66428,0.99917,0.99846],[0.75692,0.99925,0.99847],[0.77613,0.99899,0.9983],[0.72217,0.99379,0.99568],[0.73177,0.99915,0.99806],[0.80522,0.99942,0.99879],[0.83299,0.99985,0.99794],[0.79529,0.99914,0.99892],[0.6754,0.92561,0.95046],[0.74096,0.92575,0.95085],[0.76489,0.9261,0.95018],[0.74197,0.92356,0.94402]]},{"date":"201712180730","rgb":[[0.35872,0.43008,0.85619],[0.31797,0.41432,0.85523],[0.27277,0.35423,0.84121],[0.24342,0.30348,0.84178],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.9843,0.98048,0.99972],[0.98128,0.9785,0.99873],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92115,0.90682,0.94507]]},{"date":"201712180740","rgb":[[0.44138,0.61422,0.98761],[0.40809,0.61159,0.98954],[0.36584,0.5555,0.98763],[0.34585,0.51289,0.98554],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.9842,0.98055,0.99978],[0.98242,0.98022,0.99922],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92114,0.90681,0.94505]]},{"date":"201712180750","rgb":[[0.54271,0.83277,0.99034],[0.51883,0.85196,0.99069],[0.47986,0.83301,0.98955],[0.47365,0.8293,0.98846],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98048,0.99991],[0.98348,0.98065,0.99966],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92111,0.9068,0.94492]]},{"date":"201712180800","rgb":[[0.6881,0.98161,0.99521],[0.67947,0.9885,0.99604],[0.65078,0.98701,0.99527],[0.65081,0.9911,0.99577],[0.98431,0.98393,0.98595],[0.98431,0.98409,0.98532],[0.98431,0.98426,0.98462],[0.98424,0.98326,0.98908],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92062,0.91057,0.93115]]},{"date":"201712180810","rgb":[[0.9403,0.98982,0.99101],[0.95775,0.98865,0.99023],[0.96088,0.98893,0.98938],[0.97283,0.98701,0.98941],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92064,0.91056,0.93117]]},{"date":"201712180820","rgb":[[0.98396,0.98073,1],[0.98523,0.98012,1],[0.9863,0.97976,1],[0.99247,0.9777,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98432,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92116,0.90687,0.94501]]},{"date":"201712180830","rgb":[[0.89317,0.99105,0.99218],[0.90861,0.99036,0.99474],[0.90651,0.99154,0.99146],[0.92949,0.99129,0.99264],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98433],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92064,0.91057,0.93123]]},{"date":"201712180840","rgb":[[0.98394,0.98381,0.98765],[0.98509,0.98192,0.99317],[0.98565,0.98001,0.99987],[0.99013,0.97848,1],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98339,0.98815],[0.98431,0.98097,0.99779],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98416,0.98498],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92065,0.91059,0.93115]]},{"date":"201712180850","rgb":[[0.97476,0.98646,0.98819],[0.97948,0.98559,0.98747],[0.9807,0.98479,0.98992],[0.98478,0.98277,0.99085],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.9206,0.91054,0.93109]]},{"date":"201712180900","rgb":[[0.986,0.97985,1],[0.9882,0.97912,1],[0.98709,0.97949,1],[0.99247,0.9777,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98432,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92114,0.90684,0.94491]]},{"date":"201712180910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90333,0.94497]]},{"date":"201712180920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.94502]]},{"date":"201712180930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94504]]},{"date":"201712180940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99462,0.97697,1],[0.99533,0.97673,1],[0.99608,0.97647,1],[0.99085,0.97823,1],[0.98479,0.98024,1],[0.98558,0.97999,1],[0.99278,0.97758,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.9212,0.90682,0.94497]]},{"date":"201712180950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90332,0.9449]]},{"date":"201712181000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.9033,0.94496]]},{"date":"201712181010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90329,0.94501]]},{"date":"201712181020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94495]]},{"date":"201712181030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90331,0.94504]]},{"date":"201712181040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90333,0.94497]]},{"date":"201712181050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90327,0.9449]]},{"date":"201712181100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90329,0.94501]]},{"date":"201712181110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99556,0.97664,1],[0.99596,0.97651,1],[0.99608,0.97647,1],[0.99275,0.9776,1],[0.98553,0.98001,1],[0.98705,0.97949,1],[0.99432,0.97706,1],[0.92195,0.90829,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92159,0.90668,0.94495]]},{"date":"201712181120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.9033,0.94499]]},{"date":"201712181130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90331,0.945]]},{"date":"201712181140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94499]]},{"date":"201712181150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99493,0.97686,1],[0.99558,0.97665,1],[0.99608,0.97647,1],[0.99163,0.97797,1],[0.98509,0.98014,1],[0.98598,0.97985,1],[0.99319,0.97746,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92122,0.90676,0.94493]]},{"date":"201712181200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.9033,0.94495]]},{"date":"201712181210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90328,0.94498]]},{"date":"201712181220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90331,0.94503]]},{"date":"201712181230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90332,0.94503]]},{"date":"201712181240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90332,0.94501]]},{"date":"201712181250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90329,0.9449]]},{"date":"201712181300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94497]]},{"date":"201712181310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90331,0.94504]]},{"date":"201712181320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.9033,0.94504]]},{"date":"201712181330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90332,0.94505]]},{"date":"201712181340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90333,0.94505]]},{"date":"201712181350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90329,0.94492]]},{"date":"201712181400","rgb":[[0.98484,0.98039,1],[0.98533,0.98008,1],[0.98563,0.97999,1],[0.98786,0.97924,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92117,0.90684,0.94497]]},{"date":"201712181410","rgb":[[0.98041,0.98498,0.98827],[0.98345,0.98374,0.98904],[0.98427,0.98343,0.98863],[0.98567,0.98122,0.99525],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98433],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92065,0.91053,0.93119]]},{"date":"201712181420","rgb":[[0.94642,0.9894,0.99224],[0.95757,0.98852,0.99083],[0.96088,0.98898,0.98909],[0.97464,0.98648,0.98994],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92063,0.91053,0.93121]]},{"date":"201712181430","rgb":[[0.9812,0.98463,0.98898],[0.98348,0.98177,0.99702],[0.98433,0.98049,1],[0.98553,0.98003,1],[0.98431,0.98431,0.98431],[0.98431,0.98424,0.98467],[0.98431,0.98239,0.99219],[0.98431,0.98048,0.99967],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.9836,0.9873],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92065,0.91054,0.93124]]},{"date":"201712181440","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90333,0.94505]]},{"date":"201712181450","rgb":[[0.96357,0.98821,0.98909],[0.97328,0.98691,0.98824],[0.97844,0.98562,0.98913],[0.98424,0.98327,0.98935],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92061,0.91051,0.9311]]},{"date":"201712181500","rgb":[[0.94704,0.98968,0.9903],[0.96383,0.98824,0.98899],[0.97245,0.98727,0.98821],[0.98148,0.98478,0.98813],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92059,0.91049,0.9311]]},{"date":"201712181510","rgb":[[0.72648,0.98869,0.99348],[0.73152,0.99259,0.99702],[0.73529,0.99476,0.99555],[0.77232,0.99493,0.99602],[0.98431,0.98431,0.98431],[0.98431,0.98368,0.98718],[0.98431,0.9843,0.98442],[0.98431,0.98416,0.98502],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92059,0.91048,0.93112]]},{"date":"201712181520","rgb":[[0.54385,0.74703,0.98841],[0.52579,0.7742,0.98871],[0.49854,0.75261,0.98734],[0.50343,0.75648,0.98617],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98433,0.98046,0.99994],[0.98359,0.98066,0.99962],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92113,0.90679,0.94497]]},{"date":"201712181530","rgb":[[0.35748,0.39422,0.81699],[0.31772,0.38053,0.81255],[0.27381,0.32297,0.7964],[0.24719,0.27345,0.81017],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98429,0.98044,0.99968],[0.98178,0.97851,0.99859],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92113,0.9068,0.94497]]},{"date":"201712181540","rgb":[[0.21769,0.23505,0.5065],[0.19172,0.18741,0.47475],[0.1467,0.12627,0.43699],[0.12377,0.074706,0.42752],[0.86503,0.99935,0.99855],[0.94291,0.99515,0.99885],[0.95528,0.99204,0.99905],[0.90423,0.99294,0.99574],[0.90015,0.99945,0.99808],[0.96185,0.99191,0.99755],[0.97438,0.98763,0.99365],[0.94783,0.99487,0.99709],[0.80565,0.92592,0.95061],[0.86363,0.92526,0.95004],[0.88026,0.92353,0.94942],[0.85628,0.92388,0.94338]]},{"date":"201712181550","rgb":[[0.077571,0.087315,0.26272],[0.062549,0.073787,0.21331],[0.046475,0.052471,0.15949],[0.03552,0.035023,0.13195],[0.31894,0.38844,0.99603],[0.34339,0.42907,0.99584],[0.35509,0.42832,0.99573],[0.34793,0.38236,0.99163],[0.33164,0.4004,0.99618],[0.35754,0.44163,0.9945],[0.37317,0.44463,0.99563],[0.36875,0.40934,0.99473],[0.32781,0.3492,0.94866],[0.34365,0.38237,0.9491],[0.35717,0.38641,0.94843],[0.36601,0.3629,0.94013]]},{"date":"201712181600","rgb":[[0.026423,0.02961,0.087372],[0.022306,0.028957,0.067867],[0.018225,0.028004,0.047841],[0.01687,0.026909,0.038583],[0.09461,0.049551,0.38901],[0.10432,0.072057,0.41004],[0.10881,0.069841,0.41933],[0.11219,0.048679,0.41419],[0.10186,0.053847,0.40519],[0.11207,0.079947,0.42077],[0.11789,0.076314,0.43282],[0.12344,0.052173,0.43662],[0.12246,0.057628,0.39973],[0.12956,0.067581,0.41075],[0.13639,0.066614,0.42052],[0.15023,0.068773,0.42703]]},{"date":"201712181610","rgb":[[0.015925,0.027514,0.037196],[0.014825,0.027122,0.028497],[0.013612,0.027307,0.022545],[0.014237,0.026942,0.027371],[0.038728,0.031691,0.12364],[0.041095,0.03233,0.13023],[0.042015,0.032991,0.13421],[0.043414,0.033278,0.14058],[0.041542,0.032693,0.13759],[0.044327,0.033499,0.14801],[0.046484,0.033927,0.15042],[0.04675,0.034027,0.14854],[0.063957,0.046488,0.16296],[0.066546,0.047424,0.17238],[0.067217,0.046719,0.16464],[0.080582,0.057572,0.17701]]},{"date":"201712181620","rgb":[[0.014008,0.027349,0.01785],[0.015224,0.026231,0.015595],[0.017091,0.024938,0.015455],[0.01456,0.026601,0.022323],[0.020667,0.025879,0.034523],[0.02097,0.025686,0.036866],[0.022269,0.026091,0.038494],[0.023911,0.027242,0.043286],[0.022255,0.026568,0.040341],[0.023083,0.026559,0.041291],[0.024741,0.026423,0.043889],[0.026066,0.027635,0.047899],[0.047844,0.041664,0.080085],[0.04896,0.041416,0.080506],[0.049748,0.041343,0.082415],[0.063273,0.052919,0.093089]]},{"date":"201712181630","rgb":[[0.013907,0.026822,0.020419],[0.013612,0.026904,0.016531],[0.013877,0.025451,0.020517],[0.014329,0.026921,0.025554],[0.019276,0.026305,0.027057],[0.01938,0.0258,0.02664],[0.021207,0.02515,0.028525],[0.024099,0.026166,0.0367],[0.021701,0.025202,0.030267],[0.023008,0.024448,0.030077],[0.024465,0.024849,0.031665],[0.026364,0.026431,0.03962],[0.046876,0.040762,0.071856],[0.047832,0.039763,0.071589],[0.050077,0.040464,0.073649],[0.06426,0.05165,0.086194]]},{"date":"201712181640","rgb":[[0.01333,0.027318,0.018449],[0.017479,0.024216,0.019633],[0.016847,0.024933,0.016752],[0.01433,0.026855,0.022058],[0.018109,0.026642,0.025943],[0.016847,0.027123,0.024297],[0.017945,0.02646,0.025295],[0.021274,0.025878,0.032326],[0.019049,0.026214,0.026919],[0.018679,0.026696,0.025474],[0.02009,0.025535,0.027252],[0.022518,0.026059,0.033435],[0.045168,0.040407,0.070107],[0.044967,0.040416,0.068725],[0.047453,0.039734,0.070831],[0.061318,0.051433,0.081605]]},{"date":"201712181650","rgb":[[0.013038,0.027319,0.017677],[0.015763,0.02563,0.015597],[0.01514,0.025502,0.015832],[0.013386,0.027309,0.022541],[0.019175,0.026936,0.025276],[0.018899,0.026751,0.024029],[0.020125,0.025938,0.024328],[0.022152,0.02575,0.032474],[0.020101,0.025717,0.027976],[0.020963,0.025368,0.025354],[0.023607,0.024192,0.027448],[0.024923,0.026016,0.036029],[0.046539,0.040504,0.069805],[0.047564,0.039494,0.067904],[0.048984,0.039807,0.071085],[0.062466,0.05158,0.082962]]},{"date":"201712181700","rgb":[[0.013785,0.027338,0.018779],[0.015256,0.026088,0.015828],[0.013355,0.02625,0.01769],[0.014306,0.027048,0.022752],[0.018977,0.026568,0.025733],[0.019484,0.026669,0.024412],[0.022446,0.025378,0.026559],[0.025119,0.02622,0.034928],[0.020528,0.025982,0.02698],[0.022685,0.024651,0.027433],[0.02571,0.025361,0.031831],[0.028187,0.026392,0.04044],[0.046369,0.040472,0.070247],[0.049085,0.039422,0.068869],[0.050819,0.040635,0.07306],[0.06538,0.051175,0.085492]]},{"date":"201712181710","rgb":[[0.013963,0.027265,0.01836],[0.014336,0.02652,0.015279],[0.012101,0.027384,0.015576],[0.014089,0.027511,0.021331],[0.01903,0.027174,0.023555],[0.01813,0.027304,0.02331],[0.019657,0.026111,0.024568],[0.024039,0.02598,0.0324],[0.020649,0.025622,0.02782],[0.021682,0.024973,0.026305],[0.024323,0.0251,0.030623],[0.027454,0.026366,0.039212],[0.046105,0.040663,0.068975],[0.047109,0.039605,0.067882],[0.049492,0.039818,0.071093],[0.064375,0.050905,0.083678]]},{"date":"201712181720","rgb":[[0.012953,0.027222,0.01871],[0.015126,0.026104,0.015677],[0.013525,0.025942,0.018572],[0.013784,0.026756,0.024511],[0.018069,0.02716,0.024366],[0.018269,0.027403,0.023462],[0.018827,0.026578,0.025347],[0.022166,0.026084,0.033654],[0.019353,0.02654,0.02572],[0.019325,0.026674,0.024009],[0.022081,0.025263,0.027655],[0.025659,0.026253,0.036234],[0.045576,0.040586,0.068462],[0.046552,0.040008,0.066451],[0.049287,0.03995,0.071243],[0.063903,0.051584,0.083505]]},{"date":"201712181730","rgb":[[0.012772,0.027597,0.018019],[0.015966,0.025449,0.015787],[0.013862,0.025748,0.018645],[0.013456,0.026689,0.025322],[0.015869,0.027489,0.024385],[0.014723,0.028149,0.022139],[0.016478,0.027146,0.024046],[0.019628,0.026187,0.0309],[0.017112,0.026929,0.02605],[0.017239,0.02724,0.024513],[0.018962,0.026571,0.026106],[0.022309,0.026512,0.035786],[0.044907,0.040862,0.068518],[0.044743,0.040753,0.06658],[0.047536,0.039716,0.069849],[0.06214,0.05131,0.083168]]},{"date":"201712181740","rgb":[[0.013111,0.027164,0.019561],[0.017344,0.024693,0.015143],[0.015776,0.025433,0.015757],[0.012526,0.027135,0.024823],[0.014761,0.027614,0.024171],[0.013188,0.028148,0.020764],[0.014725,0.027885,0.022906],[0.018502,0.026347,0.03032],[0.016164,0.027121,0.025447],[0.015283,0.027899,0.022666],[0.016851,0.027102,0.025335],[0.020271,0.026236,0.034952],[0.044062,0.041253,0.066959],[0.042886,0.041639,0.065512],[0.044246,0.041228,0.066825],[0.058576,0.051177,0.08099]]},{"date":"201712181750","rgb":[[0.01308,0.02781,0.017456],[0.013428,0.027032,0.015365],[0.01489,0.025714,0.016238],[0.012944,0.027277,0.023856],[0.017431,0.027402,0.023718],[0.016258,0.027663,0.022979],[0.017565,0.026692,0.026131],[0.021645,0.026018,0.033368],[0.01867,0.025962,0.028385],[0.018324,0.026442,0.02574],[0.020403,0.025639,0.028888],[0.024109,0.026796,0.038409],[0.044515,0.040676,0.069212],[0.045141,0.040548,0.068201],[0.047819,0.040301,0.071339],[0.062798,0.051581,0.084048]]},{"date":"201712181800","rgb":[[0.013059,0.027826,0.017882],[0.014403,0.026646,0.014891],[0.012802,0.026624,0.0166],[0.014097,0.027107,0.021987],[0.017076,0.027741,0.021728],[0.014604,0.028375,0.01984],[0.016569,0.027899,0.02139],[0.020608,0.026014,0.027903],[0.018064,0.026794,0.025559],[0.017602,0.027538,0.023536],[0.019185,0.026611,0.025751],[0.024146,0.026298,0.035549],[0.044984,0.040729,0.068627],[0.045061,0.040677,0.06587],[0.047749,0.040006,0.069304],[0.06345,0.051594,0.082879]]},{"date":"201712181810","rgb":[[0.012913,0.026658,0.021306],[0.013254,0.025836,0.019657],[0.012664,0.025465,0.021826],[0.013559,0.026862,0.026692],[0.015283,0.027705,0.023412],[0.014028,0.027975,0.022033],[0.016773,0.02728,0.024112],[0.021811,0.025919,0.03295],[0.016741,0.027029,0.025958],[0.016204,0.027549,0.024098],[0.018117,0.026642,0.026425],[0.023359,0.026159,0.037161],[0.044629,0.040726,0.068189],[0.044406,0.041158,0.06573],[0.046129,0.040597,0.069733],[0.062503,0.051375,0.083246]]},{"date":"201712181820","rgb":[[0.012799,0.02812,0.016948],[0.01454,0.026541,0.014836],[0.015297,0.025265,0.017234],[0.013943,0.026991,0.023568],[0.019099,0.026607,0.02569],[0.019724,0.026303,0.02497],[0.02263,0.025225,0.027565],[0.026797,0.026323,0.037217],[0.020263,0.026085,0.026867],[0.023006,0.024546,0.026404],[0.026085,0.025688,0.032557],[0.029333,0.026246,0.042452],[0.047105,0.040472,0.070352],[0.049044,0.039718,0.070776],[0.051748,0.041019,0.074985],[0.067463,0.051377,0.089087]]},{"date":"201712181830","rgb":[[0.013039,0.027703,0.017176],[0.015003,0.025571,0.018206],[0.015211,0.025308,0.017144],[0.013306,0.026913,0.023735],[0.018705,0.026868,0.025062],[0.01926,0.026688,0.024116],[0.022331,0.025338,0.028546],[0.026099,0.026001,0.038805],[0.019971,0.026168,0.025426],[0.022364,0.02502,0.025151],[0.026005,0.025695,0.032021],[0.029834,0.026527,0.041923],[0.046317,0.040328,0.06903],[0.048545,0.039841,0.06948],[0.051381,0.04071,0.075294],[0.068306,0.051987,0.089119]]},{"date":"201712181840","rgb":[[0.013275,0.028176,0.016831],[0.012445,0.027577,0.014966],[0.012666,0.026968,0.016478],[0.014191,0.027104,0.021813],[0.022112,0.025325,0.026453],[0.022422,0.024778,0.025236],[0.02438,0.024841,0.029613],[0.027279,0.026203,0.038396],[0.023887,0.024889,0.026615],[0.024543,0.024524,0.026288],[0.026627,0.025932,0.03219],[0.030909,0.026609,0.041728],[0.04856,0.040198,0.07044],[0.049925,0.040173,0.069753],[0.052771,0.040977,0.076095],[0.07167,0.052,0.090452]]},{"date":"201712181850","rgb":[[0.013788,0.027488,0.019278],[0.015373,0.026145,0.016121],[0.013862,0.026769,0.016376],[0.014765,0.026843,0.024152],[0.019978,0.025627,0.028548],[0.020013,0.026094,0.024902],[0.022167,0.025387,0.028892],[0.025586,0.026365,0.039194],[0.023457,0.025091,0.030604],[0.024115,0.024307,0.027433],[0.025964,0.02567,0.032512],[0.029713,0.025917,0.043315],[0.047275,0.04058,0.072273],[0.049174,0.039595,0.071119],[0.051031,0.040815,0.074591],[0.068144,0.051924,0.090406]]},{"date":"201712181900","rgb":[[0.0145,0.027541,0.017146],[0.017192,0.025268,0.01453],[0.014984,0.025305,0.019133],[0.014657,0.027003,0.022695],[0.019663,0.026501,0.024724],[0.019889,0.026313,0.023508],[0.022027,0.025148,0.025766],[0.025943,0.026228,0.03532],[0.021175,0.025384,0.025639],[0.02213,0.024823,0.024362],[0.025143,0.025093,0.028734],[0.028994,0.026752,0.039064],[0.047761,0.040241,0.070423],[0.049554,0.039894,0.070241],[0.051346,0.041033,0.07465],[0.068516,0.051687,0.088917]]},{"date":"201712181910","rgb":[[0.013017,0.027892,0.017167],[0.013174,0.026958,0.015233],[0.01244,0.026945,0.016289],[0.013547,0.02701,0.024343],[0.016716,0.027592,0.023185],[0.015749,0.027701,0.022439],[0.017196,0.027408,0.024388],[0.023129,0.026127,0.034242],[0.018196,0.027,0.024656],[0.017526,0.027497,0.023043],[0.021168,0.025657,0.027727],[0.027782,0.025975,0.040227],[0.045257,0.041076,0.067949],[0.044763,0.040908,0.066014],[0.049526,0.040422,0.071879],[0.06742,0.051541,0.088101]]},{"date":"201712181920","rgb":[[0.01297,0.028115,0.016689],[0.013557,0.026828,0.01614],[0.013436,0.025197,0.021617],[0.013483,0.0272,0.022605],[0.021566,0.025383,0.024499],[0.021848,0.024899,0.023388],[0.02299,0.024698,0.026202],[0.024864,0.02613,0.033133],[0.024241,0.024663,0.026875],[0.024443,0.024312,0.025425],[0.025406,0.025205,0.029582],[0.027903,0.026727,0.037496],[0.048592,0.040376,0.069983],[0.049474,0.039654,0.06896],[0.050669,0.040851,0.073109],[0.065472,0.051428,0.086275]]},{"date":"201712181930","rgb":[[0.013508,0.027892,0.017031],[0.014149,0.026838,0.014846],[0.014375,0.026441,0.014446],[0.014109,0.027599,0.020843],[0.018396,0.027109,0.02393],[0.017959,0.027385,0.022747],[0.018909,0.02684,0.023488],[0.022631,0.026171,0.030996],[0.019447,0.026671,0.024819],[0.019451,0.026628,0.02368],[0.022549,0.024471,0.026275],[0.025942,0.026381,0.034938],[0.044421,0.041342,0.067176],[0.045827,0.040348,0.065372],[0.048539,0.039849,0.06718],[0.062755,0.051743,0.079907]]},{"date":"201712181940","rgb":[[0.012944,0.027648,0.017935],[0.014518,0.0254,0.019115],[0.012272,0.026572,0.017923],[0.013637,0.027388,0.02123],[0.017405,0.027438,0.02263],[0.016908,0.027661,0.022261],[0.017904,0.027338,0.023438],[0.022811,0.026026,0.031959],[0.018694,0.027008,0.023966],[0.018245,0.02732,0.02377],[0.021096,0.025327,0.025935],[0.025544,0.026073,0.035026],[0.044935,0.041099,0.067959],[0.045585,0.040675,0.06609],[0.048667,0.039518,0.06978],[0.064192,0.051583,0.08361]]},{"date":"201712181950","rgb":[[0.01236,0.028084,0.015148],[0.012009,0.027415,0.013708],[0.012527,0.025929,0.018644],[0.013464,0.027314,0.02068],[0.011658,0.028138,0.017961],[0.010853,0.028936,0.01317],[0.011093,0.028192,0.0163],[0.015052,0.02715,0.024015],[0.012586,0.028153,0.019272],[0.011011,0.028853,0.014411],[0.011717,0.027749,0.019548],[0.016927,0.026815,0.027295],[0.040275,0.042085,0.063129],[0.038101,0.043306,0.058536],[0.039246,0.042809,0.061339],[0.056027,0.051618,0.073728]]},{"date":"201712182000","rgb":[[0.012015,0.028121,0.014969],[0.01256,0.027143,0.014468],[0.013319,0.02556,0.0193],[0.012723,0.027329,0.020803],[0.011168,0.028851,0.014634],[0.010493,0.028804,0.012494],[0.010549,0.028007,0.01488],[0.012176,0.027267,0.022873],[0.011693,0.02884,0.016248],[0.010543,0.028831,0.012659],[0.010688,0.028668,0.013883],[0.012825,0.027114,0.023791],[0.038821,0.042659,0.061312],[0.037394,0.043186,0.056458],[0.03759,0.043071,0.05842],[0.052789,0.05206,0.0723]]},{"date":"201712182010","rgb":[[0.012046,0.026594,0.020414],[0.012328,0.025953,0.01932],[0.012283,0.027092,0.015581],[0.013116,0.02705,0.023235],[0.011078,0.029078,0.013091],[0.010464,0.028793,0.011614],[0.010506,0.028844,0.011575],[0.013758,0.027797,0.020586],[0.011165,0.029147,0.013599],[0.010512,0.028856,0.011913],[0.010576,0.028942,0.012928],[0.013211,0.027594,0.021841],[0.03869,0.043198,0.057867],[0.03717,0.043384,0.055419],[0.037931,0.043279,0.056839],[0.053573,0.052281,0.069769]]},{"date":"201712182020","rgb":[[0.012281,0.028226,0.015663],[0.013012,0.026882,0.014104],[0.012072,0.026857,0.01685],[0.013654,0.026839,0.025159],[0.01106,0.028693,0.015024],[0.010414,0.028774,0.011953],[0.01062,0.028668,0.013207],[0.013301,0.026847,0.026105],[0.011358,0.028823,0.014751],[0.010479,0.02883,0.012527],[0.010637,0.028414,0.014039],[0.014477,0.026821,0.025701],[0.039545,0.042758,0.060662],[0.037443,0.04307,0.056843],[0.038239,0.042305,0.061039],[0.053994,0.051959,0.073694]]},{"date":"201712182030","rgb":[[0.011561,0.02742,0.018347],[0.012216,0.026712,0.01664],[0.011304,0.025876,0.020548],[0.013918,0.02686,0.025723],[0.010943,0.02838,0.015763],[0.010419,0.028682,0.012239],[0.010424,0.028424,0.013318],[0.01259,0.026966,0.024058],[0.011053,0.028591,0.015546],[0.01042,0.028736,0.012938],[0.010534,0.028225,0.014676],[0.012814,0.027003,0.026547],[0.037982,0.042593,0.060516],[0.036934,0.04285,0.05627],[0.037354,0.042398,0.059385],[0.052688,0.051818,0.074207]]},{"date":"201712182040","rgb":[[0.012421,0.0267,0.019994],[0.016283,0.024573,0.017946],[0.012693,0.026363,0.017632],[0.013834,0.026377,0.027404],[0.011026,0.027955,0.017145],[0.010471,0.028767,0.012917],[0.010521,0.02799,0.014744],[0.012867,0.026676,0.025609],[0.011338,0.02855,0.016847],[0.010579,0.028819,0.013159],[0.01094,0.028242,0.016024],[0.013748,0.027106,0.026596],[0.038317,0.042657,0.06108],[0.037279,0.04277,0.058241],[0.038119,0.042089,0.061542],[0.053105,0.051868,0.07371]]},{"date":"201712182050","rgb":[[0.012307,0.027547,0.017044],[0.012856,0.027022,0.014309],[0.013944,0.026199,0.015536],[0.013387,0.026933,0.02459],[0.010954,0.028443,0.015289],[0.010411,0.028698,0.012389],[0.010489,0.028335,0.013517],[0.012427,0.027072,0.024862],[0.010775,0.0286,0.014563],[0.010477,0.028834,0.012463],[0.010539,0.028294,0.014632],[0.012855,0.02708,0.024847],[0.037937,0.042936,0.058614],[0.036997,0.043192,0.055699],[0.037184,0.042511,0.057977],[0.053147,0.051912,0.071762]]},{"date":"201712182100","rgb":[[0.011936,0.027921,0.015229],[0.012672,0.027484,0.012261],[0.012263,0.026024,0.018245],[0.013754,0.026772,0.02064],[0.011225,0.029022,0.014104],[0.010571,0.028964,0.01063],[0.010565,0.028898,0.01162],[0.012736,0.028051,0.019415],[0.01161,0.02923,0.014175],[0.010634,0.029009,0.012572],[0.010722,0.02892,0.012985],[0.014357,0.027713,0.022182],[0.039119,0.043091,0.059717],[0.03759,0.043713,0.055413],[0.038945,0.043324,0.058031],[0.054072,0.051831,0.07153]]},{"date":"201712182110","rgb":[[0.011527,0.027909,0.016697],[0.011946,0.027064,0.015298],[0.012438,0.026688,0.016459],[0.013316,0.027077,0.021156],[0.011289,0.028452,0.01558],[0.010522,0.028843,0.012697],[0.010596,0.028753,0.013199],[0.01278,0.027518,0.021953],[0.011662,0.029209,0.015761],[0.010585,0.028829,0.012875],[0.010693,0.028755,0.013493],[0.013139,0.027482,0.022868],[0.03984,0.04188,0.063426],[0.037878,0.042949,0.058003],[0.038766,0.042228,0.061329],[0.053171,0.05144,0.07304]]},{"date":"201712182120","rgb":[[0.012899,0.0274,0.016462],[0.01245,0.026082,0.01803],[0.015429,0.025052,0.016702],[0.012833,0.027102,0.021306],[0.01119,0.028833,0.014679],[0.010471,0.028653,0.012884],[0.010552,0.028479,0.013324],[0.013076,0.027432,0.021827],[0.011214,0.028833,0.014301],[0.010545,0.028903,0.011963],[0.010505,0.028331,0.013886],[0.012531,0.027308,0.023535],[0.03807,0.043547,0.05665],[0.036722,0.043306,0.054298],[0.037371,0.043088,0.056216],[0.052403,0.052202,0.06956]]},{"date":"201712182130","rgb":[[0.011956,0.028375,0.01636],[0.014065,0.02635,0.015281],[0.013145,0.02658,0.016487],[0.01348,0.026994,0.024336],[0.01154,0.028375,0.017244],[0.010736,0.028877,0.012981],[0.010805,0.028504,0.014343],[0.013313,0.0273,0.02418],[0.012255,0.028916,0.016927],[0.011013,0.029042,0.014348],[0.011204,0.028768,0.015559],[0.01486,0.027076,0.026509],[0.039772,0.042411,0.063366],[0.038653,0.042622,0.060527],[0.039274,0.042683,0.062495],[0.055023,0.051464,0.075041]]},{"date":"201712182140","rgb":[[0.013347,0.02748,0.015281],[0.0142,0.02664,0.013189],[0.014788,0.025906,0.015537],[0.014017,0.026906,0.022009],[0.011629,0.02896,0.015758],[0.010621,0.028765,0.012586],[0.010738,0.029031,0.012481],[0.013365,0.027906,0.020989],[0.011732,0.028767,0.016703],[0.010737,0.029009,0.013319],[0.011005,0.028959,0.014487],[0.014615,0.027056,0.025706],[0.040464,0.042569,0.061427],[0.038376,0.043216,0.058181],[0.040204,0.042777,0.060914],[0.055856,0.051484,0.073132]]},{"date":"201712182150","rgb":[[0.012086,0.028072,0.016086],[0.015047,0.025773,0.016233],[0.012802,0.026815,0.016015],[0.013476,0.027024,0.023723],[0.01163,0.028533,0.016868],[0.010647,0.028867,0.012821],[0.010773,0.028463,0.014859],[0.014961,0.027153,0.024771],[0.011691,0.028776,0.016093],[0.010665,0.028927,0.01324],[0.011093,0.028473,0.0153],[0.015242,0.026993,0.025368],[0.039102,0.042342,0.062475],[0.037768,0.042387,0.059219],[0.038997,0.042988,0.059728],[0.055622,0.051319,0.074999]]},{"date":"201712182200","rgb":[[0.012387,0.028043,0.017916],[0.011355,0.027158,0.016127],[0.012156,0.026883,0.016725],[0.013957,0.026895,0.023725],[0.012375,0.029104,0.017247],[0.011027,0.029074,0.013961],[0.011331,0.028765,0.015478],[0.015364,0.027179,0.025206],[0.012862,0.028118,0.020033],[0.011427,0.028983,0.015225],[0.012585,0.027851,0.020648],[0.01693,0.026614,0.027362],[0.040282,0.042145,0.06432],[0.039694,0.043064,0.059937],[0.041609,0.042155,0.064142],[0.057366,0.051328,0.076078]]},{"date":"201712182210","rgb":[[0.012896,0.027263,0.016602],[0.014921,0.025461,0.016965],[0.015453,0.025372,0.016731],[0.013582,0.027139,0.02247],[0.011298,0.028814,0.014879],[0.010509,0.02879,0.012176],[0.010634,0.028765,0.012756],[0.013041,0.027064,0.024164],[0.011354,0.029079,0.013879],[0.01055,0.028883,0.012576],[0.010687,0.028765,0.013377],[0.01388,0.027392,0.023991],[0.038881,0.042739,0.060322],[0.03748,0.042643,0.057596],[0.038181,0.042589,0.060503],[0.053891,0.051689,0.073925]]},{"date":"201712182220","rgb":[[0.012124,0.027501,0.018064],[0.013465,0.026204,0.016074],[0.012288,0.027227,0.015092],[0.013274,0.026743,0.024418],[0.011632,0.027714,0.018663],[0.010531,0.028717,0.012667],[0.010519,0.028609,0.013013],[0.013321,0.027218,0.023532],[0.011881,0.028364,0.018742],[0.010518,0.028531,0.013297],[0.010881,0.027955,0.017019],[0.013827,0.027152,0.025479],[0.039223,0.042088,0.064361],[0.037554,0.042797,0.058178],[0.03812,0.042031,0.062366],[0.05329,0.051656,0.07422]]},{"date":"201712182230","rgb":[[0.012413,0.028005,0.015418],[0.013157,0.026943,0.013607],[0.01236,0.027053,0.0141],[0.014188,0.026974,0.022472],[0.011029,0.029208,0.013416],[0.010537,0.028878,0.012176],[0.010535,0.028666,0.013097],[0.013319,0.027638,0.022703],[0.011241,0.029036,0.013585],[0.010538,0.028911,0.011674],[0.010628,0.028582,0.013814],[0.013788,0.027573,0.023322],[0.038587,0.04284,0.059387],[0.037301,0.043042,0.056392],[0.038015,0.042863,0.058467],[0.054083,0.051819,0.072299]]},{"date":"201712182240","rgb":[[0.012566,0.027239,0.019526],[0.013186,0.026929,0.01517],[0.012228,0.026835,0.017931],[0.014425,0.026709,0.027082],[0.011835,0.028111,0.018273],[0.01083,0.028838,0.013192],[0.011282,0.028201,0.016672],[0.014769,0.026688,0.026837],[0.01232,0.028655,0.017708],[0.011087,0.028969,0.014718],[0.012266,0.028406,0.01845],[0.017365,0.026225,0.027952],[0.040092,0.042558,0.0622],[0.039114,0.042978,0.060251],[0.041195,0.042469,0.062822],[0.056381,0.051261,0.076304]]},{"date":"201712182250","rgb":[[0.012424,0.027309,0.018771],[0.015567,0.025547,0.015035],[0.013409,0.025672,0.0189],[0.01288,0.027323,0.022373],[0.011471,0.028736,0.015805],[0.010628,0.028933,0.012627],[0.010623,0.028269,0.01436],[0.013889,0.027573,0.022694],[0.01148,0.028796,0.016454],[0.010619,0.028959,0.012745],[0.010895,0.028714,0.014378],[0.01407,0.027488,0.024026],[0.038387,0.042566,0.062494],[0.037361,0.043474,0.056433],[0.03862,0.042724,0.059904],[0.054069,0.051814,0.072537]]},{"date":"201712182300","rgb":[[0.012333,0.027766,0.015914],[0.013101,0.027028,0.0132],[0.0134,0.02706,0.012815],[0.012955,0.027517,0.021401],[0.011101,0.029058,0.013406],[0.010484,0.028867,0.011846],[0.010392,0.028643,0.011997],[0.012237,0.027851,0.020498],[0.010994,0.02893,0.013677],[0.010498,0.028757,0.012044],[0.010512,0.028771,0.012464],[0.012237,0.02768,0.021628],[0.038726,0.043216,0.058623],[0.037314,0.043343,0.05548],[0.037554,0.043439,0.056122],[0.052193,0.052461,0.070487]]},{"date":"201712182310","rgb":[[0.01249,0.026701,0.018554],[0.016432,0.025147,0.012669],[0.016515,0.02531,0.012569],[0.014272,0.026689,0.021848],[0.010847,0.028528,0.014511],[0.010438,0.028856,0.010642],[0.010422,0.028839,0.010761],[0.012098,0.027373,0.020438],[0.010802,0.029044,0.012601],[0.010432,0.028929,0.0099854],[0.010365,0.028774,0.010897],[0.012014,0.027691,0.01922],[0.037739,0.043174,0.057284],[0.036706,0.043279,0.053523],[0.036626,0.043234,0.054451],[0.051811,0.05255,0.068108]]},{"date":"201712182320","rgb":[[0.012196,0.027445,0.016472],[0.01237,0.027174,0.013734],[0.012761,0.026857,0.014655],[0.013277,0.02675,0.022973],[0.01074,0.02848,0.01413],[0.010376,0.028845,0.010246],[0.010406,0.0287,0.011383],[0.011618,0.02729,0.021382],[0.010739,0.028903,0.012813],[0.010385,0.028871,0.0097768],[0.010356,0.028761,0.010916],[0.012016,0.027439,0.020837],[0.037794,0.042934,0.057867],[0.036527,0.043196,0.053645],[0.036975,0.043065,0.055641],[0.051794,0.05213,0.070927]]},{"date":"201712182330","rgb":[[0.011973,0.027435,0.01618],[0.013388,0.026799,0.013247],[0.012391,0.026407,0.016789],[0.012553,0.027159,0.02153],[0.0108,0.028699,0.014172],[0.010402,0.028795,0.01123],[0.010412,0.028718,0.011958],[0.011838,0.027366,0.021184],[0.01081,0.028809,0.014531],[0.010383,0.028785,0.011458],[0.010379,0.0286,0.012654],[0.012002,0.027176,0.022426],[0.037573,0.042659,0.059206],[0.036443,0.043161,0.055011],[0.037145,0.042787,0.056255],[0.051623,0.052235,0.070493]]},{"date":"201712182340","rgb":[[0.012727,0.027904,0.015123],[0.014209,0.026557,0.013247],[0.013256,0.026836,0.014818],[0.012964,0.027339,0.022604],[0.010936,0.029045,0.013048],[0.010449,0.028875,0.010541],[0.010424,0.02879,0.011279],[0.012239,0.027268,0.021125],[0.011144,0.029039,0.01347],[0.010493,0.028901,0.010643],[0.010607,0.028826,0.011662],[0.012726,0.0278,0.020232],[0.039005,0.043277,0.058385],[0.037261,0.04327,0.054849],[0.037282,0.043345,0.05638],[0.052107,0.052428,0.070148]]},{"date":"201712182350","rgb":[[0.012643,0.028182,0.014388],[0.012495,0.027607,0.012066],[0.014099,0.025721,0.016503],[0.014033,0.026593,0.023883],[0.010849,0.029047,0.013467],[0.010369,0.028743,0.0099461],[0.0104,0.02874,0.011518],[0.011988,0.027134,0.021447],[0.011051,0.02899,0.013683],[0.010333,0.028744,0.010548],[0.010405,0.028753,0.011225],[0.012133,0.027528,0.020655],[0.038023,0.042959,0.057891],[0.036543,0.04312,0.053872],[0.036822,0.042814,0.056229],[0.052025,0.051892,0.071937]]},{"date":"201712190000","rgb":[[0.011877,0.027815,0.014723],[0.016007,0.025318,0.013258],[0.012691,0.026773,0.014726],[0.012182,0.027496,0.019714],[0.010594,0.028878,0.012483],[0.010392,0.02885,0.0096923],[0.01038,0.028729,0.011158],[0.011261,0.027761,0.018097],[0.010542,0.028833,0.013036],[0.010371,0.028805,0.011081],[0.010322,0.028774,0.010951],[0.011587,0.027791,0.018742],[0.037428,0.043434,0.055829],[0.036414,0.043244,0.054147],[0.036707,0.04317,0.054409],[0.051427,0.052273,0.069001]]},{"date":"201712190010","rgb":[[0.01185,0.028024,0.015134],[0.013344,0.026959,0.0123],[0.015476,0.025664,0.014336],[0.014367,0.026363,0.024174],[0.010962,0.028884,0.013877],[0.010437,0.028786,0.011703],[0.010455,0.028743,0.012033],[0.01273,0.027483,0.021605],[0.010828,0.028859,0.013387],[0.010359,0.028702,0.011661],[0.010467,0.028833,0.012253],[0.012353,0.026893,0.022787],[0.038145,0.042842,0.058714],[0.036993,0.043253,0.054895],[0.037348,0.042919,0.056888],[0.052619,0.05207,0.070674]]},{"date":"201712190020","rgb":[[0.012191,0.027552,0.019103],[0.014738,0.025656,0.016393],[0.013562,0.025084,0.021241],[0.013661,0.026725,0.02494],[0.011148,0.028201,0.015897],[0.010382,0.028746,0.011786],[0.010437,0.027618,0.015265],[0.012361,0.026796,0.024661],[0.011172,0.028465,0.015543],[0.010385,0.02869,0.012033],[0.010467,0.028509,0.013436],[0.012389,0.027067,0.024151],[0.038241,0.042617,0.060147],[0.03673,0.043154,0.055024],[0.037291,0.042704,0.057736],[0.053211,0.051767,0.071652]]},{"date":"201712190030","rgb":[[0.01189,0.027572,0.017138],[0.012825,0.026083,0.016933],[0.011776,0.025308,0.02135],[0.012888,0.026902,0.022091],[0.010934,0.029006,0.013736],[0.010454,0.028875,0.01055],[0.01044,0.027501,0.015647],[0.012156,0.027109,0.021689],[0.01074,0.029016,0.01288],[0.010338,0.028823,0.010352],[0.010353,0.028752,0.01171],[0.0124,0.027519,0.020462],[0.037883,0.042852,0.058253],[0.036448,0.043159,0.054358],[0.03688,0.043071,0.055463],[0.051714,0.052396,0.069353]]},{"date":"201712190040","rgb":[[0.012405,0.028144,0.014533],[0.014009,0.026382,0.013502],[0.013744,0.026503,0.013325],[0.013171,0.027534,0.02061],[0.011197,0.029179,0.013277],[0.010403,0.028834,0.010165],[0.010415,0.028728,0.010883],[0.012463,0.027759,0.021546],[0.010959,0.029105,0.013471],[0.01041,0.02885,0.011098],[0.01046,0.028793,0.01142],[0.013106,0.027359,0.023482],[0.037974,0.043139,0.057598],[0.036503,0.043269,0.055002],[0.037099,0.043043,0.055848],[0.052658,0.051867,0.072714]]},{"date":"201712190050","rgb":[[0.012306,0.027969,0.015827],[0.013941,0.025212,0.019184],[0.013486,0.025765,0.017787],[0.013553,0.027682,0.020028],[0.010797,0.028982,0.013087],[0.010435,0.028793,0.0095766],[0.010433,0.028751,0.011053],[0.011877,0.028823,0.016556],[0.010771,0.028976,0.013467],[0.010469,0.028832,0.010787],[0.010409,0.028756,0.011874],[0.012945,0.028166,0.018528],[0.037891,0.043268,0.056901],[0.036673,0.043304,0.054077],[0.03713,0.043355,0.05465],[0.052279,0.052981,0.068263]]},{"date":"201712190100","rgb":[[0.012247,0.027576,0.016856],[0.014487,0.025663,0.016774],[0.013076,0.026084,0.01721],[0.013292,0.026689,0.023575],[0.010948,0.028671,0.014],[0.010391,0.028771,0.011102],[0.010385,0.0286,0.012092],[0.012307,0.027419,0.021627],[0.01123,0.0286,0.015441],[0.010413,0.028842,0.011673],[0.010459,0.028631,0.013359],[0.01307,0.027315,0.023032],[0.038237,0.042445,0.059896],[0.036816,0.043184,0.054437],[0.037312,0.04297,0.057017],[0.052815,0.051908,0.071634]]},{"date":"201712190110","rgb":[[0.01191,0.028277,0.014921],[0.013321,0.026753,0.012953],[0.015368,0.025705,0.014298],[0.013564,0.026974,0.023262],[0.01109,0.029022,0.013252],[0.010433,0.028762,0.011561],[0.01054,0.028835,0.012522],[0.013303,0.027536,0.022425],[0.011491,0.028947,0.014068],[0.010459,0.028806,0.011891],[0.01058,0.028786,0.012314],[0.013984,0.027413,0.022309],[0.038398,0.043486,0.056384],[0.036852,0.043336,0.053835],[0.037278,0.043304,0.055553],[0.052489,0.051878,0.070826]]},{"date":"201712190120","rgb":[[0.011963,0.027982,0.016299],[0.012041,0.02751,0.013128],[0.012967,0.026464,0.015809],[0.013142,0.026854,0.021447],[0.011368,0.028798,0.015166],[0.01056,0.028924,0.012259],[0.010683,0.02866,0.013224],[0.01389,0.027744,0.022293],[0.011392,0.029015,0.014968],[0.010486,0.028847,0.012448],[0.010767,0.028783,0.013246],[0.013767,0.027351,0.023639],[0.037663,0.043295,0.057774],[0.036789,0.043262,0.053932],[0.037489,0.042988,0.056502],[0.052568,0.051953,0.070345]]},{"date":"201712190130","rgb":[[0.012241,0.027715,0.01776],[0.013111,0.026195,0.01662],[0.012585,0.02583,0.019824],[0.014112,0.026445,0.026126],[0.01165,0.028775,0.015644],[0.010707,0.028905,0.013005],[0.010968,0.028899,0.014182],[0.014693,0.027485,0.022966],[0.011712,0.029031,0.016234],[0.010778,0.029078,0.013145],[0.011053,0.028981,0.014179],[0.015273,0.027353,0.025434],[0.038622,0.042937,0.05894],[0.037199,0.043428,0.055946],[0.037788,0.043062,0.058455],[0.05445,0.051735,0.071691]]},{"date":"201712190140","rgb":[[0.01255,0.028038,0.015945],[0.016762,0.024896,0.014949],[0.013546,0.026851,0.014652],[0.013352,0.027492,0.021363],[0.011538,0.028449,0.016816],[0.010581,0.028809,0.012933],[0.010776,0.028697,0.014847],[0.014037,0.027231,0.024658],[0.011522,0.028228,0.018372],[0.010715,0.028854,0.013199],[0.011011,0.02844,0.015227],[0.014698,0.027023,0.025809],[0.038502,0.042808,0.059949],[0.037081,0.04328,0.056435],[0.037984,0.043269,0.05765],[0.053205,0.051805,0.071708]]},{"date":"201712190150","rgb":[[0.012964,0.027749,0.015025],[0.014409,0.026096,0.015065],[0.016335,0.024896,0.015706],[0.013397,0.026816,0.02183],[0.011187,0.029093,0.014537],[0.01052,0.028805,0.011278],[0.010499,0.028774,0.012207],[0.01247,0.027653,0.021893],[0.011271,0.029109,0.014563],[0.010483,0.028847,0.011181],[0.010559,0.028772,0.01279],[0.012655,0.02775,0.022137],[0.038669,0.043266,0.057612],[0.036888,0.04338,0.054849],[0.037538,0.043204,0.057101],[0.052959,0.052085,0.070967]]},{"date":"201712190200","rgb":[[0.012471,0.027787,0.017521],[0.011692,0.027199,0.016457],[0.015183,0.025572,0.016131],[0.014291,0.02689,0.023201],[0.011465,0.028811,0.015845],[0.010655,0.028875,0.012594],[0.010631,0.028567,0.01387],[0.013793,0.027149,0.023475],[0.011208,0.028998,0.014855],[0.010499,0.028828,0.01217],[0.010861,0.028897,0.012765],[0.013634,0.027316,0.023803],[0.038669,0.042597,0.060286],[0.037478,0.043088,0.056665],[0.037999,0.042624,0.058612],[0.05313,0.052019,0.072765]]},{"date":"201712190210","rgb":[[0.011805,0.02802,0.016407],[0.012944,0.0268,0.014972],[0.012616,0.026161,0.017674],[0.012882,0.027154,0.021383],[0.011237,0.028651,0.015404],[0.010602,0.028848,0.012706],[0.010476,0.028698,0.012869],[0.012545,0.027568,0.021828],[0.011166,0.028796,0.015494],[0.010617,0.029046,0.012417],[0.010707,0.028694,0.012924],[0.012731,0.027782,0.022146],[0.038109,0.043022,0.058445],[0.037136,0.043265,0.055775],[0.037644,0.043199,0.056814],[0.052379,0.051803,0.071533]]},{"date":"201712190220","rgb":[[0.011954,0.027485,0.017605],[0.012559,0.026576,0.016257],[0.01287,0.025683,0.018719],[0.012698,0.026782,0.021555],[0.011418,0.028588,0.015632],[0.010545,0.02895,0.011243],[0.010531,0.028842,0.011675],[0.01278,0.02823,0.018964],[0.011244,0.028255,0.016953],[0.010425,0.028687,0.012448],[0.010528,0.028738,0.013452],[0.013191,0.027646,0.022061],[0.038339,0.042054,0.062099],[0.036876,0.042884,0.056348],[0.037455,0.042605,0.057945],[0.052374,0.052165,0.070642]]},{"date":"201712190230","rgb":[[0.012371,0.027684,0.01555],[0.015785,0.024847,0.017611],[0.016481,0.024993,0.015385],[0.013274,0.027377,0.021205],[0.010814,0.028788,0.013367],[0.010412,0.028738,0.010925],[0.010422,0.028714,0.011415],[0.012484,0.02777,0.02012],[0.010943,0.029028,0.013142],[0.010385,0.028877,0.010459],[0.010452,0.02892,0.011042],[0.012641,0.027935,0.019331],[0.037622,0.043371,0.056922],[0.036605,0.043313,0.053773],[0.037054,0.043503,0.055212],[0.05202,0.05229,0.069191]]},{"date":"201712190240","rgb":[[0.012195,0.027268,0.018988],[0.012371,0.027138,0.015623],[0.012451,0.025826,0.019633],[0.013054,0.027042,0.022406],[0.011443,0.028579,0.016021],[0.010544,0.028916,0.012126],[0.010597,0.028201,0.014685],[0.013203,0.027437,0.022463],[0.011319,0.028127,0.01728],[0.010483,0.028655,0.013144],[0.010762,0.028025,0.014993],[0.013966,0.027207,0.024222],[0.03842,0.042448,0.060984],[0.037119,0.043011,0.056453],[0.037701,0.042791,0.05889],[0.053241,0.051856,0.072877]]},{"date":"201712190250","rgb":[[0.012212,0.028305,0.015461],[0.012819,0.026922,0.015239],[0.013386,0.026846,0.015598],[0.013025,0.027563,0.021636],[0.011328,0.028792,0.015935],[0.010444,0.028773,0.01114],[0.010506,0.028695,0.012306],[0.013054,0.02773,0.021428],[0.011426,0.028815,0.015588],[0.010578,0.028934,0.012489],[0.010545,0.028796,0.012917],[0.013783,0.027256,0.023859],[0.038448,0.042933,0.059462],[0.036927,0.043177,0.05599],[0.037543,0.043027,0.057655],[0.052874,0.052087,0.072185]]},{"date":"201712190300","rgb":[[0.012204,0.027428,0.016801],[0.015071,0.025299,0.017039],[0.013024,0.026815,0.015123],[0.012828,0.027344,0.022564],[0.010788,0.028549,0.014316],[0.010425,0.028769,0.011106],[0.010394,0.028657,0.011839],[0.012392,0.027646,0.021448],[0.010916,0.02881,0.013864],[0.010381,0.028776,0.011273],[0.010426,0.028752,0.012484],[0.013086,0.027546,0.02271],[0.037667,0.043396,0.05679],[0.036828,0.043201,0.054693],[0.03722,0.043059,0.056097],[0.053196,0.052223,0.070814]]},{"date":"201712190310","rgb":[[0.012256,0.027059,0.018638],[0.013087,0.027154,0.012573],[0.013455,0.026603,0.014947],[0.014205,0.026999,0.022565],[0.010746,0.028512,0.014044],[0.010377,0.028795,0.010669],[0.010466,0.028722,0.01137],[0.012495,0.027583,0.020483],[0.010947,0.028636,0.014343],[0.010361,0.028786,0.010819],[0.010399,0.02861,0.012394],[0.012451,0.027248,0.023497],[0.037836,0.042876,0.057536],[0.036704,0.043248,0.05457],[0.037315,0.043232,0.055961],[0.052665,0.051888,0.070916]]},{"date":"201712190320","rgb":[[0.012016,0.027685,0.017296],[0.013559,0.026598,0.015054],[0.015418,0.025402,0.016126],[0.013079,0.027162,0.022618],[0.01099,0.028771,0.014088],[0.010482,0.028802,0.011804],[0.010374,0.028652,0.012135],[0.012337,0.027854,0.020103],[0.011098,0.028528,0.015618],[0.010461,0.028771,0.01265],[0.010479,0.02866,0.013208],[0.012738,0.027339,0.023713],[0.037652,0.042721,0.058189],[0.036873,0.042946,0.056134],[0.037122,0.04244,0.057544],[0.052497,0.051992,0.071416]]},{"date":"201712190330","rgb":[[0.012481,0.027784,0.015837],[0.012665,0.026761,0.015522],[0.014614,0.025201,0.018553],[0.012662,0.027032,0.022374],[0.010914,0.028672,0.013974],[0.010407,0.028801,0.010816],[0.010415,0.028665,0.011953],[0.011771,0.027403,0.021137],[0.011039,0.029221,0.014144],[0.010436,0.028823,0.010807],[0.010345,0.0287,0.011505],[0.01204,0.027344,0.021176],[0.037769,0.042917,0.058777],[0.036842,0.043341,0.05427],[0.037171,0.042978,0.055924],[0.051499,0.052071,0.071568]]},{"date":"201712190340","rgb":[[0.013036,0.027636,0.016126],[0.013122,0.026646,0.0145],[0.013443,0.026721,0.014361],[0.013649,0.027131,0.022565],[0.011083,0.028636,0.014175],[0.010473,0.028805,0.011412],[0.010468,0.028571,0.012437],[0.011878,0.027244,0.022703],[0.011253,0.028983,0.014935],[0.010478,0.02887,0.011328],[0.010455,0.028499,0.013601],[0.012588,0.026803,0.024991],[0.038104,0.042626,0.060624],[0.03695,0.043196,0.055671],[0.0373,0.042648,0.059001],[0.052024,0.051677,0.073161]]},{"date":"201712190350","rgb":[[0.012681,0.027729,0.015397],[0.016187,0.025047,0.01499],[0.015097,0.025779,0.015388],[0.013914,0.027279,0.01901],[0.01119,0.028517,0.015936],[0.010431,0.028755,0.011349],[0.010462,0.02872,0.011157],[0.012053,0.028304,0.019178],[0.011547,0.029218,0.014545],[0.010452,0.028847,0.011521],[0.010582,0.028957,0.012332],[0.012888,0.028071,0.019684],[0.03867,0.042894,0.05965],[0.037055,0.043273,0.055525],[0.037729,0.043209,0.056511],[0.052721,0.052138,0.07055]]},{"date":"201712190400","rgb":[[0.012394,0.027819,0.016674],[0.015623,0.025517,0.014286],[0.012625,0.027148,0.014519],[0.013641,0.027098,0.022895],[0.011936,0.02899,0.01498],[0.010558,0.028921,0.011233],[0.0105,0.028644,0.011671],[0.013835,0.027997,0.020986],[0.012199,0.029279,0.015383],[0.010638,0.028963,0.013148],[0.010739,0.029061,0.013345],[0.015507,0.027022,0.025015],[0.038957,0.042851,0.060558],[0.037454,0.043262,0.056766],[0.038561,0.042957,0.058498],[0.05506,0.051776,0.073863]]},{"date":"201712190410","rgb":[[0.013217,0.027265,0.017043],[0.013866,0.026453,0.014191],[0.012096,0.027442,0.014617],[0.013155,0.026522,0.02392],[0.011683,0.028404,0.017225],[0.010504,0.028845,0.012152],[0.010459,0.028732,0.012594],[0.012334,0.027063,0.023272],[0.011646,0.028775,0.016688],[0.0106,0.028867,0.012212],[0.010615,0.028733,0.012858],[0.012884,0.027543,0.023061],[0.039093,0.042235,0.062533],[0.037309,0.043062,0.057237],[0.037684,0.042746,0.060125],[0.052643,0.051814,0.072912]]},{"date":"201712190420","rgb":[[0.011819,0.027893,0.016001],[0.012021,0.027145,0.015167],[0.01244,0.026916,0.014917],[0.013563,0.02671,0.022241],[0.012053,0.029139,0.014584],[0.010718,0.028914,0.012556],[0.010624,0.028858,0.012726],[0.013592,0.027421,0.021878],[0.012231,0.028783,0.015954],[0.010706,0.028874,0.013313],[0.010752,0.028795,0.013587],[0.014842,0.027139,0.024362],[0.039731,0.042905,0.060641],[0.037759,0.043234,0.05655],[0.038897,0.04318,0.058643],[0.055242,0.051729,0.073566]]},{"date":"201712190430","rgb":[[0.012973,0.027904,0.016517],[0.014202,0.026689,0.013119],[0.013088,0.026304,0.017665],[0.014319,0.026666,0.025709],[0.012598,0.028411,0.01868],[0.010937,0.029145,0.01303],[0.010996,0.028369,0.015591],[0.014877,0.027226,0.025622],[0.013995,0.028194,0.020557],[0.011457,0.028985,0.015277],[0.012284,0.028514,0.018572],[0.017501,0.02644,0.029344],[0.040869,0.042722,0.062549],[0.039289,0.043816,0.058776],[0.041835,0.042272,0.063446],[0.058702,0.051182,0.076936]]},{"date":"201712190440","rgb":[[0.011848,0.028236,0.016104],[0.013274,0.026997,0.013386],[0.01408,0.026518,0.013727],[0.015455,0.026743,0.021491],[0.012621,0.029241,0.015924],[0.010725,0.029044,0.012187],[0.010866,0.029094,0.012704],[0.014523,0.027746,0.021987],[0.013466,0.028985,0.016657],[0.010989,0.029313,0.01282],[0.011543,0.028976,0.014751],[0.016219,0.027562,0.023064],[0.041894,0.042633,0.061097],[0.039352,0.043413,0.058638],[0.040439,0.04292,0.060452],[0.057158,0.051641,0.07253]]},{"date":"201712190450","rgb":[[0.012634,0.027877,0.016069],[0.013019,0.027385,0.012546],[0.012647,0.026764,0.015617],[0.013086,0.027594,0.020268],[0.013339,0.02907,0.015988],[0.010994,0.029104,0.012806],[0.011091,0.029097,0.013112],[0.014368,0.028279,0.020493],[0.014538,0.028737,0.017749],[0.011321,0.029284,0.014932],[0.01213,0.028933,0.016418],[0.017277,0.026844,0.02539],[0.043198,0.042188,0.061753],[0.039984,0.042917,0.059871],[0.040967,0.042449,0.062647],[0.057094,0.051542,0.073822]]},{"date":"201712190500","rgb":[[0.012845,0.027706,0.017574],[0.01633,0.025468,0.014125],[0.015639,0.025666,0.013832],[0.01349,0.027031,0.022125],[0.013593,0.028384,0.01891],[0.010915,0.0291,0.012986],[0.010915,0.029122,0.013661],[0.014649,0.027426,0.023124],[0.014862,0.028256,0.020389],[0.011501,0.029203,0.013989],[0.011845,0.028567,0.016495],[0.016347,0.026888,0.025616],[0.043233,0.041821,0.064986],[0.039428,0.04281,0.060499],[0.040109,0.042377,0.063417],[0.056822,0.051563,0.075332]]},{"date":"201712190510","rgb":[[0.012409,0.026741,0.020392],[0.012433,0.027409,0.013995],[0.013487,0.026579,0.015342],[0.013423,0.026756,0.023748],[0.012294,0.028278,0.019387],[0.010941,0.029035,0.013433],[0.01081,0.027837,0.016646],[0.014597,0.026803,0.025836],[0.014119,0.028205,0.021534],[0.011501,0.029172,0.014879],[0.01158,0.028378,0.017562],[0.015373,0.026822,0.026944],[0.043295,0.041466,0.065995],[0.040056,0.042706,0.062379],[0.041394,0.042348,0.064386],[0.057025,0.051177,0.077171]]},{"date":"201712190520","rgb":[[0.012017,0.02833,0.01507],[0.013208,0.026826,0.013666],[0.012604,0.02642,0.016305],[0.01364,0.027789,0.019603],[0.01306,0.028872,0.015799],[0.010687,0.029009,0.012403],[0.010853,0.028898,0.013075],[0.014375,0.027514,0.0229],[0.016125,0.028421,0.017272],[0.011639,0.029359,0.014177],[0.012128,0.029037,0.016668],[0.017391,0.026657,0.027037],[0.044607,0.041434,0.061686],[0.040323,0.043431,0.058651],[0.042369,0.041978,0.063442],[0.058477,0.05148,0.077672]]},{"date":"201712190530","rgb":[[0.012581,0.027569,0.0169],[0.013214,0.027054,0.012931],[0.012094,0.027236,0.015055],[0.013843,0.02699,0.022143],[0.011741,0.02905,0.015608],[0.010795,0.02896,0.012871],[0.011218,0.028718,0.014155],[0.01475,0.027187,0.025447],[0.015263,0.02873,0.017453],[0.011987,0.029682,0.014234],[0.013274,0.028952,0.016795],[0.018908,0.026917,0.025987],[0.044555,0.041696,0.0652],[0.040855,0.042588,0.062436],[0.043431,0.041535,0.065519],[0.059679,0.05111,0.079691]]},{"date":"201712190540","rgb":[[0.012631,0.02804,0.015557],[0.013354,0.026659,0.014646],[0.014529,0.026329,0.013505],[0.012766,0.027238,0.022956],[0.012825,0.029125,0.015913],[0.010904,0.029089,0.011885],[0.011108,0.028933,0.013837],[0.015715,0.027397,0.02434],[0.017225,0.028033,0.019556],[0.012381,0.029464,0.015929],[0.014756,0.028473,0.019939],[0.019755,0.026473,0.029996],[0.045937,0.041046,0.064859],[0.042687,0.042356,0.061742],[0.044896,0.04094,0.066679],[0.06212,0.051648,0.081822]]},{"date":"201712190550","rgb":[[0.01232,0.028029,0.017199],[0.014233,0.026324,0.016312],[0.013669,0.026516,0.016214],[0.013414,0.027385,0.02243],[0.013527,0.028813,0.017577],[0.011357,0.029221,0.013817],[0.011369,0.029089,0.014347],[0.014199,0.027743,0.023008],[0.016722,0.027838,0.020773],[0.012871,0.029274,0.016065],[0.013233,0.028655,0.018543],[0.017615,0.026861,0.027128],[0.046768,0.040904,0.066883],[0.043631,0.041925,0.063579],[0.043378,0.041611,0.066245],[0.059817,0.051472,0.079038]]},{"date":"201712190600","rgb":[[0.012576,0.028229,0.016536],[0.012474,0.026485,0.018561],[0.012291,0.025451,0.021444],[0.013699,0.026807,0.025487],[0.016197,0.028177,0.019777],[0.011943,0.029025,0.016147],[0.012159,0.027695,0.019452],[0.016844,0.026796,0.027407],[0.019921,0.02673,0.02234],[0.015238,0.028223,0.019663],[0.015479,0.02767,0.022898],[0.021087,0.026456,0.032255],[0.046689,0.040701,0.067207],[0.044125,0.041686,0.063888],[0.045925,0.041002,0.06794],[0.063989,0.051718,0.08419]]},{"date":"201712190610","rgb":[[0.012337,0.027715,0.016843],[0.014742,0.025922,0.01476],[0.014586,0.026149,0.014295],[0.012533,0.02739,0.022167],[0.013938,0.028053,0.020784],[0.011299,0.029025,0.01417],[0.011444,0.028526,0.016093],[0.015897,0.026979,0.026548],[0.0175,0.027635,0.021634],[0.012574,0.028689,0.017952],[0.014572,0.02819,0.020575],[0.019244,0.026423,0.029798],[0.045211,0.041299,0.066691],[0.04208,0.041955,0.064797],[0.045359,0.040775,0.067773],[0.061476,0.051618,0.082634]]},{"date":"201712190620","rgb":[[0.014243,0.02728,0.0173],[0.012869,0.026663,0.016994],[0.012689,0.026391,0.017255],[0.014892,0.026608,0.024336],[0.014349,0.027748,0.022771],[0.011503,0.02793,0.018397],[0.011636,0.028307,0.017194],[0.016498,0.026461,0.028252],[0.016727,0.02717,0.024978],[0.012548,0.02792,0.021679],[0.014176,0.027602,0.023342],[0.020222,0.026384,0.033437],[0.044395,0.041033,0.069082],[0.04168,0.041515,0.066093],[0.044714,0.040878,0.069498],[0.062644,0.052227,0.086903]]},{"date":"201712190630","rgb":[[0.012297,0.027352,0.019747],[0.012363,0.026911,0.016808],[0.013161,0.025984,0.018169],[0.013997,0.0269,0.025494],[0.015281,0.026505,0.02862],[0.013112,0.027116,0.026443],[0.013534,0.026808,0.02786],[0.018219,0.02644,0.034767],[0.017287,0.025874,0.031381],[0.015107,0.026407,0.030017],[0.016536,0.025925,0.031829],[0.022231,0.027109,0.042151],[0.046575,0.040834,0.07457],[0.044749,0.040138,0.072513],[0.046795,0.040967,0.07664],[0.063821,0.052793,0.09178]]},{"date":"201712190640","rgb":[[0.013938,0.027515,0.021865],[0.015639,0.025631,0.01876],[0.01228,0.026875,0.018556],[0.013006,0.026968,0.024359],[0.020816,0.02817,0.052564],[0.018085,0.028387,0.052745],[0.018873,0.028672,0.053658],[0.023721,0.029065,0.059426],[0.024193,0.028817,0.058791],[0.020504,0.029319,0.058984],[0.023426,0.029483,0.060646],[0.029078,0.030277,0.071489],[0.051231,0.043441,0.1008],[0.049213,0.043711,0.099624],[0.052897,0.044021,0.10417],[0.069607,0.055289,0.12585]]},{"date":"201712190650","rgb":[[0.018497,0.028361,0.06337],[0.016951,0.027194,0.047297],[0.01478,0.026755,0.035972],[0.015067,0.027155,0.033183],[0.049982,0.034643,0.26851],[0.050659,0.033887,0.27501],[0.049734,0.034699,0.26669],[0.049048,0.036099,0.25673],[0.054845,0.036199,0.28613],[0.05456,0.035345,0.2888],[0.054533,0.03562,0.28512],[0.057983,0.037127,0.28415],[0.077858,0.050243,0.29978],[0.077299,0.050162,0.29852],[0.081709,0.050981,0.30203],[0.10264,0.060873,0.30602]]},{"date":"201712190700","rgb":[[0.036934,0.040836,0.14569],[0.030805,0.040612,0.10922],[0.02243,0.033249,0.076841],[0.019643,0.028467,0.058016],[0.15383,0.13676,0.64602],[0.17025,0.17314,0.65551],[0.17276,0.16961,0.6691],[0.16193,0.11981,0.68455],[0.1693,0.14895,0.68072],[0.18193,0.18162,0.67663],[0.18546,0.17815,0.69549],[0.1799,0.13491,0.72805],[0.18097,0.12645,0.67411],[0.18976,0.16314,0.66962],[0.19474,0.1572,0.68843],[0.20543,0.13123,0.69986]]},{"date":"201712190710","rgb":[[0.086427,0.11049,0.31299],[0.073499,0.093268,0.26667],[0.055527,0.064037,0.2182],[0.041427,0.039527,0.19107],[0.35412,0.53855,0.99381],[0.38961,0.61895,0.99514],[0.40535,0.63948,0.99568],[0.3892,0.56885,0.99013],[0.37917,0.58462,0.99407],[0.40967,0.65861,0.99554],[0.42791,0.68201,0.9968],[0.42204,0.64454,0.99417],[0.36916,0.51142,0.9464],[0.39665,0.57634,0.94705],[0.41398,0.59533,0.9471],[0.41296,0.55545,0.93829]]},{"date":"201712190720","rgb":[[0.24193,0.24596,0.58923],[0.21,0.20423,0.56073],[0.16103,0.14265,0.52448],[0.13431,0.086493,0.5252],[0.93064,0.9949,0.99871],[0.979,0.9832,0.99995],[0.98022,0.98269,0.99965],[0.94401,0.98594,0.99662],[0.96246,0.98947,0.9993],[0.98431,0.98039,1],[0.98431,0.98043,0.99988],[0.98056,0.98411,0.99361],[0.87619,0.92338,0.94964],[0.91565,0.9125,0.94676],[0.91981,0.9115,0.94174],[0.9087,0.91503,0.93474]]},{"date":"201712190730","rgb":[[0.45177,0.47563,0.92004],[0.4238,0.473,0.91314],[0.38277,0.4153,0.90766],[0.36821,0.3689,0.93585],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98432,0.98045,0.99974],[0.98296,0.97932,0.99904],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92113,0.9068,0.94505]]},{"date":"201712190740","rgb":[[0.54701,0.7459,0.98824],[0.52775,0.76192,0.98825],[0.49366,0.72524,0.98694],[0.49155,0.71579,0.98538],[0.98431,0.98097,0.99782],[0.98431,0.98339,0.98821],[0.98433,0.98345,0.98808],[0.98353,0.98114,0.99737],[0.98431,0.98416,0.98499],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98416,0.98498],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92058,0.91047,0.93121]]},{"date":"201712190750","rgb":[[0.62216,0.92071,0.99154],[0.60225,0.93795,0.99296],[0.57096,0.92311,0.99167],[0.57573,0.92634,0.99104],[0.98431,0.98383,0.98647],[0.98431,0.98185,0.99449],[0.9843,0.98349,0.98805],[0.98396,0.98321,0.98968],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92055,0.91044,0.93116]]},{"date":"201712190800","rgb":[[0.79051,0.9925,0.99544],[0.8015,0.99341,0.99412],[0.78747,0.99424,0.99689],[0.81029,0.99472,0.99567],[0.98431,0.9842,0.98492],[0.98431,0.98429,0.98445],[0.98431,0.98323,0.98891],[0.98431,0.98425,0.98467],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92059,0.91053,0.93111]]},{"date":"201712190810","rgb":[[0.94285,0.99003,0.99013],[0.95463,0.98885,0.99066],[0.95406,0.98895,0.99224],[0.96901,0.9875,0.9908],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92061,0.91053,0.93113]]},{"date":"201712190820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90333,0.945]]},{"date":"201712190830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.94502]]},{"date":"201712190840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90335,0.94495]]},{"date":"201712190850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.9033,0.94488]]},{"date":"201712190900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90331,0.94492]]},{"date":"201712190910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.9033,0.94494]]},{"date":"201712190920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90331,0.94499]]},{"date":"201712190930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90332,0.94501]]},{"date":"201712190940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.9033,0.94498]]},{"date":"201712190950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99455,0.977,1],[0.99553,0.97666,1],[0.99608,0.97647,1],[0.99097,0.97821,1],[0.98482,0.98024,1],[0.9859,0.97987,1],[0.99312,0.97746,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92116,0.90679,0.94484]]},{"date":"201712191000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99537,0.97671,1],[0.99582,0.97656,1],[0.99608,0.97647,1],[0.9924,0.97771,1],[0.98548,0.98002,1],[0.98652,0.97968,1],[0.99384,0.97724,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92137,0.90672,0.94492]]},{"date":"201712191010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90327,0.94499]]},{"date":"201712191020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90329,0.94494]]},{"date":"201712191030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90329,0.94502]]},{"date":"201712191040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94495]]},{"date":"201712191050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93056,0.90325,0.94488]]},{"date":"201712191100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90327,0.945]]},{"date":"201712191110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90327,0.94495]]},{"date":"201712191120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90328,0.94498]]},{"date":"201712191130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90329,0.94498]]},{"date":"201712191140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90329,0.94498]]},{"date":"201712191150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90325,0.94493]]},{"date":"201712191200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90329,0.94493]]},{"date":"201712191210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90327,0.94497]]},{"date":"201712191220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99574,0.9766,1],[0.99599,0.97651,1],[0.99608,0.97647,1],[0.9925,0.97769,1],[0.98553,0.98001,1],[0.98715,0.97947,1],[0.99438,0.97705,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92161,0.90665,0.94499]]},{"date":"201712191230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99607,0.97648,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99385,0.97724,1],[0.98657,0.97967,1],[0.98857,0.97899,1],[0.9952,0.97677,1],[0.92215,0.90822,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92234,0.90642,0.94498]]},{"date":"201712191240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.9033,0.94499]]},{"date":"201712191250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90327,0.94488]]},{"date":"201712191300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9945,0.97702,1],[0.99525,0.97676,1],[0.99608,0.97647,1],[0.99097,0.97821,1],[0.98482,0.98024,1],[0.98548,0.98003,1],[0.9925,0.97769,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92114,0.90681,0.94494]]},{"date":"201712191310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90329,0.94502]]},{"date":"201712191320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90328,0.94502]]},{"date":"201712191330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.9033,0.94504]]},{"date":"201712191340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90331,0.94503]]},{"date":"201712191350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90327,0.9449]]},{"date":"201712191400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.9033,0.94497]]},{"date":"201712191410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.9033,0.94501]]},{"date":"201712191420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.9033,0.94502]]},{"date":"201712191430","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90332,0.94503]]},{"date":"201712191440","rgb":[[0.97176,0.98687,0.98845],[0.97678,0.98632,0.98765],[0.97858,0.98586,0.98824],[0.984,0.98324,0.98999],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92062,0.91051,0.9312]]},{"date":"201712191450","rgb":[[0.90066,0.99141,0.99137],[0.91135,0.99128,0.99163],[0.90677,0.99162,0.99351],[0.92988,0.99141,0.99215],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92059,0.91048,0.93108]]},{"date":"201712191500","rgb":[[0.70618,0.99239,0.99424],[0.70724,0.99413,0.99462],[0.689,0.9952,0.99577],[0.71121,0.99585,0.99532],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98433],[0.98431,0.98428,0.98455],[0.98424,0.98437,0.98435],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92057,0.91046,0.93108]]},{"date":"201712191510","rgb":[[0.57802,0.92888,0.99219],[0.55518,0.94773,0.99243],[0.52475,0.94312,0.99221],[0.53212,0.95276,0.99138],[0.98431,0.98339,0.98817],[0.98431,0.98378,0.98658],[0.98432,0.98349,0.98793],[0.98414,0.98316,0.98971],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92057,0.91045,0.93109]]},{"date":"201712191520","rgb":[[0.45588,0.69549,0.98838],[0.42997,0.70943,0.9883],[0.39314,0.67683,0.98718],[0.38462,0.66824,0.98495],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98434,0.98045,0.99989],[0.98334,0.98061,0.99948],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92111,0.90677,0.94495]]},{"date":"201712191530","rgb":[[0.38411,0.47864,0.9177],[0.34419,0.47208,0.92384],[0.29998,0.4128,0.91506],[0.27929,0.36942,0.92168],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98435,0.98043,0.99978],[0.98268,0.97981,0.9992],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92112,0.90678,0.94495]]},{"date":"201712191540","rgb":[[0.28863,0.27294,0.6818],[0.2435,0.24968,0.65701],[0.19532,0.19051,0.63436],[0.16844,0.12735,0.6529],[0.98414,0.98389,0.98665],[0.98431,0.98137,0.99623],[0.98428,0.98048,0.99969],[0.98139,0.97794,0.99852],[0.98431,0.98431,0.98431],[0.98431,0.98429,0.98444],[0.98431,0.98265,0.99115],[0.98431,0.98057,0.99934],[0.92064,0.91217,0.93799],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92058,0.90994,0.93333]]},{"date":"201712191550","rgb":[[0.10192,0.17329,0.37437],[0.089851,0.14463,0.33827],[0.072297,0.095643,0.29701],[0.057022,0.050157,0.2799],[0.36781,0.87001,0.99605],[0.40183,0.96248,0.99651],[0.42974,0.99087,0.9983],[0.43094,0.96054,0.99432],[0.38085,0.89415,0.99649],[0.41035,0.96278,0.99657],[0.43799,0.9919,0.99816],[0.43993,0.98111,0.99698],[0.37596,0.77991,0.94886],[0.40197,0.83607,0.94871],[0.42219,0.85719,0.94854],[0.42895,0.84165,0.94023]]},{"date":"201712191600","rgb":[[0.043025,0.054337,0.18189],[0.036423,0.052767,0.14875],[0.028232,0.041634,0.10675],[0.022641,0.030845,0.078511],[0.16762,0.20919,0.78827],[0.18581,0.26678,0.86114],[0.1972,0.27806,0.89622],[0.19609,0.23515,0.88033],[0.17297,0.2102,0.79841],[0.18883,0.2637,0.86083],[0.20014,0.27573,0.89933],[0.20168,0.23698,0.89491],[0.18305,0.17967,0.75088],[0.19379,0.22183,0.78362],[0.2029,0.22701,0.80983],[0.21301,0.19832,0.81428]]},{"date":"201712191610","rgb":[[0.017315,0.028124,0.058017],[0.016055,0.026857,0.046623],[0.01471,0.026488,0.035815],[0.014593,0.026791,0.032893],[0.04334,0.034536,0.23127],[0.046196,0.033477,0.2535],[0.047815,0.032717,0.26556],[0.049566,0.032806,0.27533],[0.045322,0.033928,0.24653],[0.047649,0.032752,0.26414],[0.049406,0.032011,0.27625],[0.053354,0.033461,0.29414],[0.067532,0.048081,0.25971],[0.069995,0.04689,0.27971],[0.071881,0.046364,0.29243],[0.086122,0.057631,0.30662]]},{"date":"201712191620","rgb":[[0.012687,0.028147,0.021193],[0.012789,0.027016,0.019294],[0.013128,0.025837,0.02065],[0.013769,0.026666,0.026741],[0.015307,0.027205,0.044894],[0.015468,0.026928,0.047764],[0.016282,0.027637,0.049775],[0.018931,0.028424,0.057225],[0.016614,0.027821,0.05081],[0.01685,0.02785,0.052548],[0.017097,0.027995,0.054487],[0.020075,0.028502,0.061423],[0.043351,0.04271,0.087151],[0.042106,0.042918,0.08864],[0.043102,0.043035,0.090859],[0.058913,0.053461,0.10416]]},{"date":"201712191630","rgb":[[0.01282,0.027773,0.017547],[0.017087,0.024584,0.016315],[0.014305,0.024662,0.020949],[0.013395,0.026967,0.023923],[0.011926,0.026993,0.024377],[0.011148,0.026299,0.022367],[0.011368,0.026556,0.023271],[0.013648,0.026806,0.030459],[0.012347,0.027287,0.025943],[0.011577,0.026784,0.023528],[0.011816,0.027046,0.023929],[0.014569,0.026887,0.031759],[0.03974,0.041829,0.06835],[0.038608,0.042026,0.066117],[0.038932,0.04205,0.067402],[0.053784,0.051735,0.07894]]},{"date":"201712191640","rgb":[[0.011928,0.028041,0.015029],[0.013573,0.026399,0.015599],[0.012121,0.026995,0.014795],[0.012985,0.026768,0.023036],[0.011199,0.028185,0.016453],[0.010524,0.028679,0.013199],[0.010559,0.028544,0.013463],[0.013075,0.027193,0.024668],[0.011263,0.027519,0.019126],[0.010743,0.028866,0.013765],[0.01089,0.028371,0.015822],[0.013058,0.02704,0.025695],[0.039137,0.041922,0.063322],[0.037889,0.04293,0.05867],[0.038374,0.0426,0.060235],[0.053068,0.051627,0.073015]]},{"date":"201712191650","rgb":[[0.012421,0.028161,0.015609],[0.015323,0.025779,0.014159],[0.012586,0.027073,0.01505],[0.013954,0.027403,0.02204],[0.011607,0.02887,0.015621],[0.010746,0.029068,0.012978],[0.010856,0.028516,0.014389],[0.014125,0.02724,0.024965],[0.012135,0.028614,0.018386],[0.011054,0.028795,0.014514],[0.011518,0.028457,0.017436],[0.016774,0.026461,0.028023],[0.040337,0.042226,0.063445],[0.038807,0.042617,0.061],[0.040887,0.042173,0.063018],[0.056406,0.050968,0.075125]]},{"date":"201712191700","rgb":[[0.012224,0.027795,0.016275],[0.014684,0.026005,0.014823],[0.013849,0.024728,0.020695],[0.013451,0.02656,0.02407],[0.011437,0.028499,0.016627],[0.010693,0.028947,0.012876],[0.010806,0.028371,0.014489],[0.013554,0.0273,0.02443],[0.012226,0.028105,0.019645],[0.010793,0.02838,0.015199],[0.011183,0.026661,0.021215],[0.014323,0.026999,0.026024],[0.039053,0.042495,0.06236],[0.037941,0.043285,0.05711],[0.038366,0.04197,0.062317],[0.054814,0.051309,0.073831]]},{"date":"201712191710","rgb":[[0.012261,0.027513,0.017129],[0.014113,0.025261,0.018582],[0.015584,0.025419,0.015467],[0.013729,0.026765,0.023459],[0.011271,0.028772,0.015427],[0.01056,0.028815,0.011486],[0.010493,0.028555,0.013422],[0.012789,0.027448,0.022205],[0.011544,0.027616,0.019711],[0.010654,0.028844,0.013116],[0.010949,0.027908,0.016708],[0.014072,0.026894,0.026758],[0.039584,0.04236,0.063101],[0.038324,0.042962,0.059167],[0.038635,0.042375,0.062385],[0.054687,0.051497,0.073572]]},{"date":"201712191720","rgb":[[0.011908,0.027583,0.017765],[0.014926,0.025256,0.01758],[0.014653,0.02542,0.017246],[0.013827,0.026742,0.023485],[0.011758,0.028445,0.017982],[0.01048,0.028623,0.013237],[0.010581,0.028473,0.013981],[0.012702,0.026884,0.025437],[0.012385,0.02803,0.020242],[0.010778,0.028363,0.014965],[0.011077,0.028067,0.017786],[0.014531,0.026777,0.02788],[0.040093,0.041631,0.065831],[0.038133,0.041693,0.062714],[0.038872,0.041937,0.064098],[0.054508,0.051418,0.075921]]},{"date":"201712191730","rgb":[[0.012566,0.027306,0.017118],[0.013011,0.025954,0.017848],[0.013705,0.02553,0.01824],[0.013022,0.026717,0.023952],[0.011501,0.028593,0.016853],[0.010531,0.028749,0.012673],[0.010754,0.027713,0.015954],[0.013272,0.026956,0.025156],[0.012046,0.02773,0.020171],[0.010737,0.028718,0.013742],[0.01092,0.028139,0.016347],[0.015393,0.026804,0.026914],[0.039652,0.042158,0.063823],[0.038118,0.042623,0.0594],[0.038543,0.042456,0.060697],[0.054294,0.051488,0.075046]]},{"date":"201712191740","rgb":[[0.01232,0.028075,0.015298],[0.012732,0.026259,0.016851],[0.013333,0.024901,0.021092],[0.013022,0.026495,0.023336],[0.011446,0.028854,0.015122],[0.010504,0.028806,0.012286],[0.010533,0.028099,0.013911],[0.013469,0.027616,0.0218],[0.011723,0.029034,0.016006],[0.01066,0.02897,0.01262],[0.010762,0.02904,0.013472],[0.013949,0.027625,0.022932],[0.039698,0.042858,0.061396],[0.037872,0.043252,0.056932],[0.03866,0.043278,0.059148],[0.053906,0.051636,0.072705]]},{"date":"201712191750","rgb":[[0.012207,0.028099,0.016426],[0.014996,0.025407,0.017306],[0.016321,0.024687,0.018646],[0.012824,0.026922,0.022912],[0.011971,0.028182,0.019077],[0.010636,0.02888,0.012976],[0.010686,0.028627,0.013467],[0.013022,0.027536,0.022932],[0.012937,0.028183,0.021076],[0.010946,0.028669,0.014303],[0.011354,0.027631,0.018596],[0.01421,0.026823,0.027401],[0.041582,0.041833,0.065133],[0.038254,0.042612,0.060163],[0.038919,0.042094,0.063202],[0.054031,0.05137,0.073522]]},{"date":"201712191800","rgb":[[0.011779,0.028245,0.015151],[0.01491,0.026044,0.013172],[0.016121,0.024864,0.01641],[0.013867,0.026621,0.023165],[0.011517,0.02887,0.015114],[0.010525,0.028717,0.01288],[0.010648,0.028442,0.014334],[0.013246,0.027168,0.023402],[0.012156,0.028792,0.016987],[0.010658,0.028942,0.012889],[0.011074,0.028545,0.014625],[0.014958,0.026785,0.02591],[0.040317,0.042447,0.063329],[0.038255,0.042866,0.059623],[0.038842,0.042433,0.06215],[0.054809,0.051621,0.075189]]},{"date":"201712191810","rgb":[[0.012288,0.027948,0.016196],[0.016581,0.024851,0.01549],[0.014217,0.025683,0.017382],[0.013603,0.026647,0.024545],[0.012173,0.028612,0.016578],[0.010685,0.028927,0.013257],[0.010987,0.028303,0.015809],[0.01423,0.027073,0.025223],[0.012471,0.028408,0.018175],[0.01083,0.028527,0.014894],[0.0111,0.028304,0.016651],[0.01427,0.026742,0.026189],[0.04117,0.042501,0.062126],[0.038853,0.043151,0.059114],[0.03976,0.042453,0.0626],[0.055487,0.051634,0.073728]]},{"date":"201712191820","rgb":[[0.012058,0.027934,0.016068],[0.012693,0.027447,0.012175],[0.015304,0.025771,0.014454],[0.013717,0.02752,0.020738],[0.011924,0.028729,0.016424],[0.01069,0.028972,0.012682],[0.010838,0.02859,0.014432],[0.014593,0.027063,0.025342],[0.012489,0.028605,0.019033],[0.010984,0.029077,0.013834],[0.011641,0.028195,0.018136],[0.016161,0.026492,0.027334],[0.040794,0.041895,0.064831],[0.038935,0.043409,0.058674],[0.039686,0.042664,0.062183],[0.055735,0.051277,0.074389]]},{"date":"201712191830","rgb":[[0.012507,0.027917,0.017117],[0.014241,0.025767,0.016393],[0.014883,0.026006,0.013609],[0.013817,0.026568,0.02334],[0.012144,0.027525,0.021686],[0.010997,0.028949,0.014185],[0.01169,0.028474,0.016823],[0.014711,0.027179,0.024858],[0.012591,0.027949,0.021622],[0.011364,0.028882,0.014644],[0.011585,0.028245,0.01867],[0.015692,0.026758,0.027475],[0.040536,0.041992,0.065426],[0.038312,0.042558,0.061804],[0.039529,0.042007,0.064351],[0.055573,0.051553,0.07551]]},{"date":"201712191840","rgb":[[0.013462,0.027761,0.01622],[0.012939,0.027019,0.014812],[0.012697,0.027168,0.014639],[0.014052,0.027622,0.020221],[0.012042,0.029071,0.016529],[0.010969,0.02915,0.013422],[0.011213,0.02912,0.014219],[0.014769,0.027626,0.022786],[0.013223,0.028964,0.017488],[0.011067,0.029345,0.013086],[0.012077,0.029565,0.014778],[0.016164,0.027451,0.0232],[0.041513,0.042651,0.05958],[0.038705,0.043448,0.057492],[0.039785,0.043431,0.058797],[0.055645,0.051844,0.071752]]},{"date":"201712191850","rgb":[[0.01214,0.027619,0.016671],[0.01643,0.024908,0.015826],[0.013138,0.025241,0.020354],[0.013483,0.027074,0.022793],[0.011818,0.028027,0.019409],[0.010818,0.02856,0.0147],[0.011037,0.02775,0.017537],[0.014223,0.027154,0.025173],[0.012455,0.027542,0.021607],[0.011127,0.028063,0.016946],[0.011764,0.026702,0.022324],[0.014611,0.026707,0.02689],[0.039969,0.042285,0.063566],[0.038199,0.042287,0.060536],[0.039129,0.042462,0.062598],[0.054422,0.051978,0.07443]]},{"date":"201712191900","rgb":[[0.012411,0.028135,0.015723],[0.014344,0.025866,0.015748],[0.01301,0.025193,0.020409],[0.013583,0.027018,0.02182],[0.011996,0.028878,0.016125],[0.01073,0.028311,0.014502],[0.010797,0.026789,0.019499],[0.013536,0.027154,0.024486],[0.012422,0.028287,0.019378],[0.010892,0.028662,0.014911],[0.01128,0.027026,0.020896],[0.015353,0.026793,0.027489],[0.040222,0.042144,0.063388],[0.038083,0.042798,0.059875],[0.039062,0.041774,0.064136],[0.054338,0.051685,0.075429]]},{"date":"201712191910","rgb":[[0.012946,0.027807,0.015439],[0.012251,0.027001,0.015513],[0.012351,0.026923,0.016542],[0.013489,0.0269,0.024179],[0.01198,0.028785,0.016746],[0.010767,0.028931,0.013581],[0.011071,0.028447,0.015044],[0.014865,0.027263,0.02427],[0.01216,0.028234,0.019246],[0.010786,0.028835,0.013839],[0.011067,0.028108,0.016745],[0.014496,0.026968,0.026731],[0.04021,0.042128,0.063664],[0.038085,0.042882,0.058827],[0.03898,0.042627,0.062385],[0.055356,0.051401,0.075125]]},{"date":"201712191920","rgb":[[0.012931,0.027643,0.017253],[0.013514,0.02649,0.015256],[0.011838,0.026287,0.018765],[0.013695,0.026695,0.024859],[0.012815,0.027893,0.021067],[0.011104,0.028599,0.014594],[0.011261,0.027626,0.018813],[0.014756,0.026842,0.026793],[0.013439,0.028063,0.020569],[0.011421,0.028809,0.016036],[0.012027,0.027527,0.021045],[0.015484,0.026845,0.029247],[0.042258,0.041924,0.064875],[0.039611,0.042355,0.062303],[0.040378,0.042002,0.065271],[0.056311,0.051288,0.078657]]},{"date":"201712191930","rgb":[[0.012348,0.027871,0.017911],[0.012508,0.027247,0.015106],[0.014833,0.025021,0.018681],[0.013463,0.026745,0.023936],[0.012386,0.028172,0.019963],[0.010949,0.028808,0.014021],[0.011014,0.028539,0.015485],[0.014419,0.026889,0.025671],[0.013295,0.028159,0.02],[0.011341,0.029063,0.014469],[0.01172,0.028705,0.016419],[0.015659,0.027178,0.025833],[0.041563,0.04198,0.064546],[0.038784,0.042622,0.061361],[0.039686,0.042698,0.062784],[0.05556,0.051452,0.075392]]},{"date":"201712191940","rgb":[[0.012371,0.027681,0.017314],[0.013707,0.025849,0.017725],[0.012318,0.026019,0.019086],[0.014007,0.027142,0.022961],[0.012467,0.02844,0.018655],[0.011041,0.028486,0.015347],[0.011116,0.028483,0.015718],[0.015127,0.027158,0.025121],[0.01353,0.028104,0.021085],[0.011712,0.028753,0.017425],[0.011784,0.028262,0.018825],[0.016364,0.026859,0.026939],[0.04159,0.041626,0.065923],[0.039201,0.042774,0.061379],[0.040136,0.042371,0.063013],[0.05591,0.051571,0.076293]]},{"date":"201712192000","rgb":[[0.012652,0.027803,0.017408],[0.015582,0.025339,0.016203],[0.015931,0.024333,0.020911],[0.014091,0.027142,0.024493],[0.012648,0.028291,0.019852],[0.011048,0.0289,0.014389],[0.01204,0.028149,0.017452],[0.016247,0.027021,0.025942],[0.014082,0.027921,0.021511],[0.011581,0.029006,0.016181],[0.013275,0.028271,0.02014],[0.018063,0.02651,0.029237],[0.041837,0.042026,0.065274],[0.040046,0.042531,0.062487],[0.041693,0.042385,0.063532],[0.057487,0.051369,0.076045]]},{"date":"201712192010","rgb":[[0.01304,0.027426,0.0195],[0.013737,0.025851,0.018225],[0.012277,0.026703,0.016822],[0.014021,0.027009,0.025989],[0.013714,0.027477,0.023397],[0.011521,0.028519,0.016542],[0.011858,0.028094,0.018364],[0.016053,0.02674,0.027594],[0.014594,0.027469,0.023859],[0.012005,0.027631,0.020017],[0.012547,0.027375,0.021886],[0.017231,0.02643,0.029313],[0.042712,0.04116,0.068926],[0.039862,0.042612,0.063092],[0.040507,0.041878,0.065507],[0.057171,0.051177,0.07803]]},{"date":"201712192020","rgb":[[0.012446,0.027662,0.019608],[0.012927,0.026704,0.016558],[0.012895,0.025533,0.021142],[0.014004,0.026869,0.025649],[0.013073,0.027452,0.023252],[0.011194,0.028957,0.015179],[0.011934,0.027417,0.020839],[0.016091,0.026715,0.028134],[0.014165,0.027462,0.023622],[0.011667,0.028409,0.018564],[0.013172,0.027402,0.023097],[0.017016,0.026489,0.029444],[0.042526,0.041329,0.067553],[0.039824,0.042442,0.063399],[0.041092,0.042061,0.064882],[0.05745,0.051372,0.078351]]},{"date":"201712192030","rgb":[[0.012153,0.027772,0.016831],[0.014512,0.026109,0.01506],[0.013637,0.026046,0.016828],[0.013099,0.026947,0.02403],[0.013031,0.027557,0.021813],[0.010725,0.028321,0.01493],[0.011075,0.027888,0.016715],[0.014486,0.026934,0.026916],[0.013944,0.027558,0.023424],[0.011151,0.028158,0.016957],[0.0113,0.027768,0.01879],[0.015231,0.026741,0.028131],[0.040882,0.041822,0.06597],[0.038676,0.041925,0.063629],[0.039869,0.042109,0.063931],[0.054742,0.051484,0.075627]]},{"date":"201712192040","rgb":[[0.012389,0.027878,0.016527],[0.012859,0.02685,0.015311],[0.01499,0.025678,0.017024],[0.013912,0.027064,0.02173],[0.012113,0.028658,0.017321],[0.011011,0.029144,0.013302],[0.01104,0.028856,0.013697],[0.014772,0.027166,0.024232],[0.013216,0.027907,0.020722],[0.011197,0.02921,0.014009],[0.011358,0.028814,0.01622],[0.015768,0.027124,0.025376],[0.040994,0.042482,0.063148],[0.038572,0.043598,0.058763],[0.03934,0.042573,0.062532],[0.056634,0.051592,0.074479]]},{"date":"201712192050","rgb":[[0.012038,0.027727,0.017459],[0.014791,0.026188,0.015374],[0.013191,0.026505,0.014636],[0.012963,0.027113,0.022803],[0.015169,0.02785,0.022088],[0.011432,0.029171,0.014385],[0.011193,0.028751,0.015527],[0.014806,0.026858,0.026496],[0.018572,0.02654,0.027676],[0.014152,0.027579,0.022519],[0.012704,0.027913,0.021657],[0.015,0.026802,0.028182],[0.044653,0.040814,0.068896],[0.041955,0.041897,0.065127],[0.041164,0.04185,0.065843],[0.055415,0.05133,0.076648]]},{"date":"201712192100","rgb":[[0.012764,0.027387,0.020033],[0.012801,0.025679,0.020164],[0.013196,0.025796,0.019246],[0.01333,0.027114,0.024243],[0.017105,0.027033,0.024718],[0.012783,0.028587,0.018465],[0.013082,0.027733,0.021039],[0.017602,0.026549,0.02703],[0.018382,0.026512,0.027035],[0.015052,0.02771,0.023784],[0.014075,0.02739,0.02514],[0.017333,0.02636,0.029984],[0.044212,0.04137,0.068647],[0.041398,0.041946,0.065199],[0.042215,0.041731,0.065996],[0.057143,0.051391,0.077321]]},{"date":"201712192110","rgb":[[0.012429,0.027904,0.017449],[0.012815,0.027019,0.0149],[0.012652,0.026755,0.016764],[0.013831,0.027013,0.02393],[0.015521,0.027759,0.022673],[0.01204,0.028168,0.018039],[0.012028,0.027868,0.019746],[0.016422,0.026798,0.027646],[0.016224,0.027463,0.024054],[0.012581,0.028098,0.019737],[0.013106,0.027848,0.022093],[0.018293,0.026448,0.029088],[0.043325,0.041451,0.066488],[0.041193,0.04226,0.063094],[0.042655,0.041894,0.064751],[0.057476,0.05091,0.077263]]},{"date":"201712192120","rgb":[[0.012785,0.028283,0.016226],[0.013701,0.026957,0.01342],[0.011738,0.027135,0.016201],[0.014348,0.02733,0.022053],[0.012647,0.028776,0.017895],[0.010872,0.029006,0.013608],[0.011043,0.028643,0.015281],[0.015236,0.026865,0.026877],[0.012657,0.028689,0.019128],[0.011221,0.029123,0.014128],[0.012072,0.028575,0.017882],[0.017255,0.026796,0.027177],[0.042454,0.042134,0.063555],[0.04036,0.042979,0.061299],[0.041887,0.042198,0.063993],[0.056826,0.051228,0.076402]]},{"date":"201712192130","rgb":[[0.012915,0.028203,0.016879],[0.012453,0.026981,0.01628],[0.013689,0.026119,0.017237],[0.013689,0.02693,0.024499],[0.01317,0.027932,0.021314],[0.011518,0.028807,0.015856],[0.011937,0.028224,0.018426],[0.016232,0.026194,0.028319],[0.012569,0.027754,0.021749],[0.011719,0.028787,0.016287],[0.013194,0.027866,0.021291],[0.018261,0.026228,0.029745],[0.040872,0.042179,0.063798],[0.0392,0.042501,0.061224],[0.041072,0.042053,0.064678],[0.0568,0.05114,0.078069]]},{"date":"201712192140","rgb":[[0.013298,0.027383,0.016359],[0.018634,0.023996,0.015186],[0.01489,0.025649,0.017346],[0.013454,0.027276,0.021661],[0.012024,0.028858,0.016149],[0.010874,0.029105,0.012585],[0.011114,0.029026,0.014011],[0.014575,0.027638,0.023407],[0.012281,0.027989,0.020021],[0.011259,0.02915,0.014215],[0.011671,0.028788,0.01714],[0.015955,0.027,0.025326],[0.040349,0.04248,0.062769],[0.038838,0.043527,0.05848],[0.04072,0.042365,0.06197],[0.056023,0.051466,0.074072]]},{"date":"201712192150","rgb":[[0.012192,0.027166,0.019468],[0.012336,0.026933,0.015766],[0.011784,0.027399,0.014846],[0.013163,0.02716,0.022871],[0.012059,0.029045,0.015939],[0.010707,0.029023,0.012834],[0.010977,0.028726,0.014116],[0.014931,0.02741,0.023619],[0.012469,0.029016,0.017068],[0.010746,0.029072,0.012583],[0.011102,0.028344,0.016282],[0.016423,0.026972,0.024849],[0.039198,0.042646,0.062094],[0.037996,0.043157,0.05768],[0.038164,0.042709,0.060152],[0.053833,0.051513,0.074053]]},{"date":"201712192200","rgb":[[0.012223,0.028562,0.013376],[0.014435,0.026395,0.011892],[0.012982,0.027019,0.013064],[0.013925,0.027557,0.018855],[0.012711,0.029267,0.015578],[0.010816,0.029162,0.012315],[0.010693,0.028836,0.013439],[0.0143,0.02783,0.022685],[0.012569,0.029086,0.016272],[0.011018,0.029297,0.012457],[0.011369,0.028856,0.014913],[0.015029,0.0275,0.023006],[0.040617,0.043042,0.059538],[0.038988,0.043644,0.056239],[0.040142,0.043161,0.059998],[0.056284,0.051572,0.07147]]},{"date":"201712192210","rgb":[[0.013492,0.027578,0.01619],[0.013665,0.026709,0.014478],[0.012604,0.026732,0.015899],[0.014082,0.027039,0.023326],[0.012038,0.028634,0.016766],[0.01067,0.028917,0.013235],[0.010743,0.028731,0.013115],[0.013277,0.027336,0.023752],[0.011952,0.029227,0.01599],[0.011061,0.029222,0.014071],[0.011256,0.02886,0.014803],[0.014503,0.027348,0.024779],[0.040194,0.042533,0.062586],[0.038388,0.043098,0.059688],[0.039627,0.042831,0.061223],[0.055343,0.051395,0.07381]]},{"date":"201712192220","rgb":[[0.012881,0.027788,0.016354],[0.013029,0.026917,0.014976],[0.013642,0.026719,0.014212],[0.013978,0.027073,0.022909],[0.012058,0.028306,0.019132],[0.010903,0.029062,0.013344],[0.011425,0.028625,0.015258],[0.015469,0.027602,0.024234],[0.013056,0.028433,0.019444],[0.011227,0.029304,0.014077],[0.012035,0.028501,0.017441],[0.016607,0.026951,0.025858],[0.0408,0.042385,0.063261],[0.038636,0.04269,0.060851],[0.040634,0.042397,0.062532],[0.056646,0.051373,0.075457]]},{"date":"201712192230","rgb":[[0.012903,0.02795,0.016525],[0.01218,0.027031,0.016118],[0.012994,0.026929,0.016171],[0.014402,0.027327,0.024618],[0.013113,0.028609,0.019373],[0.011354,0.029283,0.013912],[0.01125,0.028769,0.015217],[0.015357,0.026826,0.025905],[0.014352,0.028641,0.018749],[0.012236,0.029174,0.015738],[0.012201,0.028805,0.017471],[0.016504,0.026893,0.02644],[0.041856,0.042216,0.063693],[0.040239,0.042838,0.06109],[0.041271,0.04262,0.062656],[0.056787,0.051313,0.075568]]},{"date":"201712192240","rgb":[[0.012411,0.028003,0.016752],[0.015287,0.025665,0.015004],[0.013703,0.02554,0.018598],[0.013433,0.027071,0.023287],[0.012029,0.028502,0.016744],[0.01067,0.028824,0.013166],[0.010699,0.028195,0.015044],[0.013068,0.02733,0.02435],[0.01185,0.028543,0.01845],[0.0108,0.028728,0.014248],[0.011188,0.028148,0.017371],[0.01427,0.027127,0.026915],[0.039865,0.041789,0.064642],[0.038196,0.0425,0.06047],[0.039185,0.04261,0.062583],[0.054732,0.051348,0.075454]]},{"date":"201712192250","rgb":[[0.012022,0.02764,0.016497],[0.015432,0.024548,0.019081],[0.012882,0.025462,0.020071],[0.013078,0.027319,0.021198],[0.011342,0.029056,0.014149],[0.010435,0.02855,0.0118],[0.010408,0.02843,0.012816],[0.012344,0.027122,0.023077],[0.011529,0.029154,0.014852],[0.010576,0.028976,0.012379],[0.010497,0.028719,0.013031],[0.012732,0.027114,0.023635],[0.038644,0.043135,0.058616],[0.037301,0.043401,0.056233],[0.037356,0.042622,0.057784],[0.051871,0.052184,0.071806]]},{"date":"201712192300","rgb":[[0.013142,0.027735,0.014722],[0.017365,0.024811,0.012705],[0.012549,0.027436,0.013021],[0.013787,0.0276,0.019824],[0.011273,0.029045,0.013147],[0.010442,0.028853,0.0098829],[0.010541,0.028846,0.010847],[0.012914,0.028359,0.018891],[0.011676,0.029258,0.014594],[0.0106,0.02896,0.012025],[0.010716,0.029048,0.01246],[0.013909,0.027844,0.021427],[0.03841,0.043142,0.058551],[0.037252,0.043547,0.055671],[0.038357,0.043166,0.057396],[0.05322,0.052091,0.071493]]},{"date":"201712192310","rgb":[[0.011479,0.027838,0.015841],[0.013948,0.025935,0.015381],[0.013284,0.025671,0.0173],[0.012806,0.026837,0.021885],[0.011084,0.029177,0.01299],[0.010401,0.028794,0.011025],[0.010454,0.028847,0.0113],[0.011796,0.027806,0.019921],[0.010726,0.029054,0.013274],[0.010407,0.028798,0.010969],[0.010527,0.028932,0.011919],[0.012548,0.027822,0.02166],[0.038334,0.043152,0.057902],[0.036763,0.043362,0.054323],[0.037639,0.043228,0.057276],[0.052758,0.051895,0.070666]]},{"date":"201712192320","rgb":[[0.011656,0.027534,0.017908],[0.014423,0.025931,0.01557],[0.013705,0.026001,0.016241],[0.012696,0.026762,0.022393],[0.01111,0.028695,0.015178],[0.01049,0.028791,0.012582],[0.010494,0.028528,0.01322],[0.012531,0.027617,0.021992],[0.010967,0.028343,0.015848],[0.010411,0.028814,0.011283],[0.01053,0.028489,0.013863],[0.012574,0.02721,0.023633],[0.038351,0.042669,0.060896],[0.036912,0.043136,0.055855],[0.037324,0.042863,0.058287],[0.051857,0.051782,0.072967]]},{"date":"201712192330","rgb":[[0.012494,0.027565,0.018217],[0.012161,0.027198,0.015162],[0.012917,0.026275,0.017627],[0.01373,0.026992,0.024394],[0.011488,0.028806,0.014981],[0.01059,0.028927,0.011723],[0.010618,0.028755,0.012363],[0.013456,0.02764,0.022864],[0.011336,0.028021,0.018088],[0.010485,0.028736,0.01314],[0.010957,0.028451,0.014885],[0.01417,0.026836,0.026119],[0.038321,0.042492,0.061026],[0.036949,0.043204,0.055357],[0.038005,0.042586,0.059686],[0.05371,0.051818,0.073209]]},{"date":"201712192340","rgb":[[0.011744,0.027958,0.016253],[0.013125,0.026941,0.014133],[0.013504,0.025444,0.01948],[0.013472,0.02657,0.02439],[0.011676,0.028795,0.015947],[0.010482,0.0288,0.012231],[0.010734,0.028422,0.014181],[0.013857,0.026558,0.024778],[0.011538,0.028757,0.016716],[0.010664,0.028979,0.013077],[0.010832,0.028093,0.01614],[0.013689,0.027131,0.025253],[0.039003,0.042365,0.060908],[0.037417,0.043201,0.056567],[0.038434,0.042188,0.061446],[0.05398,0.051595,0.073643]]},{"date":"201712192350","rgb":[[0.012579,0.027922,0.015046],[0.013632,0.026701,0.013373],[0.014414,0.026014,0.015687],[0.014005,0.026482,0.024055],[0.011048,0.028936,0.013418],[0.010401,0.028786,0.010344],[0.010541,0.028873,0.01173],[0.012784,0.028014,0.02067],[0.011024,0.02898,0.013367],[0.010401,0.028865,0.011422],[0.010519,0.028867,0.012054],[0.013534,0.027396,0.02273],[0.038178,0.043368,0.057428],[0.036712,0.043343,0.054274],[0.037623,0.043263,0.056335],[0.053113,0.051967,0.072005]]},{"date":"201712200000","rgb":[[0.013028,0.027567,0.017635],[0.013393,0.025473,0.019793],[0.013458,0.025755,0.01852],[0.013927,0.02683,0.026539],[0.011582,0.029076,0.015022],[0.010467,0.028676,0.012486],[0.010587,0.028427,0.013992],[0.013721,0.027058,0.024685],[0.01143,0.028929,0.015316],[0.010536,0.028824,0.01234],[0.010591,0.02827,0.014661],[0.013389,0.026817,0.026923],[0.038962,0.042623,0.061327],[0.037383,0.043052,0.057102],[0.03823,0.042079,0.06193],[0.054332,0.051641,0.075729]]},{"date":"201712200010","rgb":[[0.012931,0.027713,0.016416],[0.011964,0.027219,0.015092],[0.013779,0.026467,0.015137],[0.013082,0.027247,0.022396],[0.011501,0.028299,0.016936],[0.01066,0.02898,0.012876],[0.010574,0.028309,0.014408],[0.013357,0.027086,0.023944],[0.011278,0.028677,0.015386],[0.010542,0.028875,0.012526],[0.010598,0.028387,0.014525],[0.013923,0.026927,0.025716],[0.038702,0.042578,0.060117],[0.036851,0.04343,0.054982],[0.037855,0.042245,0.060005],[0.053522,0.051783,0.072336]]},{"date":"201712200020","rgb":[[0.012417,0.027321,0.016791],[0.014941,0.025936,0.014462],[0.012321,0.026758,0.01617],[0.012959,0.026939,0.024023],[0.011299,0.028376,0.015916],[0.010485,0.028733,0.012665],[0.010628,0.028411,0.014179],[0.013474,0.02709,0.025231],[0.011254,0.028716,0.016205],[0.010514,0.028862,0.01279],[0.010884,0.028123,0.015688],[0.014246,0.027023,0.025275],[0.038027,0.042488,0.061694],[0.037014,0.042921,0.056519],[0.037895,0.04213,0.060857],[0.053106,0.051939,0.074287]]},{"date":"201712200030","rgb":[[0.012752,0.028083,0.016256],[0.016894,0.024895,0.014187],[0.015769,0.025611,0.014118],[0.014852,0.026926,0.023008],[0.011705,0.028514,0.016204],[0.010533,0.028853,0.011953],[0.010622,0.028799,0.012788],[0.013859,0.027867,0.021791],[0.011805,0.028893,0.014406],[0.010619,0.02891,0.011941],[0.010786,0.028643,0.013275],[0.01499,0.027398,0.022551],[0.038861,0.043463,0.057185],[0.036914,0.043387,0.054999],[0.037764,0.043336,0.056781],[0.053793,0.052472,0.069149]]},{"date":"201712200040","rgb":[[0.012085,0.028353,0.014668],[0.011929,0.027506,0.013012],[0.012305,0.026794,0.015687],[0.012929,0.02731,0.019329],[0.011301,0.029015,0.014037],[0.010497,0.028927,0.010758],[0.010545,0.028949,0.011954],[0.012814,0.027604,0.021108],[0.011218,0.029071,0.013899],[0.010477,0.02894,0.01075],[0.010489,0.028863,0.011604],[0.013009,0.027881,0.020687],[0.03796,0.043559,0.056755],[0.036628,0.043376,0.054159],[0.037149,0.043534,0.054932],[0.05248,0.052598,0.069124]]},{"date":"201712200050","rgb":[[0.012118,0.027623,0.017522],[0.016301,0.025019,0.015714],[0.013247,0.026722,0.01524],[0.014208,0.026902,0.022675],[0.01127,0.028532,0.016271],[0.010517,0.028721,0.012561],[0.010505,0.028737,0.012698],[0.012987,0.027403,0.022336],[0.0114,0.0284,0.016202],[0.010525,0.028821,0.012954],[0.010578,0.028507,0.013808],[0.013742,0.027301,0.023595],[0.03857,0.042554,0.059911],[0.036866,0.043119,0.055917],[0.037614,0.043103,0.057098],[0.052903,0.052266,0.071945]]},{"date":"201712200100","rgb":[[0.011938,0.028364,0.01482],[0.012776,0.027169,0.013196],[0.013773,0.026326,0.015039],[0.01319,0.027046,0.022594],[0.011167,0.029021,0.014222],[0.010444,0.028798,0.011507],[0.010464,0.028773,0.012431],[0.013416,0.027299,0.022105],[0.011271,0.029162,0.014037],[0.010451,0.028892,0.011592],[0.010616,0.028593,0.013446],[0.014013,0.027137,0.023292],[0.038692,0.043224,0.058675],[0.037047,0.043112,0.0554],[0.03788,0.043012,0.057939],[0.054256,0.051817,0.072368]]},{"date":"201712200110","rgb":[[0.012084,0.027186,0.018028],[0.015023,0.024923,0.018724],[0.012691,0.026712,0.0163],[0.012946,0.027009,0.023221],[0.011015,0.028633,0.014784],[0.010438,0.028767,0.011932],[0.010436,0.028365,0.013222],[0.012417,0.027277,0.022456],[0.010987,0.027754,0.017652],[0.010444,0.028783,0.01192],[0.010489,0.028087,0.014648],[0.012285,0.026998,0.024914],[0.038004,0.042358,0.059722],[0.036819,0.043195,0.055191],[0.037747,0.04268,0.058589],[0.052644,0.051522,0.072802]]},{"date":"201712200120","rgb":[[0.012272,0.028058,0.014766],[0.015136,0.025678,0.015104],[0.013033,0.026884,0.014368],[0.013353,0.027327,0.021112],[0.010895,0.028809,0.012918],[0.01045,0.028798,0.011209],[0.010352,0.028701,0.01125],[0.012218,0.027836,0.019363],[0.01077,0.028965,0.012965],[0.010387,0.028807,0.010666],[0.010348,0.028673,0.011514],[0.012537,0.027172,0.021584],[0.038011,0.043029,0.058358],[0.036583,0.043111,0.054957],[0.037179,0.042892,0.056444],[0.051836,0.052017,0.071619]]},{"date":"201712200130","rgb":[[0.013008,0.02728,0.017102],[0.013761,0.026326,0.015298],[0.013428,0.025916,0.017081],[0.014607,0.02647,0.023323],[0.010999,0.028902,0.013296],[0.010376,0.028795,0.0097569],[0.010402,0.028666,0.010736],[0.012009,0.028032,0.017965],[0.010967,0.028905,0.013737],[0.010341,0.028806,0.010913],[0.010415,0.028737,0.011372],[0.012194,0.027667,0.021048],[0.038565,0.043024,0.058983],[0.036998,0.043139,0.054439],[0.037412,0.043189,0.056685],[0.052784,0.051946,0.070817]]},{"date":"201712200140","rgb":[[0.012881,0.027145,0.018537],[0.016257,0.024057,0.020413],[0.013415,0.025736,0.019217],[0.014937,0.026719,0.022802],[0.010818,0.029027,0.013328],[0.010456,0.028529,0.011786],[0.010391,0.028686,0.011511],[0.013064,0.027962,0.019877],[0.010904,0.028976,0.014416],[0.01041,0.028771,0.011815],[0.010481,0.028828,0.012269],[0.012791,0.027359,0.02236],[0.03815,0.043301,0.058033],[0.036837,0.043252,0.054574],[0.037179,0.043213,0.056573],[0.052378,0.052101,0.07011]]},{"date":"201712200150","rgb":[[0.01189,0.027562,0.017924],[0.01353,0.02643,0.015149],[0.012988,0.026388,0.01741],[0.013278,0.02695,0.024679],[0.010806,0.028596,0.014269],[0.010448,0.028795,0.011338],[0.010453,0.028457,0.01309],[0.012044,0.027258,0.022351],[0.010935,0.02865,0.014045],[0.010436,0.028795,0.011972],[0.010492,0.028577,0.012651],[0.012975,0.026881,0.02283],[0.037482,0.04254,0.059096],[0.036765,0.04305,0.055506],[0.03723,0.042645,0.058065],[0.051828,0.051676,0.072504]]},{"date":"201712200200","rgb":[[0.012371,0.027924,0.015502],[0.016567,0.024944,0.014458],[0.015212,0.025756,0.014589],[0.013664,0.027272,0.022018],[0.010941,0.028966,0.013576],[0.010459,0.028815,0.011579],[0.010418,0.028631,0.012504],[0.012585,0.027374,0.020555],[0.011113,0.02884,0.014502],[0.010412,0.028749,0.012011],[0.010461,0.028708,0.012597],[0.012408,0.027331,0.023462],[0.038061,0.043119,0.057552],[0.036766,0.043205,0.054457],[0.037175,0.042868,0.056172],[0.05294,0.052153,0.070023]]},{"date":"201712200210","rgb":[[0.011871,0.027334,0.019018],[0.015029,0.025523,0.016819],[0.015446,0.025516,0.014723],[0.013336,0.026816,0.022898],[0.011353,0.028688,0.015445],[0.010486,0.028841,0.012013],[0.010556,0.028797,0.012402],[0.012414,0.027605,0.021567],[0.011476,0.028796,0.016011],[0.010557,0.028898,0.012389],[0.010618,0.028745,0.013524],[0.013703,0.027124,0.023852],[0.038484,0.042781,0.059993],[0.037207,0.043069,0.055893],[0.037714,0.042792,0.058299],[0.052895,0.051773,0.071586]]},{"date":"201712200220","rgb":[[0.01206,0.026782,0.020507],[0.01382,0.026778,0.012753],[0.011981,0.027587,0.014884],[0.014017,0.026978,0.025721],[0.011235,0.027157,0.019818],[0.010455,0.028728,0.01255],[0.010556,0.028656,0.013347],[0.013134,0.027168,0.024952],[0.011511,0.027279,0.02058],[0.010573,0.028652,0.013469],[0.010787,0.028308,0.015344],[0.014018,0.026782,0.02747],[0.038626,0.0427,0.061544],[0.037108,0.043037,0.057516],[0.038337,0.042219,0.061168],[0.054067,0.051698,0.074818]]},{"date":"201712200230","rgb":[[0.01282,0.027443,0.017875],[0.012739,0.027017,0.015109],[0.014097,0.026132,0.016108],[0.013484,0.026934,0.024312],[0.0113,0.028362,0.016901],[0.01063,0.028918,0.012684],[0.010586,0.028621,0.013766],[0.013835,0.026941,0.024019],[0.011478,0.028921,0.015935],[0.010551,0.028948,0.012099],[0.010769,0.028907,0.013188],[0.013867,0.027035,0.024803],[0.038881,0.043176,0.059102],[0.03709,0.043342,0.055363],[0.037702,0.043209,0.05775],[0.05404,0.051804,0.072623]]},{"date":"201712200240","rgb":[[0.012903,0.02717,0.017413],[0.016672,0.02447,0.017583],[0.014418,0.025333,0.018056],[0.013346,0.026934,0.02498],[0.011002,0.028543,0.014654],[0.010448,0.028635,0.011928],[0.010454,0.028706,0.012404],[0.012539,0.027124,0.022781],[0.010937,0.028722,0.014557],[0.0104,0.028704,0.012355],[0.010488,0.028545,0.013423],[0.012775,0.027234,0.024668],[0.038199,0.042732,0.060057],[0.037213,0.043089,0.05638],[0.037692,0.042866,0.059075],[0.052576,0.051741,0.074184]]},{"date":"201712200250","rgb":[[0.012948,0.027777,0.015977],[0.014696,0.025734,0.01549],[0.014099,0.026025,0.015751],[0.01333,0.027254,0.022026],[0.011331,0.029092,0.014242],[0.010484,0.028857,0.011345],[0.010553,0.028799,0.012037],[0.013688,0.027605,0.021244],[0.011267,0.028816,0.015649],[0.010463,0.028837,0.012063],[0.010568,0.028383,0.013743],[0.013358,0.027166,0.024284],[0.038411,0.042638,0.060921],[0.037183,0.043222,0.056082],[0.03792,0.042665,0.059033],[0.053726,0.05196,0.073204]]},{"date":"201712200300","rgb":[[0.011973,0.028027,0.01727],[0.016027,0.025343,0.015457],[0.01254,0.026948,0.015101],[0.013319,0.02672,0.023434],[0.011314,0.0288,0.015048],[0.010527,0.028891,0.011342],[0.010456,0.028732,0.012035],[0.013036,0.027615,0.020943],[0.011222,0.028973,0.015296],[0.010517,0.028915,0.011338],[0.010531,0.028631,0.013338],[0.013532,0.027241,0.023239],[0.03839,0.043271,0.058419],[0.037092,0.043589,0.054557],[0.037663,0.043048,0.056912],[0.053696,0.052186,0.071209]]},{"date":"201712200310","rgb":[[0.012547,0.027824,0.015185],[0.014125,0.026427,0.013617],[0.015908,0.025429,0.013709],[0.012863,0.027239,0.021575],[0.010993,0.02902,0.013731],[0.010456,0.02884,0.010976],[0.010383,0.028715,0.011666],[0.012406,0.027611,0.021029],[0.010984,0.029138,0.013208],[0.010428,0.028812,0.012067],[0.010383,0.02861,0.012291],[0.012217,0.027615,0.022531],[0.037953,0.043273,0.057233],[0.036878,0.043215,0.055152],[0.036947,0.042872,0.056385],[0.051751,0.052228,0.072432]]},{"date":"201712200320","rgb":[[0.01398,0.027381,0.015483],[0.013932,0.025274,0.019409],[0.015245,0.025001,0.018073],[0.013942,0.02681,0.022401],[0.011244,0.028849,0.014868],[0.010465,0.028475,0.012003],[0.010549,0.02876,0.012202],[0.012606,0.027441,0.0221],[0.011399,0.028814,0.014851],[0.010493,0.028901,0.01188],[0.010675,0.028977,0.012593],[0.012929,0.027243,0.023479],[0.038783,0.042738,0.060168],[0.03723,0.043301,0.055384],[0.038061,0.043136,0.058346],[0.053345,0.052005,0.072399]]},{"date":"201712200330","rgb":[[0.011737,0.02808,0.016281],[0.011874,0.027107,0.015745],[0.013484,0.026395,0.015991],[0.013425,0.026629,0.024001],[0.011241,0.028988,0.014935],[0.010466,0.0287,0.012366],[0.010491,0.028537,0.013107],[0.012495,0.027096,0.023763],[0.011243,0.028355,0.016809],[0.010563,0.028697,0.012744],[0.010646,0.028292,0.015229],[0.012828,0.027078,0.02429],[0.038088,0.0427,0.060471],[0.037158,0.042922,0.057037],[0.037983,0.042459,0.059555],[0.052669,0.051902,0.073675]]},{"date":"201712200340","rgb":[[0.013114,0.027582,0.016709],[0.015764,0.025573,0.0137],[0.013719,0.02633,0.016174],[0.013214,0.027039,0.022762],[0.011275,0.028992,0.014124],[0.010484,0.028858,0.011342],[0.010509,0.028798,0.011805],[0.01282,0.027632,0.021131],[0.011184,0.029006,0.014394],[0.010487,0.028827,0.012322],[0.0106,0.028819,0.013402],[0.013218,0.026938,0.024284],[0.038785,0.043221,0.057923],[0.037078,0.043264,0.054919],[0.037588,0.043034,0.056865],[0.05261,0.05217,0.071947]]},{"date":"201712200350","rgb":[[0.011696,0.02808,0.017291],[0.012777,0.027433,0.01325],[0.012172,0.027041,0.015309],[0.013915,0.026756,0.025106],[0.011479,0.028445,0.016408],[0.010493,0.028816,0.012249],[0.010523,0.028615,0.01276],[0.013075,0.027291,0.022685],[0.011626,0.028888,0.015581],[0.010621,0.028957,0.012046],[0.010747,0.028703,0.013619],[0.014147,0.027311,0.024459],[0.038946,0.042464,0.061354],[0.037261,0.042987,0.055839],[0.037941,0.04257,0.059103],[0.054412,0.051774,0.073316]]},{"date":"201712200400","rgb":[[0.012548,0.027088,0.019488],[0.011641,0.026364,0.018291],[0.012856,0.025664,0.019761],[0.013688,0.026939,0.024976],[0.011162,0.02817,0.016188],[0.010519,0.028723,0.012183],[0.010547,0.02822,0.014026],[0.012887,0.027129,0.024929],[0.011212,0.02876,0.01529],[0.010503,0.028511,0.013365],[0.010741,0.028535,0.014094],[0.014029,0.027045,0.025899],[0.038802,0.04273,0.060111],[0.037211,0.043017,0.057271],[0.038274,0.042813,0.05904],[0.054707,0.051802,0.074312]]},{"date":"201712200410","rgb":[[0.013009,0.027629,0.015673],[0.012934,0.027062,0.014252],[0.013505,0.026762,0.0141],[0.013926,0.02672,0.022673],[0.011421,0.028506,0.015668],[0.010474,0.028781,0.011958],[0.01058,0.028425,0.013452],[0.01361,0.027784,0.022454],[0.011351,0.028937,0.015383],[0.010583,0.028939,0.011951],[0.010775,0.028854,0.013682],[0.015026,0.027418,0.023067],[0.039535,0.042789,0.060426],[0.037428,0.043347,0.056373],[0.038176,0.043339,0.05765],[0.053758,0.051577,0.072419]]},{"date":"201712200420","rgb":[[0.011846,0.027844,0.017219],[0.012291,0.02716,0.014604],[0.012102,0.027434,0.014745],[0.01308,0.027289,0.022655],[0.011427,0.028481,0.015786],[0.010505,0.028846,0.01204],[0.01052,0.028537,0.013532],[0.01248,0.027163,0.023422],[0.011352,0.028553,0.015729],[0.010493,0.028718,0.013131],[0.010503,0.028479,0.013708],[0.013074,0.026806,0.024994],[0.038862,0.042957,0.060386],[0.037436,0.043394,0.05585],[0.037524,0.042709,0.058815],[0.053477,0.051954,0.072128]]},{"date":"201712200430","rgb":[[0.012194,0.028031,0.015515],[0.013642,0.025289,0.019316],[0.014116,0.024967,0.020009],[0.012785,0.027483,0.020885],[0.011837,0.02896,0.015735],[0.010647,0.02875,0.013426],[0.010637,0.028593,0.013333],[0.013839,0.027799,0.022006],[0.011917,0.029051,0.01548],[0.010666,0.029133,0.01234],[0.010953,0.028997,0.0132],[0.014509,0.027685,0.021977],[0.039544,0.042659,0.061391],[0.037547,0.043535,0.056094],[0.039274,0.042968,0.059714],[0.055278,0.051818,0.072899]]},{"date":"201712200440","rgb":[[0.012268,0.027583,0.017049],[0.015549,0.025661,0.013375],[0.015568,0.025198,0.015436],[0.012828,0.026573,0.023834],[0.012348,0.028574,0.018307],[0.010976,0.029264,0.012757],[0.011184,0.029031,0.01417],[0.014734,0.027217,0.0243],[0.01307,0.028549,0.018842],[0.011288,0.029355,0.013606],[0.01144,0.028354,0.017586],[0.015696,0.02684,0.025573],[0.040284,0.042434,0.062564],[0.038837,0.043302,0.058303],[0.039784,0.042804,0.061793],[0.05542,0.051359,0.074771]]},{"date":"201712200450","rgb":[[0.0134,0.027547,0.017305],[0.012834,0.026911,0.015823],[0.013157,0.026446,0.015847],[0.013897,0.026731,0.023943],[0.012156,0.027732,0.020279],[0.010964,0.028564,0.01533],[0.011014,0.028454,0.015708],[0.014155,0.027108,0.025438],[0.013176,0.028057,0.020995],[0.011584,0.028664,0.016757],[0.012147,0.028403,0.018829],[0.016523,0.026818,0.027247],[0.040773,0.042409,0.06246],[0.038784,0.042492,0.060883],[0.040215,0.04258,0.062662],[0.056,0.051379,0.075349]]},{"date":"201712200500","rgb":[[0.012372,0.028144,0.015962],[0.016213,0.024836,0.016955],[0.016337,0.025349,0.01395],[0.013272,0.026968,0.022796],[0.011997,0.028493,0.018363],[0.010728,0.029001,0.012593],[0.010716,0.028874,0.013631],[0.013593,0.027677,0.022508],[0.0126,0.028424,0.019548],[0.011006,0.029116,0.013615],[0.011262,0.028886,0.014188],[0.01446,0.027157,0.025313],[0.04077,0.042367,0.06333],[0.039076,0.043186,0.059156],[0.039695,0.042728,0.060919],[0.056069,0.051984,0.074507]]},{"date":"201712200510","rgb":[[0.012599,0.027452,0.015981],[0.013122,0.025746,0.018277],[0.013439,0.026289,0.016451],[0.013705,0.027206,0.020816],[0.011981,0.028786,0.016767],[0.01074,0.028984,0.012772],[0.011297,0.028859,0.014814],[0.015427,0.027245,0.024647],[0.012112,0.028873,0.017233],[0.011024,0.02922,0.013356],[0.011763,0.028873,0.016479],[0.016399,0.027017,0.025648],[0.039608,0.042909,0.061407],[0.037974,0.043106,0.058316],[0.040641,0.042401,0.061886],[0.055512,0.051614,0.073549]]},{"date":"201712200520","rgb":[[0.012472,0.027087,0.018473],[0.012945,0.027115,0.013978],[0.012045,0.025731,0.019619],[0.012972,0.026474,0.023472],[0.012731,0.028119,0.020301],[0.011309,0.028886,0.01525],[0.011526,0.028599,0.016648],[0.015294,0.026736,0.02631],[0.013127,0.028225,0.020358],[0.011605,0.028582,0.016901],[0.01315,0.02791,0.020159],[0.016815,0.026798,0.026899],[0.040356,0.042437,0.064123],[0.038602,0.042558,0.061642],[0.040044,0.042225,0.063939],[0.055658,0.051489,0.074451]]},{"date":"201712200530","rgb":[[0.012764,0.027692,0.016044],[0.01639,0.025138,0.017004],[0.013199,0.02641,0.017184],[0.01459,0.026955,0.024089],[0.01253,0.028557,0.018415],[0.011648,0.029231,0.015307],[0.011995,0.028715,0.016739],[0.01621,0.026982,0.026318],[0.013775,0.028683,0.018888],[0.012667,0.028495,0.018033],[0.013075,0.028238,0.020904],[0.018297,0.026282,0.029205],[0.041402,0.042253,0.064085],[0.040661,0.042756,0.063428],[0.042639,0.041633,0.065031],[0.058349,0.051713,0.079441]]},{"date":"201712200540","rgb":[[0.012929,0.028103,0.016016],[0.013977,0.026769,0.014389],[0.014855,0.026265,0.014478],[0.013023,0.027329,0.021469],[0.015842,0.02793,0.022001],[0.014489,0.028442,0.02049],[0.015768,0.028023,0.02111],[0.018728,0.026664,0.027271],[0.017918,0.027502,0.022263],[0.015353,0.028277,0.020799],[0.01805,0.027467,0.022786],[0.021329,0.026131,0.030603],[0.044073,0.041311,0.066534],[0.043074,0.041786,0.064559],[0.044796,0.041056,0.066911],[0.060084,0.051365,0.079245]]},{"date":"201712200550","rgb":[[0.012786,0.027962,0.017178],[0.012089,0.026425,0.01836],[0.014802,0.02612,0.015589],[0.013235,0.026887,0.024598],[0.015728,0.027529,0.024578],[0.014305,0.027816,0.022391],[0.015548,0.027686,0.023722],[0.018748,0.026038,0.03227],[0.017395,0.027099,0.024964],[0.01689,0.027576,0.023792],[0.018451,0.026859,0.025195],[0.020849,0.026402,0.033365],[0.043765,0.040568,0.069534],[0.043876,0.041177,0.067196],[0.045425,0.040601,0.069179],[0.060106,0.051959,0.082798]]},{"date":"201712200600","rgb":[[0.013222,0.027104,0.0199],[0.01159,0.026935,0.017854],[0.013142,0.026051,0.019268],[0.013216,0.02695,0.025596],[0.016102,0.02719,0.025144],[0.014427,0.027756,0.022728],[0.015637,0.027428,0.024132],[0.01963,0.02592,0.030238],[0.018165,0.026719,0.025847],[0.015848,0.027521,0.023783],[0.018126,0.026534,0.026015],[0.021859,0.02617,0.03473],[0.044378,0.040726,0.069207],[0.043852,0.041129,0.066344],[0.04531,0.040609,0.069385],[0.061726,0.051935,0.08347]]},{"date":"201712200610","rgb":[[0.012693,0.027843,0.017647],[0.013614,0.025562,0.019529],[0.013751,0.025983,0.017733],[0.014241,0.026796,0.024319],[0.015457,0.027793,0.022243],[0.013203,0.027906,0.020865],[0.014463,0.028056,0.021979],[0.018562,0.026458,0.02922],[0.016424,0.027515,0.024103],[0.015563,0.02774,0.02301],[0.017525,0.027453,0.024307],[0.021893,0.026258,0.033706],[0.043547,0.04144,0.06805],[0.042634,0.041528,0.06663],[0.044619,0.041106,0.068625],[0.06064,0.052064,0.083567]]},{"date":"201712200620","rgb":[[0.013353,0.027143,0.019414],[0.013057,0.026763,0.016631],[0.012575,0.026455,0.018386],[0.013594,0.026705,0.024198],[0.0153,0.027747,0.023359],[0.012575,0.02813,0.020744],[0.014381,0.027457,0.023618],[0.01871,0.02632,0.029195],[0.016766,0.027247,0.024286],[0.014568,0.027545,0.02391],[0.017401,0.027099,0.024571],[0.021333,0.025862,0.032945],[0.044818,0.040698,0.068044],[0.043322,0.04132,0.066625],[0.046223,0.040419,0.06932],[0.061264,0.051525,0.082897]]},{"date":"201712200630","rgb":[[0.012945,0.027636,0.019635],[0.014185,0.026151,0.018581],[0.012974,0.02619,0.018935],[0.014861,0.026534,0.026284],[0.017692,0.026405,0.027225],[0.016429,0.027027,0.026072],[0.016737,0.026629,0.027359],[0.020342,0.026286,0.034825],[0.019212,0.025302,0.031001],[0.019033,0.025583,0.028744],[0.018932,0.025049,0.031097],[0.023331,0.026553,0.039433],[0.045686,0.04019,0.072725],[0.044489,0.040181,0.071417],[0.045678,0.040585,0.073361],[0.061976,0.052446,0.087542]]},{"date":"201712200640","rgb":[[0.013175,0.028022,0.019857],[0.013786,0.026343,0.018732],[0.013263,0.025305,0.021216],[0.01389,0.027172,0.022919],[0.019647,0.026973,0.040523],[0.017943,0.026753,0.040259],[0.018768,0.027202,0.042019],[0.02283,0.027941,0.047551],[0.022533,0.027448,0.043697],[0.021799,0.027045,0.043202],[0.023367,0.027703,0.046102],[0.025849,0.028659,0.051372],[0.048231,0.042368,0.08472],[0.047791,0.042289,0.083734],[0.049164,0.042531,0.085981],[0.065221,0.054177,0.10052]]},{"date":"201712200650","rgb":[[0.015497,0.02749,0.044211],[0.016194,0.026799,0.033972],[0.014289,0.026848,0.025814],[0.01335,0.026818,0.026773],[0.034766,0.034894,0.17128],[0.037848,0.035238,0.19122],[0.038129,0.035698,0.19287],[0.038075,0.03557,0.18921],[0.03799,0.035437,0.19114],[0.041094,0.036702,0.20701],[0.041893,0.03666,0.21272],[0.042198,0.036643,0.21201],[0.061058,0.048752,0.20817],[0.063098,0.049406,0.2234],[0.064465,0.049993,0.22723],[0.07784,0.060515,0.23234]]},{"date":"201712200700","rgb":[[0.031197,0.033186,0.12363],[0.025944,0.035707,0.093584],[0.020585,0.031443,0.06592],[0.018528,0.027562,0.050227],[0.11853,0.094329,0.5525],[0.1305,0.13854,0.55692],[0.13469,0.13605,0.57228],[0.13348,0.088776,0.59355],[0.12921,0.1102,0.5767],[0.13882,0.14564,0.57469],[0.14326,0.14157,0.58996],[0.14559,0.099346,0.62505],[0.14371,0.085533,0.5694],[0.15068,0.11879,0.56357],[0.15815,0.11676,0.58308],[0.17346,0.093134,0.6002]]},{"date":"201712200710","rgb":[[0.080967,0.10581,0.28933],[0.068531,0.089124,0.2389],[0.051067,0.06126,0.18427],[0.038159,0.037925,0.15588],[0.33632,0.50979,0.99382],[0.37753,0.56786,0.99444],[0.38988,0.5646,0.99448],[0.36724,0.50471,0.98995],[0.36115,0.53813,0.99379],[0.40195,0.59579,0.99462],[0.41328,0.58964,0.99437],[0.39729,0.54306,0.99298],[0.34504,0.4671,0.94555],[0.37607,0.51228,0.94737],[0.38628,0.50994,0.94674],[0.38501,0.47921,0.93767]]},{"date":"201712200720","rgb":[[0.25027,0.25201,0.57011],[0.21566,0.21336,0.53872],[0.16757,0.15124,0.50386],[0.1391,0.092635,0.50414],[0.94904,0.9923,0.99903],[0.98205,0.98175,0.99996],[0.98346,0.98163,0.99741],[0.96416,0.9843,0.98847],[0.9726,0.98657,0.9983],[0.98431,0.98215,0.99321],[0.98431,0.98418,0.98497],[0.98397,0.98441,0.98426],[0.89803,0.91965,0.94406],[0.9202,0.91234,0.93804],[0.92086,0.91203,0.93794],[0.91856,0.91123,0.93138]]},{"date":"201712200730","rgb":[[0.4012,0.49487,0.89916],[0.36605,0.49187,0.90546],[0.32541,0.44171,0.90249],[0.30678,0.40114,0.90873],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98043,0.99979],[0.98271,0.97982,0.99914],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.9211,0.90681,0.94499]]},{"date":"201712200740","rgb":[[0.50318,0.72215,0.98802],[0.48003,0.73693,0.98816],[0.44587,0.70413,0.9871],[0.442,0.69202,0.98541],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98434,0.98045,0.99989],[0.98337,0.98067,0.99942],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.9211,0.9068,0.94497]]},{"date":"201712200750","rgb":[[0.63947,0.97997,0.99336],[0.62916,0.98962,0.99552],[0.60643,0.99066,0.99541],[0.61844,0.993,0.99568],[0.98431,0.98431,0.98435],[0.98431,0.98415,0.98513],[0.98431,0.98422,0.98483],[0.9842,0.98388,0.98678],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92053,0.91046,0.93112]]},{"date":"201712200800","rgb":[[0.91224,0.98984,0.99764],[0.92258,0.99079,0.99279],[0.9165,0.9917,0.99303],[0.93235,0.99168,0.99165],[0.98431,0.98316,0.98912],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92057,0.91055,0.93107]]},{"date":"201712200810","rgb":[[0.98577,0.97992,1],[0.98856,0.979,1],[0.99524,0.97676,1],[0.99608,0.97647,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98551,0.98001,1],[0.99251,0.97769,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98432,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92112,0.90685,0.94491]]},{"date":"201712200820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90335,0.94497]]},{"date":"201712200830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99575,0.97659,1],[0.99607,0.97647,1],[0.99608,0.97647,1],[0.99322,0.97745,1],[0.986,0.97985,1],[0.98785,0.97924,1],[0.99486,0.97689,1],[0.92199,0.90827,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92192,0.90661,0.94494]]},{"date":"201712200840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90337,0.94491]]},{"date":"201712200850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99537,0.97671,1],[0.99588,0.97653,1],[0.99608,0.97647,1],[0.9924,0.97771,1],[0.98548,0.98002,1],[0.98679,0.97959,1],[0.99419,0.9771,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92152,0.90669,0.94481]]},{"date":"201712200900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90334,0.94488]]},{"date":"201712200910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93056,0.90332,0.94491]]},{"date":"201712200920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93056,0.90333,0.94495]]},{"date":"201712200930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90334,0.94497]]},{"date":"201712200940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90332,0.94494]]},{"date":"201712200950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99448,0.97701,1],[0.99533,0.97673,1],[0.99608,0.97647,1],[0.99085,0.97823,1],[0.98479,0.98024,1],[0.98558,0.97999,1],[0.99278,0.97758,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92113,0.9068,0.94479]]},{"date":"201712201000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93056,0.90328,0.94499]]},{"date":"201712201010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90327,0.94504]]},{"date":"201712201020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90329,0.94498]]},{"date":"201712201030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90329,0.94506]]},{"date":"201712201040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90331,0.94499]]},{"date":"201712201050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93054,0.90326,0.94493]]},{"date":"201712201100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90327,0.94504]]},{"date":"201712201110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90327,0.94499]]},{"date":"201712201120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93056,0.90328,0.94502]]},{"date":"201712201130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90329,0.94502]]},{"date":"201712201140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.9033,0.94502]]},{"date":"201712201150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93056,0.90325,0.94497]]},{"date":"201712201200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90329,0.94497]]},{"date":"201712201210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90327,0.94501]]},{"date":"201712201220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90329,0.94505]]},{"date":"201712201230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.9033,0.94506]]},{"date":"201712201240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.9033,0.94504]]},{"date":"201712201250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99552,0.97667,1],[0.99598,0.97651,1],[0.99608,0.97647,1],[0.99252,0.97769,1],[0.98553,0.98001,1],[0.98715,0.97947,1],[0.99438,0.97705,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92158,0.90662,0.94489]]},{"date":"201712201300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.9033,0.945]]},{"date":"201712201310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90329,0.94507]]},{"date":"201712201320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90328,0.94506]]},{"date":"201712201330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.9033,0.94508]]},{"date":"201712201340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94507]]},{"date":"201712201350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93056,0.90327,0.94494]]},{"date":"201712201400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99511,0.97682,1],[0.99577,0.97657,1],[0.99608,0.97647,1],[0.99175,0.97795,1],[0.98514,0.98013,1],[0.98645,0.97969,1],[0.99376,0.97725,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92137,0.90673,0.94498]]},{"date":"201712201410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.9033,0.94505]]},{"date":"201712201420","rgb":[[0.98483,0.98039,1],[0.98509,0.98015,1],[0.9863,0.97976,1],[0.99247,0.9777,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98432,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92111,0.90681,0.94503]]},{"date":"201712201430","rgb":[[0.97806,0.9857,0.98812],[0.98227,0.98458,0.98775],[0.98342,0.98323,0.99119],[0.9854,0.983,0.98839],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92062,0.91051,0.93124]]},{"date":"201712201440","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90332,0.94507]]},{"date":"201712201450","rgb":[[0.97003,0.98707,0.98913],[0.97623,0.98595,0.98992],[0.97925,0.98575,0.98694],[0.98411,0.98326,0.98965],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92058,0.91048,0.93111]]},{"date":"201712201500","rgb":[[0.86624,0.9909,0.99755],[0.88717,0.99172,0.99351],[0.89928,0.99208,0.99365],[0.92992,0.99143,0.99189],[0.98431,0.98316,0.98912],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92055,0.91046,0.93111]]},{"date":"201712201510","rgb":[[0.75465,0.99198,0.99496],[0.76388,0.99301,0.99702],[0.74822,0.99447,0.99664],[0.77384,0.99477,0.99675],[0.98431,0.98431,0.98435],[0.98431,0.98291,0.99011],[0.98431,0.98066,0.999],[0.98431,0.98039,1],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98393,0.98594],[0.98431,0.98151,0.99572],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92055,0.91044,0.93122]]},{"date":"201712201520","rgb":[[0.57946,0.8474,0.98932],[0.56304,0.87633,0.98934],[0.53778,0.87053,0.98908],[0.54137,0.87874,0.9886],[0.98431,0.98341,0.98813],[0.98431,0.98416,0.98502],[0.98432,0.9841,0.98551],[0.98408,0.98319,0.98974],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92055,0.91044,0.93116]]},{"date":"201712201530","rgb":[[0.52326,0.69612,0.98689],[0.50075,0.69851,0.98712],[0.4646,0.65581,0.98586],[0.46493,0.64747,0.98385],[0.98431,0.98039,1],[0.98431,0.98103,0.99768],[0.98433,0.98348,0.98803],[0.98364,0.98312,0.98962],[0.98431,0.98221,0.99306],[0.98431,0.98418,0.98496],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92056,0.91045,0.93118]]},{"date":"201712201540","rgb":[[0.35858,0.32816,0.75291],[0.31961,0.32301,0.73578],[0.2787,0.27005,0.72854],[0.25995,0.21536,0.75774],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98435,0.98043,0.99973],[0.98291,0.97918,0.99903],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.9211,0.90679,0.9449]]},{"date":"201712201550","rgb":[[0.13965,0.18408,0.37847],[0.1189,0.15056,0.34096],[0.088617,0.098217,0.29443],[0.068423,0.053887,0.27814],[0.55782,0.90893,0.9966],[0.60259,0.97024,0.99802],[0.62022,0.97366,0.99803],[0.61122,0.94996,0.99499],[0.58425,0.95265,0.99656],[0.62328,0.98923,0.99912],[0.64031,0.99473,0.99959],[0.63801,0.99202,0.99876],[0.55382,0.84844,0.94889],[0.58627,0.88597,0.94917],[0.61054,0.90713,0.95031],[0.61487,0.91018,0.94289]]},{"date":"201712201600","rgb":[[0.062628,0.079198,0.21231],[0.051536,0.068468,0.17367],[0.038201,0.050489,0.12611],[0.029818,0.03444,0.10095],[0.26308,0.34312,0.89148],[0.28226,0.3803,0.93641],[0.29558,0.38916,0.96599],[0.30335,0.37168,0.98082],[0.2683,0.3376,0.88729],[0.28851,0.38142,0.93738],[0.30173,0.38454,0.95926],[0.30848,0.36522,0.97401],[0.26408,0.29005,0.81874],[0.2883,0.34108,0.87093],[0.29942,0.34058,0.88146],[0.31302,0.32977,0.89194]]},{"date":"201712201610","rgb":[[0.01901,0.028799,0.066097],[0.018163,0.026807,0.05197],[0.015972,0.027064,0.037491],[0.0158,0.026638,0.032407],[0.053905,0.036576,0.2723],[0.056506,0.037094,0.2916],[0.060648,0.038307,0.30508],[0.067391,0.038421,0.30058],[0.060187,0.036906,0.28208],[0.06007,0.038616,0.2979],[0.067267,0.038643,0.30553],[0.0816,0.038471,0.31512],[0.08224,0.050069,0.29293],[0.085461,0.05097,0.30389],[0.09488,0.051015,0.31191],[0.11765,0.062126,0.32732]]},{"date":"201712201620","rgb":[[0.014516,0.027447,0.022798],[0.015263,0.026423,0.017325],[0.014786,0.025752,0.020633],[0.014168,0.026787,0.025927],[0.023445,0.028054,0.048385],[0.022291,0.028044,0.051532],[0.022565,0.028069,0.055541],[0.027194,0.029679,0.061665],[0.025182,0.027839,0.053474],[0.024794,0.027696,0.055994],[0.026327,0.028849,0.060084],[0.030625,0.030311,0.069761],[0.051152,0.04277,0.092992],[0.051723,0.043027,0.094816],[0.054475,0.043831,0.098939],[0.071355,0.054794,0.1172]]},{"date":"201712201630","rgb":[[0.01263,0.026672,0.021932],[0.013537,0.02592,0.019131],[0.011732,0.02668,0.018859],[0.013199,0.026768,0.026018],[0.015209,0.026461,0.030354],[0.013919,0.027095,0.028423],[0.01567,0.026349,0.029906],[0.019986,0.026852,0.038104],[0.018217,0.025637,0.031645],[0.01688,0.025762,0.030483],[0.01804,0.025731,0.032142],[0.022399,0.026922,0.042149],[0.04519,0.04052,0.073457],[0.044371,0.040144,0.072364],[0.046737,0.040809,0.076384],[0.06204,0.052797,0.090719]]},{"date":"201712201640","rgb":[[0.012312,0.027307,0.018128],[0.01417,0.026486,0.013049],[0.012944,0.026233,0.017088],[0.013093,0.027188,0.022779],[0.011942,0.027278,0.020707],[0.01092,0.027815,0.016896],[0.011396,0.027344,0.020026],[0.015217,0.026844,0.027375],[0.013501,0.027344,0.023856],[0.011988,0.027042,0.022297],[0.01302,0.027367,0.023427],[0.018545,0.026153,0.031847],[0.041999,0.041524,0.066976],[0.040294,0.042146,0.064609],[0.041717,0.041425,0.066878],[0.058589,0.051512,0.080657]]},{"date":"201712201650","rgb":[[0.012419,0.02819,0.017202],[0.015565,0.025766,0.014021],[0.01585,0.025549,0.015212],[0.013761,0.02685,0.024504],[0.013529,0.028376,0.019751],[0.011735,0.02881,0.016705],[0.01347,0.027977,0.021246],[0.017077,0.026742,0.028167],[0.013906,0.028143,0.020836],[0.012171,0.028748,0.017645],[0.014579,0.027612,0.022608],[0.02069,0.026138,0.032437],[0.043061,0.041776,0.065258],[0.040525,0.042407,0.063021],[0.044091,0.041145,0.067834],[0.060975,0.051451,0.081784]]},{"date":"201712201700","rgb":[[0.012291,0.028108,0.016758],[0.013613,0.026479,0.015464],[0.012521,0.027169,0.014471],[0.013855,0.027096,0.022769],[0.012811,0.028187,0.020723],[0.011452,0.029079,0.014944],[0.011551,0.028429,0.017552],[0.015889,0.026844,0.027437],[0.016255,0.027887,0.022329],[0.013251,0.02852,0.019371],[0.014281,0.028337,0.021064],[0.019305,0.026457,0.030162],[0.043284,0.041404,0.066472],[0.041779,0.042086,0.063661],[0.042514,0.041511,0.065949],[0.058365,0.051208,0.079688]]},{"date":"201712201710","rgb":[[0.012502,0.027507,0.017271],[0.014635,0.025106,0.019072],[0.011968,0.025244,0.021483],[0.013145,0.026594,0.024912],[0.013653,0.028038,0.021312],[0.011473,0.028443,0.016603],[0.011745,0.027656,0.019439],[0.015313,0.026643,0.026629],[0.015709,0.027633,0.023568],[0.013393,0.028012,0.021236],[0.013785,0.02773,0.022982],[0.017141,0.026457,0.029422],[0.042903,0.041405,0.066858],[0.042362,0.041695,0.065275],[0.043102,0.041496,0.067011],[0.057813,0.050908,0.079225]]},{"date":"201712201720","rgb":[[0.013513,0.027818,0.017255],[0.016503,0.025608,0.015546],[0.016416,0.0252,0.015985],[0.01552,0.026389,0.024598],[0.019963,0.026511,0.025436],[0.017658,0.027462,0.023229],[0.017792,0.026998,0.024533],[0.021095,0.026472,0.032826],[0.023603,0.025234,0.029016],[0.020888,0.025521,0.025297],[0.021672,0.024983,0.027909],[0.025877,0.026001,0.038608],[0.048874,0.040798,0.074469],[0.046371,0.039962,0.069006],[0.049232,0.039761,0.071022],[0.063945,0.051543,0.087478]]},{"date":"201712201730","rgb":[[0.014008,0.027517,0.01966],[0.017282,0.024484,0.018753],[0.013742,0.026222,0.017266],[0.013886,0.027128,0.023402],[0.023542,0.025436,0.029945],[0.019773,0.026201,0.024354],[0.019176,0.026296,0.025235],[0.022762,0.026051,0.033397],[0.026907,0.026145,0.034201],[0.023101,0.024728,0.026252],[0.022889,0.025107,0.027163],[0.026856,0.02625,0.037437],[0.05183,0.041264,0.076415],[0.05013,0.040148,0.071738],[0.0509,0.040546,0.073615],[0.066542,0.051733,0.086444]]},{"date":"201712201740","rgb":[[0.014013,0.02782,0.017016],[0.015835,0.02557,0.017353],[0.01317,0.02599,0.018922],[0.014499,0.027439,0.021616],[0.022205,0.025558,0.028553],[0.020741,0.025521,0.024679],[0.02124,0.02539,0.026349],[0.023522,0.025808,0.033869],[0.026913,0.026084,0.033796],[0.024675,0.024705,0.02899],[0.024794,0.024857,0.030577],[0.02786,0.026103,0.039161],[0.055692,0.04109,0.078735],[0.050679,0.040556,0.072966],[0.052065,0.041434,0.07527],[0.068474,0.051416,0.089108]]},{"date":"201712201750","rgb":[[0.013344,0.027269,0.020207],[0.013636,0.026641,0.016122],[0.011835,0.025769,0.021493],[0.013274,0.026724,0.025548],[0.020585,0.025748,0.029194],[0.017605,0.027105,0.024761],[0.019987,0.025528,0.028875],[0.023336,0.026377,0.037826],[0.023006,0.025517,0.031061],[0.020665,0.0256,0.02544],[0.022102,0.025278,0.030399],[0.025625,0.026554,0.040135],[0.051272,0.040687,0.07672],[0.0468,0.040004,0.070354],[0.049438,0.040725,0.075485],[0.064956,0.051237,0.089142]]},{"date":"201712201800","rgb":[[0.013472,0.027699,0.018699],[0.0124,0.027903,0.014877],[0.013262,0.026748,0.017132],[0.014293,0.026842,0.023972],[0.021494,0.025694,0.027566],[0.020001,0.026349,0.023475],[0.02024,0.025857,0.025659],[0.023798,0.025889,0.033536],[0.025632,0.025537,0.030986],[0.023241,0.024426,0.02624],[0.023416,0.024693,0.029685],[0.027416,0.025915,0.037667],[0.052119,0.040903,0.075738],[0.049491,0.039851,0.070783],[0.050597,0.04053,0.072359],[0.065709,0.051553,0.086068]]},{"date":"201712201810","rgb":[[0.012954,0.027568,0.017896],[0.013968,0.026509,0.016416],[0.011899,0.026487,0.018526],[0.013892,0.026878,0.023618],[0.018892,0.026625,0.025423],[0.017813,0.027376,0.023661],[0.018647,0.026931,0.023952],[0.02143,0.025976,0.032169],[0.021631,0.025831,0.027365],[0.01965,0.026582,0.023748],[0.021064,0.025663,0.02519],[0.024682,0.025835,0.035059],[0.047471,0.040424,0.071786],[0.046028,0.040242,0.068257],[0.047829,0.03983,0.069869],[0.063322,0.05131,0.08577]]},{"date":"201712201820","rgb":[[0.013464,0.027601,0.019142],[0.012865,0.026773,0.017439],[0.014587,0.024993,0.020635],[0.014033,0.027319,0.022704],[0.021138,0.025916,0.027864],[0.018598,0.026782,0.024787],[0.018649,0.026871,0.025188],[0.021384,0.025947,0.031062],[0.025634,0.025763,0.031584],[0.022021,0.024979,0.027497],[0.022186,0.024987,0.028344],[0.026047,0.026543,0.036537],[0.051346,0.040937,0.074296],[0.049309,0.039622,0.071315],[0.050628,0.04042,0.073079],[0.066186,0.051686,0.086155]]},{"date":"201712201830","rgb":[[0.013183,0.027531,0.019536],[0.013523,0.025832,0.019433],[0.01304,0.025178,0.021427],[0.013355,0.026634,0.023844],[0.020033,0.026586,0.027018],[0.016629,0.027511,0.02362],[0.016843,0.027336,0.023875],[0.018926,0.026315,0.030267],[0.02502,0.025464,0.031698],[0.019457,0.026387,0.025879],[0.019976,0.026178,0.026812],[0.021694,0.026511,0.035449],[0.050893,0.040556,0.073709],[0.047146,0.039806,0.068244],[0.048786,0.039794,0.070191],[0.06297,0.051619,0.083004]]},{"date":"201712201840","rgb":[[0.013235,0.027763,0.01847],[0.013587,0.025509,0.019858],[0.013253,0.02548,0.020414],[0.012712,0.026995,0.02432],[0.019001,0.026721,0.025286],[0.015741,0.027925,0.022895],[0.015406,0.02767,0.023227],[0.019434,0.026363,0.029163],[0.021755,0.02598,0.028705],[0.018328,0.027326,0.023733],[0.017888,0.027234,0.024219],[0.021657,0.026157,0.032061],[0.049764,0.04074,0.073671],[0.045365,0.040628,0.067417],[0.045457,0.040358,0.069448],[0.061523,0.051718,0.083263]]},{"date":"201712201850","rgb":[[0.013926,0.027533,0.018767],[0.013814,0.026662,0.016699],[0.012533,0.026406,0.018476],[0.014781,0.026673,0.025041],[0.022105,0.025764,0.029145],[0.018835,0.02687,0.023724],[0.017792,0.027204,0.024589],[0.021057,0.02622,0.031583],[0.024831,0.025722,0.032295],[0.019813,0.026028,0.025411],[0.019106,0.026263,0.027045],[0.022744,0.026411,0.035402],[0.049688,0.040822,0.074812],[0.04659,0.0401,0.067441],[0.046799,0.040221,0.070164],[0.062902,0.051743,0.083688]]},{"date":"201712201900","rgb":[[0.013102,0.026874,0.021325],[0.01346,0.026691,0.015817],[0.011731,0.027809,0.015029],[0.014308,0.027123,0.023659],[0.017057,0.027232,0.024205],[0.014216,0.027835,0.022356],[0.015578,0.027727,0.022905],[0.020099,0.026577,0.030968],[0.018634,0.026948,0.025007],[0.017828,0.027437,0.023216],[0.01902,0.026561,0.024932],[0.02307,0.026117,0.033878],[0.045512,0.040904,0.069359],[0.045018,0.040944,0.067197],[0.048578,0.040133,0.071411],[0.06429,0.051694,0.086322]]},{"date":"201712201910","rgb":[[0.013029,0.027599,0.017315],[0.015027,0.02482,0.019186],[0.012785,0.026791,0.016515],[0.013645,0.026855,0.024255],[0.013184,0.028618,0.018573],[0.011285,0.028755,0.015065],[0.011411,0.028069,0.018008],[0.015437,0.026559,0.02762],[0.014666,0.027891,0.022123],[0.012009,0.027922,0.019954],[0.01269,0.027473,0.022724],[0.017779,0.026587,0.031121],[0.042309,0.041654,0.06697],[0.039239,0.042292,0.063677],[0.041369,0.041819,0.065855],[0.057645,0.051724,0.080954]]},{"date":"201712201920","rgb":[[0.012986,0.027342,0.01841],[0.015538,0.024599,0.019324],[0.013274,0.025618,0.018925],[0.013419,0.026933,0.023536],[0.013481,0.028338,0.018974],[0.010773,0.028346,0.01488],[0.010852,0.027842,0.016601],[0.013588,0.02729,0.025066],[0.015327,0.028471,0.019973],[0.011339,0.029279,0.013953],[0.011521,0.028489,0.017201],[0.016125,0.02673,0.027345],[0.04381,0.041223,0.066861],[0.040864,0.042705,0.061627],[0.041071,0.042092,0.065564],[0.05657,0.051558,0.077109]]},{"date":"201712201930","rgb":[[0.012163,0.028124,0.01666],[0.015515,0.02587,0.013587],[0.015239,0.025628,0.014654],[0.014037,0.027287,0.023171],[0.012426,0.028878,0.016305],[0.011049,0.029277,0.013272],[0.011553,0.028934,0.014501],[0.016129,0.02722,0.024325],[0.013504,0.028668,0.01869],[0.011815,0.02878,0.016458],[0.012731,0.028325,0.018807],[0.016979,0.026806,0.026645],[0.040543,0.042773,0.060521],[0.039226,0.043437,0.058478],[0.040803,0.042642,0.061114],[0.056733,0.051588,0.074776]]},{"date":"201712201940","rgb":[[0.012584,0.027526,0.019373],[0.012859,0.026541,0.017349],[0.014041,0.02584,0.018508],[0.013829,0.026644,0.0269],[0.012954,0.028475,0.019953],[0.011637,0.028918,0.01671],[0.012505,0.028068,0.020531],[0.017332,0.026364,0.028861],[0.0151,0.027767,0.022262],[0.012797,0.027771,0.021604],[0.01417,0.027637,0.023559],[0.019349,0.026312,0.030573],[0.042932,0.041902,0.065595],[0.04182,0.042313,0.063669],[0.042121,0.041644,0.06671],[0.058306,0.051456,0.080458]]},{"date":"201712201950","rgb":[[0.012463,0.028408,0.015806],[0.013615,0.025647,0.019102],[0.013202,0.026354,0.016925],[0.013883,0.027404,0.021351],[0.015068,0.028179,0.020622],[0.013514,0.028317,0.020072],[0.014296,0.028118,0.02076],[0.018657,0.02632,0.029051],[0.017674,0.027437,0.022549],[0.015869,0.027862,0.022068],[0.017543,0.027409,0.024089],[0.023074,0.02557,0.032909],[0.044321,0.041238,0.066813],[0.043469,0.041543,0.065227],[0.046225,0.040606,0.068941],[0.063467,0.051746,0.084214]]},{"date":"201712202000","rgb":[[0.013282,0.027792,0.01794],[0.014692,0.025899,0.016807],[0.015068,0.026044,0.01404],[0.013505,0.027119,0.023241],[0.01595,0.027561,0.022757],[0.013838,0.027698,0.02162],[0.014721,0.028142,0.020744],[0.018727,0.026437,0.02858],[0.018335,0.02689,0.025668],[0.01684,0.027586,0.0235],[0.019009,0.02674,0.024673],[0.023007,0.02612,0.034199],[0.046641,0.040696,0.069467],[0.044877,0.041087,0.065738],[0.047652,0.039737,0.070245],[0.063935,0.051754,0.08604]]},{"date":"201712202010","rgb":[[0.012933,0.028157,0.016345],[0.012174,0.026553,0.018537],[0.011937,0.026418,0.018398],[0.012876,0.027238,0.022632],[0.016711,0.027577,0.022707],[0.01432,0.028374,0.020503],[0.015905,0.028134,0.020991],[0.019293,0.026439,0.028628],[0.018669,0.027219,0.02215],[0.016776,0.027967,0.020951],[0.018824,0.02711,0.022635],[0.023376,0.025913,0.031994],[0.045319,0.04128,0.066378],[0.044305,0.041437,0.065099],[0.047215,0.040041,0.06777],[0.063938,0.051146,0.082865]]},{"date":"201712202020","rgb":[[0.013474,0.026685,0.020037],[0.012603,0.027016,0.01535],[0.012987,0.026654,0.016214],[0.013036,0.027181,0.022187],[0.0134,0.02844,0.018945],[0.011105,0.029105,0.014104],[0.011627,0.028406,0.016549],[0.015754,0.026892,0.026163],[0.014953,0.028507,0.019985],[0.011915,0.029478,0.014883],[0.013246,0.028888,0.017513],[0.018108,0.026903,0.027504],[0.043064,0.042067,0.063462],[0.040001,0.042945,0.060861],[0.042533,0.042106,0.063547],[0.058821,0.051421,0.078109]]},{"date":"201712202030","rgb":[[0.012466,0.02795,0.01778],[0.013789,0.026836,0.014776],[0.011597,0.027341,0.016765],[0.013568,0.027206,0.024089],[0.015561,0.027748,0.02334],[0.012569,0.028544,0.019005],[0.01229,0.02876,0.019008],[0.016707,0.026548,0.027592],[0.01811,0.027234,0.023386],[0.013331,0.027643,0.022688],[0.015688,0.027882,0.022041],[0.019966,0.026177,0.030765],[0.045335,0.04089,0.067],[0.042642,0.041789,0.064468],[0.044584,0.041233,0.065416],[0.060325,0.051181,0.08002]]},{"date":"201712202040","rgb":[[0.012269,0.02821,0.014255],[0.015796,0.025836,0.012267],[0.014832,0.024796,0.019002],[0.013208,0.026783,0.022456],[0.012548,0.029171,0.015971],[0.011032,0.029191,0.013612],[0.011408,0.029208,0.014916],[0.016029,0.027163,0.025244],[0.014722,0.028886,0.018065],[0.011783,0.029376,0.014774],[0.013331,0.029077,0.016893],[0.019172,0.026594,0.026868],[0.042979,0.041822,0.064377],[0.04077,0.042454,0.062185],[0.042717,0.041958,0.064387],[0.058864,0.051335,0.077556]]},{"date":"201712202050","rgb":[[0.012538,0.027894,0.016546],[0.012896,0.027192,0.013331],[0.013117,0.026733,0.014953],[0.014362,0.027206,0.021033],[0.012906,0.028971,0.016668],[0.010782,0.02905,0.01304],[0.010886,0.028985,0.013641],[0.014345,0.027484,0.023343],[0.014503,0.028882,0.018008],[0.010987,0.029172,0.013269],[0.011498,0.029082,0.015795],[0.016144,0.027001,0.02515],[0.043349,0.041964,0.063409],[0.039809,0.043052,0.05941],[0.041666,0.042301,0.062131],[0.057525,0.051555,0.076222]]},{"date":"201712202100","rgb":[[0.012013,0.028198,0.01598],[0.014846,0.026186,0.012213],[0.012783,0.025938,0.017766],[0.013791,0.026887,0.023164],[0.011712,0.028747,0.016386],[0.010729,0.028978,0.013004],[0.010769,0.028305,0.015069],[0.014785,0.026937,0.0257],[0.012357,0.028814,0.016835],[0.010948,0.029112,0.012915],[0.01136,0.028615,0.015868],[0.016082,0.027003,0.026056],[0.040635,0.042894,0.061413],[0.038357,0.043604,0.056854],[0.039655,0.0429,0.060761],[0.056271,0.051503,0.074934]]},{"date":"201712202110","rgb":[[0.013256,0.027104,0.016842],[0.012212,0.027231,0.01365],[0.014231,0.026077,0.015378],[0.01292,0.027013,0.022174],[0.01206,0.028494,0.01714],[0.010641,0.028849,0.012683],[0.010747,0.028616,0.013832],[0.013484,0.027213,0.024147],[0.013601,0.028567,0.018351],[0.011134,0.029124,0.013782],[0.011327,0.029029,0.01547],[0.01549,0.026736,0.02656],[0.041286,0.04216,0.063777],[0.038877,0.042958,0.060113],[0.03954,0.042513,0.062571],[0.055946,0.051128,0.075478]]},{"date":"201712202120","rgb":[[0.012815,0.027791,0.016809],[0.012574,0.027766,0.01384],[0.013582,0.025315,0.020789],[0.01474,0.026599,0.024445],[0.013476,0.028568,0.019431],[0.011487,0.028974,0.015854],[0.011907,0.028353,0.017779],[0.016583,0.026909,0.02622],[0.015718,0.02755,0.022801],[0.012704,0.028541,0.018941],[0.014085,0.028178,0.020258],[0.018929,0.026602,0.029253],[0.043713,0.041497,0.06549],[0.042201,0.04233,0.062146],[0.043336,0.041812,0.063666],[0.05962,0.051104,0.078258]]},{"date":"201712202130","rgb":[[0.013116,0.027506,0.016215],[0.014945,0.025318,0.017534],[0.014169,0.025843,0.016415],[0.013923,0.027097,0.022868],[0.012828,0.028788,0.017523],[0.011128,0.029258,0.01353],[0.0116,0.029264,0.014337],[0.016306,0.027391,0.023742],[0.014373,0.028158,0.020317],[0.011482,0.028464,0.016755],[0.0125,0.02864,0.017836],[0.017291,0.027038,0.027227],[0.042772,0.041847,0.063845],[0.03993,0.043016,0.059714],[0.041606,0.04232,0.062049],[0.057253,0.051547,0.07565]]},{"date":"201712202140","rgb":[[0.012458,0.027709,0.017362],[0.01407,0.026773,0.012808],[0.014666,0.02457,0.020154],[0.012899,0.026791,0.022801],[0.013624,0.028524,0.018518],[0.011908,0.029128,0.014626],[0.011729,0.028258,0.018713],[0.016133,0.026885,0.02618],[0.014946,0.028272,0.018878],[0.012354,0.029233,0.015664],[0.013348,0.028378,0.019375],[0.017746,0.026685,0.028159],[0.042742,0.041907,0.064007],[0.040685,0.043081,0.060643],[0.042254,0.042004,0.064312],[0.057848,0.05111,0.077202]]},{"date":"201712202150","rgb":[[0.012809,0.027042,0.021427],[0.012545,0.026904,0.017292],[0.013013,0.026068,0.019741],[0.014776,0.026715,0.026675],[0.01878,0.027127,0.023053],[0.014652,0.028124,0.021332],[0.015328,0.027895,0.022796],[0.019642,0.026571,0.030371],[0.019543,0.026787,0.025192],[0.0167,0.027697,0.021943],[0.017471,0.026969,0.025486],[0.021485,0.02615,0.033601],[0.045829,0.040539,0.069095],[0.043943,0.040878,0.066786],[0.045664,0.040093,0.070061],[0.061217,0.051424,0.083223]]},{"date":"201712202200","rgb":[[0.013051,0.027212,0.018976],[0.01736,0.025155,0.013078],[0.013584,0.025445,0.019994],[0.013112,0.027083,0.023417],[0.015794,0.02782,0.02161],[0.012907,0.029233,0.015315],[0.013523,0.028203,0.019915],[0.018138,0.026505,0.027131],[0.017926,0.027383,0.021968],[0.015297,0.028428,0.018719],[0.016173,0.027673,0.023349],[0.020125,0.025978,0.03079],[0.044276,0.041445,0.066147],[0.042508,0.042344,0.062886],[0.043992,0.04138,0.066192],[0.059825,0.051537,0.08024]]},{"date":"201712202210","rgb":[[0.011907,0.028187,0.016395],[0.012123,0.026916,0.015631],[0.013221,0.026524,0.01661],[0.012809,0.026913,0.021904],[0.014029,0.028215,0.021123],[0.012023,0.028724,0.017149],[0.013141,0.028535,0.018631],[0.015601,0.027228,0.02584],[0.014952,0.027768,0.022799],[0.012622,0.028804,0.017624],[0.014134,0.028203,0.020543],[0.018432,0.026195,0.028207],[0.042888,0.041935,0.063937],[0.041508,0.042457,0.061955],[0.043503,0.041695,0.064978],[0.05844,0.051466,0.077026]]},{"date":"201712202220","rgb":[[0.012871,0.027338,0.018661],[0.012907,0.027088,0.015078],[0.013695,0.026241,0.017071],[0.013221,0.026963,0.022793],[0.015928,0.028227,0.019384],[0.012863,0.029326,0.016114],[0.012876,0.029084,0.016853],[0.016929,0.027208,0.025968],[0.016952,0.027611,0.021473],[0.015153,0.028503,0.018683],[0.015158,0.028196,0.020355],[0.019368,0.026404,0.028774],[0.044072,0.041465,0.063946],[0.043113,0.042283,0.062002],[0.044031,0.041631,0.064134],[0.058867,0.051502,0.078282]]},{"date":"201712202230","rgb":[[0.012772,0.028056,0.016436],[0.013159,0.027123,0.013828],[0.013053,0.026658,0.017101],[0.013545,0.027355,0.022146],[0.012603,0.028715,0.01774],[0.010839,0.02904,0.013326],[0.010948,0.028485,0.015144],[0.014762,0.027487,0.023589],[0.013163,0.028613,0.018578],[0.011334,0.029093,0.014477],[0.011519,0.028306,0.018115],[0.016363,0.026637,0.026868],[0.042378,0.042136,0.063742],[0.039444,0.042825,0.061174],[0.040718,0.042123,0.063836],[0.057207,0.051494,0.075519]]},{"date":"201712202240","rgb":[[0.012872,0.028317,0.016902],[0.012776,0.025953,0.01862],[0.014493,0.025526,0.018143],[0.014787,0.02689,0.024142],[0.016224,0.028106,0.018767],[0.012014,0.029356,0.01476],[0.011677,0.029027,0.015465],[0.017213,0.027035,0.025584],[0.017158,0.027738,0.02113],[0.012374,0.029129,0.017025],[0.0126,0.028677,0.019079],[0.018553,0.026518,0.028193],[0.044027,0.041579,0.064594],[0.04188,0.042575,0.061466],[0.042819,0.041965,0.06365],[0.058398,0.051411,0.077462]]},{"date":"201712202250","rgb":[[0.012252,0.027569,0.01875],[0.013554,0.026454,0.016203],[0.011683,0.027425,0.014753],[0.012909,0.027441,0.021191],[0.012708,0.028825,0.018224],[0.010939,0.029102,0.013649],[0.01073,0.028551,0.014202],[0.013351,0.027194,0.024258],[0.013646,0.028261,0.019459],[0.011345,0.029086,0.014401],[0.011356,0.028483,0.016876],[0.015236,0.02689,0.02649],[0.041226,0.041959,0.063368],[0.039058,0.043577,0.057784],[0.039806,0.042397,0.062924],[0.055492,0.051598,0.074412]]},{"date":"201712202300","rgb":[[0.011972,0.027866,0.016028],[0.012912,0.026562,0.015345],[0.013421,0.025152,0.020208],[0.01356,0.026959,0.022685],[0.011102,0.028838,0.014403],[0.010454,0.028786,0.01208],[0.010477,0.028299,0.01317],[0.012986,0.027397,0.022649],[0.011196,0.028945,0.015072],[0.010497,0.028837,0.012321],[0.010741,0.028156,0.01547],[0.013198,0.026919,0.02532],[0.03947,0.042222,0.062302],[0.037475,0.043101,0.057645],[0.038468,0.042838,0.060209],[0.053939,0.051847,0.074897]]},{"date":"201712202310","rgb":[[0.013279,0.027458,0.017782],[0.012347,0.026247,0.018159],[0.012349,0.026327,0.018258],[0.013904,0.026811,0.025447],[0.013928,0.02849,0.019266],[0.010999,0.028641,0.014458],[0.011111,0.028517,0.015792],[0.015239,0.027248,0.02497],[0.014157,0.028455,0.019724],[0.011188,0.028643,0.015195],[0.011844,0.028152,0.018985],[0.016351,0.026946,0.026803],[0.040466,0.042378,0.06375],[0.038599,0.042669,0.060562],[0.039702,0.042438,0.063149],[0.056528,0.051194,0.075713]]},{"date":"201712202320","rgb":[[0.012448,0.027688,0.016825],[0.012084,0.026243,0.017888],[0.013463,0.026567,0.015583],[0.014237,0.026873,0.023202],[0.013266,0.02878,0.017478],[0.011194,0.0291,0.01316],[0.011448,0.029226,0.014546],[0.015204,0.027345,0.024172],[0.012644,0.029195,0.017056],[0.011093,0.029113,0.013643],[0.012362,0.029117,0.016339],[0.017418,0.02696,0.025424],[0.040245,0.042372,0.061098],[0.038646,0.043216,0.057669],[0.040977,0.042469,0.061482],[0.056955,0.051524,0.073703]]},{"date":"201712202330","rgb":[[0.012522,0.028259,0.015332],[0.013888,0.026019,0.016779],[0.013131,0.024982,0.02111],[0.013361,0.027437,0.020897],[0.013027,0.028751,0.017163],[0.01088,0.028936,0.012819],[0.010834,0.027546,0.017393],[0.014326,0.02762,0.023579],[0.013353,0.028887,0.017133],[0.011176,0.029447,0.013747],[0.011337,0.028458,0.016666],[0.015787,0.026908,0.026547],[0.041239,0.042125,0.063245],[0.039069,0.043033,0.059465],[0.04078,0.042361,0.062198],[0.056829,0.051177,0.076223]]},{"date":"201712202340","rgb":[[0.013037,0.027722,0.017276],[0.013563,0.025644,0.019016],[0.01148,0.026194,0.019552],[0.014232,0.027369,0.022482],[0.012182,0.028673,0.018218],[0.011092,0.028828,0.014195],[0.01139,0.028864,0.01499],[0.016012,0.027189,0.024255],[0.012703,0.02907,0.017258],[0.011447,0.029342,0.013211],[0.012686,0.028978,0.01697],[0.017978,0.02687,0.025632],[0.040339,0.042288,0.063042],[0.039017,0.043271,0.058253],[0.040565,0.042843,0.060864],[0.057316,0.051445,0.075217]]},{"date":"201712202350","rgb":[[0.012118,0.028023,0.016699],[0.016658,0.02498,0.014221],[0.014335,0.025901,0.015466],[0.01322,0.026955,0.022714],[0.011958,0.028156,0.018769],[0.010796,0.028826,0.013208],[0.010857,0.028369,0.015172],[0.01389,0.027004,0.025467],[0.011836,0.02818,0.018664],[0.01104,0.028912,0.014153],[0.011502,0.028617,0.016621],[0.016099,0.026854,0.027358],[0.039449,0.04218,0.063064],[0.038227,0.042697,0.060361],[0.039674,0.042464,0.062985],[0.055954,0.05146,0.075431]]},{"date":"201712210000","rgb":[[0.012232,0.028112,0.015279],[0.015353,0.02581,0.012667],[0.015128,0.025345,0.015465],[0.013206,0.026921,0.023159],[0.011459,0.028946,0.015176],[0.010536,0.028879,0.012457],[0.010578,0.028788,0.012573],[0.013463,0.027226,0.023025],[0.011256,0.028936,0.013657],[0.010511,0.028866,0.01185],[0.010866,0.028895,0.013411],[0.014993,0.02747,0.023078],[0.038037,0.042869,0.058754],[0.037131,0.042882,0.056014],[0.038034,0.043333,0.058414],[0.053965,0.0519,0.072842]]},{"date":"201712210010","rgb":[[0.013029,0.027634,0.015497],[0.013737,0.026642,0.01414],[0.013373,0.025589,0.018747],[0.013687,0.026814,0.022503],[0.011532,0.0292,0.015187],[0.010643,0.028959,0.012502],[0.010762,0.028761,0.013741],[0.013449,0.027606,0.022541],[0.011331,0.029327,0.014586],[0.010661,0.029002,0.012484],[0.011183,0.028774,0.015157],[0.01507,0.027379,0.02419],[0.037935,0.042957,0.059172],[0.037401,0.043165,0.056096],[0.0382,0.0428,0.059015],[0.05429,0.051727,0.072366]]},{"date":"201712210020","rgb":[[0.012161,0.027994,0.017218],[0.012792,0.027305,0.012882],[0.013532,0.026337,0.016123],[0.013938,0.027401,0.020803],[0.012124,0.028707,0.016966],[0.010729,0.028986,0.012383],[0.010789,0.028932,0.012991],[0.014712,0.027978,0.021676],[0.012776,0.028454,0.018857],[0.011017,0.029269,0.014026],[0.011596,0.02883,0.016116],[0.016475,0.027166,0.02528],[0.03943,0.042346,0.061804],[0.037306,0.043597,0.055843],[0.039122,0.042981,0.059216],[0.055698,0.051832,0.071407]]},{"date":"201712210030","rgb":[[0.011932,0.028393,0.015426],[0.014048,0.026327,0.014915],[0.016242,0.024635,0.018976],[0.013561,0.02715,0.022934],[0.011488,0.029222,0.014547],[0.010499,0.028836,0.011513],[0.010678,0.028712,0.01327],[0.013906,0.027456,0.022999],[0.011421,0.029173,0.014085],[0.010542,0.02889,0.011695],[0.01081,0.028719,0.013943],[0.014607,0.027395,0.023571],[0.038265,0.04305,0.058702],[0.037194,0.043284,0.055961],[0.037937,0.043059,0.058066],[0.053899,0.05197,0.072162]]},{"date":"201712210040","rgb":[[0.012606,0.027401,0.016403],[0.013581,0.025302,0.019437],[0.012109,0.0254,0.020801],[0.012746,0.026747,0.023878],[0.011422,0.028787,0.015475],[0.010622,0.028554,0.013158],[0.010677,0.027134,0.017655],[0.013179,0.026982,0.024554],[0.011597,0.028704,0.015917],[0.010652,0.028964,0.012103],[0.010827,0.028638,0.014516],[0.013519,0.0271,0.026032],[0.038218,0.042735,0.060576],[0.037344,0.043278,0.056442],[0.037902,0.043005,0.059078],[0.052841,0.051944,0.073155]]},{"date":"201712210050","rgb":[[0.011971,0.028158,0.015493],[0.013534,0.0248,0.021228],[0.012108,0.026071,0.019098],[0.012757,0.02675,0.023581],[0.011807,0.028997,0.014702],[0.010813,0.028091,0.015615],[0.01091,0.028586,0.014458],[0.01473,0.02743,0.023137],[0.012201,0.028623,0.01677],[0.011063,0.029082,0.013363],[0.011589,0.028807,0.015397],[0.015806,0.026947,0.025953],[0.03853,0.043123,0.05908],[0.037596,0.042989,0.057868],[0.038769,0.043402,0.058785],[0.054096,0.051934,0.07284]]},{"date":"201712210100","rgb":[[0.012909,0.027392,0.01788],[0.014084,0.025784,0.017452],[0.012122,0.027185,0.015897],[0.013406,0.02678,0.023979],[0.013154,0.028437,0.018274],[0.011436,0.029089,0.014793],[0.012031,0.028959,0.016962],[0.015751,0.027164,0.025054],[0.01248,0.028634,0.018792],[0.011801,0.029489,0.0148],[0.012149,0.029683,0.016233],[0.016932,0.026963,0.025885],[0.039171,0.042109,0.063087],[0.038708,0.04295,0.06007],[0.03982,0.042456,0.062657],[0.055357,0.051366,0.073892]]},{"date":"201712210110","rgb":[[0.013307,0.027647,0.017607],[0.012592,0.027414,0.013897],[0.015426,0.024887,0.018941],[0.013819,0.026935,0.024287],[0.012297,0.029135,0.017227],[0.011094,0.029269,0.013365],[0.011894,0.028637,0.016903],[0.016325,0.027054,0.025453],[0.013094,0.028787,0.018194],[0.011365,0.029393,0.014172],[0.012437,0.028861,0.016888],[0.017383,0.026817,0.026932],[0.041203,0.042694,0.061569],[0.038763,0.043391,0.057574],[0.040407,0.04282,0.060114],[0.055605,0.051273,0.073777]]},{"date":"201712210120","rgb":[[0.012852,0.028169,0.015303],[0.014877,0.026019,0.01548],[0.012412,0.026837,0.017124],[0.01266,0.026877,0.023498],[0.013636,0.028512,0.019114],[0.011616,0.029444,0.014789],[0.011931,0.029023,0.016517],[0.015718,0.02715,0.024987],[0.01468,0.028596,0.019134],[0.012264,0.029303,0.015258],[0.01304,0.028901,0.017615],[0.018062,0.026635,0.026828],[0.040756,0.042614,0.061991],[0.039694,0.043398,0.058899],[0.041633,0.042725,0.061042],[0.056222,0.05142,0.074387]]},{"date":"201712210130","rgb":[[0.01304,0.027584,0.016905],[0.017131,0.024887,0.014945],[0.015588,0.025403,0.015487],[0.013448,0.026949,0.023356],[0.014185,0.028792,0.01761],[0.01236,0.029409,0.014644],[0.01273,0.02907,0.016056],[0.016195,0.027165,0.025476],[0.013778,0.029001,0.017081],[0.012002,0.029597,0.01476],[0.012385,0.0292,0.017612],[0.018146,0.026641,0.027129],[0.040837,0.042651,0.061305],[0.039175,0.043175,0.058691],[0.040772,0.042715,0.061641],[0.056399,0.051172,0.074945]]},{"date":"201712210140","rgb":[[0.01234,0.027594,0.017059],[0.012387,0.027322,0.014704],[0.014639,0.025891,0.01653],[0.013053,0.027168,0.021522],[0.015408,0.028006,0.020704],[0.012331,0.029323,0.016354],[0.013576,0.028492,0.019195],[0.017711,0.026589,0.026969],[0.013936,0.028347,0.021052],[0.01223,0.029017,0.017088],[0.013501,0.028415,0.020526],[0.017801,0.026487,0.029128],[0.041214,0.042492,0.063373],[0.039787,0.042924,0.06177],[0.0417,0.042327,0.064091],[0.056446,0.051173,0.076413]]},{"date":"201712210150","rgb":[[0.012415,0.028082,0.016505],[0.012442,0.026811,0.016428],[0.012807,0.026699,0.015458],[0.014428,0.026646,0.023921],[0.016441,0.028381,0.017402],[0.012666,0.029366,0.016492],[0.012336,0.028854,0.017736],[0.016444,0.026988,0.025257],[0.015571,0.028382,0.018416],[0.012375,0.029584,0.015416],[0.013122,0.028679,0.017699],[0.017376,0.02674,0.027124],[0.041761,0.042317,0.062401],[0.039567,0.042878,0.061134],[0.040969,0.042363,0.062995],[0.056398,0.051287,0.075849]]},{"date":"201712210200","rgb":[[0.013133,0.027741,0.016334],[0.015451,0.025837,0.013216],[0.013333,0.025957,0.017652],[0.014059,0.026693,0.023787],[0.012047,0.0289,0.017002],[0.010995,0.029148,0.013373],[0.011641,0.028881,0.015975],[0.01649,0.026783,0.02618],[0.012885,0.028852,0.018242],[0.011117,0.02928,0.013818],[0.01244,0.028534,0.018139],[0.017488,0.026817,0.027366],[0.040039,0.042367,0.064294],[0.038678,0.042837,0.062013],[0.040403,0.042001,0.065107],[0.056277,0.051161,0.077223]]},{"date":"201712210220","rgb":[[0.012581,0.027467,0.017533],[0.01414,0.026143,0.016204],[0.013183,0.026276,0.016863],[0.013264,0.026527,0.024194],[0.013788,0.028672,0.01837],[0.011485,0.029051,0.015554],[0.011783,0.029035,0.016155],[0.015324,0.026618,0.027103],[0.013988,0.02824,0.01998],[0.011775,0.029006,0.015673],[0.01255,0.028635,0.019183],[0.016819,0.026728,0.028262],[0.040174,0.042293,0.062936],[0.039007,0.043036,0.059146],[0.040068,0.042728,0.062089],[0.054693,0.051462,0.073965]]},{"date":"201712210230","rgb":[[0.013166,0.028041,0.016151],[0.016043,0.025378,0.015682],[0.013064,0.026241,0.017133],[0.014417,0.027041,0.022859],[0.01307,0.028649,0.019184],[0.011309,0.029187,0.015188],[0.011528,0.028311,0.016779],[0.015572,0.026762,0.027021],[0.012564,0.028697,0.019508],[0.011553,0.028738,0.016641],[0.011907,0.027544,0.020697],[0.016371,0.026803,0.027923],[0.041038,0.042368,0.062169],[0.038503,0.042455,0.061364],[0.040015,0.042034,0.063448],[0.056607,0.051334,0.076596]]},{"date":"201712210240","rgb":[[0.013346,0.027149,0.018462],[0.016942,0.024884,0.014767],[0.014493,0.025328,0.017707],[0.013173,0.027085,0.022393],[0.01156,0.028896,0.015937],[0.010721,0.028999,0.012647],[0.010677,0.028784,0.013469],[0.01354,0.027311,0.022762],[0.011749,0.028747,0.016196],[0.010666,0.028899,0.013137],[0.01088,0.028672,0.014547],[0.013772,0.027543,0.024081],[0.038632,0.042864,0.060044],[0.037576,0.043436,0.056142],[0.038199,0.043147,0.05841],[0.053706,0.051721,0.071877]]},{"date":"201712210250","rgb":[[0.011978,0.027921,0.016762],[0.012948,0.026844,0.014438],[0.012692,0.026332,0.017531],[0.013047,0.02719,0.021981],[0.011144,0.028804,0.015216],[0.010456,0.028778,0.011725],[0.010494,0.028737,0.0126],[0.01253,0.027539,0.02218],[0.011548,0.029048,0.015539],[0.010561,0.028809,0.012668],[0.010628,0.028772,0.013041],[0.0137,0.027739,0.022489],[0.038672,0.042377,0.061291],[0.036981,0.043175,0.055936],[0.037736,0.04286,0.057971],[0.052854,0.051728,0.072478]]},{"date":"201712210300","rgb":[[0.012658,0.02788,0.016711],[0.013867,0.026749,0.012384],[0.012915,0.026903,0.015101],[0.013152,0.027325,0.021139],[0.011723,0.028495,0.016783],[0.010551,0.028822,0.012324],[0.010577,0.028757,0.01274],[0.013907,0.027575,0.02319],[0.011786,0.029177,0.014798],[0.010576,0.028976,0.012134],[0.010801,0.028867,0.013563],[0.014765,0.027344,0.023967],[0.038937,0.042912,0.060192],[0.037372,0.043263,0.056255],[0.038499,0.042903,0.059109],[0.053773,0.05196,0.072188]]},{"date":"201712210310","rgb":[[0.012089,0.027698,0.018344],[0.013419,0.026069,0.016886],[0.01321,0.025306,0.019822],[0.012949,0.026993,0.023348],[0.011771,0.028243,0.017961],[0.010627,0.028946,0.012448],[0.010623,0.028259,0.014422],[0.013991,0.027088,0.024872],[0.011961,0.029192,0.016144],[0.010805,0.029112,0.012818],[0.010978,0.028741,0.014143],[0.014822,0.027158,0.025103],[0.038653,0.042611,0.060958],[0.037146,0.043493,0.056278],[0.037832,0.043036,0.058123],[0.053133,0.051898,0.072276]]},{"date":"201712210320","rgb":[[0.012229,0.027962,0.017908],[0.013643,0.026674,0.014906],[0.013207,0.026635,0.01549],[0.013519,0.02691,0.025001],[0.011771,0.028964,0.01527],[0.010615,0.028962,0.011553],[0.010678,0.028998,0.011549],[0.014133,0.027586,0.023093],[0.012371,0.029158,0.015878],[0.010663,0.029018,0.012861],[0.011132,0.029158,0.013976],[0.01495,0.027385,0.024597],[0.039669,0.043029,0.059568],[0.037427,0.043393,0.055406],[0.038409,0.043371,0.0573],[0.053867,0.051834,0.071274]]},{"date":"201712210330","rgb":[[0.012541,0.02804,0.017433],[0.016066,0.025383,0.01494],[0.014643,0.025616,0.016881],[0.014009,0.026895,0.023474],[0.012153,0.028955,0.017138],[0.010819,0.029056,0.01299],[0.010941,0.029094,0.013156],[0.015215,0.027033,0.024463],[0.013079,0.02899,0.017477],[0.011144,0.029359,0.013419],[0.011889,0.029235,0.015609],[0.015997,0.02724,0.024469],[0.040863,0.042679,0.060741],[0.03847,0.043304,0.057496],[0.040153,0.043235,0.060556],[0.056696,0.051632,0.073403]]},{"date":"201712210340","rgb":[[0.012167,0.027798,0.016754],[0.015343,0.02519,0.016801],[0.017546,0.024213,0.015249],[0.013343,0.026781,0.021924],[0.012316,0.029229,0.015716],[0.010812,0.028995,0.012408],[0.010661,0.02884,0.012491],[0.013234,0.028234,0.020258],[0.012035,0.029115,0.016641],[0.010797,0.028971,0.013046],[0.011092,0.028287,0.016245],[0.014091,0.027217,0.024414],[0.03962,0.043222,0.058814],[0.037518,0.04371,0.055504],[0.038537,0.04323,0.058019],[0.054236,0.051811,0.071598]]},{"date":"201712210350","rgb":[[0.013162,0.027962,0.015058],[0.014209,0.025961,0.016016],[0.013059,0.025977,0.017622],[0.013127,0.027865,0.018856],[0.013922,0.029148,0.016221],[0.011536,0.029568,0.013725],[0.012284,0.029358,0.01453],[0.017055,0.027589,0.022872],[0.015177,0.028494,0.018191],[0.012113,0.029719,0.014094],[0.012589,0.029072,0.016372],[0.017394,0.027166,0.024922],[0.041645,0.042969,0.059638],[0.039701,0.043203,0.058293],[0.040736,0.042958,0.059889],[0.056695,0.051474,0.072286]]},{"date":"201712210400","rgb":[[0.013877,0.027595,0.016693],[0.017898,0.02449,0.015066],[0.014408,0.026012,0.016296],[0.013836,0.026984,0.021861],[0.016184,0.027709,0.022216],[0.012487,0.029079,0.01638],[0.012636,0.028926,0.016994],[0.01673,0.026794,0.026528],[0.016773,0.027896,0.020244],[0.012744,0.029422,0.015653],[0.013572,0.028961,0.018098],[0.018303,0.026634,0.026964],[0.043311,0.041709,0.064426],[0.040358,0.043103,0.060425],[0.041782,0.042365,0.063502],[0.057578,0.051441,0.076506]]},{"date":"201712210410","rgb":[[0.013437,0.028052,0.016179],[0.013891,0.026371,0.016524],[0.013778,0.026112,0.017217],[0.014085,0.026544,0.025326],[0.015314,0.028535,0.018701],[0.012009,0.029364,0.015933],[0.012526,0.028233,0.019451],[0.017224,0.026817,0.026579],[0.016504,0.027737,0.022058],[0.012782,0.028142,0.020935],[0.013768,0.028062,0.02232],[0.019379,0.026104,0.029798],[0.043326,0.041898,0.063261],[0.04182,0.042337,0.062538],[0.043031,0.041825,0.064219],[0.058577,0.051432,0.076434]]},{"date":"201712210420","rgb":[[0.013866,0.027339,0.016876],[0.018752,0.023408,0.016259],[0.015637,0.025591,0.014771],[0.013605,0.027259,0.023042],[0.014435,0.029088,0.017058],[0.011755,0.029361,0.014474],[0.012451,0.02935,0.015796],[0.016494,0.026813,0.026665],[0.016526,0.028071,0.018828],[0.01235,0.029016,0.01667],[0.013504,0.028444,0.020357],[0.018368,0.026224,0.030043],[0.043484,0.04203,0.062658],[0.040667,0.042946,0.060974],[0.042381,0.042258,0.063554],[0.057223,0.051201,0.077461]]},{"date":"201712210430","rgb":[[0.013859,0.027096,0.018712],[0.015659,0.02495,0.018891],[0.013297,0.026671,0.016054],[0.01396,0.026858,0.02497],[0.018221,0.027211,0.022759],[0.01549,0.028346,0.019273],[0.015546,0.027796,0.022684],[0.019738,0.0266,0.028506],[0.018775,0.027067,0.022901],[0.015855,0.02815,0.021262],[0.017521,0.027354,0.023657],[0.021897,0.026199,0.032119],[0.0447,0.041185,0.065922],[0.043857,0.041744,0.063842],[0.045066,0.041033,0.067695],[0.062313,0.051519,0.082113]]},{"date":"201712210440","rgb":[[0.012599,0.027419,0.017837],[0.013567,0.025616,0.019321],[0.012143,0.025336,0.021403],[0.013231,0.026614,0.025522],[0.014783,0.027549,0.023097],[0.01337,0.028416,0.020018],[0.01484,0.027359,0.02368],[0.018287,0.026245,0.029946],[0.016397,0.027843,0.021975],[0.014789,0.028172,0.020412],[0.016625,0.027478,0.023384],[0.020751,0.026334,0.03233],[0.043587,0.041245,0.066295],[0.042009,0.042014,0.063618],[0.044216,0.041224,0.067293],[0.060951,0.051246,0.081641]]},{"date":"201712210450","rgb":[[0.012541,0.027952,0.016562],[0.013172,0.026968,0.013892],[0.014455,0.026096,0.015766],[0.013112,0.027183,0.022139],[0.016789,0.027833,0.020438],[0.012847,0.029372,0.015141],[0.013026,0.028796,0.017791],[0.017994,0.027146,0.024947],[0.018973,0.026987,0.023596],[0.013827,0.028983,0.0183],[0.015873,0.027865,0.022174],[0.021299,0.026536,0.030632],[0.044853,0.041376,0.063967],[0.043464,0.042122,0.060674],[0.045276,0.041141,0.064667],[0.061137,0.051279,0.078772]]},{"date":"201712210500","rgb":[[0.012572,0.027967,0.01626],[0.013673,0.026779,0.014912],[0.012501,0.025663,0.02005],[0.013257,0.026465,0.024182],[0.014789,0.028469,0.019887],[0.01254,0.029862,0.014706],[0.013944,0.028783,0.018023],[0.01807,0.02669,0.025957],[0.017188,0.027721,0.021281],[0.013229,0.028643,0.019651],[0.015447,0.027743,0.022208],[0.020334,0.026567,0.028689],[0.044136,0.041583,0.065229],[0.042682,0.042434,0.06128],[0.044207,0.041646,0.064069],[0.059178,0.051589,0.077672]]},{"date":"201712210510","rgb":[[0.012866,0.028512,0.015262],[0.013513,0.026886,0.014156],[0.015806,0.025373,0.015625],[0.013799,0.027376,0.021799],[0.016107,0.027599,0.02244],[0.013192,0.029072,0.01674],[0.013401,0.02821,0.019397],[0.018111,0.026504,0.027802],[0.018265,0.027256,0.023298],[0.01549,0.028388,0.020512],[0.016282,0.027594,0.022682],[0.020811,0.026107,0.031788],[0.044637,0.041323,0.066265],[0.043161,0.041699,0.064265],[0.045483,0.040376,0.06824],[0.061408,0.051517,0.082057]]},{"date":"201712210520","rgb":[[0.012253,0.027159,0.02022],[0.012578,0.026391,0.018443],[0.013865,0.025903,0.01764],[0.013218,0.02655,0.025937],[0.015658,0.027632,0.022386],[0.012792,0.028789,0.018864],[0.013111,0.028206,0.020832],[0.018791,0.02611,0.029607],[0.017231,0.027205,0.023243],[0.013068,0.028486,0.0199],[0.015571,0.027685,0.023066],[0.02142,0.026289,0.031462],[0.043967,0.040914,0.067168],[0.042626,0.041691,0.065209],[0.044021,0.041128,0.066991],[0.059521,0.051747,0.081743]]},{"date":"201712210530","rgb":[[0.012445,0.028129,0.016406],[0.013975,0.026943,0.012869],[0.01467,0.026291,0.013993],[0.013135,0.027509,0.020841],[0.014783,0.028304,0.020516],[0.0124,0.029592,0.015797],[0.013605,0.028688,0.018805],[0.019324,0.0266,0.026856],[0.017617,0.027393,0.023322],[0.015428,0.02835,0.019668],[0.017103,0.027743,0.02222],[0.022149,0.026018,0.032067],[0.043927,0.041608,0.065912],[0.043369,0.041935,0.063347],[0.045245,0.040876,0.06553],[0.062123,0.051293,0.081109]]},{"date":"201712210540","rgb":[[0.013325,0.027906,0.015699],[0.015195,0.025446,0.017627],[0.013077,0.026957,0.016291],[0.014137,0.02726,0.022989],[0.016301,0.028005,0.020785],[0.013029,0.02912,0.0169],[0.013576,0.028453,0.020529],[0.018994,0.026276,0.029527],[0.018896,0.027335,0.021334],[0.016785,0.027767,0.020764],[0.018188,0.027339,0.0228],[0.022344,0.026355,0.031155],[0.044876,0.041167,0.06573],[0.044054,0.041502,0.064293],[0.046355,0.040307,0.0674],[0.063125,0.051373,0.081356]]},{"date":"201712210550","rgb":[[0.012434,0.028462,0.014931],[0.015618,0.025837,0.013263],[0.014451,0.025483,0.018085],[0.014281,0.026618,0.023582],[0.014102,0.028785,0.017377],[0.012019,0.029462,0.014509],[0.013487,0.028459,0.019371],[0.019515,0.026419,0.028082],[0.016112,0.027673,0.021904],[0.013139,0.028264,0.020032],[0.015958,0.027578,0.02371],[0.020924,0.026451,0.032939],[0.044014,0.041523,0.066758],[0.04247,0.042111,0.063828],[0.044207,0.041188,0.067248],[0.061507,0.051486,0.082009]]},{"date":"201712210600","rgb":[[0.012637,0.027418,0.017804],[0.01299,0.026597,0.016354],[0.013207,0.025038,0.0217],[0.013745,0.026653,0.023989],[0.01368,0.028064,0.021327],[0.012233,0.028646,0.017666],[0.013512,0.027798,0.021843],[0.018932,0.026337,0.029662],[0.014354,0.028207,0.021424],[0.012937,0.028744,0.019636],[0.014999,0.027729,0.023403],[0.021081,0.026286,0.032874],[0.04201,0.041854,0.065194],[0.041484,0.041951,0.064516],[0.04432,0.040774,0.068448],[0.061032,0.051715,0.082259]]},{"date":"201712210610","rgb":[[0.013498,0.02734,0.0195],[0.013895,0.025215,0.020716],[0.012654,0.025791,0.019976],[0.014324,0.026639,0.026076],[0.017095,0.027322,0.023797],[0.013689,0.028115,0.022178],[0.016349,0.027741,0.02242],[0.020299,0.025788,0.031796],[0.018933,0.026925,0.026073],[0.016349,0.027538,0.023716],[0.018416,0.026748,0.025717],[0.022657,0.026418,0.035564],[0.045448,0.040438,0.070271],[0.044217,0.040887,0.067512],[0.045719,0.040579,0.068714],[0.062101,0.051452,0.084868]]},{"date":"201712210620","rgb":[[0.012482,0.027525,0.017886],[0.01663,0.025558,0.012317],[0.014015,0.026254,0.016311],[0.013031,0.027344,0.020881],[0.014308,0.028103,0.021674],[0.012399,0.028513,0.018895],[0.013897,0.027943,0.021329],[0.01719,0.026475,0.02823],[0.015885,0.027178,0.024943],[0.013453,0.028025,0.021404],[0.014067,0.02787,0.023077],[0.018369,0.02665,0.030015],[0.043663,0.041151,0.067296],[0.042219,0.042147,0.064224],[0.04382,0.041186,0.067106],[0.059381,0.051528,0.080246]]},{"date":"201712210630","rgb":[[0.012182,0.026752,0.020997],[0.013396,0.025422,0.019752],[0.012632,0.027187,0.014319],[0.013135,0.02688,0.024023],[0.01271,0.027194,0.02409],[0.011395,0.026814,0.021762],[0.012129,0.027391,0.022564],[0.01533,0.026749,0.029491],[0.013299,0.027394,0.025221],[0.011921,0.02704,0.023135],[0.013533,0.027453,0.024781],[0.018866,0.026203,0.032209],[0.041826,0.041151,0.06832],[0.041151,0.041625,0.065723],[0.043149,0.041091,0.067489],[0.058294,0.051431,0.08048]]},{"date":"201712210640","rgb":[[0.013777,0.027326,0.018427],[0.012797,0.027204,0.016309],[0.014382,0.026288,0.016185],[0.013768,0.026465,0.024471],[0.01483,0.026965,0.035839],[0.013188,0.027181,0.036066],[0.013843,0.027374,0.037911],[0.018749,0.027463,0.043625],[0.016608,0.027268,0.039183],[0.014839,0.027207,0.039444],[0.015807,0.027511,0.040839],[0.021413,0.028074,0.048376],[0.044648,0.041267,0.079346],[0.042953,0.04169,0.079434],[0.044909,0.041963,0.08168],[0.061464,0.052928,0.094851]]},{"date":"201712210650","rgb":[[0.01538,0.0278,0.034828],[0.017048,0.024846,0.032239],[0.014732,0.025245,0.027012],[0.014826,0.026472,0.027263],[0.02889,0.031154,0.11745],[0.02916,0.031581,0.12577],[0.030463,0.032777,0.13813],[0.031618,0.033429,0.14543],[0.030497,0.032103,0.13175],[0.031063,0.032917,0.14],[0.032562,0.033977,0.1578],[0.034879,0.034942,0.17385],[0.055891,0.046072,0.15871],[0.056984,0.04672,0.17075],[0.058337,0.047553,0.18539],[0.072291,0.059092,0.20498]]},{"date":"201712210700","rgb":[[0.023136,0.029654,0.10021],[0.020417,0.028955,0.075374],[0.016779,0.02766,0.053585],[0.0162,0.027373,0.041437],[0.075377,0.050616,0.44559],[0.079965,0.078464,0.44511],[0.082982,0.077106,0.45604],[0.08438,0.049604,0.4633],[0.083197,0.055996,0.46773],[0.08643,0.092107,0.46425],[0.092844,0.0947,0.48398],[0.096713,0.057874,0.50305],[0.10475,0.06033,0.47155],[0.10733,0.074528,0.46879],[0.1138,0.079429,0.48816],[0.13055,0.07448,0.50114]]},{"date":"201712210710","rgb":[[0.055866,0.077033,0.24743],[0.047127,0.069557,0.20545],[0.03647,0.049007,0.15012],[0.028936,0.033901,0.11663],[0.21306,0.34126,0.98693],[0.22098,0.38296,0.99814],[0.22612,0.37508,0.99727],[0.22966,0.32978,0.98832],[0.22335,0.36029,0.99642],[0.22636,0.38454,0.9985],[0.23484,0.38377,0.99826],[0.24374,0.36114,0.99622],[0.23228,0.31702,0.94679],[0.23766,0.33964,0.94858],[0.24718,0.3452,0.94893],[0.26147,0.3263,0.93953]]},{"date":"201712210720","rgb":[[0.12317,0.22499,0.50709],[0.11096,0.17329,0.47379],[0.08987,0.11232,0.43051],[0.075848,0.061276,0.41931],[0.45582,0.99916,0.99869],[0.5108,0.99945,0.99844],[0.54543,0.99928,0.99841],[0.47239,0.99539,0.99673],[0.50055,0.99928,0.99879],[0.53179,0.99952,0.99809],[0.53474,0.99949,0.99841],[0.50704,0.9993,0.99861],[0.45595,0.92549,0.95066],[0.51334,0.92594,0.94985],[0.49893,0.92576,0.94984],[0.4512,0.92355,0.94361]]},{"date":"201712210730","rgb":[[0.31652,0.36323,0.82327],[0.27235,0.35072,0.82535],[0.22486,0.28924,0.80693],[0.19621,0.23481,0.81112],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98429,0.98048,0.99977],[0.98215,0.97957,0.99895],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92111,0.9068,0.94505]]},{"date":"201712210740","rgb":[[0.37682,0.50102,0.96982],[0.33563,0.49471,0.97603],[0.29227,0.43826,0.97384],[0.26976,0.39463,0.9758],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98428,0.98047,0.99981],[0.98303,0.98027,0.99936],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92111,0.9068,0.94503]]},{"date":"201712210750","rgb":[[0.50416,0.76093,0.98824],[0.47797,0.77557,0.98799],[0.44208,0.748,0.98695],[0.43882,0.74629,0.98595],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98045,0.99996],[0.9838,0.98064,0.99966],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92108,0.90678,0.9449]]},{"date":"201712210800","rgb":[[0.67794,0.97467,0.99363],[0.67001,0.98527,0.99556],[0.64788,0.98499,0.99474],[0.65911,0.98824,0.9945],[0.98431,0.9841,0.98534],[0.98431,0.98351,0.98777],[0.98431,0.98423,0.98484],[0.98433,0.9842,0.98482],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92058,0.91053,0.93112]]},{"date":"201712210810","rgb":[[0.88311,0.99188,0.99148],[0.90248,0.9916,0.99186],[0.89797,0.99243,0.99261],[0.91597,0.99239,0.99226],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.9206,0.91053,0.93114]]},{"date":"201712210820","rgb":[[0.92345,0.99074,0.99115],[0.93912,0.98995,0.99112],[0.94259,0.99031,0.98979],[0.95905,0.98888,0.992],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92059,0.91052,0.93117]]},{"date":"201712210830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90334,0.94502]]},{"date":"201712210840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90336,0.94495]]},{"date":"201712210850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90331,0.94488]]},{"date":"201712210900","rgb":[[0.97614,0.98632,0.987],[0.98033,0.98536,0.98704],[0.98066,0.98541,0.98657],[0.98418,0.98314,0.99004],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92056,0.9105,0.93117]]},{"date":"201712210910","rgb":[[0.97914,0.98548,0.98765],[0.98267,0.98429,0.98822],[0.98351,0.98198,0.99599],[0.98523,0.98019,1],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.9843,0.98441],[0.98431,0.98274,0.99095],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92057,0.91049,0.93111]]},{"date":"201712210920","rgb":[[0.96025,0.9884,0.98903],[0.96762,0.98767,0.98888],[0.96956,0.98782,0.98816],[0.9794,0.98528,0.98818],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92057,0.9105,0.93114]]},{"date":"201712210930","rgb":[[0.98717,0.97947,1],[0.98922,0.97877,1],[0.99553,0.97665,1],[0.99608,0.97647,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98589,0.97988,1],[0.9931,0.97747,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.9844,0.98037,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92111,0.90683,0.94497]]},{"date":"201712210940","rgb":[[0.98536,0.98007,1],[0.98856,0.979,1],[0.99524,0.97676,1],[0.99608,0.97647,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98551,0.98001,1],[0.9925,0.97769,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98432,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92111,0.90681,0.94495]]},{"date":"201712210950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93056,0.9033,0.94487]]},{"date":"201712211000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90328,0.94494]]},{"date":"201712211010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90327,0.94499]]},{"date":"201712211020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90329,0.94493]]},{"date":"201712211030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99544,0.9767,1],[0.99598,0.97651,1],[0.99608,0.97647,1],[0.99252,0.97769,1],[0.98553,0.98001,1],[0.98715,0.97947,1],[0.99438,0.97705,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92161,0.90665,0.94499]]},{"date":"201712211040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90331,0.94494]]},{"date":"201712211050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93054,0.90326,0.94488]]},{"date":"201712211100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90327,0.94499]]},{"date":"201712211110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90327,0.94494]]},{"date":"201712211120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93056,0.90328,0.94497]]},{"date":"201712211130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90329,0.94498]]},{"date":"201712211140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90329,0.94497]]},{"date":"201712211150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93056,0.90325,0.94493]]},{"date":"201712211200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90329,0.94492]]},{"date":"201712211210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90327,0.94496]]},{"date":"201712211220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90329,0.945]]},{"date":"201712211230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.9033,0.94501]]},{"date":"201712211240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.9033,0.94499]]},{"date":"201712211250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93056,0.90327,0.94488]]},{"date":"201712211300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.9033,0.94495]]},{"date":"201712211310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90329,0.94502]]},{"date":"201712211320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90328,0.94502]]},{"date":"201712211330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.9033,0.94503]]},{"date":"201712211340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94503]]},{"date":"201712211350","rgb":[[0.98551,0.98002,1],[0.98856,0.979,1],[0.99524,0.97676,1],[0.99608,0.97647,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98551,0.98001,1],[0.99251,0.97769,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98432,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.9211,0.90679,0.94488]]},{"date":"201712211400","rgb":[[0.9817,0.98364,0.99235],[0.98412,0.98069,0.99966],[0.9846,0.98035,1],[0.98567,0.97997,1],[0.98431,0.98431,0.98431],[0.98431,0.9836,0.98731],[0.98431,0.98116,0.99706],[0.98431,0.98039,1],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98424,0.98466],[0.98431,0.98239,0.99219],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.9206,0.91049,0.93121]]},{"date":"201712211410","rgb":[[0.91194,0.99088,0.99214],[0.92195,0.99079,0.99108],[0.92028,0.99143,0.99095],[0.94371,0.9902,0.99231],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92061,0.9105,0.93116]]},{"date":"201712211420","rgb":[[0.90941,0.99119,0.99109],[0.93967,0.98989,0.99051],[0.94656,0.98953,0.99142],[0.95896,0.98942,0.99016],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92059,0.9105,0.93118]]},{"date":"201712211430","rgb":[[0.79915,0.99282,0.99232],[0.80448,0.99261,0.99663],[0.78865,0.99392,0.9968],[0.81046,0.9944,0.9954],[0.98431,0.98431,0.98431],[0.98431,0.98378,0.98658],[0.98431,0.98244,0.992],[0.98431,0.98416,0.98502],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92062,0.91051,0.93121]]},{"date":"201712211440","rgb":[[0.74407,0.98657,0.99356],[0.74593,0.992,0.99492],[0.73329,0.99274,0.99649],[0.75311,0.99405,0.99615],[0.98431,0.98431,0.98433],[0.98431,0.98429,0.98445],[0.98431,0.9829,0.99018],[0.98431,0.98398,0.98589],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.9206,0.91051,0.9312]]},{"date":"201712211450","rgb":[[0.67911,0.96759,0.99272],[0.67727,0.98371,0.99564],[0.65524,0.98427,0.99457],[0.66606,0.98775,0.99479],[0.98431,0.98409,0.98534],[0.98431,0.98235,0.99246],[0.9843,0.9838,0.98658],[0.98428,0.9842,0.98524],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92058,0.91048,0.93107]]},{"date":"201712211500","rgb":[[0.54909,0.7962,0.98859],[0.5298,0.81615,0.98842],[0.49344,0.78463,0.98724],[0.49168,0.78322,0.98628],[0.98431,0.98099,0.99778],[0.98431,0.98344,0.98809],[0.98437,0.98348,0.98799],[0.98391,0.98123,0.99745],[0.98431,0.98416,0.98499],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98416,0.98498],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92055,0.91046,0.93107]]},{"date":"201712211510","rgb":[[0.41037,0.52585,0.96232],[0.37146,0.52115,0.96675],[0.32788,0.46196,0.96201],[0.31064,0.42322,0.96792],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98433,0.98044,0.99988],[0.98347,0.98048,0.9993],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.9211,0.90676,0.94491]]},{"date":"201712211520","rgb":[[0.34693,0.43582,0.88703],[0.30575,0.42499,0.89377],[0.26135,0.37094,0.89083],[0.23638,0.32889,0.89966],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98429,0.98046,0.9998],[0.98311,0.98024,0.9993],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92109,0.90677,0.94494]]},{"date":"201712211530","rgb":[[0.29309,0.32381,0.74527],[0.24815,0.30395,0.73492],[0.19835,0.24315,0.70888],[0.16898,0.18046,0.71745],[0.9843,0.98406,0.98544],[0.98431,0.98187,0.99426],[0.98433,0.98046,0.99976],[0.98233,0.97954,0.99904],[0.98431,0.98431,0.98431],[0.98431,0.98431,0.98431],[0.98431,0.98316,0.98908],[0.98431,0.98081,0.9984],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92087,0.91204,0.93795],[0.92056,0.9102,0.93224]]},{"date":"201712211540","rgb":[[0.16595,0.23718,0.57624],[0.15273,0.1879,0.54716],[0.11991,0.12519,0.50432],[0.10022,0.072803,0.49729],[0.62835,0.99928,0.9987],[0.72012,0.99917,0.99793],[0.73358,0.9989,0.99782],[0.66542,0.99681,0.9968],[0.69802,0.99944,0.99713],[0.74723,0.99891,0.99865],[0.7471,0.99894,0.99847],[0.70217,0.99943,0.99739],[0.6707,0.92587,0.94979],[0.67712,0.92569,0.94926],[0.64955,0.92565,0.95034],[0.60579,0.92369,0.94377]]},{"date":"201712211550","rgb":[[0.085492,0.15778,0.37642],[0.073854,0.13123,0.32912],[0.059975,0.088409,0.27721],[0.048653,0.047589,0.25312],[0.28296,0.827,0.99564],[0.29527,0.8413,0.99727],[0.31009,0.85207,0.99612],[0.31069,0.77072,0.99378],[0.2931,0.85561,0.99631],[0.30553,0.84093,0.99751],[0.31627,0.82125,0.99769],[0.32465,0.82518,0.99606],[0.30095,0.74417,0.94868],[0.31326,0.76151,0.94902],[0.31924,0.69609,0.94836],[0.32963,0.67566,0.93971]]},{"date":"201712211600","rgb":[[0.043567,0.058421,0.2143],[0.037098,0.052407,0.16822],[0.029909,0.041411,0.12451],[0.02581,0.032695,0.10204],[0.1682,0.23539,0.90676],[0.17701,0.26228,0.91232],[0.18847,0.27706,0.9448],[0.20363,0.27581,0.97514],[0.18458,0.26118,0.96596],[0.19286,0.29706,0.9734],[0.20716,0.3163,0.99339],[0.20666,0.27277,0.97583],[0.19594,0.22914,0.90656],[0.20902,0.2745,0.93347],[0.21645,0.27857,0.93191],[0.20957,0.20746,0.86051]]},{"date":"201712211610","rgb":[[0.018655,0.028098,0.07329],[0.017057,0.026739,0.05717],[0.014882,0.026743,0.040261],[0.014516,0.027039,0.034751],[0.045368,0.036277,0.31097],[0.04644,0.038186,0.32723],[0.047829,0.037886,0.33488],[0.052594,0.037941,0.35785],[0.046802,0.037735,0.33129],[0.04834,0.037926,0.33931],[0.049843,0.038186,0.34673],[0.057084,0.038512,0.39008],[0.071288,0.050372,0.348],[0.073171,0.051239,0.36382],[0.073621,0.050991,0.36164],[0.092068,0.061576,0.39144]]},{"date":"201712211620","rgb":[[0.013527,0.027159,0.026076],[0.014123,0.025366,0.024724],[0.012822,0.025673,0.024859],[0.014112,0.026802,0.02792],[0.019345,0.028764,0.060064],[0.019852,0.028892,0.065831],[0.022288,0.028696,0.081591],[0.02574,0.029636,0.09913],[0.022086,0.029322,0.071546],[0.02238,0.029049,0.07974],[0.024151,0.028482,0.097663],[0.029043,0.031009,0.11697],[0.048632,0.04382,0.11399],[0.048466,0.043501,0.12143],[0.051056,0.044012,0.13784],[0.068808,0.055725,0.16002]]},{"date":"201712211630","rgb":[[0.013271,0.026901,0.021078],[0.014424,0.02578,0.016998],[0.013495,0.026357,0.018125],[0.014816,0.026637,0.025317],[0.012804,0.027115,0.029062],[0.012196,0.027064,0.026393],[0.013057,0.027009,0.029519],[0.017738,0.026791,0.036977],[0.014744,0.026766,0.031584],[0.012611,0.027194,0.028868],[0.0133,0.027044,0.030795],[0.020195,0.026855,0.039323],[0.043191,0.04115,0.074436],[0.039577,0.041769,0.071769],[0.04273,0.040977,0.073551],[0.059725,0.052246,0.087811]]},{"date":"201712211640","rgb":[[0.013246,0.027209,0.016474],[0.012888,0.027103,0.013516],[0.014563,0.026285,0.014146],[0.013328,0.027042,0.021276],[0.011178,0.028637,0.016174],[0.010609,0.028561,0.014064],[0.011537,0.028613,0.017458],[0.013689,0.027313,0.025756],[0.011666,0.02712,0.020923],[0.010781,0.027714,0.016882],[0.011937,0.028527,0.018093],[0.015331,0.02675,0.026704],[0.040117,0.041994,0.065152],[0.038522,0.04227,0.061691],[0.038921,0.042389,0.062735],[0.054622,0.051589,0.074879]]},{"date":"201712211650","rgb":[[0.01168,0.027857,0.01734],[0.013705,0.026372,0.01623],[0.014209,0.026058,0.015817],[0.014719,0.026933,0.023324],[0.011033,0.028471,0.015888],[0.010525,0.0288,0.012288],[0.010589,0.028137,0.014546],[0.01398,0.027407,0.023807],[0.01164,0.027723,0.01916],[0.01071,0.028867,0.013467],[0.01085,0.028296,0.015604],[0.014396,0.026743,0.026951],[0.038896,0.041931,0.065684],[0.037589,0.042455,0.059761],[0.038388,0.041865,0.063262],[0.054537,0.051414,0.076091]]},{"date":"201712211700","rgb":[[0.012165,0.028203,0.015229],[0.013799,0.026498,0.013987],[0.015329,0.025186,0.0176],[0.013436,0.027381,0.020664],[0.010948,0.028927,0.013347],[0.010406,0.028905,0.010457],[0.010394,0.028714,0.011669],[0.012378,0.02782,0.018949],[0.011005,0.028905,0.014561],[0.010388,0.028767,0.011306],[0.010385,0.02866,0.012149],[0.01208,0.027745,0.021684],[0.038574,0.043043,0.058786],[0.037176,0.043349,0.054695],[0.037728,0.042799,0.056907],[0.052067,0.052006,0.069925]]},{"date":"201712211710","rgb":[[0.012134,0.027861,0.017489],[0.016303,0.024073,0.019751],[0.015155,0.02419,0.021553],[0.013034,0.026753,0.023563],[0.011018,0.028076,0.016786],[0.010419,0.02801,0.01405],[0.0108,0.026599,0.019275],[0.014033,0.027025,0.025442],[0.011171,0.028689,0.015794],[0.010501,0.028832,0.012305],[0.010681,0.028476,0.014438],[0.014545,0.026595,0.026546],[0.038427,0.042216,0.062067],[0.037032,0.042856,0.05641],[0.037942,0.04272,0.058434],[0.053386,0.051183,0.074048]]},{"date":"201712211720","rgb":[[0.012647,0.028411,0.015647],[0.014531,0.026078,0.015901],[0.012243,0.027211,0.015443],[0.014146,0.026724,0.02459],[0.012618,0.029195,0.016364],[0.010601,0.028855,0.013092],[0.010966,0.028833,0.013268],[0.01425,0.027369,0.023627],[0.012866,0.029078,0.016544],[0.010718,0.028891,0.012997],[0.010817,0.028645,0.013502],[0.014393,0.027425,0.024331],[0.04027,0.042743,0.059975],[0.038015,0.043323,0.056718],[0.038912,0.043125,0.060003],[0.054764,0.051367,0.072511]]},{"date":"201712211730","rgb":[[0.01372,0.027211,0.016229],[0.019113,0.023331,0.016148],[0.015053,0.025844,0.014762],[0.013886,0.026654,0.02425],[0.011596,0.028494,0.017185],[0.010518,0.028714,0.012657],[0.010826,0.028596,0.014514],[0.014071,0.027296,0.023967],[0.012077,0.028619,0.017016],[0.010581,0.028876,0.013004],[0.011151,0.02849,0.016048],[0.015366,0.026696,0.02598],[0.038704,0.042532,0.061171],[0.037132,0.043209,0.056428],[0.039074,0.042921,0.060061],[0.055992,0.051144,0.07467]]},{"date":"201712211740","rgb":[[0.012673,0.027598,0.019141],[0.01326,0.026708,0.01629],[0.012447,0.02626,0.018204],[0.013935,0.026869,0.024758],[0.014299,0.027274,0.02424],[0.01211,0.027925,0.019882],[0.011204,0.027717,0.018576],[0.014154,0.027148,0.025231],[0.015843,0.027701,0.022328],[0.01294,0.02811,0.021057],[0.011466,0.028565,0.017345],[0.01549,0.02685,0.026098],[0.041264,0.041809,0.065321],[0.040446,0.042409,0.062806],[0.041312,0.041864,0.064691],[0.055459,0.050771,0.076705]]},{"date":"201712211750","rgb":[[0.012057,0.02787,0.017308],[0.012762,0.026116,0.018812],[0.012763,0.025959,0.019212],[0.01286,0.027222,0.023468],[0.012997,0.02783,0.021901],[0.011875,0.02833,0.017684],[0.011651,0.026962,0.021413],[0.015616,0.026903,0.027219],[0.01304,0.027718,0.022854],[0.011565,0.027976,0.018294],[0.012367,0.027529,0.022338],[0.017219,0.026414,0.028601],[0.040476,0.041836,0.066386],[0.040478,0.042218,0.063961],[0.042066,0.041594,0.066726],[0.057668,0.05116,0.080029]]},{"date":"201712211800","rgb":[[0.012361,0.028144,0.016743],[0.015654,0.02572,0.014483],[0.014144,0.025257,0.018594],[0.013257,0.026691,0.024713],[0.015141,0.028273,0.020074],[0.012074,0.029214,0.015326],[0.012101,0.028474,0.01786],[0.019371,0.02626,0.029424],[0.016595,0.027751,0.022418],[0.013026,0.028922,0.017855],[0.014884,0.027458,0.022635],[0.021907,0.026122,0.032194],[0.042723,0.042068,0.065073],[0.040715,0.042788,0.061626],[0.043847,0.041571,0.065209],[0.061212,0.051511,0.07978]]},{"date":"201712211810","rgb":[[0.012944,0.027536,0.017294],[0.012796,0.027441,0.013227],[0.012389,0.026392,0.017959],[0.013434,0.026802,0.025533],[0.012503,0.028585,0.018775],[0.011009,0.029083,0.013696],[0.011938,0.028103,0.01869],[0.018006,0.026232,0.027982],[0.013604,0.027834,0.02278],[0.011831,0.028366,0.018121],[0.01403,0.027579,0.023314],[0.020397,0.026245,0.032916],[0.04226,0.041865,0.064698],[0.04117,0.042274,0.064041],[0.043255,0.041268,0.067213],[0.059758,0.051496,0.081841]]},{"date":"201712211820","rgb":[[0.01234,0.027296,0.018883],[0.01301,0.025938,0.018804],[0.01308,0.026289,0.017919],[0.014344,0.026633,0.023819],[0.013081,0.027876,0.022841],[0.012823,0.028053,0.020514],[0.015283,0.027528,0.023195],[0.019914,0.026109,0.031278],[0.013427,0.027761,0.021054],[0.013798,0.027748,0.021742],[0.017309,0.027073,0.024071],[0.022259,0.026342,0.032843],[0.040579,0.04223,0.06461],[0.040497,0.042292,0.063753],[0.04493,0.041066,0.068361],[0.061119,0.051437,0.081912]]},{"date":"201712211830","rgb":[[0.012605,0.027607,0.019166],[0.015121,0.025135,0.01778],[0.011699,0.025908,0.020003],[0.013686,0.027202,0.024025],[0.013983,0.028168,0.020707],[0.011053,0.028665,0.014677],[0.011461,0.02724,0.019685],[0.014242,0.027183,0.025884],[0.014461,0.02766,0.023439],[0.012394,0.027923,0.020442],[0.013907,0.027456,0.023134],[0.016964,0.02637,0.029325],[0.041324,0.041652,0.065771],[0.040822,0.042244,0.064462],[0.043776,0.041423,0.066642],[0.059706,0.051602,0.079899]]},{"date":"201712211840","rgb":[[0.012601,0.027943,0.016198],[0.014366,0.026754,0.013599],[0.013658,0.026262,0.016709],[0.013352,0.027023,0.02124],[0.013064,0.028263,0.019436],[0.012654,0.028077,0.020565],[0.01508,0.027964,0.021125],[0.018675,0.026673,0.027682],[0.014972,0.02807,0.02111],[0.015729,0.027991,0.0221],[0.018046,0.027331,0.023901],[0.020958,0.026328,0.03044],[0.043482,0.0415,0.065728],[0.043345,0.041668,0.065101],[0.044728,0.040956,0.066549],[0.059098,0.051431,0.079637]]},{"date":"201712211850","rgb":[[0.01243,0.02819,0.014947],[0.015505,0.02567,0.015234],[0.016336,0.025362,0.013457],[0.01474,0.026535,0.021857],[0.015703,0.02811,0.020394],[0.012609,0.029116,0.016999],[0.015473,0.02808,0.021951],[0.020255,0.026292,0.028926],[0.015661,0.028265,0.019327],[0.012804,0.028892,0.017213],[0.017061,0.027256,0.023429],[0.023776,0.025927,0.031855],[0.043558,0.041802,0.064174],[0.042266,0.042162,0.062728],[0.045472,0.040708,0.066439],[0.062433,0.05108,0.079956]]},{"date":"201712211900","rgb":[[0.013095,0.027767,0.01849],[0.015234,0.025679,0.017402],[0.013485,0.026284,0.017253],[0.01325,0.027047,0.022852],[0.019621,0.02664,0.024867],[0.018714,0.02704,0.023435],[0.019763,0.026002,0.025665],[0.022598,0.026366,0.033183],[0.020038,0.026022,0.026621],[0.02,0.026203,0.024069],[0.023013,0.024508,0.026653],[0.024778,0.026008,0.034468],[0.046076,0.040761,0.069533],[0.046494,0.040238,0.066546],[0.048505,0.039538,0.069172],[0.061982,0.051137,0.081569]]},{"date":"201712211910","rgb":[[0.011854,0.02661,0.018925],[0.011958,0.026579,0.016516],[0.011438,0.027214,0.015669],[0.012308,0.026824,0.022243],[0.010795,0.028849,0.012836],[0.010398,0.028791,0.0094071],[0.0104,0.028678,0.010667],[0.012039,0.028196,0.017268],[0.010802,0.028902,0.012754],[0.010365,0.028843,0.01005],[0.010393,0.028734,0.011603],[0.011619,0.027602,0.020549],[0.037851,0.043215,0.057087],[0.037119,0.043358,0.055017],[0.037488,0.043039,0.056602],[0.052313,0.051721,0.071395]]},{"date":"201712211920","rgb":[[0.012706,0.027544,0.018487],[0.015775,0.025806,0.015171],[0.01312,0.026167,0.018095],[0.014254,0.026864,0.025358],[0.014887,0.027854,0.022386],[0.012619,0.028328,0.020016],[0.012766,0.02791,0.021038],[0.017008,0.02679,0.026828],[0.015246,0.027726,0.022806],[0.012701,0.027739,0.022185],[0.013107,0.027654,0.023157],[0.01863,0.026138,0.029668],[0.042458,0.042128,0.063301],[0.040352,0.042333,0.062229],[0.041421,0.042064,0.064224],[0.056771,0.051173,0.075624]]},{"date":"201712211930","rgb":[[0.012571,0.027669,0.016384],[0.012739,0.026854,0.015372],[0.0141,0.025483,0.018672],[0.013073,0.027205,0.022693],[0.012107,0.028285,0.019434],[0.011714,0.028818,0.016686],[0.01359,0.028214,0.021101],[0.019296,0.026168,0.029353],[0.013098,0.028403,0.01976],[0.011932,0.028294,0.018686],[0.01521,0.028034,0.021301],[0.020542,0.026054,0.031139],[0.042193,0.041827,0.065841],[0.040516,0.042892,0.062317],[0.043034,0.041898,0.06424],[0.058093,0.051397,0.078065]]},{"date":"201712211940","rgb":[[0.012213,0.027909,0.016518],[0.012797,0.0272,0.013078],[0.015035,0.025997,0.013954],[0.013551,0.027382,0.021054],[0.011481,0.028012,0.017279],[0.010606,0.028933,0.01223],[0.010815,0.028798,0.013613],[0.013599,0.027369,0.024279],[0.012771,0.028459,0.01916],[0.011044,0.029134,0.013689],[0.011793,0.028538,0.017343],[0.016455,0.02694,0.026026],[0.041266,0.04219,0.064858],[0.038573,0.043387,0.058405],[0.040279,0.042867,0.061625],[0.057021,0.051169,0.075771]]},{"date":"201712211950","rgb":[[0.013003,0.028162,0.017089],[0.013239,0.02712,0.014448],[0.012309,0.026814,0.017225],[0.014011,0.026834,0.024786],[0.018005,0.027319,0.021459],[0.015996,0.028531,0.018261],[0.016343,0.028082,0.021051],[0.02075,0.026378,0.02912],[0.019563,0.02686,0.024089],[0.018528,0.027331,0.02341],[0.020434,0.026043,0.025537],[0.02477,0.026044,0.035074],[0.044963,0.040955,0.067534],[0.044643,0.040888,0.066196],[0.048002,0.039857,0.069549],[0.063146,0.051508,0.083651]]},{"date":"201712212000","rgb":[[0.012535,0.027844,0.016286],[0.012051,0.026278,0.018752],[0.013468,0.025292,0.020817],[0.012979,0.026758,0.024212],[0.014027,0.028427,0.02023],[0.012916,0.028235,0.019638],[0.014268,0.028067,0.021695],[0.019009,0.02618,0.029217],[0.014508,0.028314,0.020791],[0.016228,0.028315,0.019757],[0.018486,0.02713,0.024332],[0.021253,0.026487,0.032053],[0.042795,0.04159,0.065667],[0.043924,0.041515,0.064758],[0.045948,0.040271,0.068509],[0.062182,0.051392,0.082573]]},{"date":"201712212010","rgb":[[0.012098,0.027885,0.01567],[0.012032,0.026525,0.01694],[0.014916,0.026075,0.01435],[0.014151,0.027015,0.022187],[0.011448,0.029004,0.015237],[0.010693,0.028969,0.011839],[0.010919,0.028664,0.013909],[0.016283,0.027128,0.023869],[0.012598,0.028049,0.019662],[0.01084,0.028985,0.012398],[0.01128,0.028417,0.015572],[0.017375,0.026612,0.027569],[0.040737,0.042716,0.062214],[0.038632,0.043232,0.056785],[0.040886,0.042602,0.06128],[0.05701,0.0511,0.075748]]},{"date":"201712212020","rgb":[[0.012137,0.027393,0.018195],[0.015162,0.026003,0.0134],[0.01298,0.026414,0.017114],[0.012957,0.026899,0.023645],[0.011261,0.028038,0.017515],[0.01065,0.028906,0.013024],[0.01101,0.028278,0.015651],[0.015058,0.026871,0.026538],[0.011897,0.028456,0.018888],[0.011259,0.028587,0.015836],[0.012588,0.027966,0.021074],[0.017783,0.026174,0.02827],[0.039843,0.042201,0.064274],[0.039836,0.042587,0.062447],[0.04196,0.041537,0.066055],[0.056363,0.051459,0.076957]]},{"date":"201712212040","rgb":[[0.012801,0.027369,0.018487],[0.015856,0.02556,0.014944],[0.012843,0.026237,0.017915],[0.013697,0.027358,0.022305],[0.016269,0.027928,0.020579],[0.013211,0.029167,0.016166],[0.012872,0.028622,0.017576],[0.016172,0.027172,0.024524],[0.015733,0.028068,0.022115],[0.012678,0.029184,0.017348],[0.012664,0.028726,0.018583],[0.015882,0.027227,0.025397],[0.04286,0.041771,0.065085],[0.040163,0.042595,0.061819],[0.039466,0.043125,0.058658],[0.054796,0.051475,0.073463]]},{"date":"201801092040","rgb":[[0.021351,0.021351,0.021351],[0.02129,0.021355,0.021323],[0.019771,0.023786,0.022403],[0.021501,0.024655,0.023398],[0.0199,0.021978,0.02135],[0.013263,0.024534,0.021313],[0.010684,0.02577,0.021551],[0.01607,0.026473,0.023216],[0.010873,0.025393,0.021348],[0.010298,0.025531,0.021318],[0.010645,0.025799,0.02155],[0.019834,0.025746,0.025882],[0.036312,0.040358,0.062321],[0.036288,0.040335,0.062296],[0.036647,0.040407,0.062518],[0.061121,0.053324,0.079163]]},{"date":"201801092050","rgb":[[0.021353,0.021353,0.021353],[0.018977,0.022393,0.021331],[0.016366,0.025683,0.022601],[0.019304,0.025801,0.023493],[0.015539,0.023809,0.02135],[0.010476,0.025488,0.021313],[0.011322,0.026037,0.021799],[0.017898,0.026615,0.023581],[0.010329,0.025561,0.021348],[0.0103,0.025533,0.021319],[0.011252,0.02589,0.021694],[0.020176,0.025893,0.027243],[0.036322,0.040368,0.062331],[0.036279,0.040326,0.062287],[0.03675,0.040531,0.062525],[0.062079,0.052862,0.080971]]},{"date":"201801092100","rgb":[[0.012445,0.027497,0.010738],[0.017257,0.024496,0.014147],[0.013303,0.024852,0.02019],[0.01188,0.027298,0.013567],[0.010373,0.028919,0.006758],[0.010326,0.028897,0.0064221],[0.010347,0.028831,0.0069896],[0.010372,0.028842,0.0085964],[0.010326,0.028949,0.0066318],[0.010294,0.028929,0.0064099],[0.010331,0.028966,0.0065315],[0.010398,0.028929,0.0089344],[0.036347,0.043252,0.050464],[0.036225,0.04329,0.048999],[0.036257,0.043243,0.049926],[0.049337,0.054063,0.059308]]},{"date":"201801092110","rgb":[[0.012944,0.027132,0.011443],[0.017672,0.024231,0.014647],[0.020394,0.023752,0.011198],[0.014377,0.025892,0.016192],[0.010364,0.028897,0.0070775],[0.01032,0.028906,0.0064173],[0.010809,0.028746,0.0065105],[0.010414,0.028761,0.0099184],[0.010327,0.028893,0.007324],[0.010294,0.028929,0.0063919],[0.010331,0.028963,0.006552],[0.010369,0.028736,0.01058],[0.036327,0.043301,0.050687],[0.036281,0.043279,0.049001],[0.036307,0.043255,0.050116],[0.049571,0.054011,0.060866]]},{"date":"201801092120","rgb":[[0.011908,0.027499,0.011987],[0.013768,0.025964,0.014172],[0.017133,0.023295,0.021248],[0.013444,0.025946,0.017834],[0.010374,0.028908,0.0069349],[0.010328,0.028886,0.006487],[0.010352,0.028456,0.0086246],[0.010362,0.028478,0.010828],[0.010351,0.028935,0.007135],[0.010294,0.028926,0.0064405],[0.010328,0.028948,0.0068861],[0.010455,0.0287,0.011748],[0.03639,0.043237,0.050963],[0.036282,0.043265,0.049257],[0.036263,0.043276,0.050225],[0.04967,0.053695,0.061792]]},{"date":"201801092140","rgb":[[0.014141,0.026359,0.011916],[0.019434,0.023425,0.015034],[0.013994,0.024423,0.021264],[0.012265,0.025494,0.020585],[0.010373,0.028896,0.0073282],[0.010316,0.028879,0.0066484],[0.01035,0.027931,0.011016],[0.010386,0.027955,0.013655],[0.010343,0.028911,0.0073937],[0.010294,0.028926,0.0064006],[0.010316,0.028929,0.0068719],[0.010359,0.028638,0.011129],[0.036343,0.043234,0.051225],[0.036282,0.043274,0.049198],[0.036297,0.043238,0.049929],[0.049185,0.053184,0.061522]]},{"date":"201801092150","rgb":[[0.013522,0.026788,0.012055],[0.015758,0.024793,0.015633],[0.013563,0.024459,0.021314],[0.015089,0.024127,0.021442],[0.010367,0.0289,0.0071435],[0.010326,0.028897,0.006456],[0.010348,0.027702,0.011909],[0.010375,0.025661,0.020754],[0.010329,0.028941,0.0071058],[0.010294,0.028929,0.0064338],[0.01032,0.028955,0.0065325],[0.010368,0.028008,0.012522],[0.036378,0.043296,0.050171],[0.03629,0.043245,0.049165],[0.036309,0.043201,0.049681],[0.049193,0.0538,0.059554]]},{"date":"201801092200","rgb":[[0.014547,0.026255,0.012018],[0.011822,0.026736,0.014414],[0.013009,0.024754,0.021269],[0.011489,0.026001,0.019518],[0.010369,0.028905,0.007218],[0.010328,0.028898,0.0065236],[0.010347,0.028021,0.010304],[0.010383,0.02855,0.011664],[0.010356,0.028949,0.0075091],[0.010294,0.028929,0.0064435],[0.010318,0.028939,0.0066784],[0.010362,0.028697,0.010881],[0.036452,0.043254,0.051483],[0.036292,0.043287,0.049216],[0.036306,0.043237,0.050216],[0.049182,0.05336,0.062051]]},{"date":"201801092210","rgb":[[0.012871,0.026972,0.012067],[0.012229,0.026391,0.015138],[0.012549,0.025053,0.021264],[0.011462,0.027,0.015612],[0.01041,0.02898,0.00688],[0.010326,0.028885,0.0065242],[0.010354,0.028436,0.0088746],[0.010353,0.028808,0.0091154],[0.010369,0.028957,0.0070892],[0.010294,0.028926,0.0064525],[0.01032,0.02892,0.0066466],[0.010339,0.028751,0.010377],[0.036392,0.043251,0.051639],[0.036279,0.043274,0.04899],[0.036234,0.043268,0.049281],[0.049026,0.053824,0.059495]]},{"date":"201801092220","rgb":[[0.013008,0.027008,0.011711],[0.018954,0.023733,0.01413],[0.017762,0.023268,0.020311],[0.012153,0.02722,0.01422],[0.010376,0.028924,0.0069324],[0.010434,0.028849,0.0064242],[0.010344,0.028816,0.0071716],[0.010395,0.028822,0.0090065],[0.010353,0.028951,0.0070297],[0.010297,0.028932,0.0064346],[0.01032,0.028939,0.0066784],[0.010337,0.028729,0.010274],[0.03633,0.04323,0.051025],[0.036292,0.043272,0.049149],[0.036305,0.043243,0.049686],[0.049063,0.053898,0.059582]]},{"date":"201801092230","rgb":[[0.01267,0.027374,0.011425],[0.015274,0.025344,0.014725],[0.015458,0.023858,0.021246],[0.012379,0.025098,0.021465],[0.010377,0.028923,0.0073317],[0.010326,0.028897,0.0064221],[0.01035,0.02793,0.011123],[0.010365,0.025704,0.020514],[0.010358,0.02893,0.0080009],[0.010294,0.028929,0.0064223],[0.010318,0.028929,0.0067358],[0.010366,0.027883,0.013112],[0.036509,0.043276,0.051791],[0.036298,0.043254,0.049481],[0.03624,0.043227,0.050311],[0.04935,0.053842,0.061301]]},{"date":"201801092240","rgb":[[0.01233,0.027862,0.0088327],[0.016859,0.024639,0.014252],[0.015712,0.023735,0.0212],[0.011426,0.025354,0.021381],[0.010366,0.028901,0.0073365],[0.010326,0.028897,0.0064608],[0.01035,0.02801,0.010548],[0.010349,0.025813,0.019935],[0.010335,0.028952,0.0072699],[0.010294,0.028929,0.0064181],[0.010313,0.028946,0.0064608],[0.010335,0.028508,0.010587],[0.036278,0.043226,0.050103],[0.03628,0.043285,0.048978],[0.036307,0.043248,0.04949],[0.049064,0.0538,0.059087]]},{"date":"201801092250","rgb":[[0.011897,0.027483,0.011015],[0.015059,0.025396,0.014397],[0.016411,0.023556,0.02121],[0.011877,0.025483,0.020407],[0.010368,0.028914,0.0072241],[0.010326,0.028897,0.0064624],[0.01035,0.028034,0.010344],[0.010347,0.028254,0.011761],[0.01035,0.028969,0.0069843],[0.010294,0.028929,0.0063913],[0.010318,0.028954,0.0063998],[0.010342,0.028797,0.009433],[0.036448,0.043232,0.050756],[0.036287,0.043298,0.04885],[0.036253,0.04327,0.049516],[0.049069,0.053705,0.060161]]},{"date":"201801092300","rgb":[[0.014701,0.026439,0.010626],[0.020502,0.023043,0.014171],[0.016367,0.023533,0.021005],[0.012858,0.025915,0.017843],[0.010368,0.028926,0.0068743],[0.010536,0.028825,0.0064608],[0.01035,0.028544,0.0081085],[0.010374,0.02878,0.009366],[0.010332,0.028933,0.0072318],[0.010303,0.028927,0.0064648],[0.010318,0.028953,0.0065472],[0.010329,0.028785,0.0099614],[0.036398,0.043248,0.05],[0.036282,0.043303,0.048706],[0.0363,0.043297,0.048928],[0.0491,0.053968,0.058002]]},{"date":"201801092310","rgb":[[0.012109,0.027443,0.011193],[0.013469,0.025923,0.01471],[0.013157,0.024658,0.021215],[0.011503,0.025341,0.021404],[0.010374,0.02892,0.0070203],[0.010326,0.028897,0.0064221],[0.01035,0.028033,0.010481],[0.010376,0.025901,0.019725],[0.010361,0.02894,0.006886],[0.010294,0.028929,0.0063952],[0.010321,0.028952,0.0066704],[0.010333,0.028223,0.011333],[0.03633,0.043181,0.051198],[0.036289,0.043208,0.049375],[0.036253,0.043203,0.049772],[0.049017,0.053498,0.06047]]},{"date":"201801092320","rgb":[[0.012859,0.02715,0.011156],[0.011788,0.026765,0.014148],[0.012965,0.024763,0.021045],[0.011382,0.025944,0.01964],[0.010366,0.028925,0.006832],[0.010326,0.028897,0.0064628],[0.01035,0.028147,0.0098328],[0.010358,0.028513,0.010623],[0.010343,0.02893,0.0071234],[0.010294,0.028929,0.006468],[0.010321,0.028957,0.0064968],[0.010333,0.028847,0.0096553],[0.036362,0.043198,0.050932],[0.036284,0.04325,0.049042],[0.036307,0.043252,0.049578],[0.049021,0.053826,0.059235]]},{"date":"201801092330","rgb":[[0.011883,0.027355,0.012138],[0.01444,0.025735,0.014328],[0.016605,0.023492,0.021047],[0.01174,0.025293,0.021364],[0.010366,0.028924,0.0070497],[0.010326,0.028897,0.0064221],[0.010349,0.028202,0.0097483],[0.01035,0.025943,0.019453],[0.010339,0.028959,0.0070365],[0.010294,0.028929,0.0064232],[0.010318,0.028941,0.0066061],[0.010318,0.028452,0.010809],[0.036407,0.043178,0.051612],[0.036281,0.04329,0.048949],[0.036305,0.043301,0.049087],[0.049044,0.053921,0.05897]]},{"date":"201801092340","rgb":[[0.011957,0.027405,0.011708],[0.012255,0.027634,0.0091534],[0.013748,0.025378,0.017008],[0.013458,0.025617,0.018011],[0.010361,0.028907,0.0068917],[0.010326,0.028897,0.0064737],[0.010352,0.028894,0.0066232],[0.010372,0.028816,0.009248],[0.010334,0.028954,0.006583],[0.010294,0.028929,0.0063919],[0.010318,0.028954,0.0064401],[0.010299,0.028741,0.0093696],[0.036374,0.043247,0.050031],[0.036305,0.043316,0.048862],[0.03625,0.043311,0.048934],[0.049021,0.053897,0.058544]]},{"date":"201801092350","rgb":[[0.012494,0.027224,0.011883],[0.017511,0.02422,0.014934],[0.016805,0.023231,0.02128],[0.012463,0.025763,0.018531],[0.010386,0.028881,0.0074735],[0.010326,0.028897,0.0064548],[0.010352,0.028089,0.010173],[0.010345,0.028631,0.01029],[0.010343,0.028926,0.0074016],[0.010294,0.028917,0.0064916],[0.010318,0.028923,0.0066812],[0.010353,0.028688,0.010904],[0.03635,0.043155,0.051136],[0.036292,0.043276,0.049135],[0.036302,0.043208,0.049841],[0.049128,0.053763,0.060076]]},{"date":"201801100000","rgb":[[0.011713,0.027546,0.011731],[0.011917,0.027787,0.0093541],[0.015144,0.025095,0.01577],[0.011624,0.026409,0.017732],[0.010358,0.028906,0.0070319],[0.010326,0.028897,0.0064246],[0.010352,0.028923,0.0066198],[0.010352,0.028418,0.010739],[0.010337,0.028908,0.0074648],[0.010294,0.028929,0.0063956],[0.01032,0.028943,0.0065659],[0.01033,0.028602,0.010569],[0.036327,0.043276,0.050342],[0.036284,0.043292,0.048859],[0.036295,0.043227,0.049846],[0.04913,0.053521,0.061109]]},{"date":"201801100010","rgb":[[0.012987,0.027039,0.012063],[0.014681,0.026623,0.0090704],[0.014689,0.025136,0.016389],[0.011885,0.025301,0.021418],[0.010372,0.028932,0.0071056],[0.010326,0.028897,0.0064221],[0.010347,0.028901,0.0065629],[0.010361,0.026839,0.01613],[0.010357,0.028966,0.0071249],[0.010294,0.028917,0.0064584],[0.010321,0.028942,0.0066069],[0.010351,0.028569,0.010718],[0.036284,0.043211,0.05104],[0.036281,0.04328,0.049029],[0.036305,0.043226,0.049701],[0.048922,0.053681,0.060178]]},{"date":"201801100020","rgb":[[0.013401,0.0268,0.012203],[0.017931,0.024218,0.01423],[0.015477,0.023871,0.0211],[0.011848,0.025515,0.020935],[0.010368,0.028914,0.0068591],[0.010326,0.028885,0.0064845],[0.01035,0.028055,0.010266],[0.010384,0.025841,0.020084],[0.010339,0.028959,0.0070564],[0.010294,0.028929,0.0064298],[0.010328,0.028963,0.0066343],[0.010344,0.028096,0.012539],[0.036379,0.043196,0.050847],[0.036282,0.043232,0.049422],[0.036248,0.043287,0.049902],[0.049097,0.053477,0.061015]]},{"date":"201801100030","rgb":[[0.013384,0.027017,0.01142],[0.013608,0.026074,0.014241],[0.013685,0.024483,0.021181],[0.013399,0.024663,0.021377],[0.010366,0.028873,0.0072831],[0.010326,0.028897,0.0064221],[0.01035,0.028078,0.010343],[0.010344,0.025907,0.01959],[0.010353,0.028951,0.0071577],[0.010294,0.028929,0.0064278],[0.010318,0.028916,0.0066967],[0.010351,0.028271,0.011268],[0.036405,0.043238,0.05078],[0.036281,0.043287,0.048965],[0.036301,0.043241,0.049631],[0.048989,0.053729,0.059548]]},{"date":"201801100040","rgb":[[0.011538,0.027644,0.011757],[0.013511,0.026099,0.014147],[0.012879,0.024919,0.021209],[0.012588,0.024991,0.021358],[0.010377,0.028948,0.0070135],[0.010336,0.028906,0.0064318],[0.01035,0.028079,0.010326],[0.010351,0.026327,0.018063],[0.010348,0.028984,0.0066539],[0.010294,0.028929,0.0063919],[0.010318,0.028954,0.0064527],[0.010326,0.028812,0.0084505],[0.036371,0.043219,0.050136],[0.036282,0.043303,0.048746],[0.036302,0.043215,0.04942],[0.048898,0.053743,0.058386]]},{"date":"201801100050","rgb":[[0.019261,0.02473,0.0090989],[0.020755,0.023115,0.014105],[0.014799,0.024217,0.021097],[0.011373,0.025791,0.020276],[0.010527,0.028842,0.0072488],[0.011451,0.028484,0.0064221],[0.010355,0.028085,0.01041],[0.010347,0.028022,0.012728],[0.010354,0.02897,0.0073756],[0.010294,0.028929,0.0063919],[0.010318,0.02895,0.006578],[0.010339,0.02871,0.010411],[0.036284,0.043251,0.049968],[0.036282,0.043238,0.049182],[0.036303,0.04326,0.049282],[0.049115,0.053898,0.059334]]},{"date":"201801100100","rgb":[[0.012408,0.027569,0.0097878],[0.013649,0.026022,0.014284],[0.013654,0.024735,0.020244],[0.012965,0.026787,0.014568],[0.010375,0.028909,0.0073623],[0.010326,0.028897,0.0064157],[0.01035,0.028815,0.007111],[0.010344,0.028767,0.0091838],[0.010346,0.028925,0.0072768],[0.010294,0.028929,0.0063944],[0.01032,0.028943,0.0067106],[0.010339,0.028748,0.010193],[0.036408,0.043212,0.05104],[0.036294,0.043291,0.049019],[0.036296,0.043269,0.049587],[0.048971,0.053677,0.059527]]},{"date":"201801100110","rgb":[[0.011189,0.027737,0.011727],[0.015271,0.025318,0.01491],[0.01283,0.024908,0.021261],[0.012839,0.024826,0.021353],[0.010361,0.028896,0.0070242],[0.010326,0.028897,0.0064157],[0.010344,0.027893,0.011081],[0.010392,0.025776,0.020354],[0.010346,0.028967,0.0071698],[0.010294,0.028929,0.0063805],[0.010318,0.028954,0.0064568],[0.010324,0.027937,0.012793],[0.036245,0.043199,0.050798],[0.036286,0.043266,0.04914],[0.036299,0.04324,0.049585],[0.048748,0.053455,0.058928]]},{"date":"201801100120","rgb":[[0.012206,0.027272,0.011748],[0.014443,0.025677,0.014205],[0.011618,0.025291,0.02122],[0.011149,0.025466,0.021361],[0.010363,0.028933,0.0070096],[0.010326,0.028897,0.0064246],[0.010352,0.02806,0.010343],[0.010344,0.025828,0.019965],[0.010342,0.028965,0.006772],[0.010294,0.028929,0.0063919],[0.010318,0.028954,0.0065908],[0.010347,0.028289,0.011575],[0.036302,0.043275,0.050704],[0.036288,0.043272,0.049147],[0.036301,0.043283,0.049373],[0.048829,0.053409,0.059774]]},{"date":"201801100130","rgb":[[0.011779,0.027769,0.010395],[0.016592,0.024703,0.014164],[0.018936,0.022491,0.021009],[0.012807,0.025113,0.020337],[0.010385,0.028934,0.0068445],[0.010326,0.028897,0.0064221],[0.010347,0.028226,0.0096293],[0.010393,0.02839,0.011178],[0.010334,0.028955,0.0069306],[0.010294,0.028929,0.0063919],[0.010318,0.028954,0.0064932],[0.010334,0.028836,0.0090169],[0.036329,0.04326,0.050276],[0.036229,0.04328,0.048856],[0.036303,0.043294,0.049411],[0.048959,0.053646,0.059152]]},{"date":"201801100140","rgb":[[0.011503,0.027615,0.011502],[0.014732,0.025684,0.014205],[0.015958,0.023603,0.021225],[0.011196,0.025425,0.021501],[0.010356,0.028891,0.0070218],[0.010326,0.028897,0.0064624],[0.010349,0.028052,0.010317],[0.010367,0.025901,0.019756],[0.010327,0.02892,0.007041],[0.010294,0.028917,0.0064928],[0.010318,0.028954,0.006555],[0.01033,0.028037,0.012418],[0.036367,0.043211,0.050827],[0.036229,0.04324,0.049231],[0.036304,0.043251,0.04968],[0.048971,0.053252,0.060611]]},{"date":"201801100150","rgb":[[0.01344,0.026936,0.011287],[0.013952,0.025898,0.014046],[0.011479,0.025463,0.020568],[0.012798,0.026767,0.014073],[0.010371,0.028917,0.0068609],[0.010326,0.028897,0.0064221],[0.01035,0.028797,0.0071068],[0.010354,0.028848,0.0083259],[0.010326,0.028936,0.0067098],[0.010294,0.028929,0.0063919],[0.010318,0.028954,0.0064163],[0.010332,0.028818,0.0083732],[0.036343,0.04327,0.050514],[0.036282,0.043289,0.048892],[0.036309,0.043293,0.049261],[0.048835,0.05375,0.058074]]},{"date":"201801100200","rgb":[[0.011837,0.02793,0.009538],[0.013025,0.02631,0.014292],[0.013169,0.024866,0.021224],[0.011355,0.025425,0.021363],[0.010364,0.028935,0.007124],[0.010326,0.028897,0.0064246],[0.01035,0.028042,0.010363],[0.010376,0.027176,0.01546],[0.010343,0.028954,0.0070501],[0.010294,0.028929,0.0063919],[0.010318,0.028951,0.0066836],[0.010328,0.028743,0.0098322],[0.036275,0.043199,0.050563],[0.036282,0.043275,0.048904],[0.036308,0.0433,0.049174],[0.049037,0.053801,0.058679]]},{"date":"201801100210","rgb":[[0.013339,0.02734,0.0094016],[0.017935,0.024132,0.014226],[0.015479,0.023899,0.02105],[0.012003,0.025221,0.021482],[0.010372,0.02893,0.0073663],[0.010326,0.028897,0.0064221],[0.01035,0.028089,0.010244],[0.010338,0.02581,0.019925],[0.010371,0.028978,0.0074579],[0.010294,0.028929,0.0063913],[0.010316,0.028939,0.0065266],[0.010307,0.028044,0.01257],[0.036277,0.043211,0.051278],[0.036284,0.043254,0.04911],[0.036239,0.043164,0.050448],[0.048905,0.053393,0.06092]]},{"date":"201801100220","rgb":[[0.012027,0.027343,0.011351],[0.016883,0.024538,0.014796],[0.018996,0.023094,0.017906],[0.012782,0.026388,0.015906],[0.010373,0.028943,0.0069663],[0.010326,0.028897,0.0064221],[0.010393,0.028909,0.0065959],[0.010388,0.028821,0.0095667],[0.010334,0.028945,0.0069008],[0.010294,0.028929,0.0064326],[0.010316,0.028952,0.0064789],[0.010324,0.028757,0.01026],[0.036346,0.043231,0.050449],[0.036282,0.043278,0.048881],[0.036303,0.043218,0.049453],[0.049013,0.053695,0.059912]]},{"date":"201801100230","rgb":[[0.011854,0.028084,0.0086352],[0.017435,0.02439,0.014062],[0.020328,0.021904,0.020928],[0.014137,0.026009,0.015792],[0.010358,0.028929,0.0068401],[0.010326,0.028897,0.0064221],[0.010806,0.028547,0.0075919],[0.010368,0.028786,0.0096323],[0.010348,0.028933,0.0070319],[0.010294,0.028929,0.0064306],[0.010318,0.028941,0.0065415],[0.010334,0.028651,0.010272],[0.036369,0.043215,0.050572],[0.036282,0.043302,0.048862],[0.036246,0.043266,0.049455],[0.049023,0.053729,0.059376]]},{"date":"201801100240","rgb":[[0.012026,0.027277,0.012101],[0.012767,0.026202,0.015163],[0.01393,0.024431,0.021279],[0.011821,0.025281,0.021401],[0.010367,0.028915,0.0069709],[0.010326,0.028897,0.0064213],[0.01035,0.027774,0.011557],[0.010379,0.025703,0.020647],[0.010338,0.02891,0.007298],[0.010294,0.028929,0.0063984],[0.010315,0.028938,0.0065943],[0.010318,0.027876,0.012849],[0.036439,0.043266,0.050451],[0.036281,0.043293,0.048977],[0.036248,0.04328,0.049606],[0.049068,0.05373,0.05973]]},{"date":"201801100250","rgb":[[0.012375,0.027812,0.0090484],[0.016959,0.024629,0.014019],[0.016102,0.023554,0.020999],[0.011545,0.025312,0.021397],[0.010363,0.028922,0.007154],[0.010327,0.028897,0.0064227],[0.01035,0.028157,0.0098584],[0.010371,0.025899,0.019745],[0.010364,0.028977,0.007149],[0.010294,0.028929,0.0064306],[0.010318,0.028951,0.0065003],[0.010324,0.028297,0.011339],[0.036481,0.0433,0.050248],[0.036227,0.043302,0.04874],[0.036303,0.043323,0.048942],[0.048909,0.053671,0.060048]]},{"date":"201801100300","rgb":[[0.012245,0.02781,0.0089412],[0.012569,0.026416,0.014526],[0.013199,0.024673,0.02117],[0.011477,0.025314,0.02136],[0.01038,0.028927,0.0068425],[0.010326,0.028897,0.0064221],[0.01035,0.028056,0.010364],[0.010363,0.025918,0.019574],[0.01036,0.02897,0.0068925],[0.010294,0.028929,0.0064284],[0.01032,0.028955,0.0064199],[0.010317,0.028408,0.010382],[0.036293,0.043238,0.05086],[0.036279,0.043272,0.049053],[0.036305,0.043299,0.049057],[0.049004,0.053805,0.059106]]},{"date":"201801100310","rgb":[[0.012379,0.027265,0.011818],[0.015408,0.025411,0.014117],[0.016134,0.023544,0.021174],[0.014156,0.024893,0.019989],[0.010358,0.028904,0.0070106],[0.010326,0.028897,0.0064221],[0.01035,0.028043,0.010304],[0.010367,0.02819,0.012113],[0.010327,0.028913,0.0071964],[0.010294,0.028929,0.0063919],[0.010318,0.02895,0.006489],[0.010363,0.028765,0.0105],[0.036366,0.043272,0.050801],[0.036288,0.043242,0.049442],[0.036298,0.043255,0.049678],[0.048942,0.053534,0.060247]]},{"date":"201801100320","rgb":[[0.012777,0.026792,0.012055],[0.012506,0.026421,0.014068],[0.011525,0.02541,0.020753],[0.013817,0.026017,0.015914],[0.010368,0.028926,0.0071775],[0.010326,0.028897,0.0064221],[0.010354,0.028715,0.0076042],[0.010353,0.02872,0.010376],[0.010342,0.028952,0.006993],[0.010294,0.028929,0.0063919],[0.01032,0.02893,0.006585],[0.010323,0.028717,0.010383],[0.036413,0.043268,0.051007],[0.036282,0.043251,0.049114],[0.036304,0.043259,0.049721],[0.048963,0.053581,0.060172]]},{"date":"201801102300","rgb":[[0.13723,0.039911,0.052313],[0.20547,0.05008,0.082281],[0.26379,0.058881,0.12612],[0.25738,0.057393,0.14359],[0.10541,0.037091,0.045574],[0.16538,0.044388,0.067516],[0.23817,0.056271,0.12369],[0.25674,0.060594,0.17857],[0.078988,0.034376,0.044116],[0.14171,0.041341,0.071349],[0.2294,0.058265,0.148],[0.28741,0.10491,0.23835],[0.093691,0.047467,0.094137],[0.12918,0.051734,0.11048],[0.20286,0.063944,0.17521],[0.35224,0.18652,0.33554]]},{"date":"201801102330","rgb":[[0.021351,0.021351,0.021351],[0.021334,0.021334,0.021334],[0.022056,0.022522,0.022356],[0.020322,0.024942,0.023345],[0.021348,0.021348,0.021348],[0.019558,0.022237,0.021313],[0.013373,0.025216,0.021644],[0.016988,0.026506,0.023271],[0.016347,0.023606,0.021348],[0.010696,0.025476,0.021316],[0.010537,0.025719,0.021483],[0.019309,0.025822,0.025424],[0.036312,0.040358,0.062321],[0.036287,0.040334,0.062295],[0.036472,0.040492,0.062442],[0.060683,0.052932,0.076865]]},{"date":"201801102340","rgb":[[0.021351,0.021351,0.021351],[0.018296,0.022649,0.021329],[0.016086,0.025801,0.022576],[0.020141,0.025581,0.023444],[0.01469,0.024051,0.02135],[0.010348,0.025507,0.021313],[0.014025,0.026535,0.022469],[0.019632,0.025857,0.023499],[0.010329,0.025561,0.021348],[0.010294,0.025526,0.021313],[0.012864,0.026534,0.022293],[0.02028,0.026068,0.025222],[0.036312,0.040358,0.062321],[0.036287,0.040334,0.062295],[0.036445,0.040512,0.062478],[0.059969,0.052708,0.077619]]},{"date":"201801102350","rgb":[[0.014899,0.026186,0.011317],[0.011433,0.026634,0.015323],[0.011877,0.026259,0.022374],[0.020014,0.025255,0.036776],[0.010366,0.028937,0.0067963],[0.010324,0.028847,0.0079832],[0.010605,0.026752,0.019017],[0.017532,0.02551,0.033061],[0.010331,0.028917,0.0071226],[0.010292,0.028824,0.0080412],[0.010597,0.02708,0.017894],[0.01742,0.025877,0.034195],[0.036289,0.043235,0.050329],[0.036257,0.043213,0.051192],[0.03858,0.041369,0.062574],[0.058621,0.050144,0.083339]]},{"date":"201801110000","rgb":[[0.01196,0.027757,0.018503],[0.012138,0.026793,0.016476],[0.012231,0.026575,0.019333],[0.014974,0.026981,0.025188],[0.010936,0.028673,0.014037],[0.01045,0.028814,0.011398],[0.01063,0.028925,0.012848],[0.013388,0.027768,0.02211],[0.010898,0.028576,0.014255],[0.010438,0.028854,0.011245],[0.010525,0.028868,0.01242],[0.013566,0.027371,0.022959],[0.038504,0.042573,0.060905],[0.036937,0.04297,0.056196],[0.037982,0.043037,0.05846],[0.053476,0.052422,0.072729]]},{"date":"201801110010","rgb":[[0.012057,0.0283,0.015527],[0.014482,0.02623,0.014384],[0.0149,0.025822,0.014734],[0.013798,0.026663,0.02383],[0.010883,0.028579,0.014423],[0.010357,0.028753,0.010896],[0.010437,0.028752,0.011787],[0.011947,0.026966,0.021444],[0.010971,0.029055,0.013216],[0.010354,0.028705,0.011772],[0.01037,0.028731,0.011527],[0.012256,0.027835,0.019962],[0.038101,0.043204,0.058279],[0.036592,0.043239,0.054567],[0.036894,0.042947,0.057011],[0.052305,0.052196,0.071436]]},{"date":"201801110020","rgb":[[0.012423,0.027735,0.017728],[0.013876,0.025449,0.019336],[0.012976,0.025692,0.019439],[0.014667,0.02676,0.024991],[0.010855,0.028683,0.013988],[0.010375,0.028545,0.011203],[0.010384,0.028678,0.011407],[0.012049,0.027266,0.022035],[0.011035,0.029118,0.013772],[0.0104,0.028828,0.010763],[0.010437,0.028793,0.012469],[0.012566,0.027415,0.022326],[0.037949,0.043201,0.057421],[0.036765,0.043356,0.054336],[0.0372,0.043227,0.055525],[0.052972,0.052299,0.071403]]},{"date":"201801110030","rgb":[[0.012376,0.026768,0.020639],[0.012925,0.026525,0.016284],[0.013467,0.026221,0.01727],[0.013812,0.026731,0.026438],[0.010801,0.02837,0.014452],[0.010407,0.028782,0.011792],[0.010423,0.028603,0.013054],[0.01215,0.027056,0.024104],[0.011037,0.028953,0.014484],[0.010401,0.028795,0.011845],[0.010478,0.028627,0.01283],[0.012145,0.027343,0.0229],[0.038376,0.042762,0.05955],[0.036982,0.042952,0.056479],[0.037397,0.042417,0.058742],[0.053037,0.052337,0.072396]]},{"date":"201801110050","rgb":[[0.012153,0.027341,0.019814],[0.013707,0.026574,0.015687],[0.012655,0.026076,0.020024],[0.01392,0.026736,0.026108],[0.010871,0.028659,0.014687],[0.010424,0.028771,0.011442],[0.010414,0.028472,0.012808],[0.012099,0.027564,0.021157],[0.011171,0.02889,0.015196],[0.010479,0.0289,0.011238],[0.010389,0.028567,0.012315],[0.011969,0.027081,0.022857],[0.039044,0.042471,0.062157],[0.037052,0.043045,0.055848],[0.037522,0.042527,0.059048],[0.052065,0.051953,0.073734]]},{"date":"201801110100","rgb":[[0.012269,0.027241,0.01936],[0.012306,0.026453,0.017884],[0.012273,0.026693,0.017294],[0.013583,0.027109,0.023715],[0.010786,0.02826,0.01534],[0.010427,0.028748,0.011764],[0.010411,0.028636,0.01292],[0.012108,0.027273,0.021554],[0.01097,0.028336,0.015567],[0.010433,0.028853,0.011133],[0.010409,0.028746,0.012565],[0.012255,0.027282,0.021397],[0.037939,0.04229,0.061227],[0.036646,0.042999,0.056138],[0.036813,0.042721,0.056955],[0.052035,0.051924,0.072185]]},{"date":"201801110110","rgb":[[0.012413,0.027653,0.018651],[0.012885,0.025792,0.020415],[0.013166,0.025935,0.020162],[0.014908,0.026712,0.027358],[0.011188,0.028048,0.017374],[0.010532,0.028414,0.013563],[0.010606,0.027545,0.016473],[0.013276,0.027132,0.025191],[0.011061,0.028393,0.016172],[0.010462,0.028815,0.012043],[0.01061,0.028296,0.014869],[0.013646,0.026989,0.024855],[0.038882,0.042545,0.061344],[0.037351,0.042939,0.05667],[0.037685,0.042248,0.060598],[0.052639,0.051857,0.073934]]},{"date":"201801110120","rgb":[[0.013422,0.027496,0.018681],[0.014612,0.026501,0.014523],[0.013498,0.026595,0.017372],[0.01559,0.026749,0.026346],[0.011379,0.028781,0.015151],[0.010503,0.028816,0.01189],[0.010553,0.028571,0.01263],[0.01328,0.027202,0.023145],[0.011458,0.028923,0.015081],[0.010486,0.028817,0.012235],[0.010666,0.028551,0.013455],[0.013552,0.027433,0.02364],[0.038506,0.043353,0.057792],[0.037135,0.04297,0.055288],[0.037295,0.043247,0.056769],[0.052828,0.052147,0.070624]]},{"date":"201801110130","rgb":[[0.012781,0.027249,0.021342],[0.01431,0.025585,0.020131],[0.014261,0.026319,0.020529],[0.015557,0.026545,0.027577],[0.011643,0.028515,0.016914],[0.010588,0.027953,0.015226],[0.010738,0.028517,0.014485],[0.013489,0.027228,0.023757],[0.0118,0.028187,0.018171],[0.010566,0.028738,0.013082],[0.010705,0.028488,0.014677],[0.013856,0.027157,0.024891],[0.038701,0.042732,0.060277],[0.036967,0.043034,0.056021],[0.03773,0.042774,0.059247],[0.053073,0.051915,0.073524]]},{"date":"201801110140","rgb":[[0.014681,0.026644,0.022473],[0.013559,0.025709,0.020762],[0.012685,0.026446,0.021001],[0.015564,0.026866,0.026396],[0.011958,0.028262,0.018533],[0.010621,0.028228,0.01416],[0.010757,0.027733,0.016452],[0.014271,0.026977,0.024108],[0.011634,0.028412,0.01744],[0.010611,0.028867,0.012294],[0.010766,0.02859,0.013919],[0.013826,0.027224,0.023432],[0.038632,0.04245,0.06209],[0.036953,0.042966,0.056121],[0.037913,0.042783,0.059367],[0.053651,0.051893,0.072695]]},{"date":"201801110150","rgb":[[0.013014,0.026931,0.022212],[0.013084,0.027163,0.016351],[0.012688,0.025947,0.021641],[0.014611,0.026581,0.028495],[0.011565,0.02755,0.019298],[0.010625,0.028553,0.013485],[0.010809,0.027661,0.016611],[0.014027,0.026807,0.025533],[0.011651,0.028791,0.015793],[0.010607,0.028848,0.013209],[0.01077,0.028551,0.013763],[0.01374,0.02697,0.025585],[0.038198,0.042208,0.061208],[0.036944,0.04313,0.055898],[0.037638,0.042346,0.059078],[0.053279,0.051879,0.073931]]},{"date":"201801110200","rgb":[[0.012992,0.027575,0.019669],[0.01229,0.026666,0.017674],[0.012008,0.026724,0.019492],[0.014683,0.026781,0.026733],[0.011481,0.028748,0.016025],[0.010504,0.028846,0.012297],[0.010641,0.028361,0.013991],[0.013289,0.027309,0.024432],[0.011502,0.029347,0.014825],[0.010524,0.028865,0.011892],[0.010651,0.028808,0.013761],[0.013451,0.026944,0.024968],[0.038543,0.043091,0.058633],[0.036931,0.043165,0.055117],[0.037626,0.042931,0.057749],[0.052986,0.051926,0.072796]]},{"date":"201801110210","rgb":[[0.01189,0.028233,0.016807],[0.012096,0.027354,0.01478],[0.013724,0.02614,0.017455],[0.013824,0.026753,0.025943],[0.010903,0.028963,0.013702],[0.010383,0.028714,0.011225],[0.010479,0.027944,0.014118],[0.012538,0.026848,0.024371],[0.010873,0.028822,0.013597],[0.01038,0.028822,0.011189],[0.010397,0.028673,0.012279],[0.012172,0.02725,0.022684],[0.038025,0.042833,0.057997],[0.03689,0.043285,0.054171],[0.037017,0.042849,0.056003],[0.052212,0.052061,0.072071]]},{"date":"201801110220","rgb":[[0.013296,0.027643,0.01936],[0.013024,0.027408,0.014736],[0.011839,0.027603,0.016396],[0.014508,0.027389,0.02407],[0.011247,0.028611,0.015826],[0.010516,0.028825,0.012246],[0.010531,0.028508,0.013295],[0.012985,0.027197,0.023489],[0.011316,0.028813,0.015153],[0.010455,0.028859,0.012025],[0.010467,0.028588,0.012953],[0.013101,0.027728,0.021877],[0.038846,0.042753,0.059667],[0.036977,0.043379,0.05513],[0.03743,0.043056,0.05696],[0.053429,0.0525,0.070423]]},{"date":"201801110240","rgb":[[0.011849,0.027534,0.018304],[0.014185,0.026317,0.015863],[0.012387,0.025783,0.020085],[0.013314,0.026713,0.026118],[0.010903,0.028821,0.013325],[0.010409,0.028738,0.011919],[0.010363,0.028496,0.012211],[0.011857,0.027042,0.023429],[0.010791,0.028155,0.015368],[0.010395,0.028735,0.012192],[0.010322,0.028666,0.012831],[0.011875,0.026948,0.023711],[0.037551,0.042284,0.061133],[0.036776,0.043112,0.055832],[0.036917,0.042312,0.057927],[0.051393,0.052103,0.073463]]},{"date":"201801110250","rgb":[[0.01252,0.027537,0.016796],[0.013499,0.026277,0.016553],[0.012989,0.026842,0.015334],[0.014111,0.026748,0.024577],[0.010769,0.028857,0.012589],[0.010409,0.028842,0.010422],[0.010342,0.028669,0.011733],[0.01189,0.026936,0.022016],[0.011003,0.029134,0.013423],[0.010394,0.028834,0.010313],[0.010389,0.02868,0.012391],[0.012995,0.027639,0.021276],[0.038564,0.043111,0.057799],[0.036663,0.043087,0.054588],[0.037387,0.042974,0.056205],[0.052402,0.052494,0.071408]]},{"date":"201801110300","rgb":[[0.012276,0.028131,0.015463],[0.012116,0.027594,0.012667],[0.012621,0.027006,0.014206],[0.013024,0.027317,0.022908],[0.010823,0.02843,0.014005],[0.010383,0.028803,0.010399],[0.010391,0.028728,0.0117],[0.011827,0.027035,0.022044],[0.010871,0.028695,0.013971],[0.010348,0.028778,0.010611],[0.010364,0.028678,0.011969],[0.011842,0.026901,0.022137],[0.037676,0.042904,0.058672],[0.036787,0.043231,0.055121],[0.036993,0.043162,0.055803],[0.051584,0.052322,0.070727]]},{"date":"201801110310","rgb":[[0.01233,0.026224,0.021344],[0.011864,0.025255,0.021442],[0.012872,0.025083,0.021198],[0.013376,0.026784,0.025886],[0.010652,0.02702,0.018089],[0.010407,0.025575,0.021394],[0.010389,0.027246,0.016384],[0.011784,0.026705,0.023328],[0.010715,0.028184,0.015139],[0.010398,0.026759,0.017819],[0.010339,0.028411,0.012428],[0.012049,0.026872,0.023863],[0.037669,0.042321,0.060515],[0.036676,0.043068,0.055074],[0.036924,0.042752,0.056732],[0.051712,0.052006,0.072094]]},{"date":"201801110320","rgb":[[0.012414,0.027423,0.01993],[0.015302,0.025915,0.015031],[0.014064,0.0263,0.019054],[0.015781,0.026578,0.027738],[0.011054,0.028022,0.016298],[0.010457,0.028682,0.011297],[0.010685,0.028808,0.013379],[0.013349,0.027418,0.024239],[0.011164,0.027699,0.018134],[0.010473,0.028763,0.012397],[0.010721,0.02869,0.0139],[0.014815,0.026972,0.026177],[0.038803,0.042355,0.061729],[0.036938,0.043081,0.057145],[0.038268,0.042158,0.059863],[0.05418,0.051769,0.073961]]},{"date":"201801110330","rgb":[[0.013588,0.027688,0.013298],[0.016439,0.025229,0.01261],[0.014343,0.026552,0.014542],[0.014985,0.027715,0.018837],[0.010745,0.029009,0.012419],[0.010385,0.028805,0.0091047],[0.010481,0.028859,0.011069],[0.012515,0.028361,0.018969],[0.010625,0.028968,0.012028],[0.01036,0.028768,0.011059],[0.010407,0.028748,0.011228],[0.013019,0.028025,0.019154],[0.037792,0.043192,0.057314],[0.036448,0.043078,0.053752],[0.037527,0.043242,0.055964],[0.05272,0.052699,0.070637]]},{"date":"201801110340","rgb":[[0.012807,0.027496,0.017986],[0.014948,0.025915,0.017123],[0.012799,0.026916,0.017576],[0.015504,0.026739,0.02695],[0.011169,0.028749,0.015637],[0.01045,0.028842,0.011454],[0.010657,0.028735,0.01338],[0.013659,0.027094,0.024843],[0.011198,0.028751,0.015598],[0.010445,0.028869,0.011635],[0.0106,0.028712,0.013394],[0.014149,0.026842,0.024799],[0.038511,0.042633,0.061037],[0.03714,0.043291,0.055959],[0.037927,0.04329,0.058369],[0.05456,0.05177,0.074223]]},{"date":"201801110400","rgb":[[0.012831,0.027243,0.017469],[0.013309,0.026219,0.016982],[0.011803,0.02717,0.016361],[0.015311,0.027013,0.023103],[0.011037,0.028467,0.015194],[0.010445,0.02871,0.012302],[0.010579,0.02887,0.01242],[0.012838,0.027349,0.023133],[0.011019,0.028868,0.01428],[0.010403,0.028768,0.011503],[0.010495,0.028631,0.012862],[0.013114,0.027564,0.022221],[0.038358,0.042824,0.059451],[0.036652,0.04317,0.055148],[0.037369,0.043068,0.056792],[0.053019,0.05239,0.071289]]},{"date":"201801110410","rgb":[[0.01273,0.028072,0.017843],[0.012883,0.027355,0.014335],[0.013615,0.026267,0.020256],[0.015623,0.027145,0.025187],[0.01112,0.028793,0.014828],[0.010557,0.028844,0.011828],[0.010683,0.028624,0.01337],[0.01347,0.02738,0.023875],[0.011474,0.029012,0.014753],[0.01047,0.028831,0.011605],[0.010878,0.028657,0.014076],[0.01482,0.027501,0.023822],[0.03926,0.042917,0.059886],[0.037181,0.043285,0.05572],[0.038474,0.042896,0.059141],[0.054723,0.051704,0.073146]]},{"date":"201801110430","rgb":[[0.012758,0.028043,0.015398],[0.013668,0.026622,0.01495],[0.013867,0.026023,0.017971],[0.013788,0.027386,0.022453],[0.010954,0.028721,0.013528],[0.010468,0.028886,0.010487],[0.010576,0.028901,0.011672],[0.012868,0.028089,0.020098],[0.011145,0.028916,0.014136],[0.010443,0.028868,0.010892],[0.010538,0.02889,0.01274],[0.013121,0.027522,0.021923],[0.038721,0.042941,0.058244],[0.037002,0.043328,0.055031],[0.037707,0.043085,0.057632],[0.053716,0.052286,0.072227]]},{"date":"201801110440","rgb":[[0.013004,0.027289,0.018517],[0.012521,0.027562,0.014705],[0.01254,0.027246,0.016646],[0.015369,0.027127,0.024995],[0.011121,0.02879,0.014331],[0.010458,0.028751,0.01133],[0.010836,0.028841,0.013683],[0.014371,0.027584,0.02328],[0.011296,0.02903,0.014442],[0.01055,0.028917,0.011666],[0.010732,0.028825,0.013517],[0.013674,0.027399,0.023623],[0.039504,0.043091,0.059681],[0.037173,0.043512,0.0556],[0.037911,0.04341,0.056459],[0.053496,0.052366,0.071516]]},{"date":"201801110450","rgb":[[0.012959,0.02803,0.017204],[0.012951,0.027253,0.01556],[0.012695,0.027276,0.017948],[0.015625,0.026991,0.026288],[0.011233,0.02869,0.015388],[0.01057,0.028728,0.012275],[0.010982,0.028163,0.015354],[0.013997,0.027302,0.024446],[0.011479,0.028884,0.015275],[0.010507,0.028848,0.012421],[0.011033,0.028699,0.014583],[0.015277,0.026955,0.025326],[0.03943,0.042959,0.06103],[0.037461,0.043128,0.056411],[0.038814,0.04211,0.061567],[0.054693,0.051828,0.074278]]},{"date":"201801110500","rgb":[[0.012363,0.027047,0.021934],[0.012635,0.025954,0.020977],[0.013537,0.026986,0.018225],[0.015233,0.027112,0.02585],[0.011248,0.028371,0.016486],[0.010533,0.028131,0.014043],[0.010811,0.028736,0.014089],[0.0138,0.027416,0.023084],[0.011221,0.02828,0.016601],[0.010521,0.028871,0.012217],[0.010716,0.028376,0.013856],[0.013812,0.027417,0.024287],[0.039066,0.042787,0.061184],[0.037663,0.042917,0.0579],[0.038526,0.042679,0.060505],[0.055286,0.052115,0.073385]]},{"date":"201801110510","rgb":[[0.012716,0.02751,0.021042],[0.015902,0.025834,0.015545],[0.01421,0.02705,0.017417],[0.016011,0.026881,0.024618],[0.011247,0.027839,0.017478],[0.010637,0.02878,0.013039],[0.010888,0.029042,0.013396],[0.014012,0.027269,0.023341],[0.011357,0.02872,0.015634],[0.01049,0.028793,0.012179],[0.010693,0.028815,0.013683],[0.014628,0.027639,0.022025],[0.038379,0.042732,0.060977],[0.037241,0.043079,0.056182],[0.038312,0.042793,0.058649],[0.054804,0.052043,0.071444]]},{"date":"201801110520","rgb":[[0.014106,0.027211,0.021848],[0.013662,0.02732,0.018089],[0.014807,0.026554,0.020824],[0.016466,0.02667,0.027884],[0.012492,0.027701,0.021651],[0.011194,0.028366,0.016418],[0.011114,0.028035,0.017466],[0.014528,0.02688,0.02645],[0.012547,0.02798,0.020955],[0.011244,0.028878,0.015307],[0.011056,0.027958,0.01725],[0.014482,0.026924,0.02562],[0.040343,0.042142,0.06442],[0.038225,0.043196,0.058561],[0.038529,0.042616,0.060893],[0.053978,0.051718,0.074857]]},{"date":"201801110530","rgb":[[0.014719,0.027471,0.022502],[0.014411,0.026842,0.020489],[0.013305,0.027589,0.021037],[0.017279,0.026281,0.029571],[0.013939,0.028314,0.020801],[0.011758,0.028648,0.016707],[0.012181,0.027951,0.020013],[0.016963,0.027065,0.026449],[0.013834,0.028198,0.021399],[0.011916,0.028717,0.017184],[0.012428,0.027436,0.02189],[0.016619,0.02674,0.027703],[0.041451,0.042084,0.063698],[0.038801,0.042414,0.060966],[0.039272,0.042142,0.063748],[0.054858,0.051901,0.074877]]},{"date":"201801110540","rgb":[[0.013619,0.027707,0.022637],[0.013341,0.027792,0.019123],[0.013377,0.02727,0.021663],[0.017323,0.026643,0.02774],[0.012894,0.027567,0.022204],[0.011762,0.027611,0.019337],[0.011967,0.027827,0.020189],[0.016878,0.026436,0.027343],[0.013628,0.027512,0.022998],[0.011584,0.027935,0.019082],[0.011999,0.027064,0.022098],[0.01629,0.02681,0.027218],[0.04011,0.04218,0.0632],[0.038311,0.042693,0.060583],[0.03901,0.042336,0.061455],[0.055256,0.051966,0.073567]]},{"date":"201801110550","rgb":[[0.015076,0.027424,0.024501],[0.013096,0.02752,0.021499],[0.013108,0.027445,0.023462],[0.018112,0.026013,0.030579],[0.013966,0.027843,0.022717],[0.011927,0.02721,0.022205],[0.012288,0.027262,0.022961],[0.016551,0.026544,0.027991],[0.015106,0.02746,0.023238],[0.012149,0.027567,0.021443],[0.012332,0.027572,0.02185],[0.016144,0.026647,0.028957],[0.042136,0.042032,0.064725],[0.039136,0.04231,0.062149],[0.040337,0.041969,0.063576],[0.056181,0.051499,0.075627]]},{"date":"201801110600","rgb":[[0.01498,0.027482,0.023],[0.014288,0.027382,0.020046],[0.014731,0.027236,0.022764],[0.017883,0.026633,0.028441],[0.01509,0.028081,0.021022],[0.012217,0.028634,0.01819],[0.013477,0.028028,0.02103],[0.017378,0.026289,0.027951],[0.014426,0.028419,0.019813],[0.012236,0.028899,0.018509],[0.012972,0.027763,0.021552],[0.016609,0.026884,0.027148],[0.041173,0.042708,0.060952],[0.038818,0.043297,0.058828],[0.039754,0.042946,0.059229],[0.055431,0.052073,0.073479]]},{"date":"201801110610","rgb":[[0.014752,0.027312,0.02312],[0.014834,0.026971,0.020553],[0.015724,0.026286,0.022258],[0.018227,0.026645,0.028143],[0.013562,0.027601,0.022776],[0.011726,0.027876,0.019631],[0.012275,0.027835,0.021139],[0.016585,0.026618,0.027469],[0.013378,0.027736,0.022899],[0.011714,0.027484,0.020282],[0.012139,0.027123,0.022758],[0.016338,0.026452,0.027945],[0.04072,0.042287,0.062973],[0.038825,0.04249,0.060363],[0.039385,0.042637,0.061672],[0.055463,0.051721,0.073875]]},{"date":"201801110620","rgb":[[0.014364,0.027065,0.025419],[0.013521,0.026999,0.022679],[0.014892,0.027129,0.023212],[0.018193,0.026265,0.028885],[0.013161,0.027319,0.023108],[0.01142,0.026576,0.022166],[0.012655,0.027572,0.021777],[0.017439,0.026767,0.027239],[0.013291,0.027673,0.022582],[0.011198,0.027114,0.020041],[0.012472,0.027454,0.021928],[0.015691,0.027107,0.026844],[0.041003,0.042119,0.064561],[0.038137,0.042509,0.060392],[0.039698,0.042308,0.062703],[0.055731,0.051736,0.074951]]},{"date":"201801110630","rgb":[[0.013212,0.027158,0.024765],[0.013351,0.026538,0.023243],[0.014541,0.02661,0.024215],[0.016705,0.02641,0.030318],[0.012108,0.026931,0.023669],[0.011076,0.026217,0.022266],[0.012231,0.027269,0.023508],[0.015321,0.026638,0.029038],[0.01213,0.027084,0.023822],[0.011183,0.026707,0.021267],[0.012272,0.027165,0.023577],[0.015184,0.026731,0.029196],[0.039538,0.041619,0.06702],[0.038457,0.04171,0.063863],[0.039342,0.042027,0.06529],[0.055992,0.051534,0.077941]]},{"date":"201801110640","rgb":[[0.013683,0.026923,0.031382],[0.013044,0.026956,0.031277],[0.013023,0.027169,0.033273],[0.017648,0.027165,0.041235],[0.012785,0.027055,0.031142],[0.01242,0.027115,0.030629],[0.012491,0.027095,0.031768],[0.015686,0.027363,0.038855],[0.013177,0.026851,0.030623],[0.012442,0.027249,0.029809],[0.012644,0.026992,0.032582],[0.015973,0.02712,0.036887],[0.040748,0.041385,0.071645],[0.039056,0.042001,0.070271],[0.039596,0.041707,0.073654],[0.055901,0.052521,0.085287]]},{"date":"201801110650","rgb":[[0.025674,0.029951,0.10709],[0.025062,0.029554,0.10892],[0.026343,0.030736,0.11646],[0.028718,0.032152,0.12965],[0.025677,0.029428,0.10749],[0.025976,0.031964,0.12503],[0.029308,0.033102,0.14777],[0.032648,0.033825,0.16451],[0.026672,0.030361,0.11174],[0.027121,0.03208,0.12835],[0.029649,0.032868,0.1467],[0.03433,0.034427,0.17336],[0.052644,0.044647,0.14584],[0.051788,0.044379,0.14607],[0.052956,0.045627,0.15992],[0.068499,0.058246,0.19025]]},{"date":"201801110700","rgb":[[0.075013,0.045084,0.50033],[0.073638,0.062035,0.49163],[0.073679,0.053306,0.47967],[0.07317,0.042733,0.45113],[0.076167,0.057494,0.49334],[0.075557,0.075155,0.48048],[0.082769,0.084171,0.50394],[0.079557,0.046045,0.49623],[0.073674,0.049629,0.47028],[0.068049,0.049139,0.44201],[0.073312,0.049341,0.46898],[0.089513,0.0515,0.53858],[0.09169,0.054403,0.43513],[0.093473,0.056207,0.46124],[0.093058,0.05575,0.4531],[0.11721,0.069064,0.49962]]},{"date":"201801110710","rgb":[[0.22993,0.41402,0.99527],[0.24491,0.48063,0.99535],[0.26682,0.52109,0.99436],[0.25349,0.4302,0.99355],[0.23307,0.45658,0.99523],[0.23477,0.46122,0.99662],[0.25915,0.51006,0.99535],[0.26262,0.4618,0.99408],[0.2397,0.47004,0.99493],[0.23584,0.4514,0.99671],[0.259,0.49371,0.99561],[0.26115,0.44795,0.99462],[0.23445,0.36397,0.94801],[0.23594,0.37129,0.94851],[0.23971,0.35733,0.94915],[0.25354,0.33944,0.93989]]},{"date":"201801110720","rgb":[[0.7531,0.99916,0.99837],[0.72122,0.99921,0.99833],[0.65182,0.99911,0.99862],[0.61993,0.99865,0.9986],[0.73029,0.99916,0.99778],[0.69425,0.99916,0.99861],[0.68797,0.9991,0.99853],[0.67473,0.99913,0.9983],[0.79487,0.9992,0.99844],[0.87236,0.99839,0.99815],[0.78744,0.99861,0.9972],[0.74025,0.99905,0.998],[0.64557,0.92543,0.95044],[0.67661,0.92559,0.9503],[0.61925,0.92562,0.94971],[0.56438,0.92351,0.94279]]},{"date":"201801110730","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99487,0.97689,1],[0.98782,0.97926,1],[0.99607,0.97647,1],[0.99175,0.97794,1],[0.98514,0.98013,1],[0.98431,0.98039,1],[0.98786,0.97924,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92115,0.90684,0.945]]},{"date":"201801110740","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9945,0.97702,1],[0.99526,0.97675,1],[0.99608,0.97647,1],[0.99097,0.97821,1],[0.98482,0.98024,1],[0.98551,0.98001,1],[0.9925,0.97769,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92116,0.90683,0.94498]]},{"date":"201801110750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90331,0.94488]]},{"date":"201801110800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90337,0.94491]]},{"date":"201801110810","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90337,0.94495]]},{"date":"201801110820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90337,0.94497]]},{"date":"201801110830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90339,0.94498]]},{"date":"201801110840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.9034,0.94491]]},{"date":"201801110850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90335,0.94484]]},{"date":"201801110900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90336,0.94488]]},{"date":"201801110910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.94491]]},{"date":"201801110920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90335,0.94495]]},{"date":"201801110930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90337,0.94497]]},{"date":"201801110940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90335,0.94494]]},{"date":"201801110950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9945,0.97702,1],[0.99526,0.97675,1],[0.99608,0.97647,1],[0.99097,0.97821,1],[0.98482,0.98024,1],[0.98551,0.98001,1],[0.9925,0.97769,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92114,0.90684,0.9448]]},{"date":"201801111000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90332,0.94491]]},{"date":"201801111010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90331,0.94495]]},{"date":"201801111030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90333,0.94498]]},{"date":"201801111040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90335,0.94491]]},{"date":"201801111100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90331,0.94496]]},{"date":"201801111110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90331,0.94491]]},{"date":"201801111120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99532,0.97673,1],[0.99596,0.97651,1],[0.99608,0.97647,1],[0.99187,0.9779,1],[0.98514,0.98013,1],[0.98707,0.97949,1],[0.99434,0.97706,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92163,0.90668,0.94491]]},{"date":"201801111130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90333,0.94494]]},{"date":"201801111150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90329,0.94489]]},{"date":"201801111200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90333,0.94489]]},{"date":"201801111210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90331,0.94493]]},{"date":"201801111220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90333,0.94497]]},{"date":"201801111230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90334,0.94498]]},{"date":"201801111240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90334,0.94495]]},{"date":"201801111250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94484]]},{"date":"201801111300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99455,0.977,1],[0.99526,0.97675,1],[0.99608,0.97647,1],[0.99097,0.97821,1],[0.98482,0.98024,1],[0.98551,0.98001,1],[0.9925,0.97769,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92117,0.90685,0.94489]]},{"date":"201801111310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90333,0.94499]]},{"date":"201801111320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90332,0.94498]]},{"date":"201801111330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99531,0.97674,1],[0.99582,0.97656,1],[0.99608,0.97647,1],[0.9924,0.97771,1],[0.98548,0.98002,1],[0.98652,0.97968,1],[0.99384,0.97724,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92143,0.90678,0.94497]]},{"date":"201801111340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90335,0.94499]]},{"date":"201801111350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90332,0.94486]]},{"date":"201801111400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9955,0.97667,1],[0.99598,0.97651,1],[0.99608,0.97647,1],[0.9924,0.97771,1],[0.98548,0.98002,1],[0.98715,0.97947,1],[0.99438,0.97705,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92167,0.9067,0.94491]]},{"date":"201801111410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90334,0.94497]]},{"date":"201801111420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90334,0.94499]]},{"date":"201801111430","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93067,0.90336,0.94499]]},{"date":"201801111450","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90333,0.94487]]},{"date":"201801111500","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90331,0.94486]]},{"date":"201801111510","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90329,0.9449]]},{"date":"201801111520","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90329,0.94493]]},{"date":"201801111530","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94495]]},{"date":"201801111540","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90333,0.94485]]},{"date":"201801111550","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90329,0.94479]]},{"date":"201801111600","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90333,0.9449]]},{"date":"201801111610","rgb":[[0.38035,0.99784,0.99791],[0.44132,0.99929,0.9981],[0.51639,0.99923,0.99813],[0.60023,0.99871,0.99798],[0.40416,0.9993,0.99835],[0.51959,0.99925,0.99839],[0.65264,0.99907,0.99861],[0.63706,0.99903,0.99838],[0.40383,0.99936,0.99805],[0.52994,0.99926,0.99825],[0.62403,0.99906,0.99843],[0.65343,0.99886,0.99826],[0.37572,0.92394,0.94963],[0.43619,0.92548,0.95049],[0.51358,0.92557,0.95008],[0.55669,0.92336,0.94257]]},{"date":"201801111620","rgb":[[0.19805,0.23616,0.92565],[0.20641,0.27779,0.95368],[0.23377,0.30971,0.98442],[0.24402,0.29722,0.99179],[0.21182,0.28252,0.96576],[0.22504,0.33031,0.99464],[0.24109,0.34791,0.99664],[0.24978,0.32729,0.9951],[0.21114,0.27542,0.95746],[0.22686,0.3181,0.98686],[0.24388,0.33903,0.99551],[0.25309,0.32377,0.99513],[0.21369,0.22987,0.87591],[0.22754,0.27188,0.91018],[0.24054,0.28159,0.93034],[0.2531,0.26203,0.93088]]},{"date":"201801111630","rgb":[[0.056273,0.037536,0.37318],[0.061524,0.038939,0.41402],[0.067941,0.041622,0.44168],[0.076416,0.043185,0.45716],[0.058462,0.037937,0.38598],[0.065657,0.042039,0.4264],[0.069428,0.043057,0.44748],[0.082579,0.046192,0.49308],[0.055653,0.036724,0.36439],[0.062189,0.039907,0.41262],[0.073688,0.04548,0.4604],[0.084367,0.0464,0.49292],[0.079665,0.049731,0.35531],[0.086352,0.052061,0.40142],[0.09267,0.054475,0.43312],[0.10937,0.066083,0.43036]]},{"date":"201801111640","rgb":[[0.020383,0.028592,0.066979],[0.022081,0.028656,0.080818],[0.025176,0.029492,0.10682],[0.028282,0.03151,0.12234],[0.021362,0.028955,0.072837],[0.022517,0.028495,0.085687],[0.025984,0.029786,0.1107],[0.03033,0.032591,0.13829],[0.020409,0.029017,0.066108],[0.02219,0.028784,0.078214],[0.02632,0.029861,0.11011],[0.029541,0.031935,0.12653],[0.047478,0.043384,0.10046],[0.04729,0.043888,0.11103],[0.049906,0.043347,0.13066],[0.065001,0.055201,0.14361]]},{"date":"201801111650","rgb":[[0.013237,0.027004,0.03182],[0.012664,0.027078,0.029159],[0.012627,0.027,0.031239],[0.015581,0.027244,0.038802],[0.012515,0.026964,0.030457],[0.012178,0.026935,0.029666],[0.012328,0.026959,0.031602],[0.014264,0.027366,0.038918],[0.012622,0.027197,0.031203],[0.012204,0.0272,0.028865],[0.012435,0.02713,0.031056],[0.014751,0.027457,0.039716],[0.040174,0.041623,0.072305],[0.03851,0.041739,0.070641],[0.039254,0.041781,0.072125],[0.055888,0.052689,0.087437]]},{"date":"201801111700","rgb":[[0.012475,0.026781,0.022261],[0.012425,0.026156,0.019171],[0.012644,0.025488,0.021338],[0.014154,0.026875,0.026705],[0.011243,0.027057,0.02037],[0.010463,0.028492,0.013564],[0.010505,0.027045,0.017613],[0.012827,0.026856,0.02609],[0.011666,0.027501,0.020183],[0.010579,0.028633,0.013835],[0.010793,0.02803,0.01621],[0.014119,0.026791,0.026365],[0.039777,0.042051,0.06367],[0.037986,0.042254,0.060515],[0.03841,0.041851,0.063551],[0.05405,0.051555,0.075405]]},{"date":"201801111710","rgb":[[0.013144,0.028003,0.017776],[0.013746,0.02673,0.015902],[0.014064,0.026541,0.016601],[0.014429,0.027093,0.024927],[0.012112,0.028708,0.016173],[0.010656,0.02888,0.013239],[0.010959,0.02864,0.014754],[0.014497,0.027228,0.023616],[0.012296,0.028359,0.018538],[0.010788,0.029073,0.013084],[0.010908,0.028402,0.015928],[0.014446,0.027059,0.025273],[0.041329,0.041817,0.064755],[0.038713,0.043011,0.061031],[0.039365,0.042394,0.062492],[0.054557,0.051373,0.074193]]},{"date":"201801111720","rgb":[[0.01275,0.026778,0.021665],[0.015216,0.025444,0.017018],[0.013166,0.026001,0.019552],[0.014667,0.026567,0.027559],[0.011323,0.027571,0.01932],[0.010479,0.028704,0.012639],[0.01055,0.028229,0.013663],[0.013601,0.027127,0.024985],[0.011877,0.027873,0.019335],[0.010529,0.028644,0.013554],[0.010979,0.028046,0.016741],[0.013365,0.027149,0.026516],[0.039956,0.042002,0.065234],[0.037954,0.042422,0.062121],[0.038547,0.042195,0.06393],[0.054658,0.051408,0.075812]]},{"date":"201801111730","rgb":[[0.013327,0.027696,0.018713],[0.012415,0.02703,0.016847],[0.012791,0.025876,0.020571],[0.015779,0.026754,0.026556],[0.011462,0.028115,0.018393],[0.010579,0.028749,0.013426],[0.010783,0.02795,0.016045],[0.013798,0.026956,0.026176],[0.011917,0.027991,0.019459],[0.010692,0.028633,0.014061],[0.011175,0.028427,0.016826],[0.014511,0.026829,0.027355],[0.040624,0.041923,0.064402],[0.03861,0.042557,0.061128],[0.039559,0.042101,0.064269],[0.055181,0.051288,0.075609]]},{"date":"201801111740","rgb":[[0.01254,0.027687,0.017839],[0.01399,0.02597,0.018318],[0.012441,0.027173,0.016837],[0.014798,0.027074,0.024502],[0.010974,0.0287,0.014836],[0.010515,0.028764,0.012233],[0.010635,0.028705,0.012717],[0.013847,0.027102,0.023573],[0.01169,0.028149,0.017906],[0.010649,0.029012,0.013],[0.010861,0.028257,0.015894],[0.014302,0.026912,0.025725],[0.039608,0.042117,0.063189],[0.03813,0.042719,0.060186],[0.038846,0.042823,0.060789],[0.054109,0.051612,0.073044]]},{"date":"201801111750","rgb":[[0.013433,0.027924,0.020313],[0.015396,0.026411,0.014575],[0.01367,0.026166,0.016729],[0.013827,0.027076,0.023488],[0.011463,0.027928,0.017825],[0.01045,0.028801,0.011378],[0.010524,0.028565,0.013116],[0.012705,0.027874,0.020452],[0.011477,0.027893,0.018279],[0.010482,0.028823,0.012418],[0.010609,0.028212,0.014044],[0.013676,0.027231,0.02392],[0.039852,0.041691,0.066257],[0.038196,0.042439,0.060729],[0.038552,0.042736,0.061892],[0.054213,0.05179,0.073382]]},{"date":"201801111800","rgb":[[0.012636,0.02803,0.017845],[0.015538,0.025746,0.014945],[0.015795,0.025639,0.015164],[0.014551,0.027094,0.02403],[0.011322,0.028907,0.015209],[0.010466,0.028785,0.011845],[0.010475,0.028663,0.012796],[0.013357,0.027619,0.022166],[0.011729,0.028863,0.016181],[0.010527,0.028826,0.012586],[0.010631,0.028154,0.015573],[0.01396,0.027231,0.023489],[0.039781,0.04274,0.063295],[0.038045,0.043041,0.058231],[0.038094,0.042509,0.060837],[0.054187,0.051738,0.074016]]},{"date":"201801111810","rgb":[[0.01224,0.026788,0.022118],[0.012363,0.025944,0.019996],[0.013094,0.025605,0.021597],[0.014084,0.026618,0.028485],[0.011397,0.027354,0.020318],[0.010579,0.027596,0.016181],[0.010727,0.026918,0.018576],[0.013201,0.026841,0.027427],[0.011908,0.027904,0.020438],[0.010691,0.027717,0.016351],[0.010977,0.027857,0.017175],[0.01339,0.027008,0.027122],[0.040132,0.0418,0.067479],[0.038779,0.042408,0.063497],[0.038911,0.042105,0.065861],[0.054246,0.051593,0.078277]]},{"date":"201801111820","rgb":[[0.01252,0.027633,0.016756],[0.015515,0.025692,0.013612],[0.013241,0.026688,0.015752],[0.013798,0.026741,0.02351],[0.011026,0.028273,0.015928],[0.010423,0.02882,0.01081],[0.010421,0.028702,0.012203],[0.012461,0.027108,0.022493],[0.011683,0.028593,0.016975],[0.010485,0.028726,0.01261],[0.010546,0.028511,0.013614],[0.01338,0.027126,0.024377],[0.03947,0.042163,0.063971],[0.037631,0.042821,0.058833],[0.03825,0.042335,0.060768],[0.053777,0.052039,0.07333]]},{"date":"201801111830","rgb":[[0.012155,0.028069,0.015989],[0.0137,0.026598,0.01428],[0.012014,0.027093,0.015972],[0.013277,0.026913,0.02491],[0.011177,0.028808,0.014843],[0.010379,0.028719,0.011497],[0.010361,0.028451,0.013012],[0.011928,0.027092,0.022491],[0.011399,0.028613,0.016232],[0.010413,0.028788,0.011982],[0.010415,0.028429,0.013015],[0.012523,0.027096,0.023862],[0.039571,0.042343,0.062986],[0.037418,0.042905,0.057659],[0.037861,0.042966,0.058823],[0.053003,0.052291,0.073154]]},{"date":"201801111840","rgb":[[0.012637,0.027314,0.019223],[0.012364,0.025897,0.019651],[0.012943,0.026052,0.018947],[0.014287,0.027089,0.024877],[0.01131,0.028934,0.015195],[0.010464,0.02864,0.012217],[0.010474,0.028766,0.011583],[0.013087,0.027334,0.021983],[0.011407,0.028379,0.017355],[0.010559,0.02882,0.012623],[0.010561,0.028563,0.013964],[0.013282,0.02711,0.02349],[0.039704,0.042444,0.062293],[0.037735,0.043185,0.058368],[0.038709,0.042767,0.060093],[0.053634,0.052211,0.073303]]},{"date":"201801111850","rgb":[[0.012672,0.027457,0.018546],[0.013365,0.02696,0.014405],[0.013954,0.026612,0.015317],[0.014232,0.026929,0.024284],[0.010996,0.028562,0.014722],[0.010435,0.028765,0.011823],[0.010449,0.028669,0.011925],[0.012719,0.027425,0.021575],[0.011267,0.028388,0.016835],[0.010463,0.028781,0.012666],[0.010634,0.028681,0.013703],[0.013507,0.027073,0.024792],[0.039553,0.042643,0.062455],[0.038051,0.042963,0.058157],[0.038363,0.042803,0.060115],[0.054778,0.051911,0.073893]]},{"date":"201801111900","rgb":[[0.012554,0.027839,0.01626],[0.015964,0.025326,0.015765],[0.015304,0.024101,0.021118],[0.014196,0.026501,0.024967],[0.011147,0.028781,0.014812],[0.010468,0.028822,0.011691],[0.01041,0.027659,0.014529],[0.012403,0.027528,0.021678],[0.011354,0.028706,0.015994],[0.010514,0.028769,0.013037],[0.010519,0.028634,0.013187],[0.012545,0.026961,0.024847],[0.039949,0.042134,0.063193],[0.037687,0.042425,0.059468],[0.03814,0.042383,0.060009],[0.053638,0.051774,0.073757]]},{"date":"201801111910","rgb":[[0.012577,0.026777,0.021586],[0.012599,0.025488,0.021299],[0.013314,0.025336,0.021576],[0.014243,0.026626,0.025718],[0.011424,0.028608,0.015423],[0.010472,0.027408,0.015634],[0.010517,0.027448,0.015992],[0.013276,0.027429,0.022099],[0.011607,0.028514,0.018352],[0.010607,0.0288,0.013665],[0.010652,0.02867,0.014484],[0.013353,0.027028,0.025021],[0.03982,0.042376,0.062823],[0.037724,0.042467,0.060256],[0.038443,0.042621,0.060518],[0.054107,0.051669,0.074211]]},{"date":"201801111920","rgb":[[0.012767,0.027382,0.0191],[0.01555,0.025035,0.018904],[0.012835,0.02661,0.017756],[0.014174,0.027128,0.025271],[0.011099,0.028417,0.016301],[0.010421,0.028728,0.011861],[0.010485,0.028679,0.012875],[0.013115,0.027321,0.024067],[0.011281,0.028677,0.01546],[0.010383,0.028761,0.01226],[0.010567,0.028369,0.014267],[0.013715,0.027249,0.024871],[0.039104,0.042604,0.061088],[0.037219,0.042632,0.057423],[0.038262,0.042497,0.060503],[0.053949,0.051929,0.074371]]},{"date":"201801111930","rgb":[[0.99122,0.96778,0.98217],[0.83993,0.67149,0.66547],[0.90941,0.68903,0.60941],[0.96672,0.90919,0.86398],[0.79877,0.69736,0.73387],[0.78007,0.51785,0.46723],[0.93891,0.74381,0.66095],[0.74036,0.54773,0.57149],[0.61073,0.40173,0.4518],[0.83658,0.55119,0.44475],[0.80888,0.68671,0.69676],[0.80417,0.692,0.73979],[0.56772,0.30441,0.39237],[0.84258,0.73276,0.673],[0.85479,0.78992,0.79599],[0.90013,0.85411,0.90473]]},{"date":"201801111940","rgb":[[0.013336,0.027613,0.020539],[0.018867,0.026638,0.018399],[0.030098,0.02595,0.024469],[0.030421,0.02644,0.032648],[0.012034,0.027788,0.02012],[0.023905,0.028731,0.019324],[0.013885,0.027403,0.014346],[0.034891,0.026753,0.033781],[0.014831,0.027353,0.02355],[0.011092,0.028342,0.015778],[0.010694,0.028103,0.015836],[0.01545,0.026999,0.02653],[0.059319,0.050593,0.071435],[0.037643,0.042881,0.057437],[0.037719,0.043077,0.058403],[0.053581,0.052249,0.07188]]},{"date":"201801111950","rgb":[[0.015335,0.027796,0.021327],[0.015765,0.027611,0.019228],[0.030678,0.026119,0.023736],[0.034476,0.026446,0.037024],[0.013947,0.028453,0.02056],[0.013659,0.028128,0.015229],[0.014843,0.027328,0.017035],[0.040396,0.027471,0.040756],[0.016744,0.027271,0.025038],[0.011059,0.028272,0.01646],[0.011273,0.027978,0.017589],[0.016301,0.026973,0.028934],[0.058329,0.04899,0.072662],[0.037523,0.042389,0.060221],[0.03794,0.0422,0.061342],[0.053615,0.052022,0.073119]]},{"date":"201801112000","rgb":[[0.017934,0.027249,0.022315],[0.020882,0.026893,0.020141],[0.03246,0.026196,0.025862],[0.034431,0.026593,0.036623],[0.017018,0.027522,0.023179],[0.015783,0.027465,0.015658],[0.018035,0.025971,0.017398],[0.033307,0.026697,0.035653],[0.01969,0.026835,0.025183],[0.011521,0.028816,0.015014],[0.011152,0.028755,0.014706],[0.015931,0.027311,0.025074],[0.056665,0.046783,0.070474],[0.037236,0.043211,0.056514],[0.037067,0.042515,0.058477],[0.053373,0.052129,0.072521]]},{"date":"201801112010","rgb":[[0.019389,0.026631,0.023538],[0.021946,0.025862,0.021619],[0.032383,0.025809,0.027176],[0.035371,0.026471,0.03834],[0.019641,0.026571,0.023988],[0.018157,0.02674,0.017794],[0.02313,0.024064,0.018939],[0.036138,0.026412,0.036565],[0.02086,0.026483,0.025467],[0.012882,0.028569,0.018066],[0.013732,0.027204,0.020302],[0.018888,0.026401,0.028937],[0.056826,0.045546,0.069918],[0.037966,0.042838,0.059624],[0.038422,0.042953,0.059584],[0.055653,0.051638,0.07396]]},{"date":"201801112020","rgb":[[0.020043,0.026437,0.026815],[0.022642,0.025917,0.021953],[0.030272,0.025743,0.028505],[0.035331,0.026747,0.038892],[0.020196,0.02639,0.027264],[0.015833,0.028044,0.018946],[0.018283,0.026451,0.022357],[0.032041,0.026417,0.039113],[0.021325,0.026256,0.028606],[0.01252,0.028599,0.018052],[0.012432,0.027978,0.01986],[0.018332,0.026365,0.029836],[0.055282,0.044338,0.071765],[0.03839,0.042595,0.061315],[0.038589,0.042479,0.062501],[0.055986,0.051763,0.077319]]},{"date":"201801112030","rgb":[[0.020987,0.026127,0.026446],[0.023372,0.025801,0.024803],[0.03012,0.025595,0.029467],[0.033367,0.027052,0.040165],[0.020345,0.026142,0.027311],[0.016124,0.027134,0.021763],[0.018289,0.026567,0.021366],[0.02933,0.026295,0.035979],[0.021959,0.026137,0.029862],[0.013069,0.02801,0.021005],[0.011886,0.027705,0.020526],[0.018374,0.026017,0.030688],[0.054501,0.042887,0.072928],[0.038726,0.041703,0.063844],[0.038606,0.041729,0.063559],[0.055097,0.052042,0.077886]]},{"date":"201801112040","rgb":[[0.021002,0.026804,0.027164],[0.023397,0.025657,0.023324],[0.03038,0.025729,0.028608],[0.033187,0.026417,0.03813],[0.02243,0.025591,0.027469],[0.017137,0.027255,0.018712],[0.018082,0.026803,0.020797],[0.028368,0.026447,0.034144],[0.022579,0.025937,0.029032],[0.013733,0.028675,0.017937],[0.012599,0.028271,0.019439],[0.017742,0.026535,0.028442],[0.054136,0.042307,0.07135],[0.039379,0.042867,0.059007],[0.038945,0.042682,0.060982],[0.055985,0.051856,0.075459]]},{"date":"201801112050","rgb":[[0.01446,0.027847,0.019815],[0.013563,0.027472,0.015358],[0.013438,0.027605,0.016115],[0.016362,0.026745,0.025098],[0.014686,0.028025,0.021985],[0.010799,0.029031,0.012643],[0.010671,0.028686,0.013154],[0.014071,0.027216,0.023435],[0.017259,0.026945,0.025708],[0.01141,0.028782,0.015997],[0.010938,0.028864,0.014305],[0.013113,0.027053,0.0261],[0.050788,0.043089,0.069042],[0.038578,0.042344,0.060941],[0.038221,0.042719,0.059381],[0.053665,0.051975,0.074406]]},{"date":"201801112100","rgb":[[0.013624,0.026949,0.022818],[0.014012,0.02648,0.017918],[0.014228,0.026155,0.019608],[0.015663,0.026789,0.027043],[0.012924,0.027487,0.02332],[0.010722,0.028602,0.013808],[0.010709,0.027854,0.016435],[0.014036,0.027232,0.025041],[0.016358,0.026664,0.026633],[0.011759,0.027676,0.018605],[0.011567,0.02766,0.01901],[0.014623,0.026668,0.027391],[0.048684,0.04225,0.071086],[0.038137,0.042076,0.062203],[0.03816,0.041662,0.063734],[0.053657,0.051848,0.075368]]},{"date":"201801112110","rgb":[[0.013577,0.027139,0.022556],[0.012998,0.027309,0.015638],[0.014968,0.025744,0.019477],[0.015074,0.026665,0.026554],[0.01341,0.027378,0.023951],[0.010682,0.028863,0.013483],[0.010551,0.028412,0.013416],[0.013369,0.026979,0.024813],[0.015812,0.026802,0.027126],[0.011069,0.028443,0.016556],[0.010715,0.02806,0.015189],[0.013542,0.027063,0.026657],[0.048496,0.042388,0.071622],[0.037884,0.042016,0.062017],[0.038058,0.041642,0.062889],[0.052623,0.051809,0.075346]]},{"date":"201801112120","rgb":[[0.013797,0.027933,0.01977],[0.013264,0.027248,0.015764],[0.013058,0.027867,0.016163],[0.015051,0.027027,0.024903],[0.013394,0.027434,0.022649],[0.01072,0.028706,0.013491],[0.010716,0.028796,0.013399],[0.013297,0.027259,0.02435],[0.016104,0.027267,0.025093],[0.011086,0.029049,0.013873],[0.010948,0.028802,0.014671],[0.013255,0.027222,0.025139],[0.049096,0.042601,0.069365],[0.037583,0.042051,0.060481],[0.037736,0.042369,0.060529],[0.053428,0.051804,0.073619]]},{"date":"201801112130","rgb":[[0.01384,0.027051,0.025471],[0.013183,0.025708,0.021886],[0.014589,0.026072,0.019153],[0.015473,0.026665,0.02903],[0.013005,0.027015,0.024838],[0.010739,0.02806,0.015425],[0.010509,0.028546,0.013228],[0.012961,0.026818,0.025243],[0.0157,0.027112,0.026355],[0.011228,0.028215,0.017111],[0.010889,0.028151,0.016199],[0.013104,0.026885,0.026253],[0.048734,0.041935,0.071997],[0.037461,0.041605,0.062437],[0.037459,0.041416,0.062706],[0.052259,0.05186,0.075192]]},{"date":"201801112140","rgb":[[0.014372,0.027914,0.020707],[0.015255,0.026665,0.01511],[0.014152,0.027003,0.017084],[0.016688,0.026934,0.024228],[0.01397,0.027999,0.021556],[0.010824,0.028955,0.013597],[0.0107,0.028622,0.013653],[0.014471,0.027125,0.024679],[0.016604,0.02692,0.026178],[0.011335,0.028684,0.016189],[0.01084,0.0279,0.017271],[0.01407,0.02706,0.025461],[0.049887,0.042559,0.067306],[0.037453,0.043145,0.057124],[0.037669,0.042392,0.059256],[0.053976,0.051893,0.072706]]},{"date":"201801112150","rgb":[[0.013727,0.027043,0.023313],[0.014106,0.026656,0.016778],[0.014131,0.026493,0.019057],[0.01547,0.026699,0.027563],[0.013662,0.027438,0.023845],[0.010993,0.029061,0.014005],[0.010856,0.028785,0.014405],[0.014296,0.027153,0.026049],[0.017038,0.026777,0.028059],[0.011649,0.027682,0.020137],[0.011494,0.027689,0.019065],[0.015054,0.026743,0.028574],[0.04976,0.042292,0.070794],[0.038623,0.041856,0.06315],[0.039057,0.042117,0.062965],[0.054376,0.051683,0.075098]]},{"date":"201801112200","rgb":[[0.013773,0.027121,0.022621],[0.013912,0.0264,0.018734],[0.013833,0.026439,0.019094],[0.014963,0.026786,0.02608],[0.013189,0.02735,0.023629],[0.01089,0.028592,0.014543],[0.010713,0.028352,0.014742],[0.014206,0.026889,0.024745],[0.015658,0.026911,0.027126],[0.011346,0.02861,0.016581],[0.010869,0.028304,0.015745],[0.013783,0.027285,0.025559],[0.049053,0.042274,0.071508],[0.037898,0.042321,0.061136],[0.038002,0.041711,0.062879],[0.053768,0.051874,0.07452]]},{"date":"201801112210","rgb":[[0.014816,0.027189,0.015478],[0.013347,0.027202,0.013431],[0.013078,0.027236,0.015271],[0.014533,0.027201,0.02229],[0.012032,0.028614,0.017264],[0.010507,0.028853,0.012725],[0.010489,0.028676,0.012416],[0.012957,0.027797,0.021204],[0.01446,0.02804,0.02009],[0.010596,0.028932,0.012601],[0.010845,0.028983,0.013554],[0.013553,0.027562,0.021931],[0.047665,0.042425,0.066145],[0.036988,0.043311,0.055652],[0.03747,0.042778,0.057745],[0.052594,0.05204,0.071754]]},{"date":"201801112220","rgb":[[0.012432,0.028038,0.017671],[0.012518,0.027015,0.015061],[0.012945,0.026898,0.015155],[0.013534,0.027154,0.023842],[0.012076,0.028358,0.018448],[0.010499,0.028844,0.012037],[0.010457,0.028707,0.012432],[0.012959,0.027071,0.024886],[0.013354,0.027517,0.023163],[0.01058,0.028762,0.013274],[0.010595,0.028541,0.01391],[0.01312,0.027208,0.024888],[0.047774,0.042326,0.066454],[0.037244,0.042898,0.057515],[0.037937,0.042957,0.058545],[0.053359,0.052109,0.072976]]},{"date":"201801112230","rgb":[[0.012205,0.027448,0.018312],[0.012498,0.027353,0.014318],[0.012945,0.026032,0.018267],[0.013431,0.027097,0.024499],[0.011702,0.028543,0.01689],[0.01043,0.028795,0.011267],[0.01036,0.028649,0.01121],[0.012362,0.027223,0.021584],[0.013824,0.02845,0.019187],[0.010578,0.028757,0.012339],[0.010547,0.028834,0.011692],[0.012632,0.027171,0.023738],[0.047137,0.042416,0.063889],[0.03718,0.043335,0.055162],[0.037064,0.042993,0.056479],[0.052824,0.05221,0.071266]]},{"date":"201801112240","rgb":[[0.013568,0.027855,0.019771],[0.011656,0.026666,0.01835],[0.012771,0.026811,0.018114],[0.015393,0.026549,0.0274],[0.012372,0.02727,0.022614],[0.010654,0.028569,0.013599],[0.010659,0.028049,0.015495],[0.013134,0.026863,0.026081],[0.015185,0.027151,0.025775],[0.011171,0.027729,0.018226],[0.011113,0.027955,0.017692],[0.013467,0.027026,0.027335],[0.046889,0.041815,0.069127],[0.037866,0.041949,0.061366],[0.03799,0.041962,0.062831],[0.052876,0.052007,0.076277]]},{"date":"201801112250","rgb":[[0.012938,0.027607,0.018484],[0.01611,0.025503,0.014517],[0.014146,0.02621,0.01546],[0.014163,0.026654,0.023614],[0.011673,0.028008,0.018671],[0.010456,0.028825,0.011052],[0.010442,0.028696,0.012194],[0.012337,0.027574,0.020659],[0.013688,0.027664,0.022746],[0.010675,0.028809,0.013268],[0.010522,0.028602,0.013731],[0.012685,0.027602,0.022726],[0.046404,0.042165,0.066771],[0.037241,0.043157,0.056397],[0.037389,0.043252,0.056897],[0.053304,0.052033,0.072166]]},{"date":"201801112300","rgb":[[0.013754,0.027479,0.022241],[0.01222,0.027356,0.01586],[0.012753,0.0268,0.018621],[0.014597,0.02675,0.027349],[0.013497,0.027736,0.022079],[0.010812,0.02874,0.014118],[0.010932,0.027768,0.016928],[0.014082,0.026667,0.026929],[0.015471,0.027129,0.025713],[0.011038,0.028032,0.016591],[0.011166,0.027653,0.018625],[0.014134,0.026963,0.027102],[0.046961,0.041848,0.068365],[0.037669,0.04276,0.058235],[0.038099,0.042288,0.06151],[0.053333,0.051945,0.074947]]},{"date":"201801112310","rgb":[[0.01859,0.027125,0.022505],[0.014946,0.027338,0.018071],[0.013575,0.027636,0.018173],[0.016844,0.027189,0.02517],[0.016912,0.02747,0.023275],[0.012046,0.028981,0.015969],[0.011543,0.028876,0.014964],[0.015372,0.027611,0.023508],[0.018188,0.02713,0.023856],[0.011855,0.028649,0.016443],[0.011568,0.029247,0.01475],[0.015766,0.027443,0.024279],[0.048667,0.041733,0.067046],[0.038194,0.043066,0.057717],[0.038371,0.043399,0.05843],[0.054583,0.052129,0.071034]]},{"date":"201801112320","rgb":[[0.020388,0.026786,0.023953],[0.014208,0.02811,0.017824],[0.01335,0.027942,0.017685],[0.016773,0.026934,0.026963],[0.022048,0.025994,0.024243],[0.014534,0.029127,0.015754],[0.012066,0.028823,0.016584],[0.016548,0.027179,0.024952],[0.024102,0.025835,0.028059],[0.014754,0.028792,0.01804],[0.013024,0.028603,0.018312],[0.017404,0.026537,0.027868],[0.050557,0.041757,0.069384],[0.039295,0.042795,0.060363],[0.038986,0.042578,0.061098],[0.054817,0.051444,0.074895]]},{"date":"201801112330","rgb":[[0.024782,0.026009,0.027147],[0.01769,0.027128,0.020917],[0.015281,0.027641,0.021362],[0.018131,0.026462,0.028688],[0.028074,0.026338,0.030948],[0.020027,0.026492,0.021175],[0.014261,0.028101,0.021324],[0.016957,0.026403,0.028402],[0.034084,0.025929,0.034116],[0.021901,0.025666,0.021573],[0.017013,0.027652,0.021789],[0.018665,0.02628,0.028511],[0.058786,0.041299,0.075973],[0.043545,0.04168,0.063196],[0.040771,0.042279,0.063902],[0.055565,0.051666,0.076726]]},{"date":"201801112340","rgb":[[0.026043,0.025953,0.024671],[0.019433,0.026996,0.018452],[0.016062,0.027647,0.019451],[0.018275,0.02668,0.026526],[0.034502,0.026016,0.032203],[0.02394,0.025523,0.020117],[0.017728,0.027578,0.021374],[0.018732,0.026718,0.026158],[0.043641,0.027041,0.036452],[0.027494,0.02537,0.0228],[0.018952,0.027252,0.021337],[0.019004,0.026551,0.028297],[0.064833,0.041923,0.074345],[0.047493,0.040886,0.060032],[0.041975,0.042243,0.060595],[0.056008,0.051639,0.074333]]},{"date":"201801112350","rgb":[[0.029053,0.026306,0.031506],[0.022167,0.025526,0.021591],[0.019419,0.026595,0.022034],[0.021228,0.026275,0.030876],[0.03793,0.02591,0.034242],[0.026951,0.025207,0.023746],[0.020459,0.026024,0.021651],[0.021577,0.026114,0.02992],[0.046738,0.027454,0.039971],[0.029979,0.025657,0.026618],[0.023075,0.024433,0.022793],[0.022317,0.025845,0.032126],[0.065551,0.042273,0.077137],[0.050004,0.040194,0.063255],[0.044387,0.041338,0.062345],[0.057262,0.051585,0.075923]]},{"date":"201801120000","rgb":[[0.025962,0.02568,0.024559],[0.019528,0.026395,0.019895],[0.016846,0.027548,0.018896],[0.018706,0.026524,0.026221],[0.033652,0.02588,0.031712],[0.023868,0.025833,0.021357],[0.01719,0.027883,0.019726],[0.019051,0.0265,0.027745],[0.042363,0.026681,0.034976],[0.027338,0.025406,0.024733],[0.019774,0.026448,0.021157],[0.019973,0.026175,0.029211],[0.06337,0.042072,0.075028],[0.049642,0.040261,0.064369],[0.043572,0.041782,0.062027],[0.057004,0.051768,0.075576]]},{"date":"201801120010","rgb":[[0.021841,0.026063,0.021595],[0.015494,0.028132,0.016278],[0.014269,0.027962,0.017792],[0.017566,0.026733,0.025266],[0.026956,0.025796,0.025856],[0.019106,0.027199,0.01644],[0.013997,0.02939,0.01651],[0.017397,0.026867,0.026496],[0.035361,0.025842,0.031149],[0.022396,0.025981,0.018949],[0.015571,0.028116,0.020595],[0.018692,0.026559,0.027978],[0.06065,0.041636,0.072548],[0.045592,0.040806,0.059771],[0.041346,0.042336,0.061782],[0.056023,0.051618,0.074898]]},{"date":"201801120020","rgb":[[0.018567,0.027009,0.023739],[0.013899,0.028088,0.018779],[0.013444,0.027319,0.019936],[0.016687,0.026722,0.026641],[0.021959,0.026017,0.02689],[0.014982,0.028033,0.019477],[0.011506,0.027742,0.01941],[0.015261,0.026567,0.026571],[0.02828,0.025856,0.03153],[0.016872,0.027635,0.020972],[0.011789,0.02809,0.019137],[0.013991,0.026812,0.027292],[0.057831,0.041043,0.074411],[0.042629,0.041911,0.061159],[0.038797,0.042248,0.062265],[0.053983,0.052211,0.07435]]},{"date":"201801120030","rgb":[[0.014977,0.027001,0.020782],[0.012889,0.027221,0.016299],[0.012914,0.026645,0.018657],[0.014697,0.027092,0.024506],[0.014626,0.028325,0.021056],[0.01108,0.029291,0.013522],[0.010726,0.028815,0.013541],[0.013821,0.027391,0.023655],[0.020949,0.026675,0.025663],[0.012745,0.02889,0.017138],[0.011264,0.028358,0.016346],[0.014947,0.026917,0.025864],[0.051847,0.041698,0.0703],[0.038359,0.042814,0.059657],[0.037897,0.042578,0.059027],[0.05384,0.052425,0.074114]]},{"date":"201801120040","rgb":[[0.0136,0.026931,0.02227],[0.012962,0.026228,0.019367],[0.012616,0.026585,0.018448],[0.014776,0.026887,0.027023],[0.013538,0.027457,0.022965],[0.010796,0.028826,0.013476],[0.010582,0.028458,0.01345],[0.012953,0.027329,0.02374],[0.018031,0.027031,0.025761],[0.011619,0.028797,0.015747],[0.010842,0.028189,0.015741],[0.013176,0.027002,0.026278],[0.050666,0.041519,0.06965],[0.038308,0.043379,0.057042],[0.037797,0.042995,0.059549],[0.053603,0.052542,0.072992]]},{"date":"201801120050","rgb":[[0.014201,0.028144,0.017711],[0.013775,0.027151,0.015319],[0.012241,0.026769,0.018345],[0.015007,0.027013,0.024224],[0.013862,0.028692,0.019166],[0.010665,0.028878,0.012761],[0.010607,0.028694,0.012619],[0.01326,0.027351,0.022372],[0.017809,0.027514,0.023347],[0.011089,0.02932,0.013624],[0.010687,0.028742,0.013065],[0.013647,0.027495,0.02336],[0.050485,0.042263,0.066782],[0.037793,0.043395,0.056673],[0.038017,0.043138,0.056698],[0.053588,0.052591,0.071158]]},{"date":"201801120100","rgb":[[0.01525,0.027925,0.019823],[0.014709,0.026862,0.01471],[0.015345,0.026231,0.015256],[0.015375,0.02661,0.025582],[0.015578,0.027601,0.022652],[0.011337,0.02938,0.013919],[0.010784,0.028658,0.014302],[0.014013,0.027188,0.024247],[0.022395,0.026325,0.025172],[0.012958,0.029138,0.01526],[0.010931,0.028747,0.014093],[0.013547,0.027206,0.024644],[0.055335,0.041441,0.068988],[0.03967,0.043169,0.056862],[0.038042,0.043283,0.057531],[0.053268,0.052376,0.070693]]},{"date":"201801120110","rgb":[[0.025218,0.025263,0.026329],[0.018752,0.026739,0.020658],[0.016225,0.027461,0.021284],[0.018545,0.026222,0.029773],[0.028621,0.026339,0.030237],[0.020179,0.026502,0.020353],[0.015492,0.028167,0.02078],[0.018342,0.026663,0.027376],[0.037188,0.026107,0.033178],[0.023108,0.025663,0.022313],[0.016932,0.027867,0.021752],[0.018833,0.0263,0.028283],[0.06329,0.041665,0.074935],[0.045803,0.040764,0.061604],[0.040653,0.042463,0.062735],[0.056159,0.051428,0.074721]]},{"date":"201801120120","rgb":[[0.02823,0.025602,0.027719],[0.021902,0.025434,0.02137],[0.019469,0.026646,0.021385],[0.02099,0.026399,0.029402],[0.032247,0.025927,0.031622],[0.023869,0.02529,0.02091],[0.018461,0.027344,0.020791],[0.020941,0.026395,0.028697],[0.039708,0.026531,0.035518],[0.025568,0.025054,0.022565],[0.018899,0.026857,0.021372],[0.019794,0.026555,0.028061],[0.062852,0.041961,0.075825],[0.047113,0.03991,0.062666],[0.041109,0.042066,0.063008],[0.056179,0.051682,0.074853]]},{"date":"201801120130","rgb":[[0.026298,0.025804,0.026277],[0.020005,0.026411,0.020105],[0.018257,0.026942,0.020023],[0.019968,0.026491,0.027823],[0.029919,0.026001,0.028793],[0.020891,0.026373,0.018663],[0.015889,0.028529,0.017959],[0.017988,0.027128,0.025555],[0.03744,0.026376,0.032522],[0.023234,0.025414,0.020202],[0.017205,0.02802,0.018884],[0.019151,0.026707,0.025362],[0.062573,0.042176,0.073153],[0.045362,0.041054,0.05935],[0.041316,0.042828,0.05983],[0.055684,0.052046,0.07246]]},{"date":"201801120140","rgb":[[0.026959,0.025903,0.02823],[0.019068,0.026806,0.021179],[0.015857,0.027726,0.020269],[0.018188,0.026423,0.02757],[0.032229,0.025805,0.032871],[0.02194,0.026064,0.021444],[0.014812,0.028653,0.019549],[0.018043,0.026747,0.027285],[0.038565,0.026198,0.03682],[0.022527,0.025824,0.023328],[0.015904,0.02791,0.022016],[0.017986,0.026478,0.028273],[0.063756,0.042412,0.075336],[0.043762,0.041185,0.062334],[0.040478,0.042266,0.062192],[0.055191,0.051827,0.074878]]},{"date":"201801120150","rgb":[[0.030867,0.026443,0.030659],[0.023694,0.024545,0.022253],[0.019687,0.026398,0.021592],[0.020692,0.026148,0.028547],[0.037772,0.025787,0.034264],[0.025035,0.025247,0.022885],[0.018468,0.027262,0.022512],[0.019284,0.026278,0.027478],[0.044283,0.026674,0.03777],[0.025268,0.025132,0.024669],[0.018526,0.027269,0.02262],[0.018229,0.026602,0.02821],[0.068451,0.042764,0.07763],[0.046314,0.040705,0.061932],[0.041343,0.042203,0.062488],[0.05595,0.051546,0.074284]]},{"date":"201801120200","rgb":[[0.032187,0.026237,0.029693],[0.024192,0.024775,0.020925],[0.019795,0.026333,0.022342],[0.020421,0.026523,0.029427],[0.041889,0.026354,0.033654],[0.027359,0.025299,0.021402],[0.020304,0.026421,0.019917],[0.020474,0.026071,0.027478],[0.048814,0.028241,0.039757],[0.029848,0.025533,0.025455],[0.021767,0.025082,0.022421],[0.019498,0.026471,0.028252],[0.071659,0.043603,0.077017],[0.048974,0.040242,0.062591],[0.043016,0.041437,0.06136],[0.05589,0.052107,0.07426]]},{"date":"201801120210","rgb":[[0.030716,0.026134,0.027849],[0.023386,0.025198,0.021142],[0.019743,0.026408,0.021184],[0.020462,0.026644,0.028016],[0.039778,0.026489,0.032914],[0.026714,0.025052,0.023377],[0.019352,0.026764,0.021234],[0.020584,0.026388,0.028142],[0.047797,0.027647,0.040384],[0.028502,0.025217,0.026257],[0.020173,0.026076,0.023558],[0.020509,0.026186,0.029452],[0.07218,0.043866,0.075644],[0.04833,0.040375,0.062616],[0.042338,0.04202,0.061724],[0.055967,0.051914,0.073305]]},{"date":"201801120220","rgb":[[0.028661,0.026234,0.030866],[0.022035,0.025419,0.022503],[0.019082,0.02661,0.022888],[0.020255,0.026433,0.030742],[0.034684,0.02592,0.035573],[0.023623,0.025319,0.02241],[0.018298,0.027361,0.021827],[0.019959,0.02602,0.029806],[0.046767,0.027176,0.041753],[0.026792,0.025367,0.026123],[0.019488,0.026724,0.023776],[0.020556,0.026121,0.03017],[0.073567,0.043784,0.080607],[0.047129,0.040795,0.064169],[0.042155,0.041813,0.063781],[0.056381,0.051641,0.075516]]},{"date":"201801120230","rgb":[[0.029737,0.02638,0.028037],[0.02277,0.024979,0.01925],[0.018608,0.027374,0.018889],[0.0197,0.026722,0.027317],[0.035933,0.026153,0.03179],[0.024773,0.025244,0.019088],[0.017683,0.027789,0.018936],[0.018361,0.027046,0.025031],[0.045501,0.02737,0.03662],[0.026383,0.0255,0.022685],[0.018186,0.027439,0.020045],[0.019011,0.026686,0.026872],[0.072174,0.044162,0.075524],[0.047156,0.040477,0.060476],[0.041632,0.042236,0.060378],[0.055951,0.051873,0.072612]]},{"date":"201801120240","rgb":[[0.02539,0.025642,0.026549],[0.018705,0.026642,0.020055],[0.015116,0.027434,0.020824],[0.017147,0.026487,0.027552],[0.031557,0.025982,0.029827],[0.02096,0.026447,0.01759],[0.01408,0.028028,0.020187],[0.016608,0.027149,0.024079],[0.04385,0.0269,0.037455],[0.024403,0.02566,0.022439],[0.015666,0.027841,0.02078],[0.01776,0.026676,0.027069],[0.071292,0.043456,0.077305],[0.044663,0.041034,0.061468],[0.039209,0.04238,0.061929],[0.054358,0.051989,0.072376]]},{"date":"201801120250","rgb":[[0.029071,0.026073,0.028115],[0.022374,0.02541,0.020874],[0.01806,0.027183,0.021744],[0.019897,0.026767,0.028957],[0.037088,0.02612,0.031142],[0.025165,0.025021,0.022602],[0.018815,0.027391,0.021763],[0.019533,0.026377,0.028114],[0.049388,0.028054,0.038866],[0.02852,0.025278,0.02595],[0.020092,0.02624,0.023402],[0.020502,0.025955,0.029371],[0.074664,0.044644,0.078595],[0.048788,0.039876,0.063936],[0.042753,0.041421,0.063429],[0.056688,0.051702,0.074484]]},{"date":"201801120300","rgb":[[0.023397,0.025932,0.024588],[0.016499,0.028166,0.017175],[0.01505,0.0279,0.018245],[0.017202,0.026745,0.026245],[0.027559,0.02599,0.027373],[0.017363,0.027813,0.016826],[0.012402,0.028938,0.016986],[0.016509,0.027065,0.025153],[0.03651,0.025922,0.033682],[0.021172,0.026245,0.019969],[0.012856,0.028416,0.019497],[0.016417,0.026705,0.027169],[0.069217,0.044948,0.076178],[0.042583,0.041974,0.060447],[0.038906,0.042311,0.062246],[0.05508,0.052062,0.074003]]},{"date":"201801120310","rgb":[[0.018526,0.027021,0.024173],[0.013436,0.027721,0.01805],[0.014087,0.027243,0.018428],[0.01617,0.026674,0.026263],[0.021235,0.026397,0.024087],[0.012131,0.029168,0.015105],[0.011549,0.028455,0.016026],[0.015069,0.027089,0.02546],[0.025774,0.025463,0.027197],[0.014073,0.028912,0.017169],[0.012619,0.028902,0.016888],[0.016607,0.026509,0.027074],[0.059417,0.045255,0.072651],[0.038399,0.043108,0.058576],[0.039222,0.042514,0.061126],[0.055142,0.051649,0.073523]]},{"date":"201801120320","rgb":[[0.014413,0.027635,0.01874],[0.013361,0.026409,0.017511],[0.012227,0.027157,0.017102],[0.014825,0.027024,0.024965],[0.014345,0.028673,0.01776],[0.010603,0.028983,0.011848],[0.01056,0.028712,0.012939],[0.013299,0.027169,0.023681],[0.017736,0.027375,0.023882],[0.011178,0.029091,0.01392],[0.010817,0.028675,0.014619],[0.013421,0.027185,0.025242],[0.05556,0.045998,0.069617],[0.037172,0.042845,0.057441],[0.03781,0.042198,0.061055],[0.052947,0.052202,0.073292]]},{"date":"201801120330","rgb":[[0.015142,0.027345,0.022982],[0.013766,0.026177,0.019514],[0.013289,0.02616,0.020972],[0.014405,0.026705,0.028682],[0.016312,0.027499,0.02311],[0.011038,0.028964,0.014381],[0.010766,0.02775,0.016407],[0.013152,0.027079,0.024887],[0.018273,0.026855,0.026455],[0.011454,0.029062,0.014934],[0.011057,0.027892,0.017505],[0.013533,0.026808,0.027636],[0.05676,0.045843,0.072269],[0.037762,0.041793,0.063083],[0.037694,0.041976,0.06162],[0.053579,0.052105,0.074263]]},{"date":"201801120340","rgb":[[0.01879,0.026794,0.024916],[0.013526,0.027337,0.020136],[0.013705,0.026293,0.022637],[0.01649,0.026272,0.029735],[0.021803,0.026429,0.025832],[0.012583,0.028093,0.018804],[0.011365,0.027179,0.020547],[0.014832,0.026825,0.028336],[0.024457,0.025764,0.029666],[0.013805,0.027556,0.021313],[0.012141,0.027533,0.021782],[0.015067,0.02685,0.029669],[0.058902,0.045656,0.07373],[0.038707,0.04172,0.063005],[0.03844,0.041667,0.064287],[0.053531,0.051834,0.077299]]},{"date":"201801120350","rgb":[[0.015748,0.027324,0.0227],[0.013081,0.027404,0.016347],[0.013357,0.026861,0.01721],[0.015013,0.027068,0.02599],[0.01836,0.027411,0.023284],[0.011267,0.029044,0.014662],[0.01078,0.028346,0.014813],[0.013795,0.026752,0.025485],[0.023348,0.02592,0.025947],[0.012373,0.029205,0.015804],[0.011379,0.02845,0.01659],[0.015432,0.026861,0.026093],[0.058482,0.045747,0.073025],[0.037569,0.042822,0.059206],[0.03779,0.042275,0.061403],[0.053258,0.052056,0.073559]]},{"date":"201801120400","rgb":[[0.021079,0.02616,0.023237],[0.014588,0.02816,0.016262],[0.014784,0.02658,0.018169],[0.016183,0.026875,0.02503],[0.026557,0.025589,0.025519],[0.014855,0.028831,0.015516],[0.01161,0.028713,0.015873],[0.015504,0.027159,0.024672],[0.032943,0.02618,0.029459],[0.018159,0.027498,0.016246],[0.012511,0.02926,0.015958],[0.016533,0.027093,0.024453],[0.065987,0.045358,0.073692],[0.040889,0.04225,0.058859],[0.038322,0.042732,0.060168],[0.054028,0.052217,0.072244]]},{"date":"201801120410","rgb":[[0.024406,0.025471,0.021828],[0.017571,0.02756,0.015997],[0.017164,0.02681,0.017731],[0.018711,0.026616,0.026949],[0.027659,0.025751,0.026224],[0.018293,0.027468,0.017325],[0.01283,0.029125,0.017394],[0.017473,0.026906,0.026914],[0.036239,0.026447,0.03132],[0.020418,0.026624,0.018958],[0.016572,0.027922,0.020254],[0.01921,0.026409,0.028399],[0.067884,0.045243,0.072889],[0.042906,0.041584,0.05965],[0.040359,0.042544,0.060977],[0.055342,0.051707,0.073603]]},{"date":"201801120420","rgb":[[0.022791,0.025782,0.021382],[0.017478,0.027425,0.016279],[0.017556,0.026643,0.016568],[0.018638,0.02677,0.02395],[0.026604,0.025787,0.023539],[0.016736,0.028189,0.016308],[0.012683,0.029334,0.015459],[0.016664,0.027208,0.024356],[0.034494,0.026307,0.029076],[0.020136,0.026829,0.018277],[0.014489,0.028788,0.018146],[0.018842,0.026665,0.025645],[0.066968,0.044853,0.072189],[0.042541,0.041778,0.059546],[0.04013,0.04283,0.059709],[0.055269,0.051807,0.072481]]},{"date":"201801120430","rgb":[[0.027927,0.025857,0.027463],[0.021198,0.025669,0.020119],[0.018816,0.026619,0.020998],[0.01995,0.026561,0.029794],[0.033842,0.025946,0.029402],[0.021649,0.026063,0.019477],[0.017787,0.027853,0.018105],[0.020359,0.026431,0.028149],[0.046575,0.028018,0.033912],[0.02588,0.02524,0.022007],[0.019959,0.026367,0.021297],[0.023461,0.025758,0.030331],[0.074434,0.045831,0.07599],[0.046206,0.040468,0.061521],[0.044438,0.04048,0.062048],[0.057541,0.05167,0.07558]]},{"date":"201801120440","rgb":[[0.02583,0.025751,0.03],[0.019465,0.026516,0.021609],[0.017968,0.026992,0.022133],[0.02003,0.026461,0.031934],[0.034349,0.025957,0.032365],[0.022632,0.025491,0.02142],[0.017818,0.027522,0.021826],[0.022057,0.025983,0.031453],[0.048918,0.027996,0.040163],[0.026274,0.024982,0.025544],[0.020346,0.026107,0.02335],[0.023445,0.026284,0.035217],[0.080159,0.046736,0.079107],[0.047405,0.040138,0.062247],[0.04449,0.040461,0.063512],[0.058312,0.05207,0.075936]]},{"date":"201801120450","rgb":[[0.032629,0.02628,0.033008],[0.024737,0.024824,0.02472],[0.022838,0.024904,0.025496],[0.025097,0.026679,0.036264],[0.041551,0.026431,0.036457],[0.026511,0.025434,0.026045],[0.023637,0.024157,0.025484],[0.025695,0.026106,0.03526],[0.052607,0.029522,0.039681],[0.029931,0.025616,0.028509],[0.025084,0.024886,0.028095],[0.028024,0.026411,0.037954],[0.079945,0.046729,0.077884],[0.04906,0.040225,0.063578],[0.046691,0.040135,0.065546],[0.059707,0.0518,0.077104]]},{"date":"201801120500","rgb":[[0.021441,0.026521,0.022909],[0.01747,0.026247,0.020873],[0.015969,0.02635,0.020408],[0.017069,0.026582,0.02841],[0.024423,0.025699,0.023406],[0.014229,0.028441,0.018134],[0.012286,0.028446,0.018062],[0.017544,0.026895,0.025821],[0.031926,0.026255,0.031254],[0.018183,0.027316,0.020243],[0.015069,0.028062,0.02182],[0.020284,0.026314,0.030916],[0.068809,0.046049,0.075743],[0.042963,0.041603,0.061824],[0.042216,0.04208,0.063585],[0.056323,0.051932,0.075586]]},{"date":"201801120510","rgb":[[0.028088,0.025948,0.029315],[0.02166,0.025159,0.021916],[0.020791,0.025697,0.024683],[0.022999,0.026504,0.035456],[0.033882,0.026059,0.031955],[0.024223,0.024459,0.02433],[0.022271,0.024671,0.024844],[0.02528,0.026115,0.036137],[0.044886,0.027068,0.036331],[0.026141,0.025123,0.024919],[0.025037,0.025037,0.029127],[0.028489,0.026307,0.040015],[0.075934,0.046705,0.078972],[0.047919,0.039976,0.064155],[0.047401,0.040611,0.069273],[0.059757,0.051836,0.079296]]},{"date":"201801120520","rgb":[[0.028944,0.026018,0.031718],[0.021711,0.025308,0.024259],[0.020846,0.025008,0.026151],[0.022254,0.026518,0.035093],[0.031869,0.026371,0.033937],[0.023442,0.024877,0.024995],[0.020307,0.025627,0.026257],[0.022971,0.026364,0.036427],[0.045789,0.027057,0.039865],[0.027007,0.025095,0.029604],[0.025065,0.024814,0.031291],[0.027472,0.02627,0.041131],[0.077002,0.047003,0.080593],[0.047149,0.040408,0.067956],[0.046643,0.040869,0.070092],[0.059349,0.051962,0.080725]]},{"date":"201801120530","rgb":[[0.02619,0.025815,0.028246],[0.019968,0.026366,0.021197],[0.018942,0.026345,0.02388],[0.022532,0.026541,0.033451],[0.027853,0.02594,0.028379],[0.019859,0.026255,0.02232],[0.017475,0.02754,0.023245],[0.023389,0.025741,0.033571],[0.035996,0.026179,0.034991],[0.023042,0.024959,0.024685],[0.021152,0.025641,0.026595],[0.026683,0.026022,0.038728],[0.069476,0.046786,0.07676],[0.045301,0.040039,0.064238],[0.045779,0.04063,0.068928],[0.060759,0.05172,0.080901]]},{"date":"201801120540","rgb":[[0.022694,0.025958,0.024042],[0.017009,0.027425,0.021398],[0.016137,0.027308,0.023344],[0.019709,0.026503,0.031042],[0.025585,0.025235,0.026158],[0.018213,0.027472,0.021179],[0.016382,0.027542,0.023793],[0.021025,0.026466,0.031794],[0.0295,0.026238,0.028746],[0.019686,0.02672,0.022014],[0.018596,0.026651,0.025729],[0.024746,0.026182,0.036057],[0.064331,0.046917,0.071121],[0.042544,0.041617,0.061837],[0.043527,0.041176,0.065151],[0.058838,0.051833,0.077366]]},{"date":"201801120550","rgb":[[0.020885,0.026131,0.028543],[0.016486,0.026913,0.023338],[0.014279,0.027182,0.023681],[0.017987,0.02628,0.031535],[0.025594,0.02571,0.029468],[0.017704,0.027326,0.023],[0.01497,0.027591,0.024058],[0.0197,0.026495,0.032045],[0.029927,0.026452,0.034844],[0.019772,0.026155,0.024776],[0.018262,0.026115,0.027643],[0.022837,0.026515,0.038862],[0.066149,0.047302,0.076038],[0.042172,0.041308,0.063822],[0.043666,0.040756,0.067548],[0.058532,0.051888,0.080445]]},{"date":"201801120600","rgb":[[0.021069,0.026646,0.025611],[0.015366,0.027616,0.020647],[0.015412,0.027247,0.021508],[0.018861,0.026351,0.029078],[0.023078,0.026222,0.028018],[0.015432,0.02786,0.022479],[0.0142,0.027781,0.022997],[0.017808,0.026497,0.030581],[0.028867,0.026353,0.032424],[0.018778,0.026913,0.023875],[0.018392,0.026509,0.026625],[0.021556,0.026144,0.0346],[0.065545,0.047513,0.074614],[0.04206,0.041549,0.063144],[0.043435,0.041539,0.06592],[0.057571,0.051973,0.077082]]},{"date":"201801120610","rgb":[[0.024057,0.026077,0.030038],[0.017938,0.026898,0.024157],[0.016344,0.026811,0.026171],[0.020915,0.0266,0.034765],[0.027099,0.02576,0.031315],[0.018894,0.026639,0.024741],[0.017568,0.026939,0.025506],[0.024646,0.026419,0.038191],[0.033091,0.026507,0.037673],[0.020938,0.025822,0.026459],[0.020144,0.02559,0.030438],[0.027644,0.026555,0.043393],[0.065672,0.047861,0.078535],[0.042344,0.040908,0.066112],[0.043235,0.041034,0.06873],[0.059211,0.051792,0.081331]]},{"date":"201801120620","rgb":[[0.019431,0.026001,0.028107],[0.015427,0.027058,0.024431],[0.015594,0.026854,0.0262],[0.02017,0.026378,0.03387],[0.023176,0.026107,0.02974],[0.016197,0.027478,0.024127],[0.015085,0.027443,0.025149],[0.021401,0.026435,0.03576],[0.02958,0.026219,0.034298],[0.017627,0.026929,0.025436],[0.018058,0.026703,0.026927],[0.025593,0.026363,0.040101],[0.065719,0.047878,0.077755],[0.042311,0.0409,0.065621],[0.044357,0.040621,0.069165],[0.059678,0.052007,0.082183]]},{"date":"201801120630","rgb":[[0.018764,0.026098,0.032984],[0.014567,0.026883,0.02887],[0.014689,0.026471,0.032089],[0.020965,0.027133,0.040556],[0.026988,0.025957,0.036036],[0.018581,0.02572,0.029932],[0.017927,0.025326,0.031792],[0.022919,0.026787,0.041961],[0.043091,0.027099,0.046559],[0.023836,0.025439,0.033683],[0.021751,0.025416,0.036575],[0.026021,0.027802,0.047182],[0.076319,0.047919,0.084031],[0.045001,0.041002,0.068398],[0.046251,0.04107,0.073001],[0.060539,0.052063,0.083075]]},{"date":"201801120640","rgb":[[0.029996,0.028863,0.058515],[0.023914,0.027562,0.053496],[0.021472,0.02824,0.055489],[0.028093,0.029346,0.066853],[0.041145,0.027885,0.05971],[0.025927,0.027941,0.053634],[0.024167,0.02787,0.055393],[0.029533,0.030129,0.068838],[0.05699,0.029648,0.064725],[0.029866,0.027637,0.053576],[0.026787,0.028449,0.05716],[0.031937,0.030138,0.069546],[0.084653,0.050285,0.093335],[0.047709,0.042288,0.080718],[0.047764,0.04288,0.083842],[0.06218,0.053339,0.091846]]},{"date":"201801120650","rgb":[[0.049279,0.0369,0.22789],[0.045167,0.036813,0.23152],[0.045958,0.036158,0.2387],[0.047811,0.035797,0.25205],[0.059317,0.034622,0.21782],[0.04521,0.036916,0.2245],[0.044816,0.036705,0.22912],[0.048004,0.036986,0.24542],[0.075897,0.034489,0.19535],[0.04658,0.035942,0.20615],[0.043314,0.036733,0.21473],[0.048829,0.037014,0.22561],[0.099064,0.052764,0.15296],[0.05881,0.046263,0.15623],[0.05812,0.046808,0.16518],[0.071125,0.055934,0.15514]]},{"date":"201801120700","rgb":[[0.13528,0.15186,0.60016],[0.13197,0.17292,0.62737],[0.13614,0.17411,0.65168],[0.14051,0.15454,0.66174],[0.13635,0.15834,0.56922],[0.13047,0.17659,0.60882],[0.13225,0.17687,0.62857],[0.13991,0.16002,0.64221],[0.14449,0.14318,0.52526],[0.1259,0.16057,0.56193],[0.12702,0.15936,0.5771],[0.13114,0.14148,0.58],[0.13011,0.094827,0.36159],[0.10355,0.10377,0.38218],[0.10587,0.10405,0.39135],[0.10575,0.089495,0.3337]]},{"date":"201801120710","rgb":[[0.32964,0.59718,0.99405],[0.35613,0.69312,0.99643],[0.36652,0.694,0.9962],[0.35945,0.65608,0.9932],[0.32101,0.54872,0.99409],[0.34936,0.63658,0.99556],[0.35868,0.64938,0.99555],[0.35666,0.61898,0.99419],[0.30659,0.46332,0.99438],[0.32214,0.52459,0.99539],[0.33595,0.53958,0.99499],[0.32948,0.5066,0.98372],[0.23899,0.2707,0.78046],[0.23076,0.30645,0.78574],[0.24282,0.30864,0.78813],[0.21458,0.23593,0.67186]]},{"date":"201801120720","rgb":[[0.87987,0.99957,0.99845],[0.93506,0.99849,0.99802],[0.96217,0.99245,0.9963],[0.95671,0.99349,0.99676],[0.84966,0.99944,0.99898],[0.9173,0.99928,0.99829],[0.9393,0.99786,0.99792],[0.94048,0.99693,0.99795],[0.75477,0.99924,0.99844],[0.84657,0.99954,0.9988],[0.87969,0.9996,0.99852],[0.86247,0.98547,0.99612],[0.47512,0.71186,0.93055],[0.54873,0.73024,0.91512],[0.5839,0.72738,0.92349],[0.48846,0.57185,0.86981]]},{"date":"201801120730","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99559,0.97664,1],[0.99607,0.97647,1],[0.99608,0.97647,1],[0.99252,0.97769,1],[0.98553,0.98001,1],[0.98785,0.97924,1],[0.98428,0.9733,0.99895],[0.75977,0.8672,0.95014],[0.77193,0.83332,0.94898],[0.79861,0.84504,0.94806],[0.68453,0.73454,0.92828]]},{"date":"201801120740","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99191,0.9769,0.99944],[0.88053,0.91009,0.95107],[0.86258,0.9106,0.95102],[0.89478,0.90936,0.94957],[0.80976,0.88367,0.93464]]},{"date":"201801120750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9942,0.97683,0.9998],[0.91622,0.90788,0.95142],[0.91452,0.90905,0.95037],[0.92129,0.90774,0.94989],[0.85678,0.90445,0.93661]]},{"date":"201801120800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99603,0.97648,1],[0.93121,0.90484,0.95161],[0.93127,0.9048,0.95161],[0.9309,0.90504,0.95161],[0.90327,0.9083,0.94269]]},{"date":"201801120810","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93088,0.90503,0.9515],[0.92075,0.9082,0.93917]]},{"date":"201801120820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.9034,0.9449]]},{"date":"201801120830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93125,0.90482,0.95161],[0.92598,0.90543,0.94487]]},{"date":"201801120840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90342,0.94485]]},{"date":"201801120850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90337,0.94478]]},{"date":"201801120900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90338,0.94482]]},{"date":"201801120910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99547,0.97667,1],[0.99598,0.97651,1],[0.99608,0.97647,1],[0.9924,0.97771,1],[0.98548,0.98002,1],[0.98715,0.97947,1],[0.99438,0.97705,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92162,0.9067,0.9448]]},{"date":"201801120920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90338,0.94489]]},{"date":"201801120930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90339,0.94491]]},{"date":"201801120940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90337,0.94488]]},{"date":"201801120950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90336,0.94477]]},{"date":"201801121000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90335,0.94484]]},{"date":"201801121010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90333,0.94489]]},{"date":"201801121020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94483]]},{"date":"201801121030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90335,0.94492]]},{"date":"201801121040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90337,0.94485]]},{"date":"201801121050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90332,0.94478]]},{"date":"201801121130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90335,0.94488]]},{"date":"201801121140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90336,0.94487]]},{"date":"201801121150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94483]]},{"date":"201801121200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94483]]},{"date":"201801121210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90333,0.94486]]},{"date":"201801121220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94491]]},{"date":"201801121230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90337,0.94491]]},{"date":"201801121240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90336,0.94489]]},{"date":"201801121250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.94478]]},{"date":"201801121300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90336,0.94485]]},{"date":"201801121320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90335,0.94492]]},{"date":"201801121330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90337,0.94494]]},{"date":"201801121340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90337,0.94493]]},{"date":"201801121350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.9448]]},{"date":"201801121400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90336,0.94486]]},{"date":"201801121410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90337,0.9449]]},{"date":"201801121420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90337,0.94492]]},{"date":"201801121430","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.92784,0.90464,0.9449]]},{"date":"201801121440","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93067,0.90338,0.94493]]},{"date":"201801121450","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93128,0.9048,0.95161],[0.92654,0.90516,0.94477]]},{"date":"201801121500","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93126,0.90483,0.95161],[0.92488,0.90577,0.94466]]},{"date":"201801121520","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99592,0.97654,0.99999],[0.92833,0.90628,0.95142],[0.93042,0.90541,0.9515],[0.93021,0.90544,0.9516],[0.89639,0.90874,0.94231]]},{"date":"201801121530","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99379,0.97697,0.99939],[0.89758,0.91051,0.94974],[0.91129,0.90944,0.94913],[0.92037,0.90809,0.94868],[0.86211,0.90217,0.93452]]},{"date":"201801121540","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99493,0.97691,0.99997],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9884,0.97663,0.99904],[0.80645,0.89686,0.94668],[0.83085,0.90358,0.94792],[0.87101,0.90374,0.94689],[0.78592,0.85591,0.93044]]},{"date":"201801121550","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.98666,0.97763,0.99945],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.98505,0.97046,0.99831],[0.73326,0.78064,0.94246],[0.78162,0.80475,0.94442],[0.81283,0.81997,0.94101],[0.70421,0.71791,0.92163]]},{"date":"201801121600","rgb":[[0.98848,0.97909,1],[0.99522,0.97677,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.98379,0.98081,1],[0.98551,0.98001,1],[0.9925,0.97769,1],[0.99608,0.97647,1],[0.94697,0.97993,0.99816],[0.98285,0.98135,0.99994],[0.98432,0.98039,1],[0.97295,0.96496,0.99646],[0.59189,0.67951,0.88887],[0.68201,0.72964,0.8996],[0.71575,0.72183,0.9141],[0.58988,0.58019,0.86006]]},{"date":"201801121610","rgb":[[0.43053,0.80296,0.99592],[0.46086,0.85555,0.99705],[0.48419,0.87909,0.99641],[0.48044,0.86998,0.99563],[0.43173,0.80223,0.99625],[0.4703,0.86239,0.99692],[0.48369,0.86825,0.99594],[0.48435,0.86511,0.9958],[0.41045,0.6927,0.98763],[0.45276,0.78339,0.99702],[0.47905,0.8292,0.99664],[0.47099,0.80431,0.98491],[0.2753,0.35559,0.72055],[0.3088,0.43232,0.76305],[0.33567,0.46579,0.76464],[0.28259,0.35887,0.65074]]},{"date":"201801121620","rgb":[[0.16592,0.17049,0.67766],[0.18118,0.21607,0.72432],[0.18898,0.22198,0.75133],[0.1951,0.19258,0.76973],[0.15673,0.17138,0.63449],[0.17075,0.20785,0.67561],[0.18453,0.22032,0.72218],[0.19253,0.19663,0.74274],[0.13999,0.14733,0.57316],[0.15675,0.18122,0.61307],[0.1722,0.18962,0.65296],[0.17744,0.1729,0.68572],[0.12669,0.10556,0.38132],[0.12239,0.12112,0.41887],[0.12788,0.12047,0.432],[0.12072,0.10061,0.37303]]},{"date":"201801121630","rgb":[[0.050056,0.03574,0.26314],[0.052658,0.035732,0.27659],[0.056176,0.0371,0.28636],[0.064885,0.038235,0.29751],[0.047596,0.036635,0.24503],[0.048606,0.035911,0.25627],[0.05221,0.036325,0.2702],[0.063916,0.036997,0.28511],[0.045473,0.03685,0.21914],[0.046815,0.037532,0.23526],[0.05014,0.036638,0.24775],[0.059628,0.035528,0.26175],[0.078356,0.056483,0.16796],[0.059873,0.047597,0.18244],[0.063323,0.047299,0.18733],[0.07306,0.05572,0.16676]]},{"date":"201801121640","rgb":[[0.027901,0.029267,0.05992],[0.027783,0.029158,0.060249],[0.029835,0.03037,0.066601],[0.034672,0.030872,0.082934],[0.026451,0.028286,0.058315],[0.026129,0.028337,0.057939],[0.029021,0.029881,0.063161],[0.035139,0.030481,0.079904],[0.027012,0.028339,0.055897],[0.026234,0.027821,0.055981],[0.029028,0.029722,0.061011],[0.03475,0.029947,0.071606],[0.066788,0.052947,0.088496],[0.046791,0.042238,0.081591],[0.048075,0.042459,0.085009],[0.060762,0.053287,0.089725]]},{"date":"201801121650","rgb":[[0.023259,0.026965,0.037822],[0.024026,0.025953,0.035089],[0.025452,0.026388,0.040784],[0.029915,0.027217,0.049094],[0.023478,0.026282,0.03605],[0.024339,0.025139,0.034546],[0.026623,0.025324,0.039743],[0.030533,0.026859,0.048766],[0.025885,0.026164,0.036001],[0.024943,0.025193,0.034365],[0.027206,0.025338,0.04009],[0.02968,0.026969,0.047671],[0.066985,0.051536,0.080624],[0.048185,0.040192,0.071632],[0.048663,0.040495,0.07414],[0.060125,0.051741,0.08083]]},{"date":"201801121700","rgb":[[0.02291,0.026113,0.032684],[0.023463,0.024934,0.030982],[0.024643,0.025726,0.035713],[0.028704,0.027023,0.044391],[0.023857,0.025298,0.030145],[0.024315,0.024018,0.028538],[0.02577,0.025498,0.033608],[0.029885,0.026397,0.043973],[0.024648,0.025384,0.030935],[0.023931,0.024473,0.02895],[0.026564,0.025812,0.035476],[0.02966,0.026307,0.043992],[0.065595,0.051629,0.077389],[0.047127,0.040438,0.068288],[0.047657,0.041092,0.072316],[0.059206,0.051775,0.080627]]},{"date":"201801121710","rgb":[[0.023123,0.025523,0.030313],[0.022777,0.024785,0.02718],[0.025075,0.025438,0.031953],[0.028881,0.026651,0.040849],[0.021985,0.025553,0.029382],[0.023572,0.024431,0.026696],[0.025455,0.025371,0.031313],[0.029113,0.026533,0.040252],[0.023436,0.02532,0.028573],[0.024132,0.024189,0.02793],[0.025762,0.02556,0.032424],[0.029156,0.026414,0.039654],[0.065139,0.050916,0.074437],[0.04703,0.039917,0.064848],[0.047686,0.040739,0.068414],[0.058757,0.051926,0.076036]]},{"date":"201801121720","rgb":[[0.021551,0.025794,0.030796],[0.022213,0.02471,0.026715],[0.024641,0.025016,0.030174],[0.029475,0.02627,0.042668],[0.022266,0.025116,0.027775],[0.022649,0.024369,0.023783],[0.024601,0.024657,0.028134],[0.028895,0.026545,0.040127],[0.024668,0.024981,0.030303],[0.02369,0.023829,0.025656],[0.024759,0.0247,0.029799],[0.027794,0.026065,0.040624],[0.066297,0.050604,0.075777],[0.045201,0.040068,0.064607],[0.045919,0.040667,0.066827],[0.058765,0.051415,0.078301]]},{"date":"201801121740","rgb":[[0.026628,0.026346,0.032553],[0.026254,0.025889,0.029986],[0.030303,0.026043,0.035806],[0.034541,0.027174,0.046277],[0.025124,0.025188,0.029973],[0.025319,0.024747,0.028075],[0.026697,0.025893,0.033365],[0.035014,0.027314,0.046487],[0.026115,0.02564,0.030681],[0.024758,0.024459,0.027275],[0.027089,0.026296,0.033626],[0.032309,0.026301,0.045489],[0.067076,0.051625,0.075724],[0.047163,0.03997,0.0652],[0.049977,0.040308,0.069157],[0.06096,0.051516,0.07938]]},{"date":"201801121750","rgb":[[0.026803,0.026486,0.033634],[0.025896,0.025637,0.031006],[0.029206,0.026748,0.036498],[0.033721,0.026836,0.045637],[0.02603,0.025851,0.031328],[0.025692,0.02556,0.030045],[0.026891,0.02622,0.032976],[0.035785,0.026926,0.046609],[0.027458,0.026079,0.03389],[0.025618,0.025462,0.030311],[0.027849,0.026741,0.035814],[0.03279,0.026528,0.046683],[0.066678,0.052031,0.078039],[0.04745,0.04028,0.068628],[0.048382,0.041346,0.072917],[0.060393,0.051582,0.081381]]},{"date":"201801121800","rgb":[[0.027861,0.026362,0.03547],[0.026555,0.026254,0.032726],[0.027553,0.026524,0.035796],[0.033496,0.026957,0.046934],[0.02627,0.025965,0.03166],[0.025524,0.025181,0.030504],[0.027653,0.026558,0.035184],[0.033584,0.026965,0.046825],[0.027934,0.026623,0.0327],[0.026094,0.025846,0.031182],[0.028995,0.026469,0.036072],[0.035755,0.02704,0.048728],[0.069779,0.052479,0.078467],[0.047974,0.040986,0.069476],[0.050962,0.040573,0.073067],[0.063703,0.052001,0.084292]]},{"date":"201801121810","rgb":[[0.025778,0.02655,0.034281],[0.025165,0.025399,0.031352],[0.026567,0.025835,0.034915],[0.03137,0.026969,0.046475],[0.025638,0.025769,0.031588],[0.025092,0.024815,0.029229],[0.026689,0.026333,0.032857],[0.033382,0.026525,0.04623],[0.027022,0.026013,0.033211],[0.025096,0.024843,0.029728],[0.027444,0.026625,0.034576],[0.033844,0.02695,0.046689],[0.068408,0.051221,0.077235],[0.04724,0.040153,0.066059],[0.0498,0.040316,0.069485],[0.062766,0.051971,0.081103]]},{"date":"201801121820","rgb":[[0.0247,0.02564,0.031035],[0.02461,0.024662,0.029295],[0.025532,0.025644,0.032711],[0.029504,0.02683,0.042179],[0.024759,0.024886,0.027803],[0.024444,0.024167,0.026709],[0.025849,0.025408,0.031924],[0.031127,0.026223,0.043206],[0.026418,0.025749,0.031329],[0.024893,0.024773,0.027799],[0.026815,0.026466,0.033285],[0.032883,0.026331,0.045735],[0.067975,0.051202,0.077064],[0.046931,0.039899,0.066456],[0.047765,0.040932,0.069849],[0.060749,0.051948,0.080912]]},{"date":"201801121840","rgb":[[0.028093,0.026709,0.035456],[0.025968,0.025638,0.031261],[0.026586,0.026088,0.034512],[0.03122,0.026582,0.045705],[0.026834,0.026449,0.032906],[0.02544,0.025194,0.028643],[0.026476,0.025961,0.033401],[0.033326,0.02644,0.044364],[0.029266,0.026298,0.034933],[0.025521,0.025455,0.030209],[0.027769,0.026366,0.035334],[0.035115,0.026515,0.047928],[0.070303,0.052265,0.080572],[0.046908,0.041063,0.069254],[0.049351,0.04096,0.071477],[0.064003,0.051991,0.08236]]},{"date":"201801121850","rgb":[[0.02475,0.026143,0.033506],[0.021529,0.025276,0.029367],[0.022343,0.025825,0.033733],[0.026454,0.026869,0.043742],[0.024749,0.025278,0.029811],[0.023626,0.024099,0.026721],[0.0248,0.025083,0.030955],[0.029396,0.026228,0.042464],[0.027343,0.025971,0.031802],[0.024407,0.024562,0.027724],[0.026676,0.025916,0.035494],[0.031737,0.026399,0.046049],[0.069579,0.051683,0.078653],[0.046003,0.040513,0.068705],[0.048626,0.040705,0.073578],[0.062516,0.052092,0.083244]]},{"date":"201801121900","rgb":[[0.026246,0.026085,0.033971],[0.023056,0.024931,0.028872],[0.024184,0.025399,0.031109],[0.028041,0.02658,0.043709],[0.025879,0.025578,0.030594],[0.023992,0.023927,0.025157],[0.024834,0.024843,0.029451],[0.028945,0.026333,0.042538],[0.027397,0.025945,0.033834],[0.024045,0.024472,0.028864],[0.025843,0.025262,0.033649],[0.029703,0.026391,0.045247],[0.069357,0.052085,0.079306],[0.047181,0.040475,0.068786],[0.048579,0.040704,0.072434],[0.06166,0.052176,0.083575]]},{"date":"201801121910","rgb":[[0.028969,0.026439,0.035157],[0.025501,0.025178,0.029387],[0.024947,0.025726,0.032314],[0.028412,0.026525,0.041682],[0.02869,0.026237,0.033282],[0.024925,0.024931,0.028531],[0.025901,0.025685,0.032438],[0.029871,0.026344,0.043754],[0.030201,0.026697,0.034358],[0.02544,0.025081,0.029553],[0.027255,0.026247,0.035746],[0.03372,0.026525,0.048451],[0.07252,0.051664,0.080216],[0.047849,0.040669,0.066873],[0.049157,0.040883,0.072772],[0.063135,0.05169,0.08401]]},{"date":"201801121920","rgb":[[0.027507,0.026225,0.03284],[0.0242,0.024619,0.027211],[0.025805,0.025704,0.032396],[0.029852,0.026616,0.043763],[0.026663,0.025824,0.030325],[0.024481,0.024311,0.025803],[0.025656,0.025359,0.030299],[0.030887,0.026689,0.043035],[0.029223,0.026309,0.032622],[0.025011,0.024918,0.027588],[0.02709,0.026302,0.034015],[0.033662,0.026478,0.04754],[0.070043,0.051289,0.078115],[0.04704,0.040516,0.066074],[0.049265,0.041042,0.071588],[0.062684,0.052033,0.083177]]},{"date":"201801121930","rgb":[[0.02774,0.026194,0.033628],[0.023334,0.024901,0.026605],[0.024005,0.025155,0.030548],[0.028467,0.026548,0.041455],[0.028528,0.026283,0.033134],[0.024727,0.024614,0.026523],[0.025311,0.025377,0.030895],[0.030939,0.026671,0.043039],[0.030567,0.026352,0.034709],[0.02519,0.025077,0.028747],[0.02658,0.025726,0.035402],[0.031857,0.026499,0.046998],[0.0725,0.05267,0.080425],[0.047249,0.040295,0.0678],[0.048424,0.040391,0.07392],[0.062225,0.051913,0.083805]]},{"date":"201801121940","rgb":[[0.027901,0.026182,0.033988],[0.024925,0.025121,0.028351],[0.025505,0.025418,0.031651],[0.029037,0.02667,0.042639],[0.026691,0.026283,0.03258],[0.02469,0.024561,0.028588],[0.025774,0.025292,0.032532],[0.030539,0.026513,0.044768],[0.030086,0.026484,0.034405],[0.025352,0.025102,0.029715],[0.027739,0.026421,0.035927],[0.034613,0.026897,0.048549],[0.071522,0.051141,0.081154],[0.047116,0.040242,0.069802],[0.048521,0.041209,0.07249],[0.062723,0.052001,0.083646]]},{"date":"201801121950","rgb":[[0.029306,0.026534,0.034178],[0.025624,0.025536,0.027984],[0.025939,0.025671,0.031303],[0.030067,0.026511,0.041645],[0.028617,0.02677,0.032831],[0.025509,0.025309,0.027922],[0.026237,0.025917,0.031101],[0.031992,0.026435,0.042576],[0.031003,0.0266,0.034286],[0.025364,0.025141,0.027927],[0.027677,0.026269,0.03424],[0.033286,0.026993,0.045508],[0.072218,0.051001,0.08012],[0.046847,0.040688,0.065768],[0.048555,0.041166,0.070652],[0.062368,0.052251,0.081178]]},{"date":"201801122000","rgb":[[0.025439,0.02625,0.03343],[0.022064,0.024971,0.027586],[0.022369,0.025196,0.031106],[0.026345,0.026706,0.041068],[0.026614,0.026136,0.033214],[0.02339,0.02421,0.026362],[0.024879,0.024938,0.030793],[0.029225,0.02606,0.04323],[0.029101,0.026648,0.032985],[0.024787,0.024696,0.027666],[0.026518,0.025874,0.033844],[0.031974,0.026706,0.045813],[0.070577,0.051919,0.078925],[0.046744,0.040358,0.06841],[0.048227,0.041001,0.072054],[0.062607,0.051984,0.083386]]},{"date":"201801122010","rgb":[[0.025536,0.025732,0.030449],[0.022671,0.02492,0.026324],[0.022622,0.025,0.029349],[0.026283,0.026791,0.038865],[0.025623,0.025634,0.029585],[0.023895,0.024051,0.026372],[0.024567,0.024461,0.029288],[0.028887,0.026254,0.041143],[0.027374,0.025834,0.030566],[0.023959,0.024126,0.026537],[0.025295,0.025062,0.030723],[0.030042,0.026557,0.042764],[0.069315,0.050484,0.077879],[0.046394,0.039934,0.065794],[0.048028,0.040816,0.068732],[0.060838,0.051851,0.080306]]},{"date":"201801122020","rgb":[[0.024243,0.025364,0.03129],[0.021402,0.025139,0.025205],[0.021365,0.025462,0.027703],[0.025516,0.026678,0.0391],[0.024127,0.025008,0.027294],[0.02187,0.024819,0.024606],[0.023179,0.024714,0.027805],[0.027884,0.026171,0.039199],[0.026471,0.025508,0.030733],[0.023563,0.023936,0.025279],[0.024976,0.024712,0.029588],[0.028838,0.026329,0.041064],[0.068448,0.050832,0.077246],[0.04505,0.040034,0.065676],[0.047866,0.040141,0.068743],[0.060494,0.051952,0.079304]]},{"date":"201801122030","rgb":[[0.023069,0.025769,0.029931],[0.019358,0.026316,0.024872],[0.019792,0.025771,0.025989],[0.023408,0.026667,0.034031],[0.023425,0.024891,0.026689],[0.0193,0.026606,0.024203],[0.019165,0.0263,0.02573],[0.025179,0.025896,0.035442],[0.025981,0.025203,0.029822],[0.019183,0.026371,0.025389],[0.021572,0.025229,0.027731],[0.02615,0.026265,0.037306],[0.068671,0.051676,0.077311],[0.043993,0.040799,0.064307],[0.046033,0.040536,0.066219],[0.05981,0.052134,0.077084]]},{"date":"201801122040","rgb":[[0.0264,0.026062,0.030949],[0.022514,0.025154,0.026157],[0.02341,0.024474,0.028118],[0.026128,0.026323,0.037641],[0.025612,0.025286,0.028031],[0.022735,0.024496,0.024928],[0.023383,0.024182,0.026391],[0.02685,0.02609,0.036702],[0.027125,0.025898,0.03033],[0.022854,0.02459,0.025815],[0.024666,0.024688,0.029471],[0.027934,0.026149,0.039886],[0.069571,0.052228,0.077564],[0.045152,0.040024,0.066643],[0.047454,0.040355,0.069306],[0.060207,0.051604,0.079784]]},{"date":"201801122050","rgb":[[0.028752,0.026411,0.032891],[0.025066,0.02505,0.026571],[0.025395,0.025272,0.029479],[0.028912,0.026416,0.039996],[0.027232,0.02655,0.030985],[0.024298,0.024265,0.02528],[0.02466,0.024873,0.028033],[0.028297,0.02636,0.040241],[0.028559,0.025874,0.031546],[0.024323,0.024163,0.025682],[0.025225,0.025214,0.029971],[0.029332,0.026342,0.040951],[0.070293,0.051618,0.077421],[0.047835,0.039535,0.06492],[0.048023,0.040721,0.070158],[0.06086,0.051965,0.080186]]},{"date":"201801122100","rgb":[[0.026826,0.026197,0.031902],[0.02252,0.024691,0.026265],[0.021216,0.025452,0.02791],[0.024797,0.026766,0.038429],[0.026168,0.025629,0.030289],[0.021709,0.025042,0.025362],[0.021059,0.025242,0.027553],[0.025844,0.02607,0.038581],[0.028031,0.026224,0.032244],[0.02318,0.024141,0.027164],[0.023414,0.025057,0.031233],[0.027023,0.026245,0.041589],[0.070822,0.051184,0.078672],[0.044491,0.04013,0.06602],[0.046286,0.040488,0.069363],[0.059231,0.0518,0.080303]]},{"date":"201801122110","rgb":[[0.027628,0.026304,0.032448],[0.022986,0.024719,0.024656],[0.022408,0.024995,0.02659],[0.025692,0.026287,0.036691],[0.027955,0.026207,0.032524],[0.023484,0.024302,0.025324],[0.023492,0.024254,0.025714],[0.027557,0.026334,0.037087],[0.031952,0.026438,0.034174],[0.023318,0.024462,0.025805],[0.024819,0.024737,0.028355],[0.028217,0.026152,0.038408],[0.07225,0.050999,0.079494],[0.04495,0.040204,0.065484],[0.046756,0.040742,0.0686],[0.05969,0.051939,0.077501]]},{"date":"201801122120","rgb":[[0.02875,0.026344,0.034047],[0.024185,0.024789,0.026682],[0.023591,0.024881,0.028106],[0.02589,0.026736,0.038467],[0.028457,0.026287,0.031676],[0.024356,0.024392,0.024981],[0.024271,0.024147,0.027134],[0.026976,0.026079,0.037058],[0.02932,0.026509,0.033341],[0.024187,0.024337,0.025616],[0.024734,0.0248,0.029275],[0.027232,0.026287,0.0395],[0.071008,0.051739,0.078405],[0.046438,0.039754,0.065288],[0.047448,0.040684,0.067276],[0.059882,0.051566,0.079229]]},{"date":"201801122130","rgb":[[0.026596,0.025833,0.027818],[0.023048,0.024312,0.022701],[0.022102,0.02485,0.023583],[0.0249,0.026107,0.033771],[0.026709,0.025916,0.026123],[0.023166,0.024356,0.021804],[0.023081,0.02437,0.024491],[0.026498,0.025837,0.033739],[0.0283,0.025835,0.027625],[0.023494,0.024006,0.023691],[0.023848,0.024186,0.02596],[0.026735,0.026102,0.036151],[0.071636,0.050615,0.074176],[0.044507,0.040362,0.062143],[0.046484,0.040303,0.066276],[0.058919,0.052004,0.076763]]},{"date":"201801122140","rgb":[[0.028278,0.026637,0.032482],[0.023627,0.024582,0.024315],[0.022951,0.024356,0.026423],[0.024505,0.026513,0.035627],[0.02893,0.026187,0.03102],[0.023986,0.023895,0.024276],[0.023897,0.024065,0.02693],[0.026038,0.026056,0.036259],[0.033047,0.026487,0.035842],[0.024023,0.0243,0.025684],[0.024101,0.025051,0.029082],[0.027491,0.025892,0.03919],[0.074312,0.052233,0.079548],[0.045929,0.040228,0.064298],[0.046869,0.04067,0.068881],[0.060326,0.051611,0.078809]]},{"date":"201801122150","rgb":[[0.028126,0.026347,0.031276],[0.0237,0.024051,0.022248],[0.02091,0.025532,0.025576],[0.023831,0.026342,0.034845],[0.031806,0.026253,0.032064],[0.024033,0.024383,0.023916],[0.02229,0.024744,0.025907],[0.02599,0.02606,0.035819],[0.035869,0.026448,0.034595],[0.024163,0.024297,0.024442],[0.023912,0.02426,0.027981],[0.026683,0.026298,0.03786],[0.076082,0.051893,0.079989],[0.046213,0.040113,0.063847],[0.046749,0.040794,0.069632],[0.059753,0.051866,0.079865]]},{"date":"201801122200","rgb":[[0.02764,0.025955,0.030904],[0.021114,0.025438,0.023538],[0.021373,0.025288,0.024623],[0.023307,0.026417,0.033849],[0.028607,0.025684,0.029488],[0.022545,0.024687,0.023096],[0.02083,0.02536,0.024549],[0.024028,0.025763,0.032883],[0.033591,0.026184,0.032954],[0.022679,0.024631,0.02355],[0.022607,0.024901,0.025881],[0.025409,0.026244,0.035887],[0.075206,0.051687,0.077933],[0.044879,0.040187,0.06322],[0.045639,0.040738,0.066265],[0.059383,0.051766,0.078825]]},{"date":"201801122210","rgb":[[0.025519,0.025999,0.02929],[0.020619,0.025766,0.022593],[0.018491,0.02678,0.024092],[0.021755,0.026317,0.034228],[0.027393,0.025416,0.028303],[0.020161,0.026289,0.022073],[0.017617,0.027604,0.023117],[0.021681,0.026201,0.032521],[0.031624,0.026195,0.030425],[0.021365,0.025823,0.022904],[0.019038,0.026642,0.025359],[0.023215,0.026129,0.034883],[0.076126,0.052181,0.07829],[0.043471,0.04096,0.063846],[0.0443,0.04073,0.065094],[0.057751,0.05143,0.077632]]},{"date":"201801122220","rgb":[[0.025971,0.025766,0.026752],[0.020995,0.025769,0.019685],[0.019575,0.026525,0.02361],[0.023189,0.026222,0.031818],[0.025795,0.025269,0.023886],[0.019592,0.026744,0.018925],[0.017905,0.027555,0.021109],[0.021995,0.026075,0.029463],[0.028365,0.025699,0.026166],[0.01983,0.026646,0.020866],[0.018379,0.027097,0.023214],[0.022898,0.026106,0.03189],[0.071587,0.05227,0.075445],[0.042705,0.041332,0.061134],[0.042797,0.041311,0.063763],[0.057294,0.052041,0.075169]]},{"date":"201801122230","rgb":[[0.023915,0.025766,0.026176],[0.018553,0.02694,0.021918],[0.018654,0.02676,0.023036],[0.020653,0.02632,0.030151],[0.024102,0.025407,0.024749],[0.018042,0.027447,0.02121],[0.015763,0.027954,0.021581],[0.020225,0.026513,0.028134],[0.027195,0.025543,0.02652],[0.017587,0.027508,0.021818],[0.017686,0.027257,0.02411],[0.020562,0.026212,0.030308],[0.070954,0.051752,0.075023],[0.041947,0.041823,0.061024],[0.042152,0.041195,0.064464],[0.056498,0.051917,0.074528]]},{"date":"201801122240","rgb":[[0.022327,0.025734,0.024586],[0.019023,0.026782,0.020762],[0.018036,0.027003,0.021908],[0.020299,0.026223,0.028927],[0.023489,0.025098,0.023761],[0.016936,0.028005,0.019684],[0.015462,0.028249,0.021187],[0.019131,0.026479,0.027605],[0.026196,0.025365,0.025491],[0.017572,0.027768,0.020198],[0.016784,0.027716,0.022038],[0.01994,0.026385,0.028374],[0.071582,0.0509,0.072422],[0.041788,0.041981,0.059166],[0.041662,0.041822,0.061791],[0.056175,0.052029,0.071148]]},{"date":"201801122250","rgb":[[0.020972,0.026607,0.024202],[0.017341,0.027524,0.018462],[0.017592,0.027371,0.021524],[0.019976,0.026112,0.030189],[0.020221,0.026418,0.0229],[0.014824,0.028481,0.019342],[0.01553,0.027914,0.021417],[0.01967,0.026189,0.029499],[0.023375,0.025714,0.025418],[0.016087,0.027804,0.022031],[0.017096,0.027572,0.023536],[0.02027,0.026087,0.031607],[0.069041,0.051477,0.073807],[0.040895,0.04211,0.061228],[0.04196,0.041881,0.063594],[0.056164,0.05152,0.076031]]},{"date":"201801122300","rgb":[[0.020636,0.026531,0.02615],[0.016353,0.027574,0.02232],[0.017515,0.026852,0.023068],[0.019161,0.026508,0.03065],[0.019854,0.026824,0.023801],[0.01603,0.027895,0.022026],[0.015325,0.027788,0.023123],[0.018955,0.026474,0.029125],[0.022538,0.026515,0.025068],[0.01657,0.027864,0.021419],[0.016671,0.027675,0.022526],[0.019881,0.02638,0.029149],[0.067872,0.050999,0.076719],[0.041703,0.041478,0.063559],[0.042237,0.041487,0.064973],[0.055705,0.051885,0.076148]]},{"date":"201801122310","rgb":[[0.020512,0.02633,0.025705],[0.017851,0.027091,0.022482],[0.016161,0.027382,0.023201],[0.019645,0.026121,0.032068],[0.018979,0.027286,0.021161],[0.014193,0.028307,0.019855],[0.013999,0.028245,0.020335],[0.018379,0.026339,0.028846],[0.020818,0.026932,0.021175],[0.013396,0.028094,0.019702],[0.013496,0.028221,0.021241],[0.01816,0.026562,0.028497],[0.067423,0.051507,0.072604],[0.039384,0.042721,0.060178],[0.040431,0.042256,0.061623],[0.055553,0.051447,0.074677]]},{"date":"201801122320","rgb":[[0.018891,0.027245,0.021329],[0.01465,0.028192,0.018872],[0.014207,0.027838,0.021536],[0.018611,0.026494,0.028461],[0.017742,0.027904,0.018498],[0.013212,0.029256,0.015351],[0.012749,0.028852,0.017635],[0.01737,0.026755,0.02628],[0.019885,0.02719,0.022598],[0.013032,0.028596,0.018571],[0.012914,0.027814,0.02169],[0.017755,0.026526,0.027365],[0.065943,0.051692,0.071404],[0.038922,0.042671,0.058753],[0.039076,0.042221,0.062868],[0.054944,0.05216,0.071625]]},{"date":"201801122330","rgb":[[0.017277,0.027272,0.023706],[0.014114,0.027346,0.019701],[0.015985,0.026771,0.019162],[0.017426,0.02636,0.027321],[0.017074,0.027583,0.020743],[0.012328,0.02919,0.015637],[0.012001,0.028525,0.016512],[0.016237,0.026864,0.026696],[0.019543,0.027177,0.021443],[0.012014,0.02951,0.014756],[0.012314,0.029143,0.016428],[0.01726,0.026719,0.026248],[0.066141,0.051281,0.073245],[0.038952,0.043175,0.056692],[0.039145,0.042457,0.061034],[0.054824,0.052175,0.072581]]},{"date":"201801122340","rgb":[[0.018434,0.026895,0.022784],[0.015972,0.027335,0.017972],[0.015068,0.027165,0.02144],[0.018566,0.026781,0.027682],[0.015724,0.027916,0.021325],[0.011911,0.028804,0.016378],[0.012098,0.028007,0.019391],[0.016785,0.02666,0.027266],[0.019275,0.027187,0.022677],[0.01265,0.029358,0.016703],[0.012126,0.027898,0.021033],[0.017108,0.026608,0.027767],[0.06657,0.051066,0.072276],[0.038883,0.042893,0.059505],[0.039319,0.04244,0.062573],[0.054974,0.051829,0.07316]]},{"date":"201801122350","rgb":[[0.018086,0.027279,0.022058],[0.015629,0.02784,0.01634],[0.015512,0.027705,0.019188],[0.01876,0.026447,0.027313],[0.01587,0.02804,0.021244],[0.012144,0.02884,0.016543],[0.012079,0.028804,0.017407],[0.016745,0.026721,0.025969],[0.018451,0.02727,0.023235],[0.011924,0.029387,0.014929],[0.012441,0.02855,0.01782],[0.017544,0.026855,0.026289],[0.065246,0.05098,0.071204],[0.037944,0.043227,0.056482],[0.03909,0.042948,0.058855],[0.054316,0.052302,0.070746]]},{"date":"201801130000","rgb":[[0.017625,0.027216,0.020142],[0.014499,0.027832,0.018899],[0.0136,0.027892,0.020952],[0.01776,0.026903,0.027205],[0.015191,0.028209,0.019088],[0.011792,0.029012,0.015286],[0.01174,0.028164,0.017738],[0.015876,0.026938,0.026533],[0.017448,0.028035,0.018373],[0.011444,0.029537,0.01334],[0.011875,0.028688,0.017134],[0.016669,0.027177,0.025224],[0.063546,0.051942,0.068926],[0.038083,0.043712,0.056028],[0.038561,0.043099,0.058604],[0.055086,0.052308,0.072473]]},{"date":"201801130010","rgb":[[0.015847,0.027669,0.020626],[0.014157,0.027117,0.019134],[0.014188,0.027577,0.018938],[0.018033,0.026207,0.027745],[0.013515,0.027911,0.021424],[0.0111,0.028924,0.014426],[0.011291,0.027991,0.018318],[0.015108,0.026786,0.026349],[0.01697,0.02797,0.021365],[0.011262,0.029189,0.014156],[0.011621,0.028116,0.017922],[0.015305,0.026891,0.026582],[0.063344,0.052211,0.071597],[0.037155,0.043261,0.056896],[0.037688,0.042857,0.058874],[0.053312,0.052242,0.072088]]},{"date":"201801130030","rgb":[[0.013908,0.028057,0.021615],[0.013561,0.026354,0.020669],[0.015398,0.027737,0.020293],[0.017468,0.026758,0.028224],[0.012979,0.028015,0.0206],[0.01108,0.028103,0.016122],[0.011074,0.028082,0.016317],[0.017224,0.026519,0.027062],[0.016226,0.028159,0.019676],[0.010835,0.029121,0.012816],[0.010764,0.028237,0.01549],[0.014246,0.026942,0.024551],[0.063341,0.05156,0.072499],[0.037127,0.043354,0.055171],[0.037831,0.042559,0.058777],[0.053323,0.052356,0.07273]]},{"date":"201801130040","rgb":[[0.014429,0.027008,0.023259],[0.013728,0.026708,0.019834],[0.015361,0.027254,0.022648],[0.018324,0.02619,0.030002],[0.013173,0.027453,0.022014],[0.011162,0.028315,0.016066],[0.011101,0.026932,0.019885],[0.017343,0.026278,0.02796],[0.015637,0.02783,0.021493],[0.011039,0.029154,0.013688],[0.011034,0.028507,0.015171],[0.014448,0.026939,0.026438],[0.062325,0.05142,0.073573],[0.037399,0.042617,0.057631],[0.037722,0.041796,0.061778],[0.052473,0.052362,0.07333]]},{"date":"201801130050","rgb":[[0.014041,0.027742,0.020918],[0.013539,0.027471,0.016681],[0.016109,0.026004,0.019071],[0.016085,0.026806,0.027319],[0.012725,0.028225,0.018986],[0.010758,0.028803,0.013747],[0.010823,0.028402,0.014602],[0.013635,0.027138,0.025732],[0.016046,0.028111,0.019841],[0.011025,0.029145,0.014352],[0.011164,0.028553,0.015985],[0.014241,0.026873,0.027064],[0.062462,0.051118,0.0715],[0.037002,0.042555,0.058071],[0.037295,0.04252,0.059359],[0.052408,0.052563,0.073528]]},{"date":"201801130100","rgb":[[0.013917,0.027361,0.023148],[0.013233,0.02637,0.020026],[0.0131,0.026975,0.0199],[0.01619,0.026805,0.027128],[0.01234,0.027998,0.020126],[0.010738,0.028717,0.013393],[0.010977,0.027947,0.016586],[0.014302,0.027126,0.024513],[0.014744,0.027762,0.02245],[0.010848,0.028632,0.014319],[0.010978,0.028013,0.017017],[0.014875,0.026781,0.026025],[0.062488,0.052355,0.072149],[0.037214,0.043005,0.056885],[0.037684,0.042461,0.059434],[0.053369,0.051897,0.073231]]},{"date":"201801130110","rgb":[[0.014285,0.027981,0.020241],[0.013198,0.027616,0.01631],[0.013474,0.027436,0.016556],[0.016706,0.026688,0.025873],[0.013153,0.028338,0.020323],[0.010848,0.028958,0.013747],[0.010824,0.028758,0.013955],[0.013796,0.027118,0.026066],[0.016145,0.028141,0.021435],[0.01105,0.029326,0.01369],[0.010938,0.02852,0.015194],[0.015335,0.027072,0.02545],[0.062907,0.052165,0.071881],[0.037516,0.043345,0.055446],[0.037732,0.042575,0.058148],[0.053586,0.052201,0.071526]]},{"date":"201801130120","rgb":[[0.013673,0.02742,0.021352],[0.013092,0.027581,0.016675],[0.013069,0.027151,0.018762],[0.016408,0.026616,0.027425],[0.013203,0.028486,0.018439],[0.011022,0.029018,0.013705],[0.011103,0.028209,0.01674],[0.014738,0.026977,0.025919],[0.015499,0.028187,0.019923],[0.010991,0.028805,0.014669],[0.011105,0.028208,0.016604],[0.015144,0.026705,0.026961],[0.062531,0.05157,0.072186],[0.037378,0.042981,0.056957],[0.038208,0.042837,0.059578],[0.054109,0.052036,0.073044]]},{"date":"201801130130","rgb":[[0.0129,0.027799,0.020744],[0.012466,0.027006,0.017534],[0.014704,0.025982,0.019856],[0.015432,0.026999,0.025636],[0.012452,0.028208,0.018435],[0.01074,0.02896,0.013303],[0.010852,0.028457,0.014932],[0.014393,0.027437,0.024654],[0.015,0.028353,0.020185],[0.010775,0.028934,0.013738],[0.010992,0.028108,0.016702],[0.014773,0.026806,0.025164],[0.061677,0.052215,0.071583],[0.036987,0.042897,0.057063],[0.037791,0.042312,0.05976],[0.053882,0.052358,0.072311]]},{"date":"201801130140","rgb":[[0.013962,0.027981,0.017841],[0.013471,0.027141,0.015335],[0.013759,0.026878,0.016457],[0.015823,0.026862,0.026157],[0.012284,0.028993,0.015295],[0.010673,0.029011,0.011845],[0.010759,0.028707,0.013075],[0.013999,0.027547,0.022758],[0.014347,0.028938,0.017488],[0.010773,0.028987,0.013053],[0.010876,0.02867,0.014792],[0.014551,0.027524,0.023672],[0.061476,0.052151,0.069379],[0.036928,0.04347,0.054835],[0.03739,0.042832,0.057726],[0.052425,0.052409,0.071537]]},{"date":"201801130150","rgb":[[0.0146,0.027408,0.020862],[0.015417,0.026275,0.016949],[0.014792,0.026382,0.01999],[0.01672,0.026491,0.025822],[0.012612,0.028671,0.017557],[0.010728,0.028897,0.013225],[0.010789,0.028619,0.014002],[0.014252,0.027417,0.023344],[0.01468,0.028461,0.019104],[0.010939,0.029152,0.013282],[0.011055,0.028815,0.014769],[0.015001,0.027088,0.024768],[0.061589,0.052123,0.070486],[0.037091,0.043444,0.055647],[0.037107,0.043208,0.056759],[0.053131,0.052447,0.070582]]},{"date":"201801130210","rgb":[[0.013663,0.027955,0.01956],[0.015152,0.026027,0.016821],[0.013094,0.026769,0.017736],[0.014405,0.027262,0.025219],[0.012161,0.028556,0.017747],[0.010626,0.028902,0.012473],[0.010665,0.028798,0.012664],[0.012785,0.027717,0.022114],[0.014674,0.028462,0.019002],[0.010723,0.029042,0.012083],[0.010814,0.028789,0.013802],[0.013962,0.027251,0.023641],[0.06247,0.052447,0.071063],[0.036922,0.043168,0.05521],[0.037173,0.043102,0.057029],[0.053013,0.052175,0.071361]]},{"date":"201801130220","rgb":[[0.013188,0.027798,0.020452],[0.012757,0.027043,0.018431],[0.014122,0.026917,0.018274],[0.014979,0.027074,0.026393],[0.012697,0.028739,0.017282],[0.010744,0.028877,0.013295],[0.010833,0.028994,0.013174],[0.01482,0.02713,0.024333],[0.014801,0.028253,0.019621],[0.010832,0.028967,0.013062],[0.010976,0.028851,0.014083],[0.014165,0.027278,0.024569],[0.060826,0.052342,0.069264],[0.037114,0.04326,0.055748],[0.037277,0.043201,0.056907],[0.053012,0.05244,0.072052]]},{"date":"201801130230","rgb":[[0.013693,0.027859,0.02024],[0.012809,0.026887,0.017863],[0.01265,0.02624,0.021432],[0.015841,0.026817,0.026851],[0.012115,0.028249,0.018251],[0.010651,0.028261,0.014154],[0.010711,0.027938,0.014916],[0.013137,0.027227,0.024471],[0.01453,0.028467,0.019439],[0.010626,0.029021,0.012598],[0.01069,0.028834,0.012982],[0.013942,0.027168,0.023428],[0.061562,0.051438,0.06987],[0.036943,0.043406,0.054467],[0.037314,0.043351,0.056033],[0.053031,0.05265,0.070853]]},{"date":"201801130240","rgb":[[0.01445,0.028293,0.018683],[0.012611,0.028166,0.014575],[0.012588,0.027842,0.017148],[0.016087,0.026685,0.027065],[0.012188,0.029038,0.016375],[0.010855,0.029016,0.012705],[0.010948,0.029073,0.012305],[0.013781,0.027319,0.023593],[0.015164,0.028385,0.018843],[0.010858,0.029177,0.01309],[0.010891,0.028768,0.014621],[0.015095,0.026941,0.026036],[0.061995,0.052539,0.07019],[0.03726,0.043298,0.055467],[0.037528,0.043204,0.057146],[0.053673,0.052266,0.072118]]},{"date":"201801130250","rgb":[[0.014137,0.027343,0.022093],[0.012635,0.026852,0.019823],[0.013407,0.02699,0.019606],[0.016056,0.026678,0.027162],[0.01281,0.028354,0.018637],[0.010845,0.028435,0.01473],[0.010939,0.028259,0.015346],[0.015059,0.027113,0.024734],[0.015022,0.027929,0.020788],[0.010887,0.028882,0.013897],[0.010947,0.028228,0.015649],[0.014991,0.026888,0.026069],[0.062091,0.052277,0.071702],[0.037138,0.043406,0.055957],[0.037832,0.042818,0.058215],[0.054002,0.052258,0.071913]]},{"date":"201801130300","rgb":[[0.014418,0.028376,0.017903],[0.01421,0.027728,0.014383],[0.013173,0.028008,0.016024],[0.01685,0.027277,0.022363],[0.012281,0.029397,0.015303],[0.010856,0.029067,0.01236],[0.010848,0.029044,0.012745],[0.014465,0.027821,0.021633],[0.015586,0.028594,0.017291],[0.01091,0.029118,0.012876],[0.011012,0.028587,0.015174],[0.014669,0.027332,0.023921],[0.062114,0.053085,0.069623],[0.037399,0.043415,0.055564],[0.037568,0.04316,0.057143],[0.053055,0.052491,0.071201]]},{"date":"201801130310","rgb":[[0.01322,0.027593,0.020387],[0.012451,0.027139,0.017229],[0.012948,0.0266,0.019356],[0.015678,0.026609,0.026435],[0.012314,0.028284,0.017529],[0.010574,0.028843,0.012081],[0.010588,0.028502,0.013562],[0.01368,0.02711,0.023367],[0.015102,0.028425,0.019083],[0.010735,0.029061,0.012827],[0.010714,0.02858,0.014024],[0.013608,0.027238,0.024925],[0.062405,0.052446,0.071203],[0.036986,0.043167,0.056007],[0.037493,0.042763,0.057715],[0.052872,0.052099,0.072152]]},{"date":"201801130320","rgb":[[0.014585,0.02805,0.02095],[0.013768,0.027285,0.017868],[0.014525,0.026429,0.019967],[0.016285,0.026829,0.027926],[0.0133,0.028011,0.019861],[0.010822,0.028811,0.013595],[0.010882,0.028655,0.014051],[0.014439,0.027222,0.025211],[0.016038,0.028012,0.020931],[0.010858,0.028865,0.013855],[0.010933,0.028636,0.015434],[0.014216,0.02675,0.027503],[0.063829,0.052217,0.071809],[0.037258,0.042826,0.05726],[0.037649,0.042715,0.058524],[0.053042,0.052302,0.073704]]},{"date":"201801130330","rgb":[[0.014395,0.027586,0.020289],[0.013338,0.026844,0.016794],[0.013705,0.026292,0.018806],[0.015085,0.02664,0.026394],[0.012665,0.028628,0.016884],[0.010473,0.028825,0.012256],[0.010611,0.028346,0.013894],[0.013453,0.027099,0.024132],[0.016426,0.02835,0.019918],[0.010785,0.029028,0.013148],[0.010756,0.028487,0.014317],[0.014335,0.027186,0.024858],[0.065617,0.052291,0.070909],[0.037119,0.043272,0.055774],[0.037647,0.043127,0.056932],[0.053533,0.052347,0.071507]]},{"date":"201801130340","rgb":[[0.016379,0.027463,0.021596],[0.013194,0.028259,0.016063],[0.013329,0.02754,0.017675],[0.01668,0.026628,0.026207],[0.014851,0.028667,0.019342],[0.011151,0.029189,0.013256],[0.011152,0.028943,0.014213],[0.015024,0.027033,0.02462],[0.017468,0.028122,0.020753],[0.011427,0.029464,0.014051],[0.011346,0.029209,0.014465],[0.015475,0.027023,0.02484],[0.065822,0.051573,0.07173],[0.037517,0.043426,0.05651],[0.038229,0.042901,0.058559],[0.054712,0.05182,0.071846]]},{"date":"201801130350","rgb":[[0.019894,0.026068,0.028038],[0.015845,0.027098,0.02196],[0.013821,0.027203,0.023654],[0.018036,0.026133,0.03184],[0.018065,0.027218,0.022928],[0.012881,0.028179,0.018611],[0.011991,0.027042,0.021971],[0.016575,0.026808,0.027958],[0.020624,0.026761,0.024364],[0.012595,0.029198,0.016449],[0.012641,0.028037,0.020672],[0.018152,0.026464,0.027988],[0.065884,0.05165,0.07537],[0.038288,0.042345,0.060452],[0.03887,0.041939,0.063812],[0.054233,0.052363,0.074875]]},{"date":"201801130400","rgb":[[0.01936,0.02677,0.024149],[0.015866,0.026948,0.021103],[0.01455,0.0272,0.02135],[0.018079,0.026501,0.028211],[0.018128,0.027184,0.020135],[0.012548,0.028425,0.018438],[0.011919,0.027663,0.019641],[0.016175,0.02697,0.026289],[0.020223,0.026923,0.02354],[0.01263,0.028277,0.01923],[0.012572,0.027604,0.021426],[0.016865,0.026577,0.028486],[0.065838,0.05144,0.073017],[0.037851,0.043065,0.058403],[0.038505,0.042362,0.06127],[0.054109,0.052071,0.072987]]},{"date":"201801130410","rgb":[[0.024406,0.025674,0.025143],[0.018645,0.02712,0.019676],[0.017313,0.027726,0.020925],[0.019689,0.026493,0.029064],[0.023078,0.025569,0.023092],[0.016183,0.028455,0.018183],[0.01467,0.028647,0.019484],[0.019195,0.026327,0.029161],[0.023443,0.02631,0.025256],[0.014406,0.028315,0.019913],[0.014918,0.027864,0.022046],[0.019337,0.026269,0.030807],[0.067722,0.051906,0.072831],[0.039875,0.042842,0.058416],[0.040549,0.042342,0.06127],[0.055574,0.0521,0.07321]]},{"date":"201801130420","rgb":[[0.025347,0.025451,0.025578],[0.018519,0.02728,0.020289],[0.017288,0.027244,0.021746],[0.020249,0.02651,0.030424],[0.024806,0.025504,0.022959],[0.016876,0.028135,0.018209],[0.015522,0.028089,0.021615],[0.020124,0.025978,0.02975],[0.026355,0.025648,0.025321],[0.016317,0.028155,0.018393],[0.015877,0.027765,0.022465],[0.019904,0.02641,0.029572],[0.068753,0.0518,0.074134],[0.040237,0.042656,0.059452],[0.041064,0.042003,0.06379],[0.055768,0.05169,0.075261]]},{"date":"201801130430","rgb":[[0.024518,0.025666,0.029153],[0.01797,0.027217,0.02225],[0.016209,0.027548,0.022531],[0.018945,0.026258,0.031742],[0.026699,0.025394,0.025452],[0.0183,0.02734,0.019602],[0.015723,0.027932,0.021431],[0.019686,0.026229,0.029445],[0.030459,0.025839,0.029478],[0.018277,0.027055,0.020775],[0.016459,0.027525,0.022727],[0.020962,0.026177,0.032024],[0.071919,0.050844,0.075006],[0.042015,0.042201,0.058156],[0.042053,0.041819,0.061866],[0.055999,0.051963,0.075175]]},{"date":"201801130440","rgb":[[0.023925,0.025925,0.028188],[0.01873,0.026799,0.021701],[0.017645,0.027047,0.022989],[0.019767,0.026394,0.030809],[0.028849,0.025706,0.029508],[0.019292,0.026812,0.021539],[0.016788,0.027687,0.022372],[0.020018,0.026577,0.030453],[0.035199,0.026338,0.032509],[0.020073,0.026369,0.022551],[0.017865,0.027361,0.023053],[0.02221,0.026407,0.032616],[0.075785,0.052218,0.078873],[0.042579,0.041249,0.062571],[0.042417,0.041255,0.064226],[0.056336,0.051992,0.077569]]},{"date":"201801130450","rgb":[[0.02468,0.025723,0.0277],[0.018668,0.027039,0.022939],[0.018073,0.026974,0.023899],[0.021416,0.026013,0.03189],[0.025833,0.025286,0.027026],[0.017917,0.027499,0.022539],[0.015795,0.027635,0.023786],[0.021032,0.025971,0.033493],[0.029165,0.025827,0.029551],[0.018969,0.026589,0.023642],[0.017776,0.026846,0.025346],[0.02301,0.02623,0.035059],[0.072165,0.05029,0.075503],[0.041611,0.04209,0.06055],[0.041954,0.041533,0.064887],[0.056479,0.052107,0.076474]]},{"date":"201801130500","rgb":[[0.024824,0.025609,0.027981],[0.018499,0.026892,0.023177],[0.016678,0.027243,0.02351],[0.020748,0.026362,0.033056],[0.026684,0.0251,0.027575],[0.018856,0.026825,0.022252],[0.017188,0.027563,0.023455],[0.021167,0.026325,0.031866],[0.028528,0.025732,0.029092],[0.018553,0.027072,0.022503],[0.018325,0.027298,0.024069],[0.023094,0.026095,0.034133],[0.070681,0.051243,0.076904],[0.041418,0.041737,0.062222],[0.041933,0.041704,0.064229],[0.057147,0.052026,0.077821]]},{"date":"201801130510","rgb":[[0.022369,0.026279,0.028143],[0.018225,0.027213,0.023085],[0.018085,0.026791,0.024424],[0.01995,0.026619,0.032416],[0.023517,0.025324,0.024863],[0.016466,0.027802,0.021169],[0.015728,0.027536,0.02315],[0.020377,0.0262,0.030342],[0.026912,0.025485,0.028201],[0.017638,0.027226,0.02287],[0.01784,0.027132,0.024811],[0.022381,0.026001,0.032746],[0.07108,0.052237,0.077571],[0.041718,0.041831,0.062501],[0.043508,0.040976,0.065609],[0.057436,0.051722,0.077017]]},{"date":"201801130520","rgb":[[0.021169,0.026315,0.024424],[0.018203,0.026654,0.020698],[0.018203,0.026838,0.020745],[0.020201,0.026138,0.030851],[0.023059,0.025727,0.02426],[0.015673,0.027766,0.021532],[0.014875,0.02786,0.022036],[0.020745,0.026382,0.031259],[0.02751,0.025598,0.026694],[0.017972,0.027343,0.020807],[0.018184,0.027023,0.024665],[0.023347,0.025779,0.033655],[0.072694,0.050225,0.076238],[0.042408,0.04167,0.061482],[0.04338,0.040856,0.065594],[0.058909,0.051524,0.07642]]},{"date":"201801130530","rgb":[[0.021193,0.026289,0.025674],[0.018007,0.027164,0.020684],[0.017441,0.026913,0.022251],[0.020019,0.026261,0.031363],[0.023121,0.025619,0.023717],[0.017049,0.027939,0.019452],[0.015634,0.028016,0.021947],[0.020803,0.026208,0.029834],[0.028397,0.025486,0.028457],[0.018158,0.027232,0.021572],[0.018171,0.027187,0.023435],[0.022929,0.026344,0.034314],[0.07372,0.051135,0.077366],[0.042579,0.04149,0.061347],[0.044345,0.041195,0.065937],[0.058764,0.052128,0.078038]]},{"date":"201801130540","rgb":[[0.019791,0.026804,0.02461],[0.015317,0.027095,0.021217],[0.014718,0.027305,0.022109],[0.017876,0.026339,0.030861],[0.020409,0.026539,0.024563],[0.013321,0.028096,0.020836],[0.013068,0.028183,0.021024],[0.018334,0.026233,0.030445],[0.024359,0.02624,0.027831],[0.015741,0.028156,0.021319],[0.015681,0.027681,0.023379],[0.021109,0.026405,0.034097],[0.069726,0.050969,0.075139],[0.04063,0.042334,0.061098],[0.041785,0.041173,0.066295],[0.056357,0.052288,0.077529]]},{"date":"201801130550","rgb":[[0.016978,0.027023,0.024055],[0.014306,0.027098,0.01911],[0.014271,0.02681,0.020199],[0.016493,0.026426,0.027641],[0.016532,0.027531,0.023912],[0.011835,0.028341,0.017851],[0.011692,0.027523,0.01991],[0.014837,0.026824,0.027795],[0.020067,0.027091,0.026342],[0.012205,0.028232,0.019934],[0.012638,0.027709,0.023328],[0.017773,0.025962,0.031023],[0.066955,0.050972,0.073611],[0.039178,0.042283,0.061567],[0.039988,0.041847,0.064003],[0.055861,0.051737,0.075563]]},{"date":"201801130600","rgb":[[0.012471,0.027232,0.022],[0.014354,0.026119,0.018099],[0.012074,0.027303,0.017948],[0.01406,0.026919,0.026684],[0.012804,0.027868,0.020311],[0.010777,0.028812,0.014043],[0.011013,0.028446,0.015636],[0.014188,0.026967,0.025349],[0.016873,0.027946,0.021594],[0.01119,0.02904,0.014284],[0.011691,0.028708,0.017532],[0.015579,0.026927,0.026616],[0.066286,0.050031,0.075265],[0.038338,0.042413,0.061397],[0.039529,0.04201,0.063619],[0.054585,0.05208,0.075501]]},{"date":"201801130610","rgb":[[0.013997,0.027733,0.022411],[0.012517,0.026491,0.020919],[0.012359,0.027438,0.019841],[0.016018,0.026674,0.028457],[0.013885,0.027559,0.02233],[0.011185,0.027523,0.018465],[0.011314,0.026534,0.022178],[0.01559,0.026626,0.0286],[0.018653,0.027114,0.025491],[0.012156,0.027898,0.019147],[0.012312,0.027206,0.022356],[0.016891,0.026255,0.030043],[0.067657,0.049995,0.073089],[0.039536,0.042099,0.06149],[0.039499,0.041794,0.065038],[0.055507,0.051354,0.075433]]},{"date":"201801130620","rgb":[[0.015038,0.027004,0.026086],[0.012996,0.026592,0.022715],[0.013132,0.026982,0.024115],[0.017568,0.026421,0.032901],[0.01439,0.027446,0.024519],[0.011481,0.026835,0.021466],[0.012056,0.027069,0.023408],[0.018039,0.026275,0.031263],[0.020345,0.026867,0.026678],[0.012471,0.027375,0.022186],[0.012798,0.027206,0.024417],[0.018173,0.026198,0.032645],[0.067031,0.049026,0.076123],[0.038299,0.04179,0.063208],[0.03973,0.041562,0.065627],[0.056128,0.051832,0.077623]]},{"date":"201801130630","rgb":[[0.018468,0.025828,0.031363],[0.014692,0.02719,0.02679],[0.014936,0.026974,0.028365],[0.020148,0.026532,0.037692],[0.019175,0.02582,0.02976],[0.013975,0.027408,0.026273],[0.014182,0.026832,0.028494],[0.020255,0.026511,0.037589],[0.024031,0.026173,0.032884],[0.015207,0.027096,0.026213],[0.016514,0.026344,0.029415],[0.022103,0.026837,0.039213],[0.070739,0.050923,0.079678],[0.041234,0.04088,0.065821],[0.042459,0.041143,0.068154],[0.057766,0.05223,0.079353]]},{"date":"201801130640","rgb":[[0.023656,0.028131,0.055063],[0.019318,0.028035,0.052376],[0.019825,0.028456,0.054388],[0.026782,0.02899,0.063656],[0.024256,0.027891,0.053582],[0.019253,0.028485,0.050755],[0.019521,0.028086,0.054331],[0.02627,0.029935,0.06526],[0.027925,0.02832,0.05191],[0.019787,0.028208,0.048005],[0.021367,0.027837,0.050667],[0.026492,0.028868,0.060236],[0.073082,0.052086,0.088958],[0.043088,0.042342,0.07781],[0.045109,0.042115,0.079082],[0.058536,0.053001,0.087563]]},{"date":"201801130650","rgb":[[0.045149,0.036083,0.23366],[0.046575,0.035207,0.24744],[0.0477,0.034723,0.25653],[0.048677,0.03524,0.25965],[0.042948,0.03642,0.21682],[0.043556,0.035843,0.22521],[0.044635,0.03614,0.23113],[0.047424,0.036608,0.24376],[0.045157,0.036215,0.19532],[0.041833,0.036583,0.21086],[0.043165,0.036253,0.22099],[0.044368,0.036794,0.22235],[0.083224,0.055569,0.15655],[0.054346,0.047215,0.16381],[0.055603,0.047477,0.17042],[0.066863,0.05647,0.1542]]},{"date":"201801130700","rgb":[[0.16566,0.13275,0.69399],[0.18193,0.17665,0.68965],[0.18695,0.17476,0.71451],[0.18246,0.13191,0.75243],[0.16107,0.14245,0.64622],[0.17278,0.17486,0.64602],[0.17916,0.17537,0.66942],[0.17883,0.13647,0.718],[0.15137,0.11584,0.59158],[0.15493,0.15044,0.59205],[0.16288,0.14999,0.62792],[0.16419,0.11307,0.65337],[0.13618,0.081588,0.37547],[0.1204,0.092412,0.41381],[0.12598,0.092934,0.42784],[0.12126,0.07762,0.35797]]},{"date":"201801130710","rgb":[[0.43674,0.7784,0.99554],[0.48149,0.88136,0.99705],[0.5189,0.95072,0.99704],[0.51947,0.9577,0.9965],[0.44286,0.77714,0.99577],[0.47824,0.83729,0.99762],[0.51635,0.92147,0.9974],[0.52953,0.95635,0.99691],[0.43731,0.71341,0.99275],[0.46669,0.77233,0.99676],[0.50965,0.85982,0.99736],[0.5093,0.86816,0.98693],[0.30833,0.37799,0.75258],[0.33601,0.46039,0.78339],[0.36593,0.50095,0.78572],[0.31208,0.38863,0.68264]]},{"date":"201801130720","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.97798,0.98025,0.99626],[0.99598,0.97651,1],[0.99608,0.97647,1],[0.9822,0.96669,0.9982],[0.67658,0.71539,0.92601],[0.7332,0.74346,0.93185],[0.75507,0.74544,0.93787],[0.63185,0.62099,0.90638]]},{"date":"201801130730","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.98997,0.97712,0.99913],[0.80703,0.89551,0.94891],[0.82595,0.89995,0.9493],[0.86356,0.90174,0.94773],[0.77653,0.8617,0.93281]]},{"date":"201801130740","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99564,0.9766,0.99998],[0.9158,0.90867,0.95068],[0.92178,0.90779,0.95034],[0.926,0.90661,0.95086],[0.88025,0.91048,0.93889]]},{"date":"201801130750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93128,0.9048,0.95161],[0.92754,0.9047,0.94481]]},{"date":"201801130800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93119,0.90488,0.95161],[0.92293,0.90636,0.94463]]},{"date":"201801130810","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.9034,0.9449]]},{"date":"201801130820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.9034,0.94492]]},{"date":"201801130830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90341,0.94494]]},{"date":"201801130840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90342,0.94486]]},{"date":"201801130850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90337,0.9448]]},{"date":"201801130900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90339,0.94484]]},{"date":"201801130910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90337,0.94486]]},{"date":"201801130920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90338,0.94491]]},{"date":"201801130930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.9034,0.94493]]},{"date":"201801130940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90338,0.9449]]},{"date":"201801130950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90337,0.94479]]},{"date":"201801131000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.94488]]},{"date":"201801131010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90333,0.94493]]},{"date":"201801131020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94487]]},{"date":"201801131030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90335,0.94495]]},{"date":"201801131040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90337,0.94488]]},{"date":"201801131050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90332,0.94481]]},{"date":"201801131100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90333,0.94493]]},{"date":"201801131110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90333,0.94488]]},{"date":"201801131120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.9449]]},{"date":"201801131130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90335,0.94491]]},{"date":"201801131150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99512,0.97681,1],[0.99582,0.97656,1],[0.99608,0.97647,1],[0.99175,0.97795,1],[0.98514,0.98013,1],[0.98652,0.97968,1],[0.99381,0.97725,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92139,0.90674,0.94483]]},{"date":"201801131200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99531,0.97674,1],[0.99582,0.97656,1],[0.99608,0.97647,1],[0.9924,0.97771,1],[0.98548,0.98002,1],[0.98652,0.97968,1],[0.99384,0.97724,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.9214,0.90678,0.94484]]},{"date":"201801131210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90333,0.9449]]},{"date":"201801131220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99565,0.97662,1],[0.99605,0.97648,1],[0.99608,0.97647,1],[0.99275,0.9776,1],[0.98553,0.98001,1],[0.98775,0.97926,1],[0.9948,0.97689,1],[0.92195,0.90829,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.90663,0.94492]]},{"date":"201801131230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90336,0.94495]]},{"date":"201801131240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99547,0.97668,1],[0.99582,0.97656,1],[0.99608,0.97647,1],[0.99252,0.97769,1],[0.98553,0.98001,1],[0.98652,0.97968,1],[0.99381,0.97725,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.9214,0.9068,0.9449]]},{"date":"201801131250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90333,0.94481]]},{"date":"201801131310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90335,0.94496]]},{"date":"201801131320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90334,0.94495]]},{"date":"201801131330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90336,0.94497]]},{"date":"201801131340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90337,0.94496]]},{"date":"201801131350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99531,0.97674,1],[0.99582,0.97656,1],[0.99608,0.97647,1],[0.9924,0.97771,1],[0.98548,0.98002,1],[0.98649,0.9797,1],[0.99384,0.97724,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92139,0.90677,0.94481]]},{"date":"201801131400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90336,0.9449]]},{"date":"201801131410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90336,0.94494]]},{"date":"201801131420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90336,0.94496]]},{"date":"201801131430","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93067,0.90338,0.94496]]},{"date":"201801131440","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90337,0.94496]]},{"date":"201801131450","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94484]]},{"date":"201801131500","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90333,0.94482]]},{"date":"201801131510","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90331,0.94487]]},{"date":"201801131520","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90331,0.94489]]},{"date":"201801131530","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90332,0.94492]]},{"date":"201801131540","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93107,0.90496,0.95161],[0.93127,0.9048,0.95161],[0.93105,0.90493,0.95153],[0.92114,0.90734,0.93954]]},{"date":"201801131550","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99588,0.97655,0.99998],[0.89996,0.91091,0.94947],[0.91059,0.90912,0.94913],[0.91672,0.90782,0.95025],[0.88739,0.90809,0.93768]]},{"date":"201801131600","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.98665,0.97771,0.9993],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99286,0.9761,0.99943],[0.74214,0.84196,0.94185],[0.78976,0.85663,0.94388],[0.81993,0.86593,0.94159],[0.7475,0.81499,0.92629]]},{"date":"201801131910","rgb":[[0.013041,0.02772,0.020799],[0.014836,0.026282,0.019089],[0.013685,0.026162,0.020713],[0.016683,0.026952,0.025433],[0.011303,0.028847,0.014683],[0.010513,0.028706,0.012952],[0.010682,0.027938,0.015614],[0.013587,0.027659,0.022825],[0.012313,0.028735,0.016763],[0.010663,0.028929,0.013287],[0.010769,0.028735,0.013969],[0.013749,0.027387,0.02413],[0.067385,0.057022,0.073579],[0.038007,0.04312,0.05746],[0.037652,0.042947,0.057726],[0.053596,0.052398,0.070176]]},{"date":"201801131930","rgb":[[0.013063,0.028179,0.018127],[0.015515,0.0257,0.017976],[0.013369,0.02728,0.016395],[0.014985,0.026929,0.026162],[0.011385,0.028969,0.01471],[0.010591,0.028901,0.012589],[0.010594,0.028541,0.013109],[0.012789,0.027307,0.023302],[0.012408,0.028851,0.01678],[0.010735,0.029044,0.012823],[0.010663,0.028593,0.013936],[0.012981,0.02711,0.024566],[0.0678,0.056987,0.073482],[0.037741,0.043448,0.056521],[0.03747,0.042899,0.057233],[0.053086,0.052439,0.070429]]},{"date":"201801131940","rgb":[[0.012993,0.027909,0.017405],[0.012421,0.027227,0.017963],[0.012259,0.026937,0.020337],[0.015441,0.026998,0.025891],[0.011439,0.027849,0.01789],[0.01046,0.028682,0.012721],[0.010737,0.028345,0.014309],[0.013781,0.027188,0.024849],[0.012097,0.028903,0.015458],[0.010543,0.028884,0.012571],[0.010626,0.028682,0.013126],[0.013432,0.026815,0.024227],[0.066883,0.058463,0.072032],[0.037525,0.043504,0.055888],[0.03757,0.043051,0.05749],[0.053094,0.052466,0.071165]]},{"date":"201801131950","rgb":[[0.012941,0.027385,0.019087],[0.01236,0.026759,0.01803],[0.014041,0.025949,0.019771],[0.01435,0.026645,0.027043],[0.011253,0.028892,0.015359],[0.010457,0.028779,0.011793],[0.01061,0.028002,0.015102],[0.012807,0.027332,0.024028],[0.012151,0.0283,0.017526],[0.010576,0.0289,0.012686],[0.0106,0.028717,0.013352],[0.012343,0.027378,0.023848],[0.066724,0.057873,0.075539],[0.037474,0.042661,0.05874],[0.037565,0.041965,0.061423],[0.051947,0.052027,0.074012]]},{"date":"201801132000","rgb":[[0.013422,0.02699,0.02065],[0.013054,0.02716,0.017476],[0.013162,0.026982,0.018838],[0.015796,0.027103,0.025549],[0.011657,0.028408,0.016727],[0.010718,0.028967,0.012872],[0.010789,0.028552,0.014379],[0.013614,0.026959,0.025657],[0.013343,0.02865,0.018307],[0.010973,0.029198,0.013623],[0.010913,0.028732,0.014779],[0.014357,0.02677,0.025692],[0.067649,0.057574,0.075058],[0.037862,0.042969,0.058586],[0.038084,0.042593,0.059391],[0.053731,0.052133,0.073204]]},{"date":"201801132010","rgb":[[0.01277,0.027099,0.020729],[0.013879,0.026439,0.017487],[0.012648,0.026855,0.018786],[0.015569,0.026292,0.026234],[0.011281,0.028746,0.015667],[0.010585,0.02889,0.01253],[0.010574,0.028661,0.013612],[0.012738,0.027115,0.023703],[0.01248,0.028324,0.01862],[0.010715,0.028912,0.0136],[0.010612,0.028573,0.01389],[0.013495,0.027298,0.023236],[0.066522,0.056499,0.07538],[0.037329,0.042559,0.059351],[0.037304,0.042699,0.058325],[0.052558,0.052249,0.072077]]},{"date":"201801132020","rgb":[[0.013259,0.02787,0.018963],[0.013134,0.027556,0.01515],[0.015229,0.026269,0.017445],[0.015268,0.027206,0.024869],[0.011597,0.028786,0.015299],[0.010624,0.028884,0.012445],[0.010609,0.028826,0.012764],[0.013337,0.027818,0.021596],[0.012209,0.029051,0.016306],[0.010534,0.028803,0.012698],[0.010531,0.028611,0.012765],[0.013101,0.0277,0.021826],[0.066959,0.056949,0.073035],[0.038034,0.043018,0.056143],[0.038088,0.043001,0.056367],[0.05388,0.05271,0.069072]]},{"date":"201801132030","rgb":[[0.012451,0.027361,0.020047],[0.015675,0.025621,0.017097],[0.012816,0.02699,0.017138],[0.015366,0.026515,0.026277],[0.011276,0.029119,0.014278],[0.010617,0.028896,0.012273],[0.010564,0.02837,0.013758],[0.014105,0.027689,0.022013],[0.012655,0.028464,0.017218],[0.010709,0.028939,0.013337],[0.010688,0.028712,0.013653],[0.013672,0.026859,0.024102],[0.066903,0.056997,0.075721],[0.037922,0.042716,0.058369],[0.037747,0.042772,0.058041],[0.053341,0.052429,0.071712]]},{"date":"201801132040","rgb":[[0.013949,0.02698,0.021685],[0.013562,0.027112,0.016371],[0.013052,0.026626,0.019142],[0.015614,0.026382,0.026012],[0.011349,0.027858,0.01839],[0.01062,0.028483,0.013733],[0.010613,0.027885,0.015601],[0.013163,0.026939,0.024742],[0.012169,0.028248,0.018859],[0.010629,0.028773,0.013484],[0.010575,0.028555,0.014085],[0.012874,0.027564,0.023271],[0.067546,0.056313,0.0777],[0.037912,0.042559,0.05978],[0.037758,0.0424,0.060393],[0.052753,0.052366,0.072817]]},{"date":"201801132050","rgb":[[0.012849,0.027875,0.018845],[0.014866,0.026346,0.017202],[0.012629,0.027661,0.01791],[0.015536,0.027228,0.024779],[0.011255,0.028612,0.015167],[0.010663,0.028979,0.011872],[0.010617,0.028651,0.013758],[0.013258,0.027425,0.023177],[0.012299,0.028738,0.017873],[0.010758,0.029053,0.013457],[0.010747,0.028671,0.013829],[0.012769,0.027039,0.024068],[0.067093,0.057027,0.074539],[0.037734,0.043017,0.058059],[0.037318,0.043122,0.057312],[0.052514,0.052554,0.07121]]},{"date":"201801132100","rgb":[[0.013786,0.028013,0.018121],[0.012883,0.02743,0.018728],[0.013894,0.027261,0.019707],[0.01598,0.026483,0.027019],[0.011429,0.028763,0.015671],[0.01068,0.028709,0.013095],[0.010942,0.028683,0.014324],[0.013356,0.027193,0.024478],[0.012499,0.029032,0.015816],[0.010681,0.029052,0.012425],[0.010779,0.028812,0.013776],[0.013357,0.027507,0.022791],[0.067872,0.057681,0.075739],[0.038179,0.043017,0.058123],[0.038109,0.042758,0.060546],[0.053974,0.05183,0.072828]]},{"date":"201801132110","rgb":[[0.012507,0.027774,0.020467],[0.01335,0.026596,0.017552],[0.012769,0.027323,0.018008],[0.014501,0.027001,0.025178],[0.011481,0.028563,0.016777],[0.010598,0.028819,0.012429],[0.010684,0.028748,0.013475],[0.013219,0.027387,0.023322],[0.012422,0.028847,0.016933],[0.010751,0.028909,0.013401],[0.010665,0.028672,0.013666],[0.013177,0.027012,0.023947],[0.067035,0.057794,0.073946],[0.037784,0.043037,0.057146],[0.037959,0.042942,0.057896],[0.05309,0.051963,0.071898]]},{"date":"201801132120","rgb":[[0.012665,0.027247,0.021886],[0.013577,0.026765,0.017106],[0.012799,0.026768,0.019519],[0.014772,0.026826,0.026318],[0.011235,0.028514,0.016142],[0.01053,0.028786,0.012263],[0.010646,0.027683,0.016143],[0.013038,0.026987,0.024084],[0.012601,0.028623,0.017545],[0.010673,0.02899,0.012895],[0.010739,0.02837,0.015014],[0.013425,0.026973,0.024869],[0.067823,0.056564,0.077108],[0.03767,0.042597,0.059471],[0.037753,0.042387,0.061141],[0.052381,0.052326,0.072547]]},{"date":"201801132130","rgb":[[0.012394,0.028132,0.018334],[0.013008,0.027077,0.016164],[0.011594,0.026489,0.020216],[0.014408,0.02687,0.025906],[0.011382,0.02875,0.015142],[0.010527,0.028848,0.012474],[0.01059,0.028339,0.013825],[0.012908,0.027471,0.022741],[0.012168,0.028555,0.017109],[0.010725,0.028945,0.012607],[0.010514,0.028658,0.012786],[0.012546,0.027298,0.023051],[0.06719,0.057223,0.075635],[0.037435,0.043229,0.057717],[0.037335,0.04296,0.056907],[0.051904,0.051989,0.071834]]},{"date":"201801132140","rgb":[[0.013276,0.027306,0.021672],[0.013164,0.026722,0.018343],[0.012167,0.027173,0.019812],[0.015096,0.026695,0.027593],[0.011514,0.028517,0.016131],[0.010497,0.028798,0.012437],[0.010581,0.028356,0.014127],[0.013376,0.027238,0.023684],[0.012814,0.028553,0.018185],[0.010746,0.02903,0.013197],[0.010779,0.028723,0.013804],[0.013377,0.027276,0.024886],[0.067207,0.057782,0.07567],[0.037729,0.042537,0.060413],[0.037598,0.042424,0.059848],[0.052938,0.052141,0.072081]]},{"date":"201801132150","rgb":[[0.013176,0.026818,0.022833],[0.012777,0.02653,0.019486],[0.01267,0.026053,0.02164],[0.014651,0.027085,0.02545],[0.011324,0.028553,0.015584],[0.010543,0.02872,0.011901],[0.01052,0.027522,0.015893],[0.012897,0.027782,0.020902],[0.012616,0.028298,0.018737],[0.010811,0.029074,0.013331],[0.010691,0.028769,0.013631],[0.013164,0.027581,0.02296],[0.066436,0.057414,0.07466],[0.037575,0.043305,0.056574],[0.037482,0.042563,0.058968],[0.052011,0.052247,0.071215]]},{"date":"201801132200","rgb":[[0.012937,0.027636,0.020182],[0.012142,0.027717,0.016509],[0.014399,0.026661,0.017866],[0.015264,0.026639,0.026162],[0.011187,0.028901,0.014625],[0.010595,0.028538,0.013219],[0.010614,0.028549,0.01365],[0.012941,0.027513,0.022315],[0.012584,0.028573,0.017639],[0.0107,0.02897,0.013052],[0.010607,0.028749,0.013269],[0.013399,0.027178,0.024049],[0.067294,0.056573,0.075819],[0.037495,0.042609,0.058822],[0.037386,0.042381,0.058936],[0.052273,0.052374,0.072064]]},{"date":"201801132210","rgb":[[0.013969,0.027035,0.02233],[0.013208,0.027482,0.016619],[0.012863,0.026783,0.019074],[0.014588,0.026999,0.026801],[0.011325,0.028845,0.015233],[0.010538,0.028829,0.012514],[0.010449,0.028423,0.012951],[0.012872,0.02782,0.02089],[0.012562,0.028918,0.017139],[0.010742,0.029111,0.013317],[0.010602,0.02872,0.013615],[0.012838,0.027144,0.024552],[0.067436,0.057525,0.076492],[0.037923,0.042752,0.05896],[0.037397,0.042972,0.057631],[0.051809,0.052063,0.072723]]},{"date":"201801132220","rgb":[[0.013904,0.0271,0.022832],[0.013549,0.027194,0.018325],[0.013328,0.026684,0.02135],[0.016382,0.026508,0.027481],[0.01178,0.027918,0.019032],[0.010667,0.02874,0.013623],[0.010906,0.027592,0.017489],[0.013957,0.027031,0.026379],[0.012533,0.028157,0.019768],[0.010706,0.028781,0.013865],[0.010837,0.028456,0.014751],[0.013154,0.027093,0.025683],[0.067478,0.056756,0.078396],[0.038328,0.042334,0.060498],[0.038228,0.042207,0.061939],[0.053148,0.051988,0.074854]]},{"date":"201801132230","rgb":[[0.012752,0.027799,0.019867],[0.011934,0.026573,0.019745],[0.012282,0.02771,0.016758],[0.015278,0.026949,0.026511],[0.011278,0.028242,0.016554],[0.010502,0.028744,0.012584],[0.010599,0.027912,0.014962],[0.012905,0.026683,0.024457],[0.012529,0.028847,0.016827],[0.010673,0.028961,0.012384],[0.010541,0.028639,0.013735],[0.013909,0.027395,0.023232],[0.067555,0.056746,0.07553],[0.037577,0.042714,0.058169],[0.037734,0.042709,0.058709],[0.053285,0.051824,0.07275]]},{"date":"201801132240","rgb":[[0.012618,0.027428,0.019935],[0.012331,0.02596,0.022029],[0.012601,0.027358,0.018267],[0.015108,0.026975,0.02582],[0.01135,0.028819,0.014411],[0.010667,0.028024,0.014986],[0.010521,0.028652,0.012364],[0.013657,0.027358,0.0225],[0.012394,0.029058,0.015452],[0.010628,0.028842,0.013001],[0.010595,0.028817,0.013325],[0.013284,0.027493,0.021791],[0.067079,0.05724,0.075741],[0.037798,0.043135,0.057677],[0.037545,0.042766,0.058863],[0.053246,0.052232,0.071514]]},{"date":"201801132250","rgb":[[0.01453,0.027642,0.017397],[0.014157,0.027258,0.014558],[0.014136,0.026636,0.017578],[0.015691,0.026978,0.023836],[0.011228,0.029104,0.013797],[0.010528,0.028947,0.011627],[0.010577,0.028767,0.012284],[0.01335,0.027957,0.020644],[0.01217,0.029024,0.015177],[0.010541,0.028995,0.011907],[0.010545,0.028908,0.012767],[0.012749,0.027591,0.022416],[0.067499,0.057823,0.073786],[0.038117,0.043397,0.055333],[0.037982,0.043309,0.056961],[0.052942,0.052819,0.069776]]},{"date":"201801132300","rgb":[[0.013605,0.027173,0.020856],[0.013357,0.027111,0.016838],[0.012371,0.026809,0.019154],[0.015641,0.027011,0.025134],[0.011254,0.027879,0.017839],[0.010602,0.028865,0.012971],[0.010586,0.028438,0.014067],[0.012715,0.027391,0.024418],[0.012478,0.028235,0.018951],[0.01074,0.028849,0.012988],[0.010674,0.028273,0.014609],[0.013269,0.027231,0.024367],[0.067908,0.056658,0.076875],[0.037712,0.042847,0.057952],[0.037765,0.042712,0.058359],[0.053153,0.052185,0.07298]]},{"date":"201801132310","rgb":[[0.013237,0.027441,0.022084],[0.015619,0.025956,0.017527],[0.012125,0.026007,0.021787],[0.015205,0.026762,0.026375],[0.011425,0.028685,0.015213],[0.010493,0.028878,0.011723],[0.01048,0.027673,0.015386],[0.013032,0.026787,0.02427],[0.012347,0.028289,0.018933],[0.010683,0.028859,0.013535],[0.010522,0.02845,0.014362],[0.012819,0.027111,0.024594],[0.067487,0.057577,0.076267],[0.037291,0.043226,0.056141],[0.037345,0.042775,0.057287],[0.052635,0.052148,0.071478]]},{"date":"201801132320","rgb":[[0.01323,0.027172,0.020953],[0.013612,0.026592,0.017156],[0.011991,0.027009,0.018969],[0.0151,0.026841,0.025128],[0.011608,0.028912,0.015071],[0.01051,0.028873,0.011494],[0.010502,0.027918,0.015085],[0.013032,0.0277,0.021378],[0.012122,0.029171,0.015633],[0.010634,0.028973,0.011954],[0.010517,0.028821,0.012438],[0.012979,0.027929,0.020923],[0.066482,0.057829,0.072528],[0.037349,0.043664,0.055318],[0.037222,0.043029,0.057138],[0.052695,0.052615,0.069467]]},{"date":"201801132330","rgb":[[0.012922,0.027533,0.020466],[0.013169,0.027221,0.015428],[0.013103,0.027154,0.016996],[0.014859,0.026856,0.025363],[0.011291,0.028716,0.015075],[0.010439,0.028732,0.011995],[0.010488,0.028546,0.012809],[0.012405,0.027513,0.021798],[0.012541,0.029076,0.01708],[0.010577,0.028945,0.012365],[0.010594,0.028703,0.013103],[0.013024,0.027326,0.023832],[0.066995,0.057404,0.074802],[0.037263,0.043263,0.05576],[0.03725,0.043251,0.05662],[0.052046,0.052448,0.071369]]},{"date":"201801132340","rgb":[[0.013189,0.027981,0.019509],[0.01283,0.027432,0.015468],[0.013433,0.026571,0.018141],[0.014956,0.027321,0.023817],[0.011451,0.02859,0.015333],[0.010581,0.028862,0.012228],[0.010539,0.028666,0.012545],[0.01301,0.027502,0.022299],[0.012393,0.028143,0.018893],[0.010639,0.028761,0.012876],[0.010529,0.028381,0.014312],[0.012342,0.027463,0.023819],[0.067476,0.057022,0.076425],[0.037098,0.042886,0.057407],[0.037188,0.042736,0.057682],[0.051872,0.052539,0.071797]]},{"date":"201801132350","rgb":[[0.012981,0.028181,0.01859],[0.012184,0.02725,0.017858],[0.012588,0.027504,0.016089],[0.014241,0.027057,0.025955],[0.011322,0.028586,0.015384],[0.010498,0.028698,0.012655],[0.01048,0.028529,0.012645],[0.012667,0.027357,0.023333],[0.012494,0.028575,0.017448],[0.010644,0.028963,0.012675],[0.010475,0.028495,0.013344],[0.01313,0.027029,0.024694],[0.067181,0.056771,0.073558],[0.037435,0.043342,0.05634],[0.037328,0.043028,0.057298],[0.052751,0.05227,0.072105]]},{"date":"201801140000","rgb":[[0.013546,0.027271,0.021949],[0.01345,0.026891,0.016159],[0.014062,0.026559,0.018375],[0.014868,0.026768,0.027025],[0.011345,0.02853,0.015962],[0.0105,0.028816,0.012186],[0.010454,0.028251,0.013662],[0.012494,0.027079,0.025156],[0.012538,0.029003,0.016091],[0.010587,0.028865,0.012809],[0.010542,0.028817,0.013003],[0.013534,0.027362,0.02382],[0.067161,0.056569,0.074918],[0.037285,0.04314,0.056474],[0.037547,0.043308,0.057176],[0.0533,0.052204,0.072764]]},{"date":"201801140010","rgb":[[0.013339,0.027062,0.022054],[0.013403,0.027104,0.016733],[0.012125,0.02744,0.01791],[0.015712,0.026823,0.026972],[0.011513,0.028311,0.016702],[0.010531,0.028774,0.012448],[0.010609,0.028732,0.012542],[0.013988,0.027377,0.024013],[0.012584,0.028699,0.016283],[0.01068,0.028961,0.013313],[0.010665,0.028346,0.015208],[0.013519,0.026891,0.025231],[0.067208,0.057239,0.075697],[0.037608,0.043282,0.056577],[0.037737,0.04269,0.058717],[0.052542,0.052538,0.071663]]},{"date":"201801140020","rgb":[[0.012924,0.027398,0.020874],[0.012831,0.027039,0.016942],[0.013227,0.026457,0.018948],[0.015314,0.026434,0.026682],[0.011159,0.028052,0.017336],[0.010497,0.02873,0.012637],[0.010471,0.028467,0.013532],[0.012417,0.026956,0.024832],[0.012323,0.028171,0.017372],[0.010639,0.028913,0.012666],[0.010516,0.028525,0.013567],[0.013524,0.027034,0.025315],[0.066371,0.05736,0.073708],[0.037243,0.043136,0.05662],[0.037006,0.042617,0.058004],[0.052373,0.052162,0.072703]]},{"date":"201801140030","rgb":[[0.013811,0.02765,0.018176],[0.01539,0.025765,0.017779],[0.013571,0.02676,0.017422],[0.014024,0.026837,0.025545],[0.011131,0.028691,0.014718],[0.010454,0.028846,0.011756],[0.010531,0.02871,0.0129],[0.012416,0.027863,0.020155],[0.012163,0.029049,0.015123],[0.010548,0.028925,0.011905],[0.010563,0.028777,0.012281],[0.01236,0.027747,0.020882],[0.066431,0.0566,0.074297],[0.037099,0.043367,0.055592],[0.037025,0.042946,0.056785],[0.052166,0.052259,0.071874]]},{"date":"201801140040","rgb":[[0.013722,0.027561,0.020771],[0.013286,0.027304,0.016456],[0.016909,0.027181,0.01903],[0.017735,0.026676,0.027502],[0.011423,0.028776,0.015541],[0.010546,0.028714,0.013036],[0.010611,0.028697,0.013248],[0.015321,0.027101,0.024827],[0.012446,0.028755,0.016587],[0.010635,0.028944,0.012905],[0.010567,0.028667,0.013056],[0.013222,0.027296,0.023747],[0.067325,0.057423,0.073985],[0.037191,0.043216,0.056185],[0.037476,0.04329,0.056522],[0.053009,0.052452,0.071968]]},{"date":"201801140050","rgb":[[0.013508,0.027217,0.022486],[0.013849,0.026944,0.017646],[0.015186,0.027002,0.020272],[0.017263,0.026482,0.029576],[0.011369,0.027354,0.020044],[0.010659,0.02872,0.013475],[0.010731,0.028111,0.014966],[0.015318,0.026909,0.025633],[0.012261,0.028255,0.018943],[0.01055,0.028743,0.012957],[0.010535,0.028534,0.013749],[0.012945,0.02697,0.024924],[0.06717,0.056291,0.075463],[0.037536,0.042628,0.058538],[0.037169,0.042388,0.058491],[0.052619,0.05239,0.072627]]},{"date":"201801140100","rgb":[[0.013579,0.027444,0.021372],[0.013712,0.027195,0.015342],[0.014885,0.027085,0.020167],[0.017318,0.026675,0.026961],[0.011577,0.027938,0.016751],[0.010663,0.028914,0.011456],[0.010597,0.028581,0.01343],[0.015539,0.027178,0.023239],[0.012457,0.028925,0.016676],[0.010553,0.028954,0.011788],[0.010506,0.028746,0.013169],[0.012512,0.027538,0.023223],[0.067636,0.057821,0.075185],[0.037063,0.043396,0.055621],[0.03728,0.043044,0.057264],[0.051777,0.052793,0.070594]]},{"date":"201801140110","rgb":[[0.012327,0.027511,0.021266],[0.012774,0.027551,0.015676],[0.013458,0.026813,0.017968],[0.014834,0.026638,0.027391],[0.011285,0.028875,0.014265],[0.010483,0.028798,0.012069],[0.010461,0.028757,0.012168],[0.013714,0.027326,0.022755],[0.012025,0.02807,0.017915],[0.010491,0.028704,0.012256],[0.010457,0.028568,0.012644],[0.012616,0.027153,0.023009],[0.066312,0.05761,0.073572],[0.03705,0.043152,0.056391],[0.037214,0.043059,0.05688],[0.052119,0.05205,0.071565]]},{"date":"201801140120","rgb":[[0.013264,0.027207,0.022964],[0.013991,0.026202,0.019259],[0.0129,0.026748,0.020184],[0.015841,0.026369,0.027621],[0.011375,0.027616,0.018878],[0.010529,0.028619,0.013325],[0.01063,0.027194,0.017175],[0.013355,0.027082,0.02456],[0.012672,0.028323,0.018505],[0.010579,0.028755,0.013046],[0.010595,0.028438,0.014423],[0.01344,0.026896,0.024912],[0.067249,0.056912,0.076451],[0.037251,0.042749,0.058105],[0.037276,0.042355,0.058809],[0.053123,0.051957,0.072151]]},{"date":"201801140130","rgb":[[0.013328,0.027389,0.020273],[0.012892,0.027471,0.016653],[0.013121,0.02673,0.020854],[0.014593,0.026951,0.027184],[0.011076,0.028997,0.014284],[0.0105,0.028808,0.012074],[0.010528,0.027887,0.014594],[0.013267,0.027281,0.023165],[0.011958,0.029126,0.016215],[0.010504,0.028872,0.012293],[0.010557,0.028693,0.013195],[0.013015,0.027241,0.023482],[0.06608,0.057041,0.073125],[0.036892,0.042995,0.056135],[0.037191,0.042873,0.056819],[0.052091,0.052153,0.071745]]},{"date":"201801140140","rgb":[[0.013184,0.027432,0.021798],[0.012801,0.026834,0.019389],[0.012392,0.027183,0.019874],[0.016595,0.026577,0.02805],[0.01115,0.028825,0.015077],[0.010552,0.028738,0.012488],[0.010532,0.028477,0.013294],[0.014017,0.027113,0.025248],[0.012246,0.028901,0.015804],[0.010495,0.028885,0.011458],[0.010482,0.028658,0.012937],[0.013123,0.027402,0.0239],[0.067029,0.05793,0.073142],[0.037183,0.042828,0.057283],[0.037504,0.042969,0.05764],[0.052841,0.052307,0.072161]]},{"date":"201801140200","rgb":[[0.012521,0.027772,0.019018],[0.017552,0.024924,0.015112],[0.016247,0.025805,0.015779],[0.015165,0.02657,0.02643],[0.011153,0.028492,0.015443],[0.010473,0.028787,0.011568],[0.010592,0.02859,0.013158],[0.01317,0.027196,0.023308],[0.011856,0.028625,0.015717],[0.010463,0.028823,0.012451],[0.010479,0.028757,0.013109],[0.012705,0.027158,0.023146],[0.066058,0.057853,0.071983],[0.037092,0.043497,0.055088],[0.036951,0.043153,0.055953],[0.052071,0.052435,0.070888]]},{"date":"201801140210","rgb":[[0.013623,0.027564,0.019075],[0.01337,0.026676,0.016872],[0.015626,0.025791,0.016699],[0.015529,0.027014,0.022673],[0.011499,0.028502,0.016084],[0.010541,0.02881,0.012119],[0.010479,0.028717,0.012786],[0.014272,0.027793,0.021297],[0.01219,0.028993,0.015602],[0.010476,0.028863,0.012088],[0.010493,0.028854,0.012421],[0.012656,0.027431,0.021586],[0.066977,0.057352,0.074353],[0.037107,0.04308,0.056486],[0.036979,0.043094,0.055635],[0.052166,0.052397,0.069976]]},{"date":"201801140220","rgb":[[0.012805,0.027296,0.021253],[0.012373,0.027467,0.016115],[0.012292,0.027067,0.01797],[0.015192,0.026918,0.024635],[0.011226,0.028438,0.015841],[0.010418,0.02878,0.011762],[0.01041,0.028563,0.012804],[0.013178,0.027677,0.021903],[0.012039,0.028289,0.017696],[0.01051,0.028762,0.012468],[0.01047,0.028636,0.013015],[0.012323,0.027564,0.022814],[0.065986,0.057275,0.072162],[0.036876,0.043352,0.054898],[0.036854,0.043162,0.055007],[0.0519,0.052801,0.068878]]},{"date":"201801140230","rgb":[[0.013331,0.027388,0.021044],[0.012327,0.027951,0.015491],[0.012634,0.026696,0.019834],[0.015336,0.026796,0.02665],[0.011502,0.028805,0.014682],[0.010498,0.028777,0.012205],[0.010466,0.028276,0.013214],[0.014285,0.02698,0.024474],[0.0123,0.028836,0.016374],[0.010553,0.028904,0.012267],[0.010543,0.028466,0.013914],[0.012896,0.026958,0.024613],[0.066837,0.057712,0.075581],[0.037237,0.042867,0.057442],[0.037173,0.042374,0.058994],[0.05287,0.052201,0.072643]]},{"date":"201801140240","rgb":[[0.012974,0.027207,0.022958],[0.012497,0.026586,0.021508],[0.0128,0.026869,0.022053],[0.015804,0.026643,0.029369],[0.011491,0.027445,0.019779],[0.010669,0.028281,0.014565],[0.010765,0.027869,0.01618],[0.014073,0.026831,0.026579],[0.013227,0.027938,0.020209],[0.010668,0.028723,0.013649],[0.010853,0.027833,0.016927],[0.013893,0.026771,0.02656],[0.067682,0.057044,0.07663],[0.037939,0.042355,0.059693],[0.037979,0.04191,0.062906],[0.052799,0.051919,0.075158]]},{"date":"201801140250","rgb":[[0.012513,0.027482,0.020392],[0.012892,0.027276,0.016046],[0.013461,0.026806,0.01731],[0.014326,0.02691,0.026652],[0.011238,0.0287,0.015735],[0.010547,0.028818,0.012426],[0.01051,0.028472,0.013017],[0.013679,0.027102,0.024464],[0.01215,0.028533,0.017516],[0.010498,0.028827,0.012133],[0.010415,0.028664,0.011993],[0.0123,0.027241,0.02364],[0.067486,0.056975,0.075923],[0.037271,0.043234,0.055595],[0.036988,0.043156,0.055822],[0.052011,0.052683,0.071589]]},{"date":"201801140300","rgb":[[0.013939,0.02772,0.019962],[0.013467,0.02736,0.016816],[0.013464,0.026844,0.019869],[0.016813,0.02675,0.026049],[0.01194,0.02869,0.015476],[0.010679,0.02887,0.012672],[0.010692,0.028699,0.012776],[0.014647,0.027295,0.023886],[0.012326,0.02891,0.016108],[0.01066,0.028937,0.012837],[0.010576,0.028637,0.013615],[0.012814,0.02741,0.024307],[0.067342,0.057457,0.07213],[0.037334,0.043491,0.055781],[0.037322,0.043201,0.056495],[0.052944,0.052642,0.070253]]},{"date":"201801140310","rgb":[[0.013453,0.027453,0.021558],[0.012138,0.026848,0.01937],[0.012425,0.02751,0.019348],[0.015701,0.026529,0.028831],[0.011489,0.028137,0.017605],[0.010577,0.028755,0.012783],[0.010709,0.02832,0.013779],[0.014047,0.026827,0.026344],[0.01217,0.028794,0.016452],[0.010647,0.028952,0.01277],[0.010743,0.028734,0.013593],[0.013241,0.027048,0.025191],[0.067727,0.05657,0.075986],[0.037569,0.042686,0.058752],[0.03772,0.042535,0.058863],[0.052701,0.05211,0.072757]]},{"date":"201801140330","rgb":[[0.013319,0.027329,0.021349],[0.013433,0.026102,0.019904],[0.014284,0.026511,0.019124],[0.01485,0.026981,0.025987],[0.011195,0.02878,0.014756],[0.010596,0.028821,0.012177],[0.010619,0.028811,0.013113],[0.013552,0.027807,0.021106],[0.011951,0.029108,0.015157],[0.010507,0.028932,0.012387],[0.010453,0.028831,0.01233],[0.012001,0.027658,0.021219],[0.066302,0.057744,0.071408],[0.037003,0.043472,0.054947],[0.037051,0.043241,0.05546],[0.051975,0.052955,0.068473]]},{"date":"201801140340","rgb":[[0.013197,0.02777,0.019528],[0.012169,0.027471,0.017281],[0.013318,0.027365,0.017008],[0.016048,0.026969,0.02456],[0.011222,0.029145,0.014218],[0.010537,0.02889,0.012486],[0.010513,0.028751,0.011754],[0.014266,0.028166,0.020114],[0.012309,0.02925,0.014475],[0.0106,0.028995,0.011959],[0.01047,0.028805,0.012677],[0.012761,0.027957,0.020288],[0.067197,0.057222,0.071938],[0.037476,0.043276,0.05453],[0.037253,0.043546,0.055126],[0.052176,0.052776,0.068678]]},{"date":"201801140400","rgb":[[0.01379,0.02724,0.019063],[0.013315,0.026826,0.016676],[0.012888,0.026523,0.018871],[0.014857,0.026763,0.02578],[0.011318,0.028365,0.016316],[0.010496,0.028867,0.011377],[0.010421,0.028677,0.01184],[0.013679,0.027642,0.022176],[0.012551,0.027855,0.019919],[0.010592,0.028759,0.013224],[0.010532,0.028052,0.015243],[0.012406,0.027047,0.024298],[0.066668,0.05769,0.073741],[0.037129,0.043206,0.055551],[0.036863,0.042633,0.057474],[0.051717,0.052235,0.071542]]},{"date":"201801140410","rgb":[[0.012839,0.028195,0.016523],[0.012282,0.027972,0.013653],[0.012351,0.027525,0.015756],[0.01471,0.026908,0.024349],[0.01105,0.02834,0.015518],[0.010402,0.028776,0.011288],[0.010462,0.028676,0.012285],[0.01288,0.027434,0.022088],[0.011997,0.028999,0.01554],[0.010437,0.02878,0.01228],[0.010493,0.028649,0.012885],[0.011958,0.027697,0.021342],[0.065926,0.05705,0.073346],[0.036759,0.043134,0.055533],[0.037018,0.042846,0.055877],[0.051676,0.052394,0.069897]]},{"date":"201801140420","rgb":[[0.012816,0.027323,0.019718],[0.012643,0.026937,0.016357],[0.014054,0.026573,0.016857],[0.013504,0.02717,0.024132],[0.011124,0.028994,0.013938],[0.010472,0.02884,0.011472],[0.010386,0.028717,0.011478],[0.013166,0.027394,0.022819],[0.011972,0.02877,0.015767],[0.010556,0.028912,0.012113],[0.010426,0.028797,0.012062],[0.011897,0.027093,0.023198],[0.065652,0.057377,0.07144],[0.036958,0.043335,0.055603],[0.036869,0.04329,0.055233],[0.051588,0.052444,0.069807]]},{"date":"201801140440","rgb":[[0.012685,0.027737,0.018859],[0.011857,0.027818,0.014361],[0.012919,0.027316,0.015489],[0.014309,0.027348,0.02464],[0.011201,0.028578,0.015481],[0.010518,0.028941,0.010913],[0.010396,0.028762,0.011555],[0.013526,0.027615,0.021188],[0.012294,0.028811,0.016325],[0.010518,0.028872,0.012519],[0.010527,0.028919,0.01264],[0.012699,0.027473,0.022055],[0.065955,0.056663,0.073322],[0.036936,0.043273,0.056174],[0.037173,0.043212,0.055973],[0.052396,0.052632,0.070622]]},{"date":"201801140450","rgb":[[0.012799,0.027999,0.018136],[0.015822,0.025848,0.014593],[0.014201,0.026891,0.01618],[0.015329,0.026501,0.025829],[0.011149,0.029117,0.014016],[0.01049,0.028741,0.011842],[0.010531,0.028705,0.012266],[0.013788,0.027238,0.023201],[0.012286,0.029064,0.016418],[0.010598,0.028792,0.01257],[0.010574,0.028858,0.012877],[0.01232,0.027121,0.023866],[0.067219,0.057393,0.07308],[0.037655,0.04322,0.056241],[0.037619,0.043374,0.05689],[0.052851,0.052092,0.071998]]},{"date":"201801140500","rgb":[[0.012491,0.027742,0.018623],[0.012528,0.027376,0.015775],[0.012706,0.026115,0.020879],[0.013888,0.026776,0.025673],[0.011239,0.028697,0.015088],[0.010498,0.028767,0.012253],[0.010531,0.028116,0.014315],[0.012553,0.027277,0.022886],[0.012312,0.028656,0.016104],[0.010696,0.028938,0.013116],[0.010572,0.028445,0.01434],[0.012934,0.027663,0.023232],[0.065941,0.058242,0.072708],[0.037361,0.043456,0.055738],[0.037213,0.042879,0.057365],[0.052695,0.052352,0.071286]]},{"date":"201801140510","rgb":[[0.01236,0.027892,0.017716],[0.012353,0.026879,0.017511],[0.012181,0.027131,0.017453],[0.01462,0.02693,0.024805],[0.011372,0.028864,0.014726],[0.010551,0.02889,0.011996],[0.010587,0.028645,0.013126],[0.013177,0.027564,0.022376],[0.012164,0.028802,0.016636],[0.010617,0.028899,0.012659],[0.010592,0.028619,0.013919],[0.012904,0.027425,0.023911],[0.065874,0.057058,0.073555],[0.037046,0.043154,0.056666],[0.037152,0.042334,0.058865],[0.052209,0.052537,0.071388]]},{"date":"201801140520","rgb":[[0.012951,0.027766,0.019098],[0.012596,0.027108,0.01699],[0.012815,0.026259,0.020128],[0.015417,0.026775,0.026319],[0.011235,0.028925,0.014392],[0.010531,0.028784,0.012496],[0.010622,0.028354,0.013741],[0.013663,0.026924,0.024161],[0.012153,0.028857,0.015891],[0.010607,0.028985,0.012499],[0.010529,0.028686,0.012979],[0.013551,0.027417,0.023536],[0.066849,0.056867,0.072077],[0.037124,0.043502,0.055865],[0.03818,0.042794,0.058969],[0.053724,0.052373,0.072315]]},{"date":"201801140530","rgb":[[0.012828,0.027403,0.021],[0.013979,0.025959,0.018573],[0.013085,0.026462,0.020114],[0.015281,0.026892,0.02604],[0.011322,0.02879,0.015167],[0.010503,0.028858,0.011618],[0.010484,0.028678,0.012623],[0.013161,0.027915,0.021431],[0.01243,0.028954,0.016578],[0.010608,0.028935,0.012871],[0.010702,0.02882,0.012737],[0.014068,0.027465,0.023301],[0.067099,0.056951,0.073088],[0.037426,0.043289,0.056834],[0.037521,0.04318,0.05718],[0.053658,0.052352,0.071868]]},{"date":"201801140550","rgb":[[0.013044,0.02725,0.020493],[0.013366,0.026476,0.016549],[0.013673,0.02615,0.019418],[0.014759,0.026582,0.026634],[0.011113,0.028687,0.014579],[0.010441,0.028744,0.011749],[0.010523,0.028628,0.012721],[0.012713,0.027382,0.022473],[0.012272,0.028846,0.016331],[0.010544,0.028795,0.012588],[0.010664,0.02856,0.01386],[0.013223,0.026932,0.025013],[0.066715,0.057412,0.07448],[0.037423,0.04279,0.057909],[0.037563,0.042995,0.058177],[0.053125,0.052401,0.072488]]},{"date":"201801140600","rgb":[[0.012863,0.026975,0.021939],[0.01212,0.026476,0.019405],[0.01339,0.0263,0.020948],[0.015152,0.026734,0.027796],[0.01139,0.027978,0.018205],[0.010616,0.028754,0.013409],[0.010584,0.028365,0.014288],[0.01276,0.027014,0.026171],[0.012668,0.027572,0.021394],[0.010689,0.028541,0.014563],[0.010622,0.028555,0.01375],[0.013052,0.027153,0.025996],[0.067185,0.057203,0.075239],[0.037631,0.042324,0.060462],[0.037913,0.042707,0.059423],[0.05378,0.05208,0.073647]]},{"date":"201801140610","rgb":[[0.013371,0.027202,0.021423],[0.012787,0.026785,0.017742],[0.013228,0.025745,0.021638],[0.015276,0.026712,0.027689],[0.011634,0.027385,0.019614],[0.010557,0.028605,0.013008],[0.010712,0.027637,0.01674],[0.013031,0.027102,0.026632],[0.012707,0.028163,0.019066],[0.010636,0.028654,0.013317],[0.010672,0.027746,0.015888],[0.013254,0.026909,0.025297],[0.066792,0.056417,0.074937],[0.037265,0.042961,0.057051],[0.037563,0.042743,0.058938],[0.052557,0.052292,0.073782]]},{"date":"201801140620","rgb":[[0.013258,0.027824,0.021772],[0.012514,0.026685,0.020749],[0.012446,0.027063,0.021986],[0.015801,0.026733,0.028591],[0.011574,0.028146,0.018161],[0.0107,0.028154,0.014898],[0.011017,0.028132,0.016305],[0.013402,0.027124,0.025844],[0.012987,0.028136,0.019946],[0.010887,0.028735,0.014467],[0.011098,0.028364,0.016671],[0.014212,0.027082,0.026324],[0.067261,0.057048,0.07414],[0.038012,0.042268,0.060684],[0.038291,0.042205,0.061686],[0.054189,0.0521,0.073949]]},{"date":"201801140630","rgb":[[0.013345,0.027031,0.026431],[0.012452,0.026877,0.024076],[0.012824,0.026901,0.024584],[0.016035,0.026683,0.03165],[0.012059,0.027025,0.024419],[0.01143,0.026468,0.022563],[0.011604,0.026718,0.023325],[0.013722,0.026882,0.030072],[0.013361,0.027474,0.024078],[0.011425,0.026618,0.022383],[0.011726,0.026864,0.023001],[0.01452,0.026905,0.02929],[0.066814,0.056067,0.077594],[0.038143,0.041731,0.063311],[0.038169,0.041563,0.064255],[0.053228,0.051962,0.074679]]},{"date":"201801140640","rgb":[[0.019333,0.028286,0.057694],[0.017274,0.027934,0.052778],[0.017229,0.027927,0.050963],[0.021349,0.028697,0.060508],[0.017657,0.028148,0.053434],[0.015824,0.02763,0.047076],[0.015714,0.027526,0.045961],[0.019816,0.028606,0.057068],[0.018301,0.028057,0.049532],[0.01507,0.027218,0.043943],[0.015369,0.027262,0.045315],[0.019937,0.028613,0.057314],[0.069301,0.057253,0.08696],[0.040349,0.041658,0.073922],[0.040158,0.04201,0.074709],[0.055956,0.052869,0.083955]]},{"date":"201801140650","rgb":[[0.046839,0.033276,0.25722],[0.049247,0.032846,0.27823],[0.050578,0.035432,0.32596],[0.053323,0.035202,0.31916],[0.045138,0.034169,0.24356],[0.047769,0.033835,0.27896],[0.048538,0.033377,0.28431],[0.04883,0.03293,0.26958],[0.040234,0.035213,0.20443],[0.043768,0.035236,0.2308],[0.042834,0.03544,0.22327],[0.043027,0.035715,0.22351],[0.078352,0.061438,0.15881],[0.05572,0.047465,0.17911],[0.054782,0.047215,0.1749],[0.065659,0.056326,0.15984]]},{"date":"201801140700","rgb":[[0.1605,0.15801,0.74204],[0.18868,0.222,0.82074],[0.21342,0.25494,0.90101],[0.21068,0.21132,0.89196],[0.16411,0.17777,0.72714],[0.18273,0.22466,0.79456],[0.19835,0.23782,0.84299],[0.21285,0.22896,0.88802],[0.15137,0.15426,0.66508],[0.16466,0.18572,0.69685],[0.18323,0.20216,0.76469],[0.19915,0.19814,0.83506],[0.13593,0.1092,0.4223],[0.13413,0.12624,0.48526],[0.14484,0.13229,0.521],[0.1389,0.1121,0.47549]]},{"date":"201801140710","rgb":[[0.44493,0.9904,0.99841],[0.42668,0.92605,0.9966],[0.43756,0.91186,0.99598],[0.44454,0.91886,0.99558],[0.39774,0.84398,0.99617],[0.40892,0.83571,0.99731],[0.42262,0.84565,0.99719],[0.42716,0.84041,0.99586],[0.39528,0.77322,0.98906],[0.40716,0.77148,0.9968],[0.41398,0.75978,0.99663],[0.42015,0.77492,0.99261],[0.30301,0.43456,0.75233],[0.30736,0.47091,0.79649],[0.31824,0.44696,0.79781],[0.28425,0.35255,0.71424]]},{"date":"201801140720","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.97604,0.97152,0.99785],[0.99607,0.97647,1],[0.99608,0.97647,1],[0.98949,0.97312,0.99895],[0.65864,0.68452,0.92263],[0.73043,0.738,0.93537],[0.74873,0.74119,0.93542],[0.64545,0.64001,0.90485]]},{"date":"201801140740","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99567,0.97662,0.9999],[0.90047,0.91199,0.94585],[0.91826,0.90868,0.94923],[0.92358,0.90754,0.94931],[0.88346,0.90608,0.93559]]},{"date":"201801140750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92942,0.90582,0.95159],[0.93126,0.90483,0.95161],[0.93119,0.90488,0.95161],[0.91206,0.90706,0.94291]]},{"date":"201801140800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93128,0.9048,0.95161],[0.92402,0.90562,0.94459]]},{"date":"201801140810","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93067,0.90342,0.94493]]},{"date":"201801140830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93068,0.90343,0.94496]]},{"date":"201801140840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93069,0.90345,0.94489]]},{"date":"201801140850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.9034,0.94483]]},{"date":"201801140900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90341,0.94487]]},{"date":"201801140910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90339,0.94489]]},{"date":"201801140920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.9034,0.94493]]},{"date":"201801140930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99581,0.97656,1],[0.99605,0.97648,1],[0.99608,0.97647,1],[0.99351,0.97734,1],[0.98609,0.97983,1],[0.98775,0.97926,1],[0.9948,0.97689,1],[0.92211,0.90824,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92193,0.90669,0.94492]]},{"date":"201801140940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99356,0.97733,1],[0.99479,0.97691,1],[0.99608,0.97647,1],[0.98942,0.97872,1],[0.98441,0.98037,1],[0.98506,0.98015,1],[0.99161,0.97797,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92118,0.9069,0.94489]]},{"date":"201801140950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9955,0.97667,1],[0.99583,0.97656,1],[0.99608,0.97647,1],[0.99252,0.97769,1],[0.98553,0.98001,1],[0.98652,0.97968,1],[0.99384,0.97724,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92141,0.90681,0.94478]]},{"date":"201801141000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99582,0.97657,1],[0.99605,0.97648,1],[0.99608,0.97647,1],[0.99322,0.97745,1],[0.98601,0.97985,1],[0.98754,0.97933,1],[0.99474,0.97692,1],[0.92199,0.90827,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92191,0.90664,0.94486]]},{"date":"201801141010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99575,0.97659,1],[0.99607,0.97647,1],[0.99608,0.97647,1],[0.99322,0.97745,1],[0.98601,0.97985,1],[0.98785,0.97924,1],[0.99486,0.97689,1],[0.92199,0.90827,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92198,0.9066,0.9449]]},{"date":"201801141020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99529,0.97673,1],[0.99581,0.97657,1],[0.99608,0.97647,1],[0.99187,0.9779,1],[0.98514,0.98013,1],[0.98651,0.97969,1],[0.99381,0.97725,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92142,0.90682,0.94485]]},{"date":"201801141030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.92706,0.90178,0.94116]]},{"date":"201801141040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99481,0.97692,1],[0.99558,0.97665,1],[0.99608,0.97647,1],[0.99097,0.97821,1],[0.98482,0.98024,1],[0.98598,0.97985,1],[0.99321,0.97745,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92129,0.90688,0.94486]]},{"date":"201801141050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9941,0.97716,1],[0.99519,0.97677,1],[0.99608,0.97647,1],[0.99019,0.97846,1],[0.98458,0.98031,1],[0.98545,0.98002,1],[0.99238,0.97771,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92116,0.90685,0.9448]]},{"date":"201801141100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99512,0.97681,1],[0.99582,0.97656,1],[0.99608,0.97647,1],[0.99175,0.97795,1],[0.98514,0.98013,1],[0.98652,0.97968,1],[0.99384,0.97724,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92143,0.90679,0.94491]]},{"date":"201801141110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90336,0.94489]]},{"date":"201801141120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90337,0.94492]]},{"date":"201801141130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9945,0.97702,1],[0.99526,0.97675,1],[0.99608,0.97647,1],[0.99097,0.97821,1],[0.98482,0.98024,1],[0.98551,0.98001,1],[0.9925,0.97769,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92121,0.90688,0.94489]]},{"date":"201801141140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90338,0.94492]]},{"date":"201801141150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90333,0.94487]]},{"date":"201801141200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99552,0.97667,1],[0.99598,0.97651,1],[0.99608,0.97647,1],[0.9928,0.97757,1],[0.98553,0.98001,1],[0.98715,0.97947,1],[0.99438,0.97705,1],[0.92195,0.90829,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92167,0.90673,0.94485]]},{"date":"201801141210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99504,0.97683,1],[0.99558,0.97665,1],[0.99608,0.97647,1],[0.99175,0.97795,1],[0.98514,0.98013,1],[0.98598,0.97985,1],[0.99321,0.97745,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92128,0.90684,0.94488]]},{"date":"201801141220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99537,0.97671,1],[0.99596,0.97651,1],[0.99608,0.97647,1],[0.9924,0.97771,1],[0.98548,0.98002,1],[0.98705,0.97949,1],[0.99432,0.97706,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92161,0.90676,0.94493]]},{"date":"201801141230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93067,0.90339,0.94496]]},{"date":"201801141240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90339,0.94494]]},{"date":"201801141250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90336,0.94482]]},{"date":"201801141300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99605,0.97648,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99385,0.97724,1],[0.98664,0.97965,1],[0.98921,0.97877,1],[0.99554,0.97665,1],[0.92215,0.90822,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92277,0.90638,0.94487]]},{"date":"201801141310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93067,0.90337,0.94497]]},{"date":"201801141330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93067,0.90339,0.94498]]},{"date":"201801141340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93068,0.90339,0.94497]]},{"date":"201801141350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90336,0.94484]]},{"date":"201801141400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90339,0.94491]]},{"date":"201801141410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99523,0.97676,1],[0.99588,0.97653,1],[0.99608,0.97647,1],[0.99175,0.97795,1],[0.98514,0.98013,1],[0.98671,0.97961,1],[0.99426,0.97708,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92165,0.90677,0.94492]]},{"date":"201801141420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93068,0.90339,0.94497]]},{"date":"201801141430","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9307,0.90341,0.94497]]},{"date":"201801141440","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93069,0.9034,0.94497]]},{"date":"201801141450","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90337,0.94485]]},{"date":"201801141500","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90335,0.94483]]},{"date":"201801141510","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90334,0.94488]]},{"date":"201801141520","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90334,0.94491]]},{"date":"201801141530","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90335,0.94493]]},{"date":"201801141540","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.92816,0.9045,0.94481]]},{"date":"201801141550","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93005,0.90555,0.95157],[0.93017,0.90552,0.95148],[0.92904,0.90583,0.951],[0.91987,0.90608,0.94387]]},{"date":"201801141600","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99589,0.97654,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99604,0.97648,0.99999],[0.83889,0.91164,0.94929],[0.85305,0.90917,0.94983],[0.87744,0.90655,0.94836],[0.86191,0.90002,0.93597]]},{"date":"201801141610","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99342,0.97737,1],[0.9944,0.97705,1],[0.99608,0.97647,1],[0.98111,0.9788,0.99882],[0.9844,0.98037,1],[0.9848,0.98024,1],[0.99074,0.97812,0.99987],[0.70438,0.7508,0.93895],[0.75661,0.77186,0.94207],[0.77779,0.77254,0.94032],[0.72834,0.71262,0.92486]]},{"date":"201801141620","rgb":[[0.38918,0.85468,0.99595],[0.39769,0.84907,0.99705],[0.41833,0.86227,0.9965],[0.44547,0.93077,0.99571],[0.40653,0.94543,0.99597],[0.42103,0.93834,0.99646],[0.44119,0.95312,0.99694],[0.47645,0.99591,0.99886],[0.42932,0.96452,0.99276],[0.45861,0.99605,0.99892],[0.49221,0.99874,0.99896],[0.56207,0.99876,0.99831],[0.34971,0.54634,0.78081],[0.38409,0.66683,0.81024],[0.4304,0.66485,0.80903],[0.45859,0.56353,0.75229]]},{"date":"201801141630","rgb":[[0.14405,0.16968,0.70047],[0.14897,0.18558,0.69402],[0.16384,0.19058,0.72745],[0.18736,0.19851,0.80902],[0.16301,0.20495,0.74972],[0.16942,0.21605,0.75028],[0.18121,0.22496,0.78996],[0.21036,0.24951,0.88476],[0.17724,0.22107,0.77545],[0.1896,0.24746,0.81079],[0.20912,0.27023,0.87277],[0.23709,0.30246,0.95751],[0.16603,0.16545,0.52459],[0.16664,0.19242,0.60319],[0.18444,0.2129,0.65158],[0.18005,0.19813,0.57485]]},{"date":"201801141640","rgb":[[0.041872,0.034438,0.22248],[0.041177,0.035126,0.21497],[0.043524,0.034962,0.23044],[0.050161,0.033611,0.27558],[0.046575,0.033263,0.25715],[0.045499,0.033822,0.24939],[0.047504,0.033074,0.26216],[0.05528,0.034433,0.31547],[0.050554,0.033243,0.28022],[0.049976,0.032831,0.27943],[0.051167,0.034016,0.30587],[0.060371,0.037652,0.36641],[0.088725,0.061333,0.2288],[0.064108,0.046415,0.25082],[0.066696,0.047549,0.26625],[0.082191,0.059023,0.25622]]},{"date":"201801141650","rgb":[[0.015138,0.026876,0.044618],[0.013879,0.027268,0.041014],[0.014741,0.027063,0.043964],[0.019909,0.028302,0.056739],[0.016585,0.027295,0.051228],[0.014977,0.026777,0.046009],[0.015573,0.027075,0.047921],[0.020172,0.028758,0.064702],[0.018967,0.028219,0.058321],[0.017336,0.027643,0.054865],[0.018317,0.027959,0.058989],[0.02225,0.028791,0.078688],[0.069698,0.058466,0.099357],[0.042464,0.042523,0.090548],[0.043632,0.042759,0.094801],[0.057809,0.053287,0.10523]]},{"date":"201801141700","rgb":[[0.01272,0.026776,0.025391],[0.012057,0.026045,0.02273],[0.01268,0.026476,0.023546],[0.015546,0.02689,0.032341],[0.011827,0.02679,0.024815],[0.01098,0.026129,0.022262],[0.011182,0.026235,0.02297],[0.014396,0.027012,0.03124],[0.013126,0.027019,0.027928],[0.011504,0.02655,0.023949],[0.01176,0.026623,0.026215],[0.014445,0.027002,0.034758],[0.065954,0.056001,0.079168],[0.037648,0.041619,0.065376],[0.038135,0.041672,0.067268],[0.053511,0.051684,0.077089]]},{"date":"201801141710","rgb":[[0.012486,0.026685,0.022594],[0.012156,0.02629,0.019639],[0.013036,0.026602,0.020174],[0.016391,0.026461,0.028571],[0.011371,0.02665,0.021514],[0.010508,0.028283,0.013833],[0.010535,0.02739,0.016751],[0.01446,0.026702,0.026394],[0.012312,0.026925,0.022531],[0.010629,0.028697,0.013267],[0.01075,0.027216,0.018437],[0.013678,0.026843,0.02755],[0.066317,0.05652,0.075777],[0.037161,0.042067,0.059898],[0.037605,0.041351,0.063137],[0.053036,0.051631,0.074154]]},{"date":"201801141720","rgb":[[0.012657,0.027298,0.018661],[0.014556,0.026204,0.015776],[0.013851,0.026003,0.018698],[0.014562,0.026625,0.026166],[0.010819,0.028284,0.015555],[0.010456,0.028822,0.011759],[0.010445,0.028617,0.012315],[0.013012,0.027177,0.023711],[0.011546,0.028189,0.017376],[0.010459,0.028779,0.012818],[0.010454,0.028668,0.012978],[0.012201,0.026964,0.024802],[0.065105,0.057515,0.075089],[0.036874,0.042899,0.056316],[0.037248,0.041956,0.059674],[0.051485,0.051659,0.074307]]},{"date":"201801141730","rgb":[[0.011708,0.027025,0.019436],[0.011393,0.026696,0.017767],[0.01223,0.026527,0.019021],[0.01501,0.026413,0.027572],[0.011015,0.028696,0.013801],[0.010434,0.02882,0.011776],[0.010461,0.028721,0.012753],[0.01298,0.027042,0.025599],[0.011999,0.028598,0.015947],[0.010473,0.028577,0.012952],[0.010468,0.028433,0.013178],[0.012647,0.026837,0.02656],[0.06582,0.057112,0.073446],[0.036802,0.043175,0.055606],[0.037254,0.041854,0.060973],[0.052222,0.051775,0.074151]]},{"date":"201801141740","rgb":[[0.011523,0.026937,0.020327],[0.012945,0.026755,0.015557],[0.011947,0.026127,0.020069],[0.014389,0.026792,0.025872],[0.010808,0.028159,0.0149],[0.010403,0.028754,0.011622],[0.010441,0.028295,0.013527],[0.012643,0.026894,0.025004],[0.011803,0.028495,0.016899],[0.010414,0.028658,0.012995],[0.010404,0.028006,0.014794],[0.012511,0.026834,0.025418],[0.06448,0.05696,0.074259],[0.036812,0.042765,0.057229],[0.037444,0.041771,0.06116],[0.051679,0.051828,0.073894]]},{"date":"201801141750","rgb":[[0.011873,0.027194,0.019088],[0.011865,0.027267,0.014926],[0.012129,0.027673,0.016286],[0.015487,0.027276,0.024398],[0.01089,0.028981,0.013091],[0.010443,0.028784,0.010153],[0.010484,0.028791,0.012423],[0.013973,0.028081,0.020994],[0.012012,0.028929,0.01487],[0.010455,0.028834,0.011726],[0.010463,0.028655,0.012715],[0.013117,0.026944,0.023604],[0.065903,0.058572,0.072472],[0.036959,0.042965,0.055178],[0.03726,0.042614,0.057329],[0.052186,0.05213,0.071569]]},{"date":"201801141800","rgb":[[0.013033,0.026826,0.018133],[0.014847,0.026011,0.015106],[0.012033,0.025605,0.021268],[0.015516,0.0266,0.025875],[0.011083,0.028653,0.014532],[0.01044,0.028833,0.011814],[0.010428,0.027281,0.016082],[0.013809,0.026862,0.025163],[0.011856,0.028711,0.016139],[0.010408,0.028763,0.01197],[0.010513,0.028589,0.013399],[0.01287,0.02721,0.024159],[0.066426,0.056656,0.075214],[0.036825,0.042852,0.056308],[0.037279,0.041995,0.060644],[0.052986,0.052091,0.074613]]},{"date":"201801141810","rgb":[[0.012105,0.028023,0.017003],[0.012749,0.027223,0.01394],[0.01229,0.02745,0.016556],[0.015656,0.027271,0.023963],[0.01086,0.02885,0.013957],[0.010459,0.028783,0.011666],[0.010376,0.028678,0.01185],[0.013214,0.027591,0.022379],[0.01162,0.028908,0.014698],[0.010402,0.028827,0.011089],[0.010444,0.028646,0.012213],[0.012861,0.026976,0.023793],[0.06567,0.057664,0.074488],[0.037018,0.043122,0.055238],[0.037417,0.042541,0.05807],[0.052022,0.052445,0.072139]]},{"date":"201801141820","rgb":[[0.012441,0.026744,0.020301],[0.012959,0.026933,0.015142],[0.011691,0.026948,0.018465],[0.01464,0.02665,0.026318],[0.011075,0.027367,0.018065],[0.010436,0.028825,0.011752],[0.010423,0.028592,0.012853],[0.013448,0.027406,0.023449],[0.011638,0.028639,0.015052],[0.010459,0.028797,0.012166],[0.010539,0.028789,0.012173],[0.012561,0.026978,0.023511],[0.065456,0.056658,0.073894],[0.036629,0.043083,0.054903],[0.037332,0.042685,0.057907],[0.05321,0.052026,0.072417]]},{"date":"201801141830","rgb":[[0.012578,0.028105,0.016476],[0.013007,0.027481,0.014019],[0.012877,0.027411,0.016764],[0.016123,0.02672,0.026481],[0.010927,0.028772,0.013976],[0.010391,0.028732,0.011672],[0.010399,0.028704,0.01132],[0.0136,0.027529,0.022498],[0.011842,0.029084,0.014939],[0.010466,0.02876,0.01228],[0.010601,0.028674,0.013033],[0.013292,0.027462,0.023142],[0.066562,0.057452,0.0735],[0.037186,0.04296,0.056229],[0.037766,0.042255,0.06026],[0.053532,0.052295,0.073425]]},{"date":"201801141840","rgb":[[0.012971,0.027539,0.017722],[0.012478,0.027724,0.01324],[0.01367,0.027154,0.015103],[0.015792,0.027315,0.023178],[0.011055,0.028567,0.015285],[0.010436,0.02887,0.010995],[0.010472,0.028741,0.011825],[0.01451,0.027665,0.021737],[0.012087,0.02892,0.015351],[0.010455,0.02893,0.011297],[0.010394,0.028702,0.011775],[0.013626,0.027363,0.022117],[0.065974,0.058248,0.072261],[0.036851,0.043289,0.05476],[0.037094,0.042902,0.056987],[0.05288,0.052295,0.071626]]},{"date":"201801141850","rgb":[[0.012177,0.026656,0.021255],[0.015596,0.025361,0.016038],[0.013426,0.026706,0.016382],[0.014949,0.026798,0.024911],[0.010849,0.026892,0.019096],[0.010413,0.028833,0.0105],[0.010432,0.028722,0.012044],[0.013366,0.027762,0.021783],[0.011751,0.028929,0.015178],[0.01044,0.028806,0.011996],[0.010436,0.028715,0.012419],[0.012625,0.027614,0.02146],[0.065964,0.056771,0.073759],[0.036786,0.043315,0.055519],[0.037272,0.042603,0.057345],[0.053517,0.052144,0.07168]]},{"date":"201801141900","rgb":[[0.01178,0.027794,0.018172],[0.012376,0.027225,0.015],[0.013689,0.026676,0.016547],[0.014801,0.026863,0.026301],[0.01092,0.028332,0.01532],[0.010411,0.028878,0.011375],[0.010459,0.02868,0.012358],[0.013767,0.027142,0.024014],[0.011704,0.028484,0.016241],[0.010419,0.028847,0.011419],[0.010474,0.028862,0.011966],[0.012397,0.027599,0.022493],[0.065285,0.05685,0.075545],[0.036956,0.042955,0.056219],[0.037589,0.042825,0.057829],[0.052597,0.052055,0.072873]]},{"date":"201801141920","rgb":[[0.012596,0.027909,0.016418],[0.013309,0.027188,0.013785],[0.014828,0.026185,0.015999],[0.01534,0.027262,0.023007],[0.010988,0.02891,0.01367],[0.010424,0.028785,0.010721],[0.010438,0.028727,0.011556],[0.012931,0.028293,0.019042],[0.011647,0.028691,0.015653],[0.010454,0.028829,0.011245],[0.010376,0.028686,0.012277],[0.012303,0.027637,0.02105],[0.065356,0.057523,0.071398],[0.036675,0.043292,0.054449],[0.037061,0.043226,0.054838],[0.052034,0.052706,0.068893]]},{"date":"201801141930","rgb":[[0.012289,0.027912,0.016934],[0.01523,0.025842,0.014437],[0.013362,0.027053,0.015292],[0.015985,0.027067,0.024952],[0.010783,0.028837,0.013238],[0.010444,0.028888,0.010404],[0.010401,0.028652,0.011759],[0.013817,0.027524,0.021744],[0.011534,0.029159,0.014254],[0.010474,0.028893,0.011452],[0.010496,0.028692,0.012655],[0.012663,0.027527,0.022473],[0.066075,0.057505,0.072791],[0.036967,0.043275,0.054922],[0.037411,0.042073,0.059654],[0.05331,0.052192,0.072057]]},{"date":"201801141940","rgb":[[0.012211,0.027674,0.016474],[0.012652,0.026834,0.016864],[0.013793,0.026842,0.016568],[0.015177,0.026834,0.024169],[0.010881,0.028941,0.013152],[0.01041,0.028795,0.011395],[0.010444,0.028787,0.011814],[0.013081,0.027772,0.021523],[0.011498,0.028608,0.015274],[0.010417,0.028767,0.011852],[0.010393,0.028609,0.012354],[0.012106,0.027697,0.021887],[0.065616,0.058336,0.071718],[0.036684,0.043341,0.054514],[0.037274,0.042924,0.056892],[0.052675,0.052177,0.072123]]},{"date":"201801141950","rgb":[[0.012831,0.027556,0.017531],[0.013357,0.026497,0.015906],[0.013297,0.027006,0.016742],[0.015385,0.027271,0.024888],[0.010846,0.028857,0.01367],[0.010364,0.028705,0.010777],[0.010423,0.028684,0.012246],[0.013294,0.027736,0.022373],[0.011812,0.028838,0.015729],[0.010481,0.028776,0.012791],[0.010538,0.028612,0.014232],[0.013315,0.027096,0.024772],[0.065054,0.057669,0.073736],[0.036715,0.042998,0.055271],[0.037267,0.043021,0.056843],[0.052778,0.052205,0.072578]]},{"date":"201801142000","rgb":[[0.012021,0.027643,0.018171],[0.012408,0.026564,0.01748],[0.012428,0.027474,0.016863],[0.014574,0.026818,0.028166],[0.010905,0.028687,0.013942],[0.010417,0.02879,0.011006],[0.010407,0.028724,0.012524],[0.013316,0.027292,0.022913],[0.011816,0.02884,0.015604],[0.010333,0.028661,0.012047],[0.010435,0.028681,0.012665],[0.012853,0.027074,0.024141],[0.065066,0.056527,0.072867],[0.036634,0.043239,0.054997],[0.037078,0.042896,0.058046],[0.052895,0.052132,0.072624]]},{"date":"201801142010","rgb":[[0.012638,0.028204,0.01509],[0.015792,0.025474,0.014325],[0.013902,0.0268,0.014971],[0.015465,0.02763,0.021023],[0.010861,0.028989,0.013166],[0.010432,0.028848,0.010984],[0.010415,0.028768,0.011453],[0.013576,0.027944,0.01956],[0.011562,0.028901,0.014531],[0.010415,0.028842,0.01079],[0.010401,0.028718,0.01216],[0.012438,0.027617,0.019465],[0.065482,0.057652,0.070963],[0.036603,0.043254,0.054641],[0.036935,0.042942,0.056951],[0.052291,0.05253,0.069552]]},{"date":"201801142020","rgb":[[0.013459,0.026889,0.017125],[0.016715,0.024758,0.016023],[0.014746,0.025071,0.018766],[0.014917,0.027058,0.02431],[0.010785,0.028255,0.015453],[0.010405,0.028734,0.011192],[0.010411,0.028452,0.012875],[0.013264,0.027675,0.021247],[0.011613,0.028781,0.015065],[0.010399,0.028797,0.011762],[0.010397,0.028684,0.012058],[0.012277,0.027298,0.023216],[0.065072,0.056772,0.072623],[0.036649,0.043248,0.054539],[0.036991,0.042815,0.056818],[0.052262,0.052324,0.072423]]},{"date":"201801142030","rgb":[[0.011949,0.027467,0.018377],[0.011669,0.027041,0.016039],[0.013126,0.026333,0.018295],[0.015152,0.026919,0.025025],[0.010891,0.028638,0.014383],[0.010428,0.028766,0.011821],[0.010455,0.02874,0.011687],[0.013585,0.027447,0.023237],[0.01156,0.028813,0.015376],[0.010385,0.02874,0.012734],[0.010405,0.028666,0.012757],[0.01258,0.027053,0.023577],[0.065343,0.056656,0.073787],[0.036854,0.043087,0.055941],[0.037435,0.042441,0.058835],[0.052298,0.052105,0.073082]]},{"date":"201801142040","rgb":[[0.012195,0.027581,0.017162],[0.013492,0.026287,0.016558],[0.014221,0.026984,0.014585],[0.015771,0.026823,0.024299],[0.010754,0.028633,0.013714],[0.010366,0.028742,0.011056],[0.010368,0.028765,0.01212],[0.012494,0.027967,0.020979],[0.011481,0.028661,0.015968],[0.010346,0.028728,0.011529],[0.010372,0.028547,0.012964],[0.012227,0.027533,0.022588],[0.064704,0.056957,0.073925],[0.036469,0.043141,0.055232],[0.036739,0.042581,0.057201],[0.051822,0.05236,0.072132]]},{"date":"201801142050","rgb":[[0.012505,0.028186,0.015289],[0.01419,0.026524,0.01409],[0.013941,0.02673,0.017006],[0.016055,0.02723,0.023682],[0.010854,0.028664,0.013738],[0.010418,0.028866,0.010035],[0.010425,0.028808,0.011821],[0.013364,0.027571,0.022424],[0.011458,0.029038,0.014399],[0.010382,0.028765,0.011771],[0.010481,0.028777,0.012383],[0.013106,0.027121,0.023417],[0.065434,0.058007,0.072454],[0.036655,0.04324,0.054999],[0.037047,0.042656,0.05772],[0.052336,0.052429,0.072449]]},{"date":"201801142100","rgb":[[0.012732,0.027601,0.015826],[0.016858,0.024803,0.014196],[0.01288,0.026945,0.015351],[0.014596,0.027249,0.024027],[0.010836,0.02899,0.012533],[0.01039,0.02873,0.011224],[0.010415,0.028757,0.010815],[0.013162,0.027671,0.021156],[0.011557,0.029005,0.012899],[0.010377,0.028758,0.010451],[0.0104,0.028581,0.011503],[0.012243,0.02762,0.021455],[0.064797,0.056621,0.070507],[0.036617,0.04322,0.054368],[0.036746,0.043002,0.054689],[0.05233,0.052772,0.068658]]},{"date":"201801142110","rgb":[[0.012385,0.028019,0.015796],[0.015585,0.025759,0.013663],[0.014123,0.026078,0.017449],[0.01526,0.026795,0.024628],[0.010877,0.029015,0.012918],[0.010382,0.028816,0.010079],[0.010424,0.028819,0.011538],[0.013278,0.027995,0.020897],[0.011404,0.028872,0.01427],[0.010424,0.028761,0.011806],[0.010396,0.028674,0.012413],[0.012169,0.027755,0.02138],[0.065392,0.057287,0.073988],[0.03667,0.042994,0.055354],[0.037029,0.042867,0.056219],[0.05175,0.052511,0.070323]]},{"date":"201801142120","rgb":[[0.012191,0.027602,0.018366],[0.012931,0.027411,0.013962],[0.014123,0.026593,0.01525],[0.015718,0.027189,0.023691],[0.010787,0.028911,0.012588],[0.010404,0.02881,0.010177],[0.010403,0.028801,0.011028],[0.01269,0.028094,0.019436],[0.011604,0.028657,0.014943],[0.010429,0.028816,0.011624],[0.01049,0.028707,0.012885],[0.012189,0.027699,0.022127],[0.065881,0.057417,0.071936],[0.036786,0.043222,0.054145],[0.037094,0.043335,0.055677],[0.053211,0.052161,0.071028]]},{"date":"201801142130","rgb":[[0.012657,0.027795,0.017291],[0.013042,0.027362,0.014413],[0.01338,0.027138,0.016362],[0.015319,0.027073,0.025746],[0.011094,0.02834,0.016255],[0.01042,0.028765,0.011209],[0.010457,0.02857,0.012516],[0.013385,0.027309,0.02359],[0.011798,0.028818,0.016265],[0.010521,0.02885,0.011763],[0.010483,0.028384,0.013778],[0.01265,0.026909,0.025091],[0.065592,0.056946,0.07425],[0.036926,0.042955,0.055641],[0.037106,0.042562,0.057811],[0.05223,0.051852,0.073478]]},{"date":"201801142140","rgb":[[0.012175,0.027484,0.018496],[0.011381,0.02706,0.016825],[0.012218,0.027028,0.017367],[0.014939,0.027298,0.024659],[0.010948,0.028767,0.013979],[0.010406,0.02877,0.010929],[0.010406,0.028446,0.012753],[0.013535,0.027648,0.021553],[0.011823,0.028781,0.015105],[0.010422,0.028781,0.011996],[0.010427,0.028595,0.012923],[0.013166,0.027437,0.022186],[0.063554,0.057227,0.072546],[0.036728,0.04303,0.055472],[0.037021,0.042552,0.057392],[0.052164,0.052143,0.072647]]},{"date":"201801142150","rgb":[[0.012443,0.027388,0.017004],[0.017004,0.024851,0.013622],[0.014055,0.026735,0.014241],[0.014689,0.027165,0.0225],[0.010869,0.028899,0.012486],[0.010368,0.02879,0.0095447],[0.010442,0.028819,0.010541],[0.01393,0.028053,0.019306],[0.011585,0.028854,0.014274],[0.0104,0.028809,0.011403],[0.010383,0.028716,0.012087],[0.012051,0.027606,0.021526],[0.065302,0.057436,0.071513],[0.036591,0.043233,0.054162],[0.036929,0.04325,0.055514],[0.052366,0.052455,0.070157]]},{"date":"201801142200","rgb":[[0.012883,0.027109,0.018269],[0.013717,0.02691,0.013238],[0.013321,0.026729,0.01562],[0.014588,0.026834,0.024862],[0.010877,0.02868,0.01354],[0.010409,0.028789,0.010771],[0.010391,0.028689,0.011966],[0.012394,0.027891,0.020005],[0.011765,0.028661,0.016238],[0.010456,0.028817,0.012408],[0.010425,0.028537,0.013634],[0.012247,0.027212,0.023947],[0.066152,0.056911,0.074325],[0.036901,0.043118,0.055095],[0.03722,0.04224,0.058725],[0.05238,0.052354,0.072576]]},{"date":"201801142210","rgb":[[0.012361,0.027676,0.017772],[0.014679,0.025382,0.01779],[0.013812,0.026571,0.0162],[0.015363,0.026688,0.026162],[0.011076,0.028792,0.014009],[0.010366,0.028738,0.011067],[0.010395,0.028731,0.010898],[0.012645,0.02789,0.021498],[0.011941,0.028462,0.016501],[0.010447,0.028762,0.011928],[0.010524,0.028654,0.013338],[0.012493,0.027534,0.023713],[0.066117,0.056845,0.073255],[0.036772,0.042976,0.055383],[0.037289,0.042986,0.057025],[0.052358,0.052134,0.071577]]},{"date":"201801142220","rgb":[[0.012233,0.028152,0.016584],[0.012125,0.027494,0.014892],[0.015821,0.025824,0.015846],[0.015358,0.027117,0.024813],[0.01087,0.028992,0.013658],[0.01039,0.028788,0.011193],[0.010461,0.028719,0.0113],[0.013274,0.027702,0.022036],[0.011811,0.028904,0.015051],[0.010397,0.028783,0.012093],[0.010364,0.028608,0.012518],[0.012834,0.027143,0.024246],[0.065307,0.057152,0.073359],[0.036609,0.043136,0.054578],[0.036846,0.043238,0.056003],[0.052229,0.052053,0.072455]]},{"date":"201801142230","rgb":[[0.012017,0.027512,0.017775],[0.012811,0.025419,0.020414],[0.013888,0.025006,0.021719],[0.014964,0.026476,0.025729],[0.010846,0.028234,0.015183],[0.010432,0.0279,0.013947],[0.010403,0.027216,0.016479],[0.01285,0.027012,0.022818],[0.011577,0.028523,0.015602],[0.010418,0.0288,0.011716],[0.010416,0.02858,0.012568],[0.011992,0.027065,0.022476],[0.065058,0.056963,0.072213],[0.036499,0.043117,0.054941],[0.036844,0.042801,0.056882],[0.051492,0.052087,0.071359]]},{"date":"201801142240","rgb":[[0.012144,0.027817,0.017288],[0.011934,0.026915,0.016518],[0.012166,0.026425,0.019291],[0.015679,0.026779,0.025579],[0.01092,0.028857,0.013301],[0.010446,0.028785,0.012037],[0.010435,0.028728,0.011995],[0.013406,0.0271,0.023776],[0.011847,0.028361,0.016864],[0.010495,0.028818,0.012376],[0.010448,0.028479,0.013478],[0.012448,0.027001,0.024611],[0.066025,0.058375,0.073049],[0.036905,0.043037,0.055469],[0.037245,0.042074,0.059387],[0.052154,0.052249,0.073601]]},{"date":"201801142250","rgb":[[0.012599,0.027513,0.017868],[0.012026,0.027108,0.015267],[0.012059,0.027453,0.015733],[0.015379,0.026993,0.025457],[0.010848,0.028782,0.013814],[0.010436,0.028824,0.011421],[0.010445,0.028599,0.012775],[0.01298,0.027005,0.024999],[0.011677,0.028601,0.015435],[0.010361,0.028757,0.011817],[0.010423,0.028429,0.013416],[0.012333,0.027029,0.025069],[0.064675,0.057253,0.075783],[0.036699,0.042855,0.056388],[0.037193,0.041894,0.060793],[0.052395,0.052297,0.074504]]},{"date":"201801142300","rgb":[[0.012689,0.027385,0.018222],[0.014941,0.025748,0.015954],[0.014442,0.026297,0.016658],[0.015195,0.026756,0.02722],[0.010867,0.028427,0.015018],[0.010419,0.028766,0.011274],[0.010471,0.028543,0.012755],[0.013189,0.027269,0.024302],[0.011559,0.028606,0.015539],[0.010409,0.028859,0.011859],[0.010455,0.028818,0.011598],[0.012948,0.027127,0.024098],[0.065444,0.05648,0.075136],[0.036713,0.04303,0.055431],[0.037195,0.042716,0.057849],[0.053128,0.052284,0.074285]]},{"date":"201801142310","rgb":[[0.012355,0.027556,0.017558],[0.012839,0.026837,0.01581],[0.01252,0.026571,0.017916],[0.01483,0.027269,0.023184],[0.010842,0.028683,0.014067],[0.010401,0.028764,0.011415],[0.010387,0.028681,0.011396],[0.013449,0.027663,0.0214],[0.011568,0.02871,0.014552],[0.010396,0.028779,0.011709],[0.010383,0.028735,0.011712],[0.012606,0.027673,0.021562],[0.065766,0.057382,0.072681],[0.036765,0.043146,0.055473],[0.037346,0.042871,0.056514],[0.05276,0.052198,0.071142]]},{"date":"201801142320","rgb":[[0.012382,0.02741,0.018701],[0.015597,0.025625,0.014124],[0.013519,0.026627,0.016697],[0.014924,0.026965,0.025685],[0.010774,0.0288,0.013989],[0.010375,0.028791,0.01042],[0.010398,0.028709,0.011595],[0.012235,0.027477,0.022312],[0.011448,0.028638,0.014022],[0.010352,0.028827,0.010691],[0.010366,0.028673,0.01216],[0.012346,0.02706,0.022999],[0.064972,0.058333,0.069846],[0.036441,0.043195,0.053732],[0.036704,0.043169,0.054819],[0.051642,0.052649,0.07053]]},{"date":"201801142330","rgb":[[0.012176,0.027936,0.016068],[0.014286,0.026192,0.01558],[0.013618,0.026946,0.01413],[0.014727,0.027489,0.02245],[0.01084,0.028735,0.013957],[0.010353,0.028731,0.010741],[0.010397,0.028701,0.011542],[0.013049,0.02737,0.021804],[0.011592,0.028527,0.015339],[0.010413,0.028817,0.012371],[0.010413,0.028426,0.013527],[0.012343,0.027183,0.023172],[0.065481,0.057681,0.0724],[0.036651,0.043221,0.054127],[0.036839,0.042858,0.056176],[0.052318,0.052392,0.070232]]},{"date":"201801142340","rgb":[[0.011897,0.027998,0.016514],[0.013445,0.026067,0.016984],[0.012998,0.027007,0.015327],[0.014185,0.026896,0.024715],[0.010837,0.028856,0.013248],[0.010396,0.028735,0.011222],[0.010363,0.028658,0.012065],[0.013053,0.027198,0.02332],[0.011633,0.028882,0.014049],[0.01037,0.028776,0.01102],[0.010375,0.028703,0.011987],[0.012916,0.027667,0.021895],[0.065516,0.057296,0.071339],[0.0367,0.043378,0.054564],[0.036721,0.042886,0.055476],[0.052427,0.052243,0.070996]]},{"date":"201801142350","rgb":[[0.012265,0.028123,0.015405],[0.015485,0.024912,0.017683],[0.012081,0.026451,0.017524],[0.013891,0.02677,0.024268],[0.010778,0.028851,0.013281],[0.01043,0.028736,0.011681],[0.010417,0.028732,0.011305],[0.011996,0.027008,0.021947],[0.011507,0.028968,0.013918],[0.010416,0.028793,0.01164],[0.010386,0.0288,0.01175],[0.012158,0.027401,0.022275],[0.065017,0.05729,0.071188],[0.036769,0.043034,0.055097],[0.036896,0.04233,0.057319],[0.052085,0.052141,0.072049]]},{"date":"201801150000","rgb":[[0.013238,0.027416,0.016084],[0.01606,0.0254,0.014228],[0.012312,0.026572,0.017339],[0.014038,0.026943,0.02414],[0.010797,0.028948,0.013166],[0.010347,0.028779,0.010487],[0.010387,0.028668,0.011987],[0.01173,0.027138,0.020812],[0.011474,0.028725,0.014604],[0.010327,0.028771,0.010856],[0.010369,0.028639,0.012754],[0.012474,0.0276,0.021243],[0.065635,0.05716,0.071856],[0.036697,0.043136,0.054898],[0.037268,0.042468,0.057476],[0.052196,0.05241,0.072249]]},{"date":"201801150010","rgb":[[0.012266,0.027863,0.016104],[0.013328,0.026348,0.015736],[0.01542,0.024985,0.017215],[0.013577,0.026927,0.022706],[0.011018,0.028661,0.013997],[0.010397,0.028778,0.0098044],[0.010363,0.028704,0.010811],[0.012397,0.027593,0.020838],[0.011792,0.028959,0.014608],[0.010375,0.028799,0.011077],[0.010353,0.028738,0.011244],[0.011812,0.027503,0.020975],[0.065661,0.057236,0.072036],[0.036504,0.043264,0.053767],[0.036618,0.043225,0.055137],[0.052434,0.052728,0.068508]]},{"date":"201801150020","rgb":[[0.012975,0.027193,0.016882],[0.013779,0.026895,0.013073],[0.012959,0.025747,0.019037],[0.013632,0.026578,0.024303],[0.0107,0.028765,0.013224],[0.010383,0.028764,0.01044],[0.010353,0.028634,0.011669],[0.011671,0.027103,0.021426],[0.011576,0.028668,0.014819],[0.010362,0.028776,0.010408],[0.010389,0.02867,0.012508],[0.012169,0.027421,0.021704],[0.065443,0.056834,0.073323],[0.036557,0.04318,0.054804],[0.036858,0.042377,0.057353],[0.052002,0.052418,0.071768]]},{"date":"201801150030","rgb":[[0.013194,0.027404,0.017335],[0.012941,0.025872,0.019004],[0.012342,0.027287,0.015448],[0.013627,0.02673,0.025155],[0.010818,0.028648,0.013671],[0.010383,0.028751,0.010985],[0.010418,0.02873,0.011847],[0.011879,0.026915,0.022642],[0.011741,0.028509,0.016222],[0.01045,0.028834,0.011738],[0.010427,0.028686,0.012596],[0.012504,0.027198,0.024006],[0.06536,0.057011,0.07401],[0.036793,0.042863,0.056606],[0.037201,0.042408,0.058964],[0.052479,0.052266,0.073319]]},{"date":"201801150040","rgb":[[0.01195,0.028138,0.015572],[0.014042,0.025548,0.01822],[0.013657,0.025883,0.018103],[0.012923,0.027028,0.024308],[0.010878,0.029014,0.013584],[0.010396,0.028745,0.011871],[0.010413,0.02847,0.012635],[0.011967,0.027067,0.02327],[0.011304,0.028995,0.0145],[0.010411,0.028778,0.011463],[0.010423,0.028588,0.012735],[0.01221,0.027119,0.024043],[0.064941,0.05731,0.070048],[0.036687,0.043314,0.054325],[0.0369,0.042605,0.056751],[0.052971,0.052225,0.07244]]},{"date":"201801150050","rgb":[[0.01273,0.028037,0.015959],[0.013856,0.026545,0.014352],[0.013265,0.026811,0.014559],[0.013315,0.026971,0.022856],[0.010771,0.028904,0.013425],[0.010423,0.028783,0.010582],[0.010372,0.028708,0.011028],[0.012071,0.027674,0.020161],[0.011607,0.028689,0.015593],[0.010381,0.028799,0.011808],[0.010364,0.028723,0.011801],[0.011965,0.027746,0.020226],[0.064777,0.057658,0.071741],[0.03652,0.043173,0.055066],[0.036993,0.043082,0.055607],[0.052073,0.052371,0.070123]]},{"date":"201801150100","rgb":[[0.011714,0.027433,0.018761],[0.011866,0.027157,0.01607],[0.012393,0.02677,0.017057],[0.013453,0.026784,0.026138],[0.010865,0.028407,0.015038],[0.010426,0.028816,0.010974],[0.01042,0.028616,0.012799],[0.012248,0.026978,0.023955],[0.011762,0.028763,0.014595],[0.010407,0.028791,0.011651],[0.010516,0.028797,0.012508],[0.012652,0.027482,0.022848],[0.065608,0.057357,0.073726],[0.03674,0.042785,0.056298],[0.037113,0.042884,0.057736],[0.052012,0.05229,0.073292]]},{"date":"201801150110","rgb":[[0.012268,0.027842,0.016664],[0.012448,0.026976,0.015059],[0.013479,0.025989,0.016734],[0.013616,0.026841,0.023211],[0.010924,0.028903,0.013169],[0.010463,0.028859,0.011044],[0.010397,0.028736,0.011087],[0.012383,0.027817,0.019795],[0.011745,0.028817,0.014998],[0.010535,0.028885,0.01136],[0.010477,0.028877,0.01183],[0.012666,0.027565,0.021281],[0.064171,0.056956,0.071841],[0.036791,0.043263,0.054944],[0.037167,0.043057,0.056427],[0.05189,0.052372,0.069812]]},{"date":"201801150130","rgb":[[0.011991,0.027528,0.018245],[0.014204,0.024777,0.020656],[0.012151,0.025907,0.019935],[0.01363,0.027125,0.023728],[0.010959,0.029003,0.01428],[0.010406,0.028287,0.012279],[0.010379,0.028732,0.011477],[0.01208,0.027742,0.020694],[0.011846,0.028881,0.015326],[0.010482,0.028828,0.011888],[0.010408,0.02857,0.012981],[0.012206,0.027211,0.022962],[0.065271,0.056846,0.073409],[0.037121,0.043098,0.056465],[0.037377,0.042842,0.058059],[0.052606,0.052266,0.071799]]},{"date":"201801150140","rgb":[[0.012274,0.027146,0.019072],[0.015337,0.02552,0.015935],[0.013254,0.026345,0.018287],[0.014445,0.026868,0.027464],[0.010849,0.028778,0.013752],[0.01044,0.028808,0.011193],[0.010494,0.028378,0.0134],[0.012717,0.026932,0.025021],[0.011737,0.028868,0.014855],[0.010482,0.02885,0.012063],[0.010485,0.028792,0.012957],[0.012367,0.026931,0.02477],[0.066787,0.057159,0.074553],[0.036833,0.04329,0.055363],[0.037343,0.042827,0.058187],[0.051638,0.052127,0.073019]]},{"date":"201801150150","rgb":[[0.012476,0.027061,0.018271],[0.012075,0.026977,0.015543],[0.012288,0.026096,0.01783],[0.013428,0.026725,0.024725],[0.01087,0.028309,0.014775],[0.010357,0.028762,0.011253],[0.010369,0.028662,0.011779],[0.011761,0.026701,0.02315],[0.011826,0.029056,0.015374],[0.010457,0.028847,0.011914],[0.010422,0.028828,0.011613],[0.012535,0.027314,0.022617],[0.065294,0.056471,0.073334],[0.0367,0.043346,0.055267],[0.036696,0.043074,0.055417],[0.052067,0.052167,0.070585]]},{"date":"201801150200","rgb":[[0.011982,0.028066,0.016877],[0.013759,0.026626,0.016027],[0.012346,0.026686,0.018515],[0.014124,0.026787,0.026295],[0.010925,0.028934,0.013569],[0.010424,0.028771,0.011846],[0.010486,0.028752,0.01211],[0.012425,0.027203,0.022739],[0.012196,0.029108,0.015233],[0.010573,0.028968,0.01271],[0.010588,0.028904,0.012591],[0.013005,0.027561,0.022714],[0.065947,0.057858,0.070519],[0.037042,0.043325,0.055217],[0.037466,0.043524,0.055933],[0.053164,0.052772,0.069715]]},{"date":"201801150210","rgb":[[0.012444,0.027689,0.017644],[0.013496,0.026584,0.015903],[0.014105,0.026113,0.016571],[0.013618,0.02723,0.023825],[0.01095,0.028941,0.013634],[0.010381,0.028775,0.010033],[0.010382,0.028642,0.011465],[0.012,0.027594,0.020607],[0.012125,0.028956,0.015203],[0.010509,0.028871,0.011328],[0.010492,0.028779,0.011809],[0.013085,0.027426,0.022626],[0.06629,0.058179,0.072098],[0.036899,0.04337,0.054622],[0.037287,0.0428,0.0568],[0.052985,0.052094,0.072059]]},{"date":"201801150220","rgb":[[0.012285,0.027756,0.016069],[0.013819,0.026703,0.013944],[0.012765,0.025841,0.019064],[0.013492,0.026868,0.024623],[0.010779,0.028499,0.013659],[0.010401,0.02878,0.010525],[0.010409,0.028294,0.012947],[0.012343,0.027295,0.021764],[0.011733,0.028969,0.014934],[0.010483,0.02887,0.012083],[0.010504,0.028629,0.013175],[0.012779,0.027519,0.023244],[0.065835,0.057034,0.070836],[0.037072,0.043461,0.055346],[0.037303,0.042793,0.056926],[0.05287,0.052381,0.07086]]},{"date":"201801150230","rgb":[[0.012146,0.02706,0.019845],[0.013727,0.025504,0.019592],[0.012172,0.026014,0.020637],[0.01443,0.026784,0.027424],[0.010834,0.028391,0.014909],[0.01046,0.028267,0.013372],[0.010429,0.028186,0.014068],[0.012462,0.027018,0.024734],[0.011493,0.028834,0.015029],[0.010458,0.028811,0.012013],[0.010533,0.028557,0.013686],[0.012936,0.026962,0.024703],[0.06581,0.057739,0.072967],[0.036762,0.043356,0.054898],[0.037234,0.042725,0.057898],[0.05266,0.052416,0.071971]]},{"date":"201801150240","rgb":[[0.013813,0.027442,0.014837],[0.017411,0.024102,0.017525],[0.012439,0.026486,0.017574],[0.013837,0.027292,0.022653],[0.010859,0.029088,0.013228],[0.010433,0.028699,0.010741],[0.010441,0.028802,0.011417],[0.01224,0.028174,0.019381],[0.012028,0.029189,0.013825],[0.010585,0.028936,0.012471],[0.010491,0.028632,0.012834],[0.012844,0.027658,0.021598],[0.06541,0.057191,0.071049],[0.036737,0.042991,0.055399],[0.037573,0.04281,0.057543],[0.053034,0.052934,0.070447]]},{"date":"201801150250","rgb":[[0.012187,0.027651,0.018325],[0.012736,0.027234,0.016172],[0.012994,0.025516,0.021471],[0.014418,0.026884,0.026012],[0.011224,0.028712,0.015215],[0.010475,0.028811,0.011511],[0.010483,0.027312,0.016053],[0.012758,0.027059,0.02397],[0.012174,0.028856,0.016786],[0.010517,0.028852,0.012155],[0.010525,0.028594,0.013173],[0.013076,0.0271,0.023561],[0.066083,0.058029,0.072253],[0.036956,0.043504,0.055035],[0.037525,0.04291,0.058431],[0.052891,0.052412,0.072311]]},{"date":"201801150300","rgb":[[0.012365,0.027347,0.019383],[0.014072,0.025955,0.016846],[0.011916,0.027266,0.015768],[0.014036,0.026547,0.025386],[0.011055,0.028977,0.013529],[0.010385,0.028751,0.010837],[0.010432,0.028634,0.0127],[0.012503,0.027697,0.020584],[0.01243,0.028748,0.016676],[0.010569,0.028861,0.012708],[0.010485,0.028612,0.013416],[0.01302,0.027123,0.022993],[0.066057,0.056737,0.074562],[0.037299,0.042733,0.057543],[0.037441,0.042335,0.059423],[0.052659,0.052435,0.072053]]},{"date":"201801150310","rgb":[[0.01286,0.026826,0.020935],[0.015108,0.026063,0.015231],[0.012773,0.026314,0.018221],[0.014812,0.026733,0.025377],[0.011125,0.028724,0.015044],[0.010412,0.02879,0.011506],[0.010451,0.028775,0.01218],[0.012967,0.027694,0.021006],[0.01199,0.028838,0.015947],[0.010438,0.028828,0.01145],[0.010515,0.028415,0.013875],[0.013513,0.027269,0.022732],[0.066859,0.057092,0.074473],[0.036947,0.043178,0.055941],[0.037336,0.042766,0.05807],[0.053269,0.052311,0.071417]]},{"date":"201801150320","rgb":[[0.012061,0.028071,0.016593],[0.011956,0.026163,0.019383],[0.012448,0.026855,0.016695],[0.013898,0.026947,0.025741],[0.01099,0.028985,0.013629],[0.010435,0.028728,0.011532],[0.010401,0.028727,0.011846],[0.012743,0.027303,0.022741],[0.012138,0.028454,0.017307],[0.010503,0.028757,0.012342],[0.010638,0.02858,0.014003],[0.012907,0.027055,0.024702],[0.066068,0.057704,0.074711],[0.037049,0.042882,0.056859],[0.037317,0.041838,0.061232],[0.052871,0.052034,0.072987]]},{"date":"201801150340","rgb":[[0.011879,0.028104,0.016111],[0.011634,0.027872,0.013956],[0.013046,0.026939,0.015382],[0.013072,0.02741,0.024559],[0.010913,0.02862,0.014993],[0.010387,0.028725,0.011829],[0.010424,0.02845,0.013101],[0.012263,0.027137,0.023023],[0.011592,0.028226,0.017214],[0.010566,0.028733,0.012715],[0.010405,0.027978,0.014658],[0.012367,0.026986,0.025252],[0.064696,0.056675,0.07531],[0.036861,0.042895,0.056426],[0.037395,0.042021,0.060538],[0.052582,0.051908,0.073645]]},{"date":"201801150350","rgb":[[0.01221,0.02759,0.017519],[0.013656,0.026782,0.013521],[0.01196,0.026476,0.018542],[0.013762,0.02654,0.026243],[0.010918,0.028933,0.013723],[0.010452,0.02879,0.011235],[0.010401,0.028289,0.013331],[0.011956,0.026973,0.022999],[0.011895,0.028321,0.017922],[0.010562,0.028815,0.01292],[0.010452,0.028522,0.013025],[0.012537,0.026817,0.024302],[0.065374,0.056896,0.072812],[0.037133,0.042983,0.056577],[0.037079,0.042758,0.058218],[0.052574,0.052509,0.071335]]},{"date":"201801150400","rgb":[[0.011677,0.027529,0.018849],[0.012735,0.026987,0.01567],[0.012881,0.026588,0.01632],[0.012737,0.026593,0.026244],[0.010966,0.02873,0.014315],[0.010394,0.028763,0.011112],[0.010388,0.028638,0.011758],[0.0121,0.026831,0.022955],[0.011835,0.028274,0.01778],[0.010531,0.028813,0.012857],[0.010458,0.0287,0.013276],[0.012239,0.027016,0.024935],[0.064599,0.05647,0.07474],[0.036986,0.043074,0.055883],[0.037307,0.042778,0.057379],[0.052415,0.052135,0.07263]]},{"date":"201801150410","rgb":[[0.011988,0.027541,0.018423],[0.011599,0.026202,0.019591],[0.012313,0.026553,0.01784],[0.012533,0.026955,0.025854],[0.01086,0.028725,0.0134],[0.010448,0.028783,0.011649],[0.01039,0.028683,0.011928],[0.01192,0.027271,0.021203],[0.011949,0.028401,0.017052],[0.010447,0.028794,0.012302],[0.010537,0.028521,0.013913],[0.012853,0.027151,0.023726],[0.065337,0.056035,0.073637],[0.036861,0.043131,0.055883],[0.037265,0.042906,0.057982],[0.051481,0.052137,0.072218]]},{"date":"201801150420","rgb":[[0.012438,0.026882,0.020623],[0.012536,0.026913,0.015742],[0.01253,0.026489,0.016804],[0.013469,0.027122,0.023616],[0.010923,0.028082,0.01607],[0.010408,0.028803,0.010827],[0.010418,0.028759,0.01126],[0.011979,0.027491,0.020025],[0.011804,0.028643,0.016977],[0.010432,0.028824,0.010796],[0.010363,0.028662,0.011719],[0.012162,0.027628,0.021362],[0.065628,0.056944,0.074467],[0.036812,0.043239,0.055082],[0.037056,0.042897,0.056341],[0.051759,0.052151,0.071556]]},{"date":"201801150430","rgb":[[0.012561,0.027241,0.021637],[0.012586,0.025984,0.020327],[0.014893,0.025833,0.017102],[0.014608,0.026887,0.026671],[0.011226,0.028876,0.014563],[0.010463,0.028559,0.012526],[0.010461,0.028778,0.01187],[0.013332,0.027482,0.022486],[0.012002,0.028447,0.017242],[0.010572,0.028895,0.012821],[0.010514,0.028644,0.013122],[0.013047,0.027062,0.024115],[0.067108,0.056933,0.07586],[0.037201,0.043013,0.056479],[0.037546,0.043257,0.05678],[0.053412,0.052379,0.071844]]},{"date":"201801150440","rgb":[[0.012688,0.027834,0.017249],[0.013108,0.026067,0.01794],[0.012492,0.027017,0.015022],[0.014569,0.026699,0.024206],[0.010917,0.028985,0.013646],[0.010428,0.028803,0.010515],[0.010378,0.0287,0.010965],[0.012286,0.027863,0.020885],[0.01161,0.028846,0.014123],[0.010552,0.028975,0.011352],[0.010513,0.02888,0.011963],[0.013346,0.027768,0.020642],[0.066953,0.057869,0.073955],[0.037271,0.043152,0.057244],[0.03738,0.042948,0.057366],[0.05297,0.052308,0.071664]]},{"date":"201801150450","rgb":[[0.012419,0.027136,0.020106],[0.014658,0.025517,0.019554],[0.012389,0.026654,0.019415],[0.014547,0.026714,0.026105],[0.011018,0.028445,0.014674],[0.010586,0.028707,0.012304],[0.010502,0.0286,0.012103],[0.012508,0.027554,0.020384],[0.012098,0.028951,0.015114],[0.010613,0.028882,0.012528],[0.010655,0.028827,0.01287],[0.013156,0.027478,0.022781],[0.067265,0.057042,0.07516],[0.037203,0.042756,0.057822],[0.03743,0.042297,0.060436],[0.052583,0.052445,0.072305]]},{"date":"201801150500","rgb":[[0.013565,0.02702,0.024042],[0.012933,0.026321,0.02076],[0.013675,0.025921,0.022438],[0.014842,0.026512,0.027865],[0.011596,0.027506,0.020506],[0.010736,0.027281,0.017951],[0.010863,0.025953,0.021786],[0.013226,0.026711,0.026353],[0.012118,0.028154,0.020066],[0.010747,0.028016,0.015738],[0.010923,0.026168,0.021839],[0.013068,0.027039,0.025547],[0.067622,0.056879,0.077449],[0.03767,0.042888,0.058754],[0.037757,0.041549,0.063175],[0.052899,0.052363,0.072395]]},{"date":"201801150510","rgb":[[0.013937,0.027545,0.022147],[0.012926,0.027352,0.020093],[0.013908,0.027389,0.01895],[0.016749,0.026593,0.027317],[0.011739,0.028325,0.018447],[0.010825,0.0284,0.0149],[0.010925,0.028345,0.015724],[0.013807,0.026962,0.025585],[0.012931,0.028293,0.018508],[0.010707,0.028788,0.01307],[0.011021,0.028393,0.015528],[0.013965,0.027076,0.025072],[0.067107,0.056675,0.074772],[0.03741,0.042998,0.056944],[0.037563,0.042887,0.058354],[0.052399,0.05221,0.07249]]},{"date":"201801150520","rgb":[[0.013798,0.027475,0.021977],[0.012863,0.026989,0.020994],[0.013508,0.026971,0.021438],[0.017462,0.026364,0.028773],[0.011624,0.02762,0.020073],[0.01095,0.027999,0.016266],[0.01114,0.028149,0.016706],[0.015205,0.026916,0.026382],[0.012251,0.028641,0.017983],[0.010783,0.028695,0.014235],[0.01129,0.028129,0.017165],[0.015299,0.026923,0.026304],[0.066692,0.057335,0.074598],[0.037519,0.042676,0.058399],[0.037757,0.042466,0.059575],[0.054163,0.052088,0.072985]]},{"date":"201801150530","rgb":[[0.013496,0.027481,0.021723],[0.01338,0.026969,0.019994],[0.012844,0.02693,0.022765],[0.01714,0.026207,0.028847],[0.011856,0.027782,0.019734],[0.01096,0.028518,0.014931],[0.01142,0.026953,0.020259],[0.01504,0.026962,0.026907],[0.012357,0.028589,0.017088],[0.010734,0.028983,0.012836],[0.011201,0.028186,0.016825],[0.015373,0.026937,0.025994],[0.06563,0.056222,0.076178],[0.037293,0.042797,0.057767],[0.037854,0.041987,0.060906],[0.053269,0.052297,0.073522]]},{"date":"201801150540","rgb":[[0.013632,0.027365,0.022472],[0.013604,0.026551,0.020664],[0.013947,0.026541,0.022456],[0.016585,0.026681,0.029258],[0.011928,0.027422,0.020287],[0.010907,0.027248,0.018498],[0.011211,0.027503,0.018882],[0.014371,0.026798,0.027125],[0.012019,0.028496,0.017523],[0.010647,0.028623,0.013839],[0.010885,0.02809,0.016134],[0.014097,0.026789,0.026758],[0.066154,0.057307,0.074334],[0.037484,0.042678,0.057766],[0.037537,0.042442,0.05968],[0.052307,0.052152,0.072373]]},{"date":"201801150550","rgb":[[0.014185,0.02767,0.021343],[0.013167,0.027491,0.018994],[0.013617,0.027458,0.019681],[0.016587,0.026752,0.026931],[0.011938,0.028759,0.017172],[0.01082,0.028997,0.013044],[0.011028,0.028059,0.015916],[0.014956,0.027162,0.024095],[0.01234,0.028512,0.017453],[0.010809,0.028971,0.012792],[0.010967,0.02812,0.016353],[0.014699,0.0273,0.024605],[0.066172,0.057177,0.07446],[0.037411,0.043132,0.057808],[0.037756,0.042159,0.060416],[0.053454,0.052114,0.072481]]},{"date":"201801150600","rgb":[[0.013174,0.027643,0.021733],[0.012735,0.027197,0.019778],[0.012984,0.027123,0.019889],[0.016584,0.026759,0.027781],[0.011675,0.02756,0.020186],[0.010744,0.028492,0.014548],[0.010999,0.027786,0.016815],[0.014201,0.026734,0.026792],[0.012847,0.028386,0.018673],[0.011031,0.028768,0.014597],[0.011052,0.028673,0.01514],[0.014974,0.027081,0.0259],[0.067136,0.055655,0.076339],[0.037516,0.042455,0.059621],[0.037968,0.041878,0.06174],[0.053876,0.052384,0.07327]]},{"date":"201801150610","rgb":[[0.012324,0.027711,0.017864],[0.012171,0.026593,0.017686],[0.01304,0.025673,0.020122],[0.014023,0.026906,0.025708],[0.011206,0.027189,0.020231],[0.010472,0.028622,0.013275],[0.010584,0.027344,0.016754],[0.0127,0.027051,0.025427],[0.012301,0.02827,0.019649],[0.010646,0.028584,0.014119],[0.010935,0.028156,0.016355],[0.013851,0.027213,0.025836],[0.066886,0.057298,0.075429],[0.037693,0.042066,0.060544],[0.037561,0.041628,0.062233],[0.052789,0.051935,0.073936]]},{"date":"201801150620","rgb":[[0.013238,0.026835,0.025213],[0.012756,0.026197,0.021643],[0.012778,0.026265,0.022165],[0.015118,0.026932,0.027469],[0.012496,0.026929,0.026404],[0.011184,0.02635,0.022405],[0.011286,0.026451,0.022789],[0.01386,0.02683,0.028833],[0.013679,0.02707,0.032229],[0.012217,0.027027,0.027227],[0.012128,0.027076,0.026003],[0.014925,0.026801,0.030968],[0.068698,0.056564,0.084237],[0.038727,0.041375,0.069675],[0.039062,0.041418,0.068163],[0.055232,0.052267,0.076359]]},{"date":"201801150630","rgb":[[0.015034,0.027375,0.040589],[0.013381,0.027056,0.036168],[0.013168,0.027035,0.035181],[0.017903,0.027498,0.043451],[0.016942,0.027976,0.049204],[0.015014,0.027446,0.044999],[0.014174,0.027259,0.041761],[0.017897,0.027917,0.04764],[0.024478,0.029903,0.079522],[0.019372,0.029369,0.060332],[0.017851,0.028334,0.054231],[0.019758,0.028406,0.055319],[0.07831,0.059563,0.13475],[0.048521,0.043741,0.11342],[0.045769,0.043298,0.096907],[0.058498,0.053956,0.094334]]},{"date":"201801150650","rgb":[[0.10724,0.10402,0.51611],[0.12288,0.14061,0.53407],[0.11664,0.12653,0.52297],[0.10857,0.079608,0.52949],[0.10491,0.1134,0.48674],[0.12805,0.15388,0.54101],[0.13459,0.15265,0.54812],[0.13269,0.12043,0.55786],[0.11363,0.12046,0.50476],[0.11294,0.1331,0.48894],[0.10932,0.11435,0.48119],[0.11489,0.090287,0.51169],[0.10072,0.069668,0.27573],[0.088302,0.075996,0.32879],[0.088137,0.071783,0.32396],[0.090536,0.065403,0.27572]]},{"date":"201801150700","rgb":[[0.23941,0.3012,0.97261],[0.24931,0.33953,0.99193],[0.25849,0.3421,0.99691],[0.25877,0.30778,0.99416],[0.25741,0.34711,0.97894],[0.25469,0.35071,0.98048],[0.25991,0.3472,0.99448],[0.26452,0.32485,0.99555],[0.25521,0.33642,0.93574],[0.2508,0.33139,0.93743],[0.24756,0.30963,0.93495],[0.2375,0.26539,0.9202],[0.17825,0.16901,0.5448],[0.1854,0.20428,0.63462],[0.17923,0.18455,0.62156],[0.16092,0.14119,0.52866]]},{"date":"201801150710","rgb":[[0.8084,0.99929,0.99871],[0.88304,0.99937,0.99839],[0.91913,0.99704,0.99692],[0.84592,0.99939,0.99848],[0.84792,0.99924,0.99853],[0.90747,0.99893,0.99823],[0.88473,0.99866,0.99735],[0.86697,0.99927,0.99821],[0.72454,0.98544,0.99476],[0.85681,0.99726,0.99831],[0.82074,0.99935,0.99797],[0.77525,0.996,0.99719],[0.40151,0.59973,0.81581],[0.47097,0.69055,0.84153],[0.50795,0.68388,0.85],[0.44995,0.56423,0.79718]]},{"date":"201801150720","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.98335,0.97555,0.99869],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99488,0.976,0.99967],[0.68191,0.73418,0.94082],[0.74983,0.77145,0.944],[0.77055,0.77623,0.94034],[0.70073,0.70353,0.92289]]},{"date":"201801150730","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.98854,0.97755,0.99918],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99498,0.97637,0.99977],[0.74352,0.83994,0.94252],[0.8026,0.85629,0.94377],[0.83082,0.86559,0.94079],[0.78085,0.82374,0.92529]]},{"date":"201801150740","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99572,0.97662,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99606,0.97648,1],[0.86375,0.91423,0.94734],[0.89372,0.91036,0.94934],[0.90798,0.90876,0.94979],[0.90137,0.90791,0.93784]]},{"date":"201801150750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.91483,0.90982,0.95027],[0.92688,0.90713,0.95086],[0.9276,0.90654,0.95096],[0.91885,0.90623,0.94316]]},{"date":"201801150800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92989,0.90556,0.95161],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.92318,0.90593,0.94277]]},{"date":"201801150810","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92879,0.90653,0.9495],[0.93127,0.9048,0.95161],[0.93105,0.90493,0.95159],[0.92331,0.90672,0.93993]]},{"date":"201801150820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90336,0.94488]]},{"date":"201801150830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90338,0.94489]]},{"date":"201801150840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90339,0.94482]]},{"date":"201801150850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90334,0.94475]]},{"date":"201801150900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90335,0.94479]]},{"date":"201801150920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90334,0.94486]]},{"date":"201801150930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90336,0.94488]]},{"date":"201801150940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90334,0.94485]]},{"date":"201801151000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90332,0.94483]]},{"date":"201801151010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99567,0.97662,1],[0.99599,0.97651,1],[0.99608,0.97647,1],[0.99252,0.97769,1],[0.98553,0.98001,1],[0.98715,0.97947,1],[0.99438,0.97705,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92162,0.90666,0.94484]]},{"date":"201801151020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99541,0.9767,1],[0.99588,0.97653,1],[0.99608,0.97647,1],[0.9925,0.97769,1],[0.98553,0.98001,1],[0.98671,0.97961,1],[0.99426,0.97708,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92157,0.90671,0.94479]]},{"date":"201801151030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90333,0.9449]]},{"date":"201801151040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99466,0.97696,1],[0.99558,0.97665,1],[0.99608,0.97647,1],[0.99097,0.97821,1],[0.98482,0.98024,1],[0.98598,0.97985,1],[0.99321,0.97745,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92125,0.90684,0.9448]]},{"date":"201801151050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.9033,0.94476]]},{"date":"201801151100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90331,0.94488]]},{"date":"201801151110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94483]]},{"date":"201801151120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90332,0.94486]]},{"date":"201801151130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90333,0.94486]]},{"date":"201801151140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90333,0.94486]]},{"date":"201801151150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90329,0.94481]]},{"date":"201801151200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90333,0.94481]]},{"date":"201801151210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94485]]},{"date":"201801151220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90333,0.94489]]},{"date":"201801151230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90334,0.9449]]},{"date":"201801151240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90334,0.94488]]},{"date":"201801151250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90331,0.94476]]},{"date":"201801151300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.94484]]},{"date":"201801151310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90333,0.94491]]},{"date":"201801151320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90332,0.9449]]},{"date":"201801151330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90334,0.94492]]},{"date":"201801151340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90335,0.94491]]},{"date":"201801151350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90331,0.94478]]},{"date":"201801151400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90334,0.94485]]},{"date":"201801151410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90334,0.94489]]},{"date":"201801151420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90334,0.94491]]},{"date":"201801151430","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90336,0.94491]]},{"date":"201801151440","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90335,0.94491]]},{"date":"201801151450","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90333,0.94479]]},{"date":"201801151500","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90331,0.94478]]},{"date":"201801151510","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90329,0.94482]]},{"date":"201801151520","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.92999,0.90363,0.94484]]},{"date":"201801151530","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92282,0.90829,0.94936],[0.92446,0.90759,0.95098],[0.92973,0.90537,0.95142],[0.92813,0.90462,0.94341]]},{"date":"201801151550","rgb":[[0.98796,0.97891,0.99968],[0.43258,0.57918,0.92771],[0.29427,0.47712,0.96722],[0.36697,0.63115,0.98915],[0.63092,0.85011,0.99114],[0.23084,0.38711,0.83209],[0.27034,0.43129,0.88958],[0.27451,0.38239,0.87772],[0.32434,0.59701,0.96197],[0.36177,0.68012,0.94467],[0.34574,0.6135,0.94741],[0.25551,0.35588,0.81693],[0.41933,0.70954,0.91844],[0.3666,0.71026,0.92248],[0.43282,0.86192,0.94485],[0.36305,0.5347,0.89975]]},{"date":"201801151600","rgb":[[0.98392,0.98023,0.99944],[0.37433,0.42806,0.7479],[0.2052,0.24865,0.75178],[0.25417,0.30685,0.86663],[0.591,0.69321,0.96276],[0.14586,0.19006,0.58851],[0.17554,0.21242,0.62464],[0.17461,0.16969,0.61106],[0.22913,0.33114,0.80714],[0.26063,0.40597,0.8067],[0.24594,0.34827,0.78587],[0.15682,0.15153,0.57561],[0.31379,0.49416,0.83248],[0.28471,0.42807,0.82084],[0.35046,0.57195,0.92682],[0.25885,0.27797,0.75711]]},{"date":"201801151610","rgb":[[0.49799,0.9888,0.99791],[0.20137,0.33764,0.53264],[0.073773,0.057794,0.3418],[0.11886,0.090956,0.45502],[0.32571,0.56824,0.75414],[0.065634,0.066244,0.29882],[0.079276,0.075286,0.3151],[0.069833,0.053066,0.28923],[0.11442,0.124,0.45977],[0.14102,0.16785,0.48384],[0.11912,0.12596,0.42419],[0.074851,0.066842,0.28741],[0.1864,0.20547,0.59699],[0.16409,0.17639,0.54895],[0.2112,0.23874,0.68864],[0.15483,0.11829,0.45006]]},{"date":"201801151620","rgb":[[0.22935,0.24008,0.79493],[0.07535,0.083177,0.26526],[0.019346,0.028546,0.061586],[0.030041,0.031068,0.10827],[0.13567,0.14901,0.48983],[0.017295,0.028248,0.057287],[0.018705,0.028784,0.057616],[0.02331,0.029192,0.072226],[0.026929,0.031151,0.11214],[0.028318,0.03171,0.11731],[0.025408,0.030595,0.097298],[0.021059,0.029011,0.063158],[0.063649,0.047599,0.20606],[0.056049,0.046276,0.17523],[0.065246,0.049366,0.23304],[0.069422,0.055653,0.15121]]},{"date":"201801151630","rgb":[[0.041574,0.035442,0.213],[0.021012,0.029179,0.078625],[0.012887,0.025968,0.022738],[0.015828,0.026362,0.031025],[0.0301,0.031504,0.1414],[0.010748,0.025915,0.022303],[0.010924,0.026396,0.021391],[0.013095,0.026724,0.025796],[0.012343,0.027022,0.028452],[0.011548,0.02651,0.025423],[0.011352,0.026252,0.025192],[0.012838,0.026827,0.02734],[0.040142,0.041966,0.073377],[0.037803,0.041526,0.067434],[0.039247,0.041944,0.072897],[0.053674,0.052004,0.077021]]},{"date":"201801151640","rgb":[[0.018964,0.027586,0.045737],[0.015421,0.026371,0.025829],[0.014448,0.024972,0.021157],[0.015034,0.026515,0.026366],[0.013854,0.028177,0.031574],[0.010478,0.028653,0.011159],[0.010497,0.027398,0.016011],[0.012387,0.026795,0.023624],[0.01128,0.02855,0.016583],[0.010504,0.028812,0.011758],[0.010523,0.028625,0.013454],[0.013133,0.027151,0.023916],[0.038524,0.042385,0.062114],[0.036969,0.042635,0.056493],[0.038067,0.042033,0.061879],[0.052734,0.051958,0.074233]]},{"date":"201801151650","rgb":[[0.014671,0.026742,0.029287],[0.012527,0.027646,0.017857],[0.012819,0.027402,0.015103],[0.01473,0.026912,0.025436],[0.012015,0.027134,0.022731],[0.010481,0.02869,0.011806],[0.010478,0.028637,0.012809],[0.012342,0.027239,0.023401],[0.010768,0.028956,0.013291],[0.010401,0.028794,0.011494],[0.01049,0.028764,0.012064],[0.012788,0.027011,0.024516],[0.038017,0.042671,0.059019],[0.036656,0.043218,0.05484],[0.037566,0.04263,0.05897],[0.052174,0.052693,0.07093]]},{"date":"201801151700","rgb":[[0.015072,0.027435,0.023547],[0.013172,0.025825,0.022067],[0.012637,0.026708,0.017327],[0.014013,0.027154,0.024639],[0.012339,0.027803,0.020223],[0.010459,0.026882,0.017163],[0.010506,0.02863,0.012746],[0.011989,0.02678,0.022994],[0.010839,0.028878,0.013422],[0.010432,0.028874,0.010707],[0.010373,0.028611,0.012559],[0.012158,0.027251,0.022045],[0.03788,0.043247,0.057261],[0.036837,0.042754,0.055661],[0.037056,0.042873,0.056416],[0.051849,0.052265,0.071377]]},{"date":"201801151710","rgb":[[0.013565,0.027608,0.021644],[0.015086,0.025685,0.018343],[0.018324,0.023897,0.016262],[0.014291,0.026399,0.02607],[0.011686,0.027767,0.019447],[0.01042,0.028784,0.010763],[0.010484,0.028464,0.012721],[0.012157,0.02681,0.023305],[0.010805,0.028831,0.01357],[0.010429,0.028776,0.011465],[0.010464,0.028514,0.013164],[0.012465,0.027233,0.023233],[0.037461,0.042972,0.058271],[0.036462,0.04324,0.053942],[0.037216,0.042915,0.056408],[0.051895,0.05185,0.070799]]},{"date":"201801151720","rgb":[[0.014701,0.028076,0.019155],[0.017992,0.02516,0.014235],[0.014839,0.026028,0.015637],[0.014878,0.027101,0.023771],[0.012136,0.028031,0.018606],[0.010394,0.028743,0.010916],[0.01038,0.028734,0.011229],[0.012597,0.027774,0.020792],[0.010938,0.028557,0.01405],[0.010418,0.028902,0.0095836],[0.01034,0.028795,0.010753],[0.012866,0.027693,0.019404],[0.037285,0.043335,0.056874],[0.036457,0.043254,0.053704],[0.036912,0.043031,0.055354],[0.051809,0.05261,0.069504]]},{"date":"201801151730","rgb":[[0.013365,0.027486,0.02077],[0.013113,0.026357,0.018732],[0.013701,0.025433,0.01914],[0.013214,0.026634,0.024807],[0.011505,0.028469,0.016674],[0.010454,0.028495,0.01131],[0.010438,0.028246,0.01339],[0.012333,0.026809,0.023117],[0.010874,0.028687,0.013817],[0.010348,0.028795,0.011097],[0.010362,0.028765,0.012267],[0.011943,0.026884,0.022285],[0.037838,0.042823,0.059216],[0.036526,0.042922,0.055878],[0.037156,0.042712,0.057032],[0.051114,0.05223,0.072103]]},{"date":"201801151740","rgb":[[0.012433,0.027566,0.022362],[0.011978,0.026859,0.018301],[0.012648,0.025335,0.020586],[0.013367,0.026668,0.024448],[0.011541,0.028199,0.017357],[0.010369,0.028595,0.011328],[0.010364,0.028499,0.012175],[0.011821,0.026908,0.023001],[0.010864,0.028442,0.014991],[0.010347,0.028718,0.011865],[0.010427,0.028632,0.012642],[0.012002,0.027111,0.022635],[0.037478,0.04261,0.058746],[0.036483,0.043114,0.054853],[0.036881,0.043134,0.055752],[0.051648,0.052132,0.070893]]},{"date":"201801151750","rgb":[[0.013248,0.027691,0.020908],[0.013463,0.027098,0.015364],[0.013554,0.026771,0.015453],[0.013975,0.027228,0.024451],[0.011168,0.027837,0.018045],[0.010438,0.02876,0.011186],[0.010395,0.028743,0.011438],[0.012403,0.026733,0.023125],[0.010923,0.028715,0.01438],[0.01039,0.028815,0.011441],[0.01045,0.028577,0.012713],[0.012249,0.027365,0.022973],[0.037765,0.042899,0.057125],[0.036528,0.043188,0.054152],[0.037124,0.04308,0.055818],[0.052315,0.051871,0.072256]]},{"date":"201801151800","rgb":[[0.013676,0.027318,0.02312],[0.012902,0.026574,0.018357],[0.013706,0.024813,0.021173],[0.014286,0.026942,0.0233],[0.01201,0.028284,0.017036],[0.010389,0.028846,0.0091174],[0.010382,0.028184,0.012189],[0.012186,0.028071,0.017996],[0.010885,0.028806,0.013979],[0.010417,0.028897,0.0093801],[0.0104,0.028734,0.011527],[0.011953,0.027996,0.01912],[0.03761,0.042949,0.057761],[0.03646,0.043228,0.053284],[0.037146,0.042937,0.055454],[0.052145,0.052769,0.070631]]},{"date":"201801151810","rgb":[[0.013417,0.027396,0.021945],[0.014598,0.026086,0.016207],[0.013033,0.025981,0.018095],[0.013411,0.026876,0.024644],[0.011385,0.02783,0.018044],[0.010397,0.028817,0.010555],[0.010367,0.028565,0.012114],[0.011884,0.027002,0.022704],[0.010937,0.028822,0.013887],[0.010357,0.028798,0.010545],[0.010441,0.028705,0.012243],[0.011904,0.027281,0.02247],[0.037591,0.042925,0.058209],[0.036475,0.043195,0.053579],[0.037056,0.042432,0.058037],[0.052123,0.052289,0.07268]]},{"date":"201801151820","rgb":[[0.013029,0.027572,0.020238],[0.014309,0.026264,0.017059],[0.013462,0.02678,0.013141],[0.013781,0.026872,0.022281],[0.011324,0.028581,0.015316],[0.010449,0.02882,0.010449],[0.010403,0.0288,0.010266],[0.011843,0.027931,0.019302],[0.010659,0.028779,0.013162],[0.0104,0.028779,0.010739],[0.010366,0.028671,0.01222],[0.011655,0.027853,0.019033],[0.037587,0.043273,0.057079],[0.03664,0.043211,0.053678],[0.036933,0.043171,0.055602],[0.051576,0.052698,0.069673]]},{"date":"201801151830","rgb":[[0.013004,0.027479,0.020114],[0.014842,0.026166,0.016234],[0.014797,0.025688,0.016126],[0.013075,0.02757,0.021688],[0.011231,0.028449,0.016077],[0.010381,0.028774,0.010392],[0.010357,0.028715,0.010733],[0.011723,0.027905,0.018308],[0.010718,0.028671,0.013287],[0.010408,0.028781,0.011723],[0.010348,0.028661,0.012029],[0.011868,0.027691,0.020721],[0.037519,0.043389,0.056004],[0.036436,0.043109,0.053591],[0.036666,0.043048,0.05449],[0.051723,0.052342,0.070433]]},{"date":"201801151840","rgb":[[0.013588,0.028314,0.016776],[0.013188,0.027108,0.014335],[0.013986,0.026689,0.01323],[0.014127,0.027761,0.020024],[0.011271,0.028874,0.014633],[0.010396,0.028829,0.0091657],[0.01036,0.028715,0.010848],[0.011904,0.028297,0.018275],[0.010776,0.028938,0.01306],[0.010398,0.028868,0.010447],[0.010353,0.028726,0.011504],[0.012091,0.027735,0.020339],[0.037609,0.043323,0.05657],[0.036584,0.043183,0.053838],[0.036836,0.042898,0.055644],[0.052703,0.05262,0.070817]]},{"date":"201801151850","rgb":[[0.012943,0.027479,0.020399],[0.011784,0.027367,0.016166],[0.013871,0.025468,0.018826],[0.013819,0.026817,0.023582],[0.011157,0.028356,0.015685],[0.010367,0.028782,0.00999],[0.010392,0.028296,0.012472],[0.011664,0.026507,0.022914],[0.01069,0.028627,0.013481],[0.010334,0.028841,0.010682],[0.010364,0.028683,0.011954],[0.011742,0.027227,0.021513],[0.037363,0.042911,0.057061],[0.036376,0.043085,0.054],[0.037253,0.042921,0.056055],[0.051925,0.052324,0.071217]]},{"date":"201801151900","rgb":[[0.013594,0.027462,0.019243],[0.013627,0.026559,0.016368],[0.014578,0.026091,0.014364],[0.013136,0.026838,0.024158],[0.010966,0.028742,0.013806],[0.010353,0.028772,0.010518],[0.010383,0.028697,0.011029],[0.011672,0.027324,0.019062],[0.010577,0.02875,0.013313],[0.0104,0.028729,0.011839],[0.010407,0.02862,0.012325],[0.011696,0.027725,0.019762],[0.037259,0.043114,0.056666],[0.036454,0.043179,0.054028],[0.036846,0.042741,0.056619],[0.051486,0.052416,0.070756]]},{"date":"201801151910","rgb":[[0.013463,0.027244,0.022093],[0.013686,0.026787,0.014831],[0.012801,0.025828,0.018992],[0.013432,0.026804,0.024242],[0.011394,0.028096,0.016666],[0.010371,0.02873,0.010375],[0.010401,0.028748,0.011149],[0.011408,0.027178,0.020668],[0.010759,0.028547,0.014688],[0.010375,0.028768,0.01144],[0.010372,0.028598,0.012042],[0.01169,0.027096,0.021485],[0.037416,0.042541,0.059552],[0.036676,0.043182,0.054452],[0.036952,0.042955,0.056047],[0.051686,0.052221,0.071053]]},{"date":"201801151920","rgb":[[0.013376,0.027844,0.018139],[0.015387,0.026,0.012954],[0.01245,0.026223,0.016749],[0.013351,0.027488,0.020276],[0.011013,0.028643,0.013084],[0.010368,0.02889,0.0087124],[0.010372,0.028782,0.010202],[0.011384,0.028212,0.016413],[0.010644,0.028815,0.011984],[0.010392,0.028847,0.0093048],[0.010319,0.028755,0.010316],[0.011561,0.027942,0.019347],[0.037206,0.04328,0.055626],[0.036479,0.043167,0.052656],[0.036755,0.043024,0.054084],[0.052286,0.052662,0.068604]]},{"date":"201801151930","rgb":[[0.013275,0.027849,0.019518],[0.012591,0.027275,0.015882],[0.012265,0.02745,0.013492],[0.013667,0.027514,0.022146],[0.010991,0.028414,0.015321],[0.010384,0.028798,0.010476],[0.010369,0.0287,0.011235],[0.011861,0.027622,0.019965],[0.010851,0.028829,0.013928],[0.010372,0.028841,0.010823],[0.01034,0.028736,0.011696],[0.012156,0.027775,0.020336],[0.03771,0.043194,0.057497],[0.036428,0.043208,0.054487],[0.037213,0.043182,0.057124],[0.052825,0.052402,0.071106]]},{"date":"201801151940","rgb":[[0.012697,0.02726,0.019717],[0.013974,0.026755,0.013492],[0.013287,0.026651,0.015387],[0.014032,0.026717,0.02241],[0.010888,0.028048,0.015354],[0.010379,0.028809,0.0098405],[0.0104,0.028701,0.010904],[0.011204,0.027143,0.019803],[0.01067,0.028672,0.013096],[0.010351,0.028829,0.010081],[0.010372,0.028731,0.011456],[0.011376,0.027174,0.020328],[0.037335,0.043007,0.056841],[0.0364,0.043078,0.054387],[0.036796,0.043086,0.055394],[0.051327,0.052617,0.069168]]},{"date":"201801151950","rgb":[[0.012841,0.027112,0.021411],[0.014866,0.026076,0.016659],[0.012507,0.026802,0.015657],[0.012719,0.026999,0.022827],[0.011006,0.028101,0.016112],[0.010395,0.028832,0.0096683],[0.010357,0.028716,0.011133],[0.011331,0.027078,0.020397],[0.010637,0.02862,0.013966],[0.010322,0.028722,0.01063],[0.010352,0.02858,0.01182],[0.01131,0.026923,0.021284],[0.037448,0.042727,0.058716],[0.036478,0.043026,0.054156],[0.036999,0.042305,0.057339],[0.051125,0.052314,0.071822]]},{"date":"201801152000","rgb":[[0.013269,0.02715,0.021969],[0.014462,0.026259,0.015198],[0.017122,0.024525,0.015397],[0.014214,0.026911,0.023233],[0.011025,0.028167,0.01606],[0.010394,0.028656,0.01146],[0.010392,0.028463,0.012489],[0.011902,0.027195,0.021512],[0.010827,0.029001,0.013141],[0.01041,0.028795,0.011359],[0.010447,0.028543,0.012778],[0.012137,0.027235,0.022157],[0.037667,0.043151,0.056715],[0.036683,0.042859,0.055315],[0.037137,0.042676,0.057002],[0.052431,0.052568,0.07064]]},{"date":"201801152010","rgb":[[0.013176,0.027392,0.021398],[0.013955,0.026599,0.016207],[0.013311,0.026658,0.014988],[0.01403,0.02698,0.024103],[0.011359,0.028483,0.01537],[0.010428,0.028865,0.010143],[0.010398,0.028778,0.010814],[0.011768,0.027756,0.019178],[0.010785,0.028775,0.013809],[0.010376,0.028825,0.011197],[0.010399,0.028714,0.011798],[0.012087,0.027272,0.022073],[0.037608,0.043302,0.056329],[0.036717,0.043034,0.054651],[0.037195,0.043109,0.055414],[0.052743,0.05246,0.070028]]},{"date":"201801152020","rgb":[[0.012942,0.027939,0.018346],[0.012021,0.027228,0.015902],[0.014096,0.026078,0.016001],[0.013288,0.026933,0.022929],[0.011135,0.028587,0.014569],[0.010431,0.028832,0.010543],[0.010353,0.028671,0.011494],[0.012081,0.027489,0.020552],[0.010853,0.028802,0.013959],[0.010395,0.028804,0.01057],[0.01042,0.028728,0.012664],[0.012093,0.027224,0.022137],[0.03778,0.042587,0.058626],[0.036804,0.042926,0.055947],[0.037204,0.042736,0.057828],[0.05214,0.052533,0.071835]]},{"date":"201801152030","rgb":[[0.013268,0.027378,0.020606],[0.013413,0.026582,0.016752],[0.012076,0.027229,0.015052],[0.013891,0.026787,0.02403],[0.011163,0.028543,0.015063],[0.010371,0.028737,0.010277],[0.010408,0.028713,0.011597],[0.011846,0.027573,0.019838],[0.010932,0.028824,0.014174],[0.010438,0.02888,0.010504],[0.010371,0.028739,0.011754],[0.012162,0.027624,0.02216],[0.038101,0.043168,0.058687],[0.037044,0.043033,0.055859],[0.037233,0.043056,0.056324],[0.052909,0.052367,0.071953]]},{"date":"201801152040","rgb":[[0.0125,0.027981,0.017638],[0.013638,0.026171,0.017143],[0.012163,0.027212,0.01516],[0.013816,0.027009,0.024892],[0.011004,0.028527,0.015615],[0.010436,0.028687,0.012206],[0.010408,0.028506,0.012931],[0.011861,0.027125,0.023288],[0.010775,0.028757,0.014287],[0.010448,0.028686,0.011776],[0.010375,0.028629,0.012437],[0.011658,0.026805,0.023831],[0.037857,0.042792,0.057818],[0.036654,0.043157,0.054489],[0.03722,0.042788,0.055854],[0.052427,0.051929,0.072064]]},{"date":"201801152050","rgb":[[0.013414,0.027684,0.017844],[0.013524,0.027059,0.013434],[0.012785,0.026232,0.017019],[0.014184,0.02757,0.020199],[0.010926,0.028956,0.013505],[0.010414,0.028836,0.0096355],[0.010363,0.028819,0.010422],[0.011558,0.028236,0.017498],[0.010585,0.028843,0.012571],[0.010437,0.028669,0.01127],[0.010349,0.028719,0.011214],[0.011972,0.027855,0.019603],[0.037113,0.042987,0.056889],[0.036613,0.043159,0.054231],[0.036771,0.042964,0.056023],[0.051365,0.052794,0.067716]]},{"date":"201801152100","rgb":[[0.012489,0.028362,0.016238],[0.012811,0.02686,0.016216],[0.012712,0.026638,0.016618],[0.014126,0.027562,0.022064],[0.010827,0.029003,0.012829],[0.01038,0.028803,0.010003],[0.010399,0.028695,0.012286],[0.012352,0.027583,0.020696],[0.010576,0.028929,0.0119],[0.010428,0.028804,0.010458],[0.010388,0.0287,0.01223],[0.012248,0.027673,0.019773],[0.037222,0.043102,0.056544],[0.036332,0.043071,0.05343],[0.037005,0.042967,0.056465],[0.052786,0.052559,0.069572]]},{"date":"201801152110","rgb":[[0.013427,0.027432,0.023168],[0.013342,0.026922,0.016703],[0.012662,0.026559,0.018083],[0.014888,0.027008,0.024083],[0.011252,0.027729,0.017872],[0.010392,0.02875,0.011061],[0.010426,0.02861,0.01199],[0.012903,0.02766,0.021163],[0.010725,0.028289,0.014812],[0.01045,0.028706,0.011513],[0.010462,0.028749,0.011656],[0.012422,0.027757,0.020747],[0.038366,0.042952,0.059636],[0.036825,0.043252,0.054679],[0.037237,0.043391,0.056001],[0.052881,0.052097,0.070668]]},{"date":"201801152120","rgb":[[0.011743,0.027185,0.019518],[0.01159,0.025854,0.020161],[0.013648,0.025793,0.018422],[0.013797,0.026768,0.025442],[0.010867,0.028371,0.015086],[0.010419,0.028274,0.012787],[0.010427,0.028471,0.01318],[0.011934,0.026999,0.022972],[0.010661,0.028708,0.013603],[0.010389,0.028718,0.011085],[0.010367,0.028618,0.0124],[0.01218,0.026865,0.023611],[0.037241,0.042683,0.058802],[0.036419,0.043084,0.054495],[0.036922,0.042812,0.057567],[0.05176,0.052059,0.071833]]},{"date":"201801152130","rgb":[[0.012507,0.027784,0.017652],[0.013144,0.027092,0.013701],[0.014844,0.025923,0.016088],[0.0152,0.026521,0.025193],[0.011033,0.028236,0.015557],[0.010368,0.02872,0.010215],[0.010418,0.028643,0.01246],[0.012218,0.02704,0.022307],[0.010803,0.028671,0.013422],[0.010387,0.028756,0.01104],[0.010367,0.028451,0.012139],[0.012318,0.027329,0.022555],[0.03742,0.042861,0.057659],[0.036463,0.043177,0.053813],[0.037222,0.043141,0.055978],[0.052549,0.052138,0.071071]]},{"date":"201801152140","rgb":[[0.013865,0.026986,0.017902],[0.014567,0.026543,0.014179],[0.012136,0.027031,0.016474],[0.014207,0.026563,0.026035],[0.010866,0.028778,0.013537],[0.010404,0.028782,0.010706],[0.010382,0.028746,0.011883],[0.012489,0.027116,0.022652],[0.010811,0.028786,0.013554],[0.010393,0.02875,0.010818],[0.010391,0.028714,0.011935],[0.012744,0.027468,0.022157],[0.03769,0.043052,0.057378],[0.036784,0.042979,0.054878],[0.036925,0.042728,0.057102],[0.052281,0.052214,0.072225]]},{"date":"201801152150","rgb":[[0.012033,0.028245,0.015576],[0.012207,0.027669,0.013561],[0.013296,0.026191,0.016498],[0.013372,0.026949,0.023385],[0.010821,0.028529,0.014165],[0.010372,0.02878,0.010285],[0.010393,0.028655,0.011595],[0.011942,0.027341,0.020666],[0.010674,0.028949,0.012965],[0.010421,0.028908,0.010827],[0.01032,0.028581,0.011263],[0.012155,0.027971,0.019168],[0.037638,0.042912,0.057013],[0.036616,0.043074,0.054324],[0.03676,0.042966,0.05587],[0.051466,0.052547,0.069878]]},{"date":"201801152200","rgb":[[0.01278,0.027478,0.017473],[0.016989,0.02493,0.014022],[0.013273,0.026222,0.016456],[0.014164,0.026785,0.02472],[0.010876,0.028439,0.014943],[0.010365,0.028785,0.010057],[0.010336,0.028649,0.011062],[0.011781,0.027022,0.021887],[0.010833,0.028739,0.014272],[0.010364,0.028649,0.011707],[0.010373,0.028561,0.012419],[0.012063,0.027171,0.022941],[0.037923,0.042976,0.056592],[0.036613,0.043121,0.054475],[0.037004,0.042917,0.055088],[0.051896,0.052781,0.070087]]},{"date":"201801152210","rgb":[[0.01265,0.027786,0.016061],[0.01439,0.026509,0.014752],[0.012548,0.025921,0.018817],[0.013989,0.02691,0.023477],[0.010897,0.028696,0.014075],[0.010369,0.028788,0.010435],[0.010444,0.0288,0.011654],[0.012247,0.027024,0.022062],[0.010883,0.028591,0.014367],[0.010425,0.028766,0.011291],[0.010402,0.028749,0.011589],[0.01304,0.027139,0.023171],[0.037798,0.042798,0.05895],[0.036678,0.043303,0.053914],[0.0374,0.042491,0.057828],[0.052352,0.052316,0.072528]]},{"date":"201801152230","rgb":[[0.011966,0.027757,0.016849],[0.012396,0.026254,0.017039],[0.014057,0.025601,0.017191],[0.013553,0.026925,0.023835],[0.010771,0.028305,0.015209],[0.010383,0.028791,0.010063],[0.010392,0.028702,0.011255],[0.012057,0.02737,0.021574],[0.010602,0.028651,0.013058],[0.010339,0.028805,0.010269],[0.010378,0.028839,0.011133],[0.01157,0.027705,0.019624],[0.037562,0.042502,0.058646],[0.036515,0.043103,0.054271],[0.036808,0.042975,0.055606],[0.052073,0.052497,0.070858]]},{"date":"201801152240","rgb":[[0.012958,0.028106,0.017555],[0.013549,0.026318,0.017709],[0.012678,0.026969,0.018628],[0.018372,0.026876,0.026534],[0.011665,0.028812,0.015756],[0.010605,0.028803,0.011991],[0.010572,0.028793,0.013036],[0.015829,0.027569,0.023718],[0.011732,0.028403,0.01742],[0.010644,0.028825,0.013263],[0.010612,0.028663,0.01375],[0.014687,0.026817,0.024312],[0.037993,0.042267,0.059699],[0.036565,0.043181,0.054686],[0.037142,0.042757,0.056412],[0.052983,0.052172,0.071519]]},{"date":"201801152250","rgb":[[0.012575,0.028176,0.016845],[0.014158,0.026543,0.013781],[0.013085,0.02681,0.016598],[0.018379,0.026884,0.02444],[0.011443,0.028638,0.015408],[0.010456,0.028884,0.010954],[0.010485,0.028801,0.011469],[0.01575,0.028088,0.020712],[0.011776,0.029021,0.015422],[0.010503,0.028916,0.010992],[0.010489,0.028853,0.01173],[0.015059,0.028101,0.019746],[0.038017,0.042842,0.057608],[0.036764,0.043416,0.0543],[0.037179,0.043186,0.054853],[0.053085,0.05294,0.068222]]},{"date":"201801152300","rgb":[[0.01228,0.027716,0.017213],[0.014551,0.026309,0.014396],[0.013486,0.026405,0.015668],[0.016803,0.026812,0.025543],[0.011001,0.028701,0.013889],[0.010392,0.028805,0.010585],[0.010373,0.028603,0.011648],[0.014437,0.027302,0.022495],[0.011096,0.0288,0.014852],[0.010371,0.028826,0.010493],[0.010384,0.0288,0.01085],[0.014091,0.027384,0.021676],[0.03725,0.043083,0.055807],[0.036564,0.043129,0.054067],[0.036579,0.04301,0.054816],[0.052493,0.052301,0.070973]]},{"date":"201801152310","rgb":[[0.012002,0.027627,0.018909],[0.012842,0.026945,0.015845],[0.013394,0.02598,0.018844],[0.014603,0.02661,0.027969],[0.010982,0.028155,0.014285],[0.010382,0.028703,0.011347],[0.01036,0.02833,0.012801],[0.013312,0.026969,0.022661],[0.010989,0.028635,0.014129],[0.010407,0.028676,0.012245],[0.010378,0.028623,0.012726],[0.012356,0.027017,0.022874],[0.03735,0.042924,0.056899],[0.036497,0.043131,0.055059],[0.036641,0.04271,0.056425],[0.052045,0.052166,0.071235]]},{"date":"201801152320","rgb":[[0.012402,0.027397,0.01939],[0.015177,0.025864,0.015919],[0.014902,0.025368,0.01937],[0.014893,0.02714,0.025471],[0.011207,0.027705,0.017729],[0.010479,0.02878,0.011874],[0.010584,0.028551,0.012889],[0.012951,0.027531,0.022337],[0.011499,0.027935,0.018649],[0.010604,0.028889,0.013152],[0.0106,0.02866,0.01372],[0.012804,0.027143,0.023714],[0.037682,0.042712,0.058886],[0.036735,0.043174,0.054835],[0.037109,0.042382,0.058306],[0.052787,0.052348,0.072289]]},{"date":"201801152330","rgb":[[0.01253,0.027375,0.019161],[0.013078,0.026463,0.016436],[0.012502,0.026504,0.018581],[0.014977,0.026905,0.025811],[0.011086,0.028554,0.014784],[0.010449,0.02879,0.012178],[0.01045,0.028556,0.01313],[0.012471,0.02715,0.022832],[0.011383,0.028603,0.016238],[0.010413,0.02879,0.012434],[0.010431,0.028569,0.01293],[0.012148,0.027547,0.022668],[0.03781,0.042698,0.058606],[0.036621,0.043148,0.055084],[0.036909,0.042791,0.055936],[0.052489,0.052027,0.072585]]},{"date":"201801152340","rgb":[[0.012794,0.027027,0.018578],[0.012682,0.026193,0.01751],[0.013572,0.025063,0.021724],[0.015081,0.026792,0.024254],[0.011178,0.028748,0.01546],[0.010448,0.028756,0.01163],[0.010523,0.026522,0.018567],[0.012844,0.026913,0.02363],[0.011208,0.028818,0.0143],[0.010453,0.028833,0.011856],[0.010452,0.027949,0.014496],[0.012002,0.027258,0.021412],[0.037196,0.04332,0.055758],[0.036463,0.043192,0.053535],[0.036736,0.043061,0.054972],[0.053077,0.052595,0.069013]]},{"date":"201801152350","rgb":[[0.012196,0.028122,0.015138],[0.013033,0.027155,0.013887],[0.013866,0.02681,0.013261],[0.014448,0.026513,0.025146],[0.011112,0.028815,0.013935],[0.010456,0.028796,0.011173],[0.010419,0.028784,0.011134],[0.01306,0.027497,0.020725],[0.011632,0.028753,0.014975],[0.010504,0.028869,0.011787],[0.010393,0.02873,0.012485],[0.01196,0.027124,0.022295],[0.037319,0.042967,0.057577],[0.036653,0.043273,0.053867],[0.036848,0.043128,0.055848],[0.052204,0.052374,0.071005]]},{"date":"201801160000","rgb":[[0.012256,0.027871,0.019097],[0.013537,0.026713,0.014932],[0.012829,0.026208,0.01891],[0.014144,0.026843,0.024657],[0.011392,0.028689,0.016396],[0.010429,0.02878,0.011079],[0.010479,0.028819,0.011964],[0.01238,0.027092,0.023858],[0.011464,0.028744,0.016544],[0.010489,0.028959,0.011313],[0.010487,0.028719,0.013271],[0.0118,0.027349,0.021565],[0.03768,0.042868,0.058164],[0.036513,0.043319,0.054841],[0.036992,0.043134,0.055822],[0.05235,0.052399,0.072744]]},{"date":"201801160010","rgb":[[0.012631,0.028084,0.016493],[0.011661,0.027247,0.016127],[0.013111,0.027023,0.015458],[0.014375,0.02677,0.025835],[0.011121,0.029205,0.013452],[0.010368,0.028754,0.010435],[0.01042,0.02877,0.011201],[0.012407,0.027893,0.020564],[0.01126,0.028927,0.013792],[0.010456,0.028877,0.01155],[0.010433,0.028808,0.011748],[0.012196,0.027437,0.021733],[0.037484,0.043305,0.055959],[0.036552,0.043192,0.053664],[0.036761,0.042891,0.055036],[0.053059,0.052226,0.071358]]},{"date":"201801160020","rgb":[[0.012864,0.027713,0.016976],[0.01425,0.025631,0.017164],[0.013074,0.026436,0.016631],[0.013295,0.027092,0.023195],[0.010895,0.028829,0.013823],[0.010387,0.028791,0.010242],[0.010399,0.028753,0.012135],[0.011667,0.027767,0.019639],[0.011092,0.02868,0.015215],[0.010418,0.028842,0.011342],[0.010391,0.028666,0.012438],[0.011718,0.027445,0.020731],[0.037512,0.04279,0.058315],[0.036421,0.043153,0.05442],[0.036633,0.042874,0.055734],[0.052373,0.052519,0.070622]]},{"date":"201801160030","rgb":[[0.012457,0.027623,0.018187],[0.011945,0.027214,0.016474],[0.012938,0.026262,0.017974],[0.013962,0.026817,0.02564],[0.010918,0.028564,0.014652],[0.01041,0.028713,0.011542],[0.010369,0.028521,0.011548],[0.012184,0.027106,0.023161],[0.011326,0.028437,0.015685],[0.010475,0.028839,0.012542],[0.010404,0.028511,0.012704],[0.012471,0.026605,0.025019],[0.037795,0.04234,0.059138],[0.037058,0.043122,0.055368],[0.037117,0.043031,0.056477],[0.054108,0.052074,0.072181]]},{"date":"201801160040","rgb":[[0.012327,0.027902,0.017412],[0.014024,0.02642,0.015509],[0.013212,0.026503,0.016852],[0.014465,0.0269,0.024878],[0.011053,0.028732,0.013301],[0.010352,0.028762,0.010319],[0.010355,0.028651,0.010816],[0.012698,0.027647,0.019632],[0.011247,0.028627,0.014837],[0.010378,0.028818,0.011345],[0.010405,0.028686,0.011746],[0.013141,0.027398,0.021182],[0.037387,0.043349,0.05686],[0.036429,0.04318,0.05347],[0.036669,0.04325,0.054767],[0.053178,0.052478,0.070932]]},{"date":"201801160050","rgb":[[0.012812,0.028282,0.016176],[0.014178,0.026919,0.01353],[0.013647,0.026833,0.015218],[0.015122,0.027061,0.02303],[0.01106,0.028862,0.014179],[0.0104,0.028789,0.010806],[0.010394,0.028619,0.012355],[0.012051,0.028062,0.019409],[0.011139,0.028971,0.014672],[0.01045,0.028763,0.012116],[0.01049,0.028739,0.012164],[0.012292,0.027354,0.020876],[0.037403,0.043423,0.056133],[0.0367,0.043245,0.053858],[0.036917,0.043239,0.054629],[0.05292,0.052944,0.069181]]},{"date":"201801160100","rgb":[[0.012702,0.027254,0.018631],[0.013423,0.026665,0.014889],[0.013233,0.025901,0.017673],[0.01319,0.026779,0.025636],[0.011019,0.028533,0.014508],[0.010414,0.028734,0.011428],[0.010448,0.028688,0.011718],[0.011759,0.027413,0.021851],[0.010983,0.028625,0.015303],[0.010464,0.028876,0.011855],[0.010356,0.028761,0.012092],[0.011646,0.027331,0.021081],[0.037017,0.042263,0.05864],[0.036441,0.043106,0.054399],[0.036792,0.043111,0.055062],[0.051596,0.052283,0.071266]]},{"date":"201801160110","rgb":[[0.012429,0.028017,0.014767],[0.016769,0.02518,0.011614],[0.015123,0.025868,0.014987],[0.013491,0.027278,0.022365],[0.010848,0.028909,0.013231],[0.010392,0.028852,0.0099894],[0.010396,0.028765,0.011016],[0.012191,0.02728,0.021119],[0.010745,0.029016,0.012801],[0.010394,0.028862,0.0098485],[0.010339,0.028751,0.011514],[0.011564,0.027979,0.019117],[0.037322,0.043211,0.057427],[0.036351,0.043158,0.053492],[0.036778,0.042869,0.056394],[0.05207,0.052614,0.070003]]},{"date":"201801160120","rgb":[[0.012652,0.027233,0.016905],[0.015105,0.025223,0.017716],[0.016341,0.024968,0.01579],[0.013224,0.027165,0.023185],[0.010766,0.028742,0.013405],[0.010406,0.028787,0.010369],[0.010413,0.02874,0.010986],[0.012003,0.027749,0.020333],[0.010976,0.028608,0.014833],[0.010459,0.028917,0.011322],[0.010419,0.028505,0.013049],[0.012285,0.027371,0.021271],[0.037061,0.04318,0.056212],[0.036434,0.043252,0.053253],[0.036868,0.042992,0.055081],[0.052009,0.05264,0.070177]]},{"date":"201801160130","rgb":[[0.012564,0.027887,0.017428],[0.012439,0.02703,0.01665],[0.013193,0.025532,0.020107],[0.014199,0.026915,0.023691],[0.010852,0.028983,0.013405],[0.010417,0.028798,0.011504],[0.010353,0.028202,0.012682],[0.011836,0.027637,0.0201],[0.011012,0.029025,0.013481],[0.010417,0.028848,0.011267],[0.010345,0.028665,0.01185],[0.011319,0.027628,0.018949],[0.037373,0.043179,0.056328],[0.036695,0.043234,0.054376],[0.036771,0.04302,0.055034],[0.05126,0.052908,0.068578]]},{"date":"201801160140","rgb":[[0.012357,0.027878,0.018276],[0.012188,0.027238,0.015862],[0.012058,0.027074,0.017539],[0.013774,0.026688,0.025556],[0.011385,0.028527,0.015614],[0.010451,0.028803,0.011399],[0.010462,0.028525,0.012847],[0.012586,0.027181,0.023516],[0.011302,0.028641,0.015783],[0.010474,0.028797,0.012178],[0.010457,0.028693,0.013298],[0.012182,0.026989,0.023279],[0.037816,0.042986,0.057859],[0.036656,0.043241,0.054514],[0.037001,0.042974,0.056566],[0.052898,0.052249,0.071869]]},{"date":"201801160150","rgb":[[0.012489,0.026946,0.020632],[0.011402,0.027017,0.017331],[0.011173,0.026663,0.01885],[0.013637,0.026972,0.02527],[0.011109,0.028394,0.015742],[0.010469,0.028757,0.01236],[0.010421,0.028486,0.013051],[0.011862,0.026886,0.0246],[0.011256,0.028657,0.016089],[0.010519,0.028833,0.012215],[0.010525,0.028751,0.013249],[0.011941,0.027208,0.021568],[0.037729,0.042993,0.058608],[0.036688,0.042951,0.055771],[0.036896,0.042642,0.057489],[0.052179,0.051983,0.072531]]},{"date":"201801160200","rgb":[[0.011947,0.027352,0.018929],[0.013669,0.025777,0.018333],[0.013271,0.024927,0.021476],[0.013102,0.026696,0.025783],[0.011015,0.028382,0.014931],[0.01038,0.028684,0.011087],[0.010424,0.027552,0.01546],[0.012013,0.027265,0.022396],[0.011147,0.028326,0.016075],[0.01038,0.028615,0.012595],[0.010408,0.028484,0.013133],[0.012112,0.026845,0.024829],[0.03798,0.04234,0.060942],[0.036763,0.043145,0.055306],[0.037139,0.042618,0.058092],[0.052974,0.052343,0.073265]]},{"date":"201801160210","rgb":[[0.012248,0.027609,0.018983],[0.012452,0.02655,0.017556],[0.012182,0.02687,0.017297],[0.013775,0.027027,0.0251],[0.011047,0.028438,0.015755],[0.010472,0.028815,0.011584],[0.010489,0.028169,0.013655],[0.01224,0.026936,0.023654],[0.011454,0.028604,0.016979],[0.010556,0.028867,0.012307],[0.010447,0.028601,0.013103],[0.012008,0.026625,0.023011],[0.037937,0.042461,0.059615],[0.036589,0.043041,0.055068],[0.036778,0.042373,0.0571],[0.052083,0.052407,0.071349]]},{"date":"201801160220","rgb":[[0.011923,0.027535,0.017636],[0.015952,0.025242,0.016489],[0.013751,0.025562,0.018239],[0.013379,0.026799,0.02266],[0.010887,0.028453,0.014457],[0.010436,0.028854,0.010709],[0.010385,0.028666,0.011764],[0.011571,0.027458,0.020279],[0.011324,0.028222,0.017193],[0.010468,0.028833,0.012018],[0.010432,0.028668,0.012349],[0.011713,0.027594,0.020562],[0.037368,0.042361,0.059544],[0.036552,0.042991,0.054537],[0.036777,0.042917,0.054122],[0.051305,0.052477,0.06984]]},{"date":"201801160230","rgb":[[0.012448,0.027643,0.01875],[0.01253,0.027184,0.015879],[0.012093,0.026728,0.0195],[0.014406,0.026696,0.026385],[0.011146,0.027708,0.018395],[0.010419,0.028685,0.011906],[0.010572,0.028001,0.014749],[0.012456,0.02691,0.024562],[0.011528,0.028285,0.016911],[0.010544,0.028843,0.012338],[0.010598,0.028483,0.014228],[0.012339,0.027326,0.022581],[0.037648,0.042742,0.058557],[0.036465,0.042967,0.054999],[0.036982,0.042579,0.058533],[0.052559,0.052285,0.072696]]},{"date":"201801160240","rgb":[[0.013013,0.027206,0.017568],[0.013321,0.02694,0.015235],[0.012318,0.026842,0.017334],[0.014525,0.026971,0.023534],[0.010947,0.0289,0.013133],[0.010476,0.028877,0.011118],[0.010455,0.028805,0.011219],[0.012393,0.02792,0.020491],[0.011202,0.028709,0.015532],[0.010456,0.028852,0.012072],[0.010504,0.028706,0.012279],[0.012273,0.027751,0.020358],[0.037405,0.043216,0.057588],[0.036476,0.043239,0.054239],[0.036722,0.043197,0.055051],[0.052092,0.053044,0.068543]]},{"date":"201801160250","rgb":[[0.012724,0.027122,0.020424],[0.016,0.025229,0.017381],[0.014365,0.026049,0.017516],[0.014245,0.026623,0.026667],[0.011072,0.028444,0.015231],[0.010464,0.028812,0.011622],[0.010446,0.02855,0.012306],[0.012537,0.027135,0.023365],[0.01106,0.028627,0.014781],[0.010376,0.028775,0.010981],[0.010412,0.028587,0.01229],[0.012094,0.027309,0.021152],[0.03742,0.042631,0.058969],[0.036586,0.043022,0.055191],[0.036914,0.042668,0.05619],[0.052611,0.052319,0.072261]]},{"date":"201801160300","rgb":[[0.012871,0.027845,0.016748],[0.013109,0.026838,0.015671],[0.011905,0.026585,0.017521],[0.013487,0.027106,0.024704],[0.011102,0.028624,0.014586],[0.01043,0.028794,0.010767],[0.010365,0.028673,0.01167],[0.012141,0.027524,0.020539],[0.0111,0.028526,0.015245],[0.010442,0.028777,0.012284],[0.010401,0.028696,0.012346],[0.011782,0.027629,0.02076],[0.037472,0.042847,0.058163],[0.036517,0.043244,0.054038],[0.036933,0.04311,0.054961],[0.052283,0.05264,0.069331]]},{"date":"201801160310","rgb":[[0.012953,0.027256,0.021802],[0.012928,0.027537,0.015869],[0.01409,0.026213,0.019753],[0.015586,0.026789,0.026314],[0.011294,0.028264,0.016381],[0.010672,0.028924,0.012716],[0.010573,0.028305,0.014286],[0.012984,0.027149,0.024007],[0.011414,0.02874,0.015639],[0.01068,0.028896,0.013139],[0.010536,0.028616,0.012975],[0.012462,0.026913,0.024286],[0.037886,0.04302,0.05847],[0.036758,0.04336,0.055015],[0.037071,0.043098,0.056957],[0.052755,0.052362,0.071824]]},{"date":"201801160320","rgb":[[0.013088,0.027883,0.019006],[0.013329,0.026362,0.01721],[0.012775,0.026629,0.018551],[0.015272,0.026571,0.026562],[0.011294,0.027815,0.018268],[0.010447,0.028677,0.012836],[0.01062,0.028543,0.013734],[0.012778,0.027221,0.024414],[0.011683,0.02864,0.017216],[0.01044,0.02878,0.012358],[0.010487,0.028705,0.01301],[0.012349,0.027591,0.022274],[0.038158,0.042941,0.059064],[0.036992,0.042936,0.056654],[0.0374,0.042472,0.059419],[0.053331,0.052314,0.074255]]},{"date":"201801160330","rgb":[[0.013094,0.028131,0.017118],[0.013561,0.026827,0.01542],[0.013551,0.02718,0.015488],[0.01491,0.027004,0.025187],[0.010917,0.028739,0.014188],[0.010458,0.028792,0.011432],[0.0104,0.028624,0.012193],[0.012595,0.027463,0.022588],[0.011482,0.028887,0.014642],[0.01051,0.028825,0.01238],[0.010553,0.028528,0.013735],[0.012498,0.027582,0.022511],[0.037978,0.042849,0.058607],[0.036736,0.043286,0.054861],[0.036925,0.04262,0.057088],[0.052682,0.052598,0.071918]]},{"date":"201801160340","rgb":[[0.012893,0.027609,0.019796],[0.01254,0.027559,0.01442],[0.012634,0.026895,0.018596],[0.014573,0.026834,0.027015],[0.011557,0.027817,0.018539],[0.010533,0.028772,0.013277],[0.01059,0.028644,0.013183],[0.012573,0.027235,0.024354],[0.011947,0.028292,0.01785],[0.01047,0.028756,0.012328],[0.010593,0.028218,0.014614],[0.012171,0.027093,0.024242],[0.037718,0.04278,0.05765],[0.036676,0.043291,0.054722],[0.037022,0.042922,0.05593],[0.052107,0.052628,0.071021]]},{"date":"201801160350","rgb":[[0.013168,0.027929,0.016683],[0.013181,0.026894,0.014491],[0.011809,0.026138,0.019345],[0.01452,0.026502,0.025506],[0.011298,0.029111,0.014126],[0.010396,0.028846,0.010018],[0.010399,0.02837,0.012633],[0.012185,0.02765,0.021597],[0.011518,0.028971,0.015083],[0.010462,0.028881,0.011265],[0.010452,0.028698,0.012596],[0.012363,0.027193,0.022223],[0.037198,0.04294,0.058533],[0.036489,0.043238,0.053813],[0.036766,0.042813,0.056275],[0.052264,0.052638,0.071151]]},{"date":"201801160400","rgb":[[0.01202,0.027921,0.017845],[0.012368,0.026932,0.01634],[0.014525,0.025632,0.018313],[0.014196,0.026936,0.024863],[0.011109,0.028522,0.014585],[0.010441,0.028766,0.011898],[0.01054,0.028582,0.013052],[0.012261,0.027058,0.02405],[0.011364,0.028821,0.015986],[0.010508,0.028831,0.01245],[0.010444,0.028576,0.012516],[0.011794,0.027309,0.021671],[0.037562,0.042617,0.058434],[0.036651,0.043392,0.054433],[0.036841,0.042821,0.055662],[0.05267,0.05233,0.071644]]},{"date":"201801160410","rgb":[[0.012586,0.027502,0.018713],[0.013977,0.026193,0.017061],[0.013142,0.026298,0.017679],[0.014157,0.026972,0.024291],[0.011199,0.028456,0.01585],[0.010476,0.028815,0.011835],[0.010386,0.028584,0.011844],[0.01197,0.027689,0.019914],[0.011459,0.028915,0.015327],[0.01043,0.028771,0.012072],[0.010419,0.028757,0.011753],[0.011853,0.028082,0.019201],[0.037547,0.042647,0.05856],[0.036674,0.043108,0.055061],[0.036706,0.043124,0.055312],[0.051719,0.052575,0.0697]]},{"date":"201801160420","rgb":[[0.012858,0.027494,0.01974],[0.013211,0.027292,0.013257],[0.014218,0.026033,0.017584],[0.013736,0.026775,0.02446],[0.011042,0.028388,0.015518],[0.010463,0.028849,0.011029],[0.010383,0.028707,0.011919],[0.012303,0.027288,0.022369],[0.011309,0.028628,0.015947],[0.010456,0.028688,0.012445],[0.010455,0.028678,0.012252],[0.011915,0.027288,0.021211],[0.037588,0.042822,0.057669],[0.036544,0.043186,0.054059],[0.036836,0.0433,0.055138],[0.052322,0.052834,0.070162]]},{"date":"201801160430","rgb":[[0.012781,0.027587,0.016804],[0.013437,0.026233,0.016324],[0.013998,0.025121,0.020135],[0.013804,0.027157,0.02351],[0.010942,0.028852,0.013051],[0.010412,0.028776,0.011127],[0.010428,0.028531,0.01235],[0.012494,0.027451,0.021884],[0.011215,0.02886,0.014559],[0.010345,0.028742,0.011849],[0.010419,0.028375,0.013729],[0.012178,0.027365,0.021989],[0.037592,0.042944,0.058595],[0.036558,0.043218,0.053784],[0.036971,0.042778,0.056691],[0.052882,0.052454,0.070491]]},{"date":"201801160440","rgb":[[0.012414,0.027765,0.01569],[0.013416,0.026309,0.015422],[0.012794,0.026075,0.017421],[0.013339,0.02691,0.022953],[0.010836,0.028923,0.012845],[0.01037,0.028811,0.0097312],[0.010389,0.028741,0.011444],[0.01177,0.027375,0.02079],[0.010885,0.028122,0.015792],[0.010353,0.028789,0.010506],[0.010366,0.028722,0.011763],[0.011554,0.027398,0.020045],[0.037333,0.04208,0.059744],[0.036459,0.043167,0.054236],[0.036728,0.042519,0.056756],[0.051822,0.052352,0.070919]]},{"date":"201801160450","rgb":[[0.01251,0.027348,0.0199],[0.012137,0.026513,0.017935],[0.013606,0.025385,0.02011],[0.014055,0.026681,0.026953],[0.011408,0.028817,0.015737],[0.010563,0.028832,0.011442],[0.010512,0.028568,0.012891],[0.013069,0.027149,0.023949],[0.011399,0.028684,0.016647],[0.010857,0.029065,0.012636],[0.010772,0.028783,0.013531],[0.012178,0.027521,0.02159],[0.037601,0.042615,0.058951],[0.036892,0.043289,0.054375],[0.037402,0.043337,0.056358],[0.051775,0.052597,0.070216]]},{"date":"201801160500","rgb":[[0.012658,0.02684,0.021464],[0.012318,0.026663,0.018428],[0.013204,0.025471,0.021261],[0.014096,0.026914,0.025499],[0.011216,0.027876,0.018131],[0.010551,0.028797,0.01314],[0.010466,0.026427,0.018855],[0.012274,0.027084,0.024916],[0.012043,0.027276,0.022043],[0.010769,0.028833,0.01403],[0.010718,0.027247,0.017797],[0.012212,0.026729,0.025013],[0.037893,0.042258,0.060404],[0.036876,0.042775,0.056913],[0.03698,0.042516,0.057534],[0.051973,0.052409,0.072079]]},{"date":"201801160510","rgb":[[0.013455,0.027446,0.01875],[0.013144,0.027651,0.01525],[0.013032,0.027103,0.017227],[0.016356,0.026457,0.026527],[0.011564,0.02704,0.020997],[0.010671,0.028662,0.013847],[0.01073,0.027772,0.016262],[0.013673,0.02697,0.025848],[0.011893,0.027538,0.020382],[0.010746,0.02884,0.013642],[0.010774,0.028487,0.014059],[0.013113,0.026987,0.023565],[0.03786,0.041924,0.06203],[0.037137,0.043096,0.05615],[0.037372,0.042733,0.058274],[0.05296,0.052196,0.072412]]},{"date":"201801160520","rgb":[[0.012887,0.028037,0.018628],[0.014295,0.026278,0.017294],[0.013904,0.026033,0.01911],[0.014642,0.026481,0.025675],[0.011481,0.028247,0.017755],[0.010534,0.028761,0.012584],[0.010469,0.028534,0.013231],[0.012347,0.027121,0.023299],[0.011854,0.027815,0.019803],[0.010588,0.028704,0.013663],[0.01075,0.028124,0.01598],[0.012783,0.027074,0.02447],[0.038155,0.042313,0.061702],[0.037044,0.042714,0.05708],[0.0375,0.041704,0.061012],[0.05286,0.052212,0.073011]]},{"date":"201801160530","rgb":[[0.013094,0.026946,0.022698],[0.014543,0.025394,0.02195],[0.013319,0.026279,0.023006],[0.015027,0.026775,0.028738],[0.011657,0.027818,0.019489],[0.010688,0.027922,0.015649],[0.011028,0.026383,0.021023],[0.013759,0.026872,0.027128],[0.012132,0.027276,0.022668],[0.010835,0.028207,0.015816],[0.01071,0.027152,0.017911],[0.012317,0.027026,0.024989],[0.03788,0.041952,0.06198],[0.036823,0.042259,0.057975],[0.037375,0.041726,0.060702],[0.052521,0.05237,0.073899]]},{"date":"201801160540","rgb":[[0.013523,0.027157,0.023315],[0.012969,0.027474,0.017336],[0.012556,0.026939,0.020776],[0.016293,0.026668,0.027549],[0.01291,0.028299,0.018827],[0.010766,0.028857,0.01363],[0.01105,0.028268,0.015522],[0.014386,0.027233,0.025093],[0.013011,0.027787,0.021276],[0.011044,0.028756,0.015085],[0.011211,0.02751,0.018662],[0.013072,0.026958,0.024863],[0.038167,0.042387,0.060992],[0.036915,0.042399,0.057999],[0.037237,0.042179,0.059078],[0.052439,0.052305,0.072024]]},{"date":"201801160550","rgb":[[0.013567,0.027401,0.023498],[0.014184,0.026112,0.020915],[0.013877,0.02712,0.022044],[0.017578,0.026395,0.030407],[0.012773,0.02786,0.020826],[0.010996,0.026609,0.020403],[0.011361,0.026735,0.021522],[0.015748,0.027045,0.025873],[0.012622,0.02764,0.022531],[0.011244,0.028144,0.016935],[0.011701,0.027764,0.019332],[0.013237,0.027065,0.024056],[0.038423,0.042483,0.060752],[0.037218,0.042242,0.058626],[0.037266,0.042215,0.059875],[0.052581,0.05247,0.072]]},{"date":"201801160600","rgb":[[0.013438,0.027576,0.022178],[0.01213,0.026665,0.021386],[0.013127,0.027091,0.022515],[0.017734,0.026632,0.030269],[0.011984,0.028081,0.018301],[0.010607,0.028317,0.014204],[0.010949,0.028135,0.015989],[0.014977,0.026835,0.026342],[0.012129,0.027743,0.020548],[0.010669,0.028761,0.013446],[0.010664,0.028199,0.015207],[0.013363,0.027213,0.025253],[0.038157,0.042134,0.062673],[0.037012,0.04286,0.056556],[0.037273,0.042449,0.058912],[0.053429,0.052168,0.075276]]},{"date":"201801160610","rgb":[[0.012643,0.027773,0.018607],[0.013121,0.027223,0.01533],[0.014496,0.026348,0.016748],[0.015319,0.026723,0.025888],[0.011493,0.028318,0.017211],[0.010664,0.02899,0.012796],[0.010672,0.028617,0.013942],[0.013052,0.027176,0.02432],[0.012012,0.028787,0.017472],[0.010581,0.028897,0.012588],[0.010574,0.028755,0.012819],[0.012794,0.027424,0.022027],[0.038803,0.042616,0.059558],[0.036996,0.043253,0.055651],[0.037395,0.0433,0.056186],[0.053408,0.052218,0.072674]]},{"date":"201801160620","rgb":[[0.01241,0.026824,0.023522],[0.011669,0.02643,0.021712],[0.012026,0.026396,0.021643],[0.015224,0.026434,0.028949],[0.011572,0.027039,0.021858],[0.010837,0.026025,0.021767],[0.010723,0.026551,0.019888],[0.013072,0.02691,0.025867],[0.012323,0.027358,0.023507],[0.010873,0.026196,0.021518],[0.01094,0.02689,0.019742],[0.012377,0.026952,0.025565],[0.038525,0.041923,0.062796],[0.037001,0.042069,0.059611],[0.037399,0.041457,0.061516],[0.052974,0.052371,0.074559]]},{"date":"201801160630","rgb":[[0.014958,0.026786,0.041155],[0.013387,0.027015,0.035138],[0.01323,0.027045,0.034456],[0.015726,0.027278,0.040752],[0.01552,0.027325,0.046228],[0.013867,0.027098,0.041801],[0.012868,0.026977,0.038729],[0.014397,0.027395,0.038653],[0.018131,0.028077,0.055983],[0.018909,0.028015,0.064229],[0.015632,0.027392,0.048722],[0.013404,0.026986,0.030097],[0.039466,0.042296,0.073553],[0.03836,0.041591,0.072288],[0.038976,0.041602,0.070591],[0.052911,0.052444,0.074891]]},{"date":"201801160640","rgb":[[0.041798,0.034249,0.22242],[0.03353,0.033732,0.17342],[0.03031,0.03298,0.15352],[0.029395,0.032904,0.14114],[0.051934,0.034676,0.31195],[0.045714,0.033649,0.24855],[0.038994,0.034958,0.20148],[0.030602,0.03306,0.1473],[0.070986,0.050769,0.39414],[0.053148,0.038988,0.30928],[0.038486,0.033489,0.20005],[0.01998,0.028964,0.069963],[0.052962,0.046326,0.15459],[0.050218,0.045715,0.1438],[0.044703,0.044015,0.10983],[0.0568,0.053459,0.094658]]},{"date":"201801160650","rgb":[[0.10812,0.08647,0.55583],[0.13875,0.15236,0.6013],[0.12689,0.1277,0.55983],[0.10858,0.06519,0.53296],[0.13329,0.14247,0.60526],[0.15339,0.17724,0.62428],[0.15101,0.16413,0.59669],[0.10673,0.091075,0.47135],[0.092432,0.069007,0.47259],[0.19207,0.23407,0.72161],[0.19385,0.21131,0.67612],[0.05511,0.056476,0.21976],[0.069386,0.051259,0.23877],[0.097009,0.092677,0.32125],[0.13164,0.15331,0.42101],[0.066998,0.056655,0.16412]]},{"date":"201801160700","rgb":[[0.29665,0.47318,0.9937],[0.28342,0.46816,0.9951],[0.28365,0.45179,0.99517],[0.27713,0.40478,0.99472],[0.33315,0.53251,0.9935],[0.33023,0.53484,0.99477],[0.319,0.52349,0.99492],[0.25563,0.37907,0.87357],[0.44642,0.70326,0.99443],[0.38995,0.6197,0.99451],[0.38309,0.6543,0.99393],[0.14349,0.18434,0.51494],[0.28834,0.37145,0.59505],[0.2435,0.33902,0.60221],[0.20771,0.27874,0.56729],[0.1331,0.080004,0.42971]]},{"date":"201801160710","rgb":[[0.3313,0.50957,0.99311],[0.34924,0.54754,0.99406],[0.33219,0.49485,0.99426],[0.34744,0.4914,0.99224],[0.40118,0.66946,0.99408],[0.39877,0.64018,0.99482],[0.38779,0.59751,0.99476],[0.33858,0.48884,0.8746],[0.49247,0.77137,0.99415],[0.45652,0.71124,0.99468],[0.40012,0.60354,0.9928],[0.16027,0.17461,0.52104],[0.29881,0.37281,0.64942],[0.38757,0.45178,0.64572],[0.23661,0.2896,0.58645],[0.16931,0.11928,0.50461]]},{"date":"201801160730","rgb":[[0.93808,0.99147,0.99423],[0.98638,0.98056,0.99661],[0.9948,0.97688,1],[0.99206,0.97787,0.99998],[0.93927,0.99107,0.99304],[0.98431,0.98426,0.98463],[0.98473,0.98237,0.99193],[0.84452,0.87115,0.98322],[0.96348,0.98893,0.98872],[0.9836,0.98464,0.98449],[0.97348,0.98581,0.9855],[0.49474,0.66308,0.97251],[0.51855,0.61897,0.91676],[0.61454,0.67278,0.91789],[0.59037,0.65896,0.91833],[0.40456,0.5927,0.92099]]},{"date":"201801160740","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99589,0.97657,0.99989],[0.93849,0.9769,0.99516],[0.99608,0.97647,1],[0.99435,0.97757,0.99778],[0.98702,0.98243,0.9882],[0.83188,0.98364,0.99282],[0.71088,0.88971,0.93868],[0.76873,0.88989,0.9283],[0.77789,0.89015,0.93048],[0.83805,0.89604,0.93747]]},{"date":"201801160750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9952,0.97674,0.99994],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99324,0.97745,1],[0.98601,0.97985,1],[0.93094,0.90508,0.95161],[0.927,0.90662,0.95161],[0.922,0.90827,0.95161],[0.92057,0.90708,0.94474]]},{"date":"201801160800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.9034,0.94485]]},{"date":"201801160830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90341,0.94493]]},{"date":"201801160840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90342,0.94485]]},{"date":"201801160850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90337,0.94479]]},{"date":"201801160900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90338,0.94483]]},{"date":"201801160910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90337,0.94486]]},{"date":"201801160920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99481,0.97727,0.99844],[0.98249,0.98113,0.99429],[0.93128,0.9048,0.95161],[0.92803,0.90709,0.94792],[0.92167,0.91148,0.93909],[0.92063,0.91058,0.93105]]},{"date":"201801160930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90339,0.94492]]},{"date":"201801160940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90337,0.94489]]},{"date":"201801160950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90336,0.94478]]},{"date":"201801161000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90335,0.94485]]},{"date":"201801161010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90333,0.9449]]},{"date":"201801161020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94484]]},{"date":"201801161030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90335,0.94493]]},{"date":"201801161040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90337,0.94485]]},{"date":"201801161050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99531,0.97674,1],[0.99582,0.97656,1],[0.99608,0.97647,1],[0.9924,0.97771,1],[0.98548,0.98002,1],[0.98652,0.97968,1],[0.99384,0.97724,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92138,0.90675,0.94477]]},{"date":"201801161100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99582,0.97657,1],[0.99607,0.97647,1],[0.99608,0.97647,1],[0.99322,0.97745,1],[0.98601,0.97985,1],[0.98785,0.97924,1],[0.99486,0.97689,1],[0.92199,0.90827,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92196,0.90659,0.94488]]},{"date":"201801161110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90334,0.94485]]},{"date":"201801161120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90335,0.94488]]},{"date":"201801161130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90335,0.94489]]},{"date":"201801161140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90336,0.94488]]},{"date":"201801161150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90331,0.94483]]},{"date":"201801161200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94483]]},{"date":"201801161210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99512,0.97681,1],[0.99577,0.97657,1],[0.99608,0.97647,1],[0.99175,0.97795,1],[0.98514,0.98013,1],[0.98645,0.97969,1],[0.99375,0.97724,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92137,0.90678,0.94485]]},{"date":"201801161220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99541,0.9767,1],[0.99596,0.97651,1],[0.99608,0.97647,1],[0.99252,0.97769,1],[0.98553,0.98001,1],[0.98705,0.97949,1],[0.99432,0.97706,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92158,0.90673,0.94489]]},{"date":"201801161230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99533,0.97673,1],[0.99577,0.97657,1],[0.99608,0.97647,1],[0.9924,0.97771,1],[0.98548,0.98002,1],[0.98645,0.97969,1],[0.99375,0.97724,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92139,0.90681,0.94489]]},{"date":"201801161240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90336,0.9449]]},{"date":"201801161250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.94479]]},{"date":"201801161300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9941,0.97716,1],[0.99487,0.97689,1],[0.99608,0.97647,1],[0.99019,0.97846,1],[0.98458,0.98031,1],[0.98512,0.98014,1],[0.99199,0.97785,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92117,0.90687,0.94484]]},{"date":"201801161310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90335,0.94493]]},{"date":"201801161320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90335,0.94493]]},{"date":"201801161330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99257,0.97761,0.9998],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99166,0.97843,0.99832],[0.96452,0.98472,0.99031],[0.9309,0.90504,0.95161],[0.92435,0.90858,0.94763],[0.92067,0.91189,0.93899],[0.92072,0.91054,0.9311]]},{"date":"201801161340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90337,0.94494]]},{"date":"201801161350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.9448]]},{"date":"201801161400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99552,0.97667,1],[0.99583,0.97656,1],[0.99608,0.97647,1],[0.99252,0.97769,1],[0.98553,0.98001,1],[0.98652,0.97968,1],[0.99384,0.97724,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92143,0.9068,0.94485]]},{"date":"201801161410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90337,0.94491]]},{"date":"201801161420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90337,0.94493]]},{"date":"201801161430","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99566,0.97662,1],[0.99598,0.97651,1],[0.99608,0.97647,1],[0.99314,0.97746,1],[0.98593,0.97986,1],[0.98715,0.97947,1],[0.99438,0.97705,1],[0.92195,0.90829,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92169,0.90674,0.94491]]},{"date":"201801161440","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90338,0.94493]]},{"date":"201801161450","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90335,0.94481]]},{"date":"201801161500","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90333,0.9448]]},{"date":"201801161510","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99582,0.97657,1],[0.99607,0.97647,1],[0.99608,0.97647,1],[0.99322,0.97745,1],[0.98601,0.97985,1],[0.98783,0.97925,1],[0.99486,0.97689,1],[0.92199,0.90827,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92194,0.90657,0.94482]]},{"date":"201801161520","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90332,0.94487]]},{"date":"201801161530","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99095,0.9778,0.9998],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99166,0.97838,0.99844],[0.95435,0.98426,0.99772],[0.931,0.90499,0.95161],[0.92435,0.90848,0.94794],[0.91692,0.91227,0.94],[0.91803,0.90747,0.94417]]},{"date":"201801161540","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.98817,0.97799,0.99972],[0.99608,0.97647,1],[0.99607,0.97647,1],[0.99131,0.97906,0.99627],[0.9342,0.9871,0.99342],[0.93043,0.90538,0.9515],[0.92394,0.90931,0.94502],[0.91224,0.91291,0.93902],[0.91387,0.90852,0.94323]]},{"date":"201801161550","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9736,0.97905,0.99886],[0.99608,0.97647,1],[0.99581,0.97659,0.99988],[0.98993,0.98025,0.99333],[0.87158,0.99003,0.99143],[0.92524,0.90806,0.95003],[0.91914,0.91121,0.94227],[0.8977,0.9137,0.93912],[0.89995,0.91219,0.93234]]},{"date":"201801161600","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99583,0.97663,0.99969],[0.92284,0.97219,0.99391],[0.99608,0.97647,1],[0.99387,0.97792,0.9971],[0.9838,0.98288,0.98731],[0.71689,0.92564,0.98983],[0.74554,0.91309,0.94664],[0.81648,0.91093,0.93914],[0.81128,0.89826,0.93727],[0.86028,0.89987,0.94209]]},{"date":"201801161610","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99565,0.97674,0.99945],[0.85482,0.88044,0.98696],[0.99608,0.97647,1],[0.99378,0.97797,0.99661],[0.97683,0.97688,0.9856],[0.48414,0.58872,0.95314],[0.57618,0.60464,0.93759],[0.66107,0.66522,0.92849],[0.62462,0.63469,0.91718],[0.72765,0.82576,0.93428]]},{"date":"201801161620","rgb":[[0.43857,0.91057,0.99589],[0.4787,0.99323,0.99864],[0.47273,0.89979,0.99665],[0.43653,0.7459,0.99477],[0.42688,0.85774,0.99653],[0.46318,0.91787,0.99695],[0.47318,0.89629,0.99706],[0.36399,0.59477,0.86761],[0.41668,0.77934,0.9958],[0.4292,0.76515,0.99663],[0.4453,0.7779,0.98726],[0.15278,0.19038,0.50018],[0.24787,0.34571,0.61998],[0.28031,0.35874,0.66854],[0.26068,0.30701,0.62255],[0.252,0.26662,0.75]]},{"date":"201801161630","rgb":[[0.20362,0.26036,0.92707],[0.20985,0.28452,0.92503],[0.2273,0.29965,0.96376],[0.25803,0.32676,0.99396],[0.23106,0.33125,0.97739],[0.2374,0.34577,0.97934],[0.29413,0.42062,0.99408],[0.24834,0.34309,0.82938],[0.20028,0.24115,0.77798],[0.20851,0.2673,0.80081],[0.25727,0.33354,0.88576],[0.090825,0.1142,0.32029],[0.10135,0.094428,0.33839],[0.11764,0.11145,0.3814],[0.12002,0.11241,0.3711],[0.10861,0.068802,0.38101]]},{"date":"201801161640","rgb":[[0.048412,0.034822,0.31089],[0.048009,0.034912,0.30861],[0.053445,0.037639,0.34682],[0.076898,0.045665,0.41819],[0.050318,0.038018,0.34759],[0.049816,0.039667,0.33881],[0.063296,0.051979,0.37356],[0.077985,0.066063,0.36239],[0.06532,0.045592,0.40679],[0.068253,0.061266,0.39349],[0.086833,0.096205,0.43946],[0.034198,0.043841,0.12918],[0.06311,0.052246,0.20652],[0.069112,0.063414,0.24285],[0.07335,0.074731,0.24056],[0.064612,0.055111,0.13809]]},{"date":"201801161650","rgb":[[0.018195,0.027781,0.051369],[0.016534,0.027667,0.046467],[0.017574,0.027647,0.046688],[0.024109,0.028076,0.05463],[0.017498,0.028108,0.049427],[0.015903,0.027316,0.045888],[0.015847,0.027382,0.044734],[0.019702,0.027575,0.043042],[0.02031,0.028947,0.060288],[0.017998,0.028265,0.049087],[0.017379,0.028325,0.04862],[0.014866,0.027241,0.031461],[0.041866,0.042483,0.080692],[0.040489,0.042335,0.07676],[0.040206,0.041862,0.072394],[0.055155,0.052153,0.081374]]},{"date":"201801161700","rgb":[[0.012627,0.027005,0.027584],[0.012687,0.026407,0.023379],[0.013199,0.026201,0.025574],[0.015662,0.027083,0.035897],[0.012306,0.026946,0.029363],[0.011488,0.026607,0.024443],[0.011704,0.026691,0.026282],[0.01492,0.026998,0.033047],[0.01401,0.02711,0.034975],[0.012191,0.026902,0.029129],[0.012346,0.027054,0.031083],[0.012917,0.026961,0.026627],[0.038591,0.042087,0.064674],[0.03744,0.041553,0.064861],[0.037655,0.041633,0.065625],[0.052431,0.051737,0.073252]]},{"date":"201801161710","rgb":[[0.01192,0.02703,0.021657],[0.011385,0.026392,0.01952],[0.011767,0.025781,0.021522],[0.014978,0.026816,0.02775],[0.011346,0.027402,0.019699],[0.010422,0.027839,0.015033],[0.010432,0.025613,0.021309],[0.01393,0.026881,0.024349],[0.01174,0.027149,0.022147],[0.010583,0.027536,0.016707],[0.01069,0.026312,0.020354],[0.012207,0.026945,0.023351],[0.038349,0.04219,0.061336],[0.036812,0.042154,0.058164],[0.036797,0.042145,0.058868],[0.052356,0.052425,0.070601]]},{"date":"201801161720","rgb":[[0.014974,0.027342,0.025967],[0.013975,0.026953,0.023274],[0.014522,0.027183,0.025244],[0.019745,0.026234,0.031552],[0.013748,0.027724,0.023414],[0.011907,0.028147,0.019375],[0.012158,0.02718,0.023144],[0.016698,0.026413,0.027456],[0.013845,0.027628,0.021833],[0.011582,0.028871,0.01545],[0.011751,0.02748,0.020584],[0.012421,0.027431,0.022824],[0.038801,0.042702,0.059947],[0.037239,0.043075,0.056508],[0.038011,0.042161,0.060496],[0.053001,0.052254,0.071669]]},{"date":"201801161730","rgb":[[0.013009,0.027352,0.020535],[0.013501,0.02676,0.016086],[0.01404,0.025886,0.019349],[0.016297,0.026792,0.026548],[0.01165,0.028311,0.018108],[0.010723,0.028934,0.013037],[0.01073,0.028222,0.014603],[0.015252,0.026857,0.025183],[0.011988,0.028179,0.020025],[0.010721,0.028867,0.014048],[0.011155,0.028057,0.017085],[0.012698,0.027158,0.024702],[0.037995,0.042475,0.061138],[0.037,0.042817,0.056955],[0.037377,0.042291,0.059166],[0.053202,0.051717,0.073152]]},{"date":"201801161740","rgb":[[0.012475,0.027339,0.019945],[0.015211,0.02568,0.016248],[0.012856,0.026009,0.019585],[0.015654,0.026757,0.026208],[0.011309,0.028387,0.017102],[0.010583,0.028932,0.012404],[0.010429,0.028752,0.012347],[0.013665,0.027341,0.022511],[0.011958,0.027874,0.01908],[0.010621,0.028699,0.013275],[0.010475,0.028585,0.01324],[0.012438,0.026918,0.022912],[0.037965,0.042692,0.06043],[0.037009,0.043383,0.055421],[0.037116,0.042699,0.05777],[0.052627,0.052055,0.071417]]},{"date":"201801161750","rgb":[[0.013074,0.027052,0.02271],[0.012296,0.026278,0.020125],[0.012045,0.026788,0.019327],[0.01557,0.026789,0.026801],[0.012029,0.027207,0.022086],[0.010714,0.028463,0.014393],[0.010554,0.027749,0.015844],[0.014181,0.027017,0.026056],[0.012141,0.02717,0.023303],[0.01108,0.027172,0.019592],[0.011013,0.027333,0.018695],[0.012915,0.026905,0.024461],[0.038143,0.042363,0.06075],[0.037183,0.041462,0.06151],[0.037331,0.042523,0.058756],[0.052962,0.052257,0.072062]]},{"date":"201801161800","rgb":[[0.012012,0.027424,0.017512],[0.015336,0.025874,0.012874],[0.013381,0.02683,0.015446],[0.013938,0.027138,0.024613],[0.010856,0.028206,0.015022],[0.010382,0.028739,0.010621],[0.010401,0.028645,0.012487],[0.013296,0.027323,0.021987],[0.011013,0.028474,0.015291],[0.010437,0.028862,0.010626],[0.010441,0.028721,0.011994],[0.012129,0.027318,0.021222],[0.037422,0.042592,0.058553],[0.036672,0.043211,0.054543],[0.036802,0.042884,0.056375],[0.052235,0.052093,0.07225]]},{"date":"201801161810","rgb":[[0.011888,0.02791,0.018056],[0.011689,0.02729,0.016306],[0.014078,0.02603,0.017171],[0.014366,0.026752,0.026055],[0.011079,0.028531,0.0152],[0.010371,0.028755,0.010807],[0.01045,0.028699,0.011876],[0.014188,0.027416,0.020654],[0.01145,0.028673,0.015943],[0.010472,0.028855,0.011342],[0.010397,0.028766,0.011635],[0.01243,0.027553,0.021221],[0.037813,0.042582,0.060106],[0.03684,0.043256,0.054877],[0.036944,0.043122,0.056009],[0.052905,0.052542,0.071864]]},{"date":"201801161820","rgb":[[0.012336,0.026993,0.019483],[0.012547,0.02716,0.014571],[0.012396,0.026064,0.020522],[0.015485,0.026559,0.02771],[0.011026,0.027671,0.017419],[0.010369,0.028707,0.011757],[0.010446,0.027242,0.01681],[0.0135,0.026722,0.025538],[0.011207,0.028088,0.0171],[0.010414,0.02877,0.012311],[0.010508,0.028511,0.013273],[0.012522,0.02703,0.023854],[0.037612,0.041982,0.061322],[0.036716,0.042943,0.055445],[0.037346,0.042332,0.058599],[0.053055,0.052361,0.073119]]},{"date":"201801161830","rgb":[[0.013799,0.026263,0.018869],[0.015742,0.024665,0.019807],[0.015573,0.024452,0.021348],[0.01524,0.027009,0.026253],[0.010798,0.028291,0.014639],[0.010426,0.028349,0.012799],[0.010395,0.027943,0.013985],[0.013415,0.027053,0.023265],[0.010953,0.028318,0.016137],[0.010392,0.028629,0.012912],[0.010564,0.028165,0.015308],[0.012645,0.027072,0.023573],[0.037674,0.041856,0.060955],[0.036564,0.04296,0.055659],[0.037116,0.041551,0.060633],[0.052654,0.052283,0.073128]]},{"date":"201801161840","rgb":[[0.012882,0.027401,0.019104],[0.01378,0.02678,0.014939],[0.013535,0.026434,0.018259],[0.016295,0.0266,0.028107],[0.011291,0.028391,0.016479],[0.010704,0.028681,0.013491],[0.010676,0.028082,0.014707],[0.014392,0.027182,0.022994],[0.011893,0.027917,0.019693],[0.011232,0.028289,0.017131],[0.010951,0.028028,0.017105],[0.012863,0.026988,0.024351],[0.038005,0.042356,0.059901],[0.037104,0.042773,0.057048],[0.037348,0.042559,0.058496],[0.053108,0.052408,0.071162]]},{"date":"201801161850","rgb":[[0.012394,0.02773,0.016224],[0.012602,0.025989,0.018539],[0.013279,0.026727,0.015773],[0.014424,0.027492,0.023486],[0.010685,0.02885,0.012935],[0.010414,0.028792,0.010732],[0.010391,0.02857,0.012621],[0.01282,0.027471,0.022096],[0.011204,0.02905,0.013726],[0.010385,0.02874,0.011634],[0.010348,0.028585,0.012457],[0.01223,0.027593,0.021309],[0.037532,0.043019,0.057177],[0.036487,0.043192,0.053815],[0.036976,0.042943,0.056529],[0.052377,0.052572,0.070773]]},{"date":"201801161900","rgb":[[0.012111,0.026634,0.020293],[0.012837,0.025154,0.021426],[0.013713,0.025608,0.019111],[0.015288,0.026843,0.025799],[0.010844,0.02765,0.016763],[0.010416,0.027245,0.015865],[0.010389,0.028638,0.012711],[0.013474,0.027073,0.02382],[0.010973,0.028064,0.016474],[0.010387,0.028721,0.012513],[0.010406,0.028316,0.013751],[0.012266,0.026951,0.023595],[0.037434,0.042077,0.060075],[0.03647,0.04266,0.055886],[0.036956,0.042063,0.058959],[0.053131,0.0524,0.072613]]},{"date":"201801161910","rgb":[[0.013337,0.027473,0.016401],[0.019244,0.02372,0.013505],[0.024655,0.023344,0.017002],[0.030699,0.026531,0.028362],[0.010973,0.028938,0.013691],[0.010504,0.028838,0.010007],[0.011346,0.02843,0.011082],[0.021895,0.026031,0.02267],[0.011245,0.028796,0.014522],[0.010368,0.028736,0.011207],[0.010377,0.028753,0.011982],[0.013927,0.027942,0.018723],[0.038019,0.043104,0.056838],[0.03654,0.043231,0.053513],[0.036972,0.04327,0.054353],[0.053959,0.052435,0.069318]]},{"date":"201801161920","rgb":[[0.012388,0.026997,0.020766],[0.015279,0.025622,0.016199],[0.02044,0.025547,0.022049],[0.030859,0.026458,0.034654],[0.010878,0.027992,0.016164],[0.010478,0.028858,0.011819],[0.010692,0.02751,0.016107],[0.021694,0.026451,0.028215],[0.011306,0.027924,0.017986],[0.010444,0.028715,0.012983],[0.010528,0.028131,0.014765],[0.015075,0.026618,0.026033],[0.038251,0.04192,0.062754],[0.036809,0.042514,0.057443],[0.037579,0.042146,0.059897],[0.054762,0.052224,0.073456]]},{"date":"201801161930","rgb":[[0.01272,0.02769,0.017619],[0.01195,0.027627,0.014062],[0.018167,0.026174,0.019102],[0.029564,0.026119,0.031923],[0.011013,0.02847,0.014893],[0.010348,0.028733,0.010321],[0.010811,0.02818,0.013768],[0.022065,0.025948,0.025804],[0.011164,0.028356,0.016641],[0.010369,0.02874,0.011632],[0.010484,0.028645,0.013389],[0.013644,0.02713,0.022751],[0.037621,0.042855,0.058927],[0.036678,0.043206,0.054404],[0.037031,0.042996,0.056273],[0.05398,0.052334,0.072456]]},{"date":"201801161940","rgb":[[0.012443,0.027735,0.01656],[0.014576,0.026226,0.015445],[0.018348,0.026109,0.019267],[0.029242,0.026291,0.031319],[0.010965,0.028694,0.014362],[0.010431,0.028863,0.011469],[0.010729,0.028195,0.013276],[0.021978,0.026068,0.02776],[0.01101,0.028889,0.013989],[0.010454,0.028898,0.011302],[0.01041,0.02874,0.012193],[0.014261,0.027054,0.023014],[0.037611,0.042852,0.057742],[0.036575,0.043151,0.054217],[0.036898,0.042901,0.055384],[0.054004,0.052309,0.072226]]},{"date":"201801161950","rgb":[[0.012482,0.02755,0.018563],[0.014866,0.026225,0.01398],[0.019691,0.025994,0.019643],[0.031343,0.026132,0.031785],[0.011116,0.02842,0.01523],[0.010434,0.028875,0.011287],[0.011104,0.028348,0.012886],[0.02263,0.025974,0.026106],[0.011175,0.028585,0.015355],[0.010389,0.028792,0.011882],[0.010461,0.028303,0.013614],[0.014182,0.02725,0.023505],[0.037911,0.042843,0.058132],[0.036864,0.043189,0.054842],[0.037218,0.042421,0.057542],[0.054972,0.052402,0.072159]]},{"date":"201801162000","rgb":[[0.012785,0.026929,0.020117],[0.01341,0.026926,0.015339],[0.018596,0.026709,0.019756],[0.030505,0.026423,0.035014],[0.011057,0.028318,0.016568],[0.01041,0.028708,0.011917],[0.010447,0.028618,0.01279],[0.022129,0.026173,0.027048],[0.011092,0.027257,0.019349],[0.010349,0.028745,0.012413],[0.010381,0.028383,0.013262],[0.013199,0.026926,0.024676],[0.037535,0.041907,0.060908],[0.036687,0.043012,0.055417],[0.037032,0.042532,0.057382],[0.054077,0.052139,0.073946]]},{"date":"201801162010","rgb":[[0.012684,0.027636,0.015767],[0.014602,0.026404,0.014428],[0.018506,0.025913,0.020262],[0.029988,0.026134,0.030939],[0.010974,0.028811,0.014342],[0.010456,0.028749,0.011526],[0.010747,0.028454,0.012464],[0.021798,0.025887,0.024764],[0.01092,0.028706,0.015101],[0.010419,0.028801,0.01197],[0.010399,0.028583,0.01309],[0.013556,0.026815,0.02395],[0.037415,0.04336,0.057033],[0.036646,0.043249,0.054953],[0.036896,0.042841,0.056762],[0.054031,0.052298,0.072118]]},{"date":"201801162020","rgb":[[0.012353,0.027691,0.017951],[0.014792,0.026156,0.014905],[0.018845,0.026136,0.018983],[0.03074,0.026195,0.028972],[0.010938,0.028649,0.014505],[0.010396,0.028739,0.011236],[0.011031,0.028383,0.012331],[0.022068,0.025923,0.025466],[0.01091,0.028229,0.016083],[0.010405,0.028809,0.012299],[0.010488,0.028476,0.013665],[0.014062,0.02676,0.023001],[0.037776,0.042639,0.058079],[0.036745,0.043116,0.054236],[0.037014,0.043151,0.056094],[0.054867,0.052673,0.070608]]},{"date":"201801162030","rgb":[[0.012795,0.027915,0.016241],[0.011915,0.027219,0.015764],[0.018071,0.026195,0.019023],[0.029968,0.026055,0.030911],[0.010936,0.028576,0.013866],[0.010389,0.028724,0.011594],[0.0106,0.028334,0.013021],[0.021375,0.026208,0.02629],[0.011056,0.028655,0.015153],[0.010414,0.028775,0.012326],[0.010494,0.028691,0.013408],[0.013254,0.026876,0.023447],[0.037653,0.042546,0.059757],[0.03672,0.042919,0.055423],[0.036999,0.042401,0.058878],[0.053618,0.052355,0.072729]]},{"date":"201801162040","rgb":[[0.012684,0.02783,0.016643],[0.013574,0.026813,0.015317],[0.019254,0.026204,0.018116],[0.030216,0.026169,0.029285],[0.010993,0.029028,0.013471],[0.010418,0.028771,0.011693],[0.010629,0.028703,0.012528],[0.022173,0.026294,0.022982],[0.011685,0.02893,0.015124],[0.010636,0.028943,0.012407],[0.010658,0.028691,0.012838],[0.013513,0.027733,0.020487],[0.037926,0.042796,0.059019],[0.03675,0.043277,0.054739],[0.037234,0.042386,0.058623],[0.053781,0.05281,0.070543]]},{"date":"201801162050","rgb":[[0.013127,0.027864,0.01776],[0.015229,0.025661,0.017393],[0.020921,0.026087,0.020724],[0.032691,0.026177,0.032913],[0.011241,0.029084,0.013952],[0.010695,0.02895,0.012339],[0.011435,0.02823,0.014499],[0.02341,0.026277,0.02666],[0.011944,0.02862,0.016935],[0.010788,0.028788,0.013772],[0.010861,0.028128,0.016373],[0.013754,0.026751,0.024021],[0.038275,0.042778,0.059514],[0.036859,0.04321,0.054737],[0.037434,0.042299,0.059988],[0.054741,0.052077,0.072169]]},{"date":"201801162100","rgb":[[0.013546,0.027304,0.021675],[0.01307,0.026843,0.020102],[0.02126,0.026311,0.025896],[0.035798,0.026329,0.036852],[0.011867,0.028215,0.018154],[0.010852,0.028144,0.015551],[0.011274,0.02799,0.016834],[0.024516,0.02667,0.028538],[0.013617,0.028231,0.019942],[0.011016,0.029128,0.013397],[0.011102,0.028337,0.016218],[0.014874,0.027035,0.025027],[0.039073,0.042296,0.061453],[0.037497,0.042665,0.058494],[0.038115,0.041867,0.061516],[0.055767,0.051891,0.073707]]},{"date":"201801162110","rgb":[[0.012416,0.026992,0.020933],[0.012572,0.026721,0.018],[0.019156,0.026193,0.024517],[0.033,0.026709,0.036586],[0.011269,0.028061,0.017579],[0.01047,0.028623,0.012932],[0.011725,0.027649,0.016328],[0.023289,0.025946,0.028222],[0.012538,0.027815,0.021254],[0.010731,0.028728,0.014198],[0.010928,0.027776,0.017],[0.013327,0.026821,0.025349],[0.038077,0.042013,0.062119],[0.037063,0.042667,0.057534],[0.037306,0.042489,0.058451],[0.053553,0.052029,0.072238]]},{"date":"201801162120","rgb":[[0.013085,0.027663,0.020601],[0.012636,0.027479,0.016343],[0.02268,0.02552,0.024468],[0.033952,0.026543,0.035918],[0.011614,0.028867,0.015699],[0.010641,0.028972,0.012883],[0.011082,0.02853,0.014867],[0.023977,0.026517,0.028162],[0.012396,0.028757,0.018387],[0.010573,0.028887,0.013056],[0.010827,0.028504,0.015034],[0.014256,0.026945,0.024313],[0.038598,0.04233,0.060961],[0.036957,0.043259,0.055491],[0.037671,0.042754,0.058175],[0.05446,0.052183,0.072927]]},{"date":"201801162130","rgb":[[0.013619,0.027397,0.017864],[0.014257,0.02664,0.014765],[0.019436,0.026387,0.020343],[0.031816,0.026486,0.030127],[0.011131,0.028742,0.014727],[0.010478,0.028868,0.010929],[0.011128,0.028399,0.012438],[0.022327,0.025952,0.022654],[0.01197,0.029033,0.01615],[0.010618,0.028962,0.012859],[0.010734,0.029016,0.013224],[0.014155,0.027885,0.019937],[0.037839,0.042408,0.05941],[0.03698,0.043391,0.054753],[0.03724,0.043487,0.056354],[0.053713,0.052491,0.071206]]},{"date":"201801162150","rgb":[[0.013208,0.026995,0.019675],[0.013668,0.026125,0.017791],[0.018456,0.025675,0.021974],[0.03051,0.026462,0.03241],[0.011124,0.028152,0.016076],[0.010476,0.028743,0.012254],[0.010951,0.027869,0.014435],[0.02201,0.026278,0.027589],[0.011416,0.028319,0.01632],[0.010557,0.028754,0.013054],[0.010608,0.028514,0.013871],[0.01361,0.026828,0.023762],[0.037765,0.042483,0.059619],[0.03688,0.042974,0.055144],[0.037016,0.04221,0.058182],[0.053866,0.052556,0.072103]]},{"date":"201801162200","rgb":[[0.012796,0.026686,0.021976],[0.012943,0.025871,0.019741],[0.021185,0.024643,0.021898],[0.031649,0.026091,0.034581],[0.011046,0.027858,0.016927],[0.010443,0.028102,0.013575],[0.010837,0.028215,0.013384],[0.022532,0.026561,0.027926],[0.011371,0.02825,0.017965],[0.010484,0.028724,0.01299],[0.010687,0.027958,0.015916],[0.014543,0.026577,0.026586],[0.037848,0.042478,0.060791],[0.03725,0.042806,0.056553],[0.037774,0.042613,0.058677],[0.054556,0.052163,0.074306]]},{"date":"201801162210","rgb":[[0.013804,0.027223,0.017495],[0.012587,0.027089,0.015559],[0.018657,0.026632,0.01903],[0.031387,0.026472,0.030114],[0.011213,0.02864,0.015282],[0.010444,0.028825,0.011355],[0.011098,0.028466,0.012102],[0.022781,0.02613,0.024292],[0.012586,0.029256,0.015501],[0.010835,0.029027,0.012325],[0.010686,0.028846,0.013513],[0.01373,0.027565,0.021089],[0.038174,0.04297,0.058571],[0.037149,0.043162,0.055875],[0.037634,0.043408,0.056244],[0.054789,0.052117,0.070889]]},{"date":"201801162230","rgb":[[0.012568,0.027643,0.01955],[0.013015,0.026923,0.016409],[0.018839,0.026943,0.019529],[0.031672,0.026255,0.032059],[0.011257,0.028415,0.015833],[0.010514,0.028864,0.011423],[0.011142,0.028409,0.012563],[0.023184,0.025805,0.024941],[0.011913,0.02869,0.015995],[0.01054,0.028907,0.01193],[0.010623,0.028859,0.012671],[0.013753,0.027634,0.02097],[0.038158,0.043001,0.059273],[0.036784,0.043467,0.054981],[0.037168,0.043049,0.056725],[0.054341,0.052232,0.072245]]},{"date":"201801162240","rgb":[[0.012373,0.027822,0.017186],[0.013738,0.026668,0.015208],[0.018007,0.026528,0.018202],[0.030592,0.026266,0.030008],[0.010965,0.028375,0.015679],[0.010398,0.028772,0.011877],[0.011105,0.02836,0.012497],[0.022281,0.026013,0.025369],[0.011951,0.028309,0.017911],[0.010637,0.028899,0.012824],[0.010567,0.028699,0.013152],[0.013389,0.026947,0.022237],[0.03863,0.042,0.062555],[0.03729,0.043256,0.055773],[0.037263,0.042411,0.057743],[0.053742,0.052497,0.071233]]},{"date":"201801162250","rgb":[[0.012623,0.027837,0.017099],[0.013183,0.02538,0.020123],[0.011888,0.025823,0.020572],[0.015666,0.02751,0.02411],[0.011268,0.028896,0.014461],[0.010424,0.028147,0.013304],[0.010479,0.028218,0.013781],[0.013784,0.027535,0.022408],[0.01151,0.028454,0.016639],[0.010455,0.028876,0.011147],[0.010503,0.028655,0.012989],[0.01235,0.027981,0.020157],[0.037853,0.042345,0.060218],[0.036869,0.043259,0.054636],[0.036964,0.042104,0.059168],[0.052897,0.052359,0.070459]]},{"date":"201801162300","rgb":[[0.012371,0.028257,0.015934],[0.012507,0.027698,0.014142],[0.012698,0.027325,0.015586],[0.015203,0.02694,0.024684],[0.011022,0.028873,0.01432],[0.01051,0.028778,0.01161],[0.010455,0.028654,0.012308],[0.013617,0.027986,0.019931],[0.012112,0.029231,0.01579],[0.010708,0.028977,0.012696],[0.010694,0.028548,0.014244],[0.01326,0.027696,0.020289],[0.038038,0.042956,0.057734],[0.036918,0.043156,0.055312],[0.037294,0.043042,0.056658],[0.053248,0.05287,0.06981]]},{"date":"201801162310","rgb":[[0.012492,0.027537,0.017348],[0.013911,0.026659,0.013794],[0.014219,0.025393,0.01905],[0.014483,0.027038,0.024498],[0.011146,0.028771,0.014393],[0.01045,0.028875,0.010709],[0.010455,0.028557,0.012126],[0.012933,0.027721,0.021864],[0.011552,0.029199,0.014476],[0.010469,0.028829,0.011686],[0.010545,0.028622,0.012622],[0.012577,0.028052,0.020666],[0.03805,0.042786,0.058744],[0.036929,0.043389,0.054413],[0.037176,0.042528,0.057727],[0.052861,0.052363,0.070352]]},{"date":"201801162320","rgb":[[0.012109,0.026614,0.021731],[0.012021,0.027003,0.016347],[0.012538,0.025415,0.021124],[0.01373,0.02662,0.025513],[0.011027,0.027461,0.018061],[0.010443,0.02881,0.011688],[0.01042,0.027717,0.014663],[0.011704,0.026632,0.023087],[0.011409,0.028177,0.018172],[0.010459,0.028748,0.012646],[0.010444,0.028037,0.014881],[0.011682,0.026774,0.022989],[0.037609,0.042473,0.059263],[0.03658,0.043082,0.054872],[0.036796,0.04247,0.057645],[0.051822,0.05222,0.071593]]},{"date":"201801162330","rgb":[[0.011911,0.028084,0.015709],[0.012898,0.026174,0.017519],[0.013326,0.024784,0.021437],[0.012987,0.026868,0.023519],[0.010807,0.028988,0.012649],[0.010343,0.028713,0.010664],[0.010394,0.027337,0.015124],[0.011517,0.027055,0.021491],[0.01121,0.029056,0.014064],[0.010421,0.028816,0.012002],[0.010411,0.028702,0.013012],[0.011726,0.027502,0.021378],[0.037533,0.043066,0.058446],[0.036651,0.04311,0.054768],[0.036768,0.043036,0.056313],[0.052295,0.052127,0.072115]]},{"date":"201801162340","rgb":[[0.01278,0.027848,0.015981],[0.011948,0.026514,0.017368],[0.011862,0.025512,0.02124],[0.014221,0.02657,0.024873],[0.01093,0.0289,0.013546],[0.010378,0.028796,0.010397],[0.010392,0.028433,0.011923],[0.011553,0.027437,0.020472],[0.010906,0.029052,0.014074],[0.010356,0.028723,0.011391],[0.010371,0.028705,0.012211],[0.012094,0.027285,0.021172],[0.037748,0.042754,0.058388],[0.036495,0.043182,0.054405],[0.03711,0.043066,0.05456],[0.052807,0.052539,0.070102]]},{"date":"201801162350","rgb":[[0.012258,0.028333,0.015531],[0.012447,0.027079,0.01491],[0.01386,0.026449,0.013821],[0.013905,0.027055,0.023438],[0.011034,0.02873,0.014065],[0.010483,0.02881,0.010827],[0.010384,0.028727,0.011003],[0.012144,0.027602,0.020361],[0.011347,0.02906,0.014061],[0.010484,0.02896,0.010466],[0.01065,0.028821,0.011751],[0.012541,0.027912,0.018777],[0.037571,0.043106,0.056894],[0.036658,0.043197,0.053647],[0.037197,0.043146,0.055523],[0.052693,0.052805,0.068463]]},{"date":"201801170000","rgb":[[0.012222,0.026866,0.020559],[0.014086,0.024929,0.020845],[0.012808,0.0259,0.019821],[0.013579,0.026719,0.02649],[0.010974,0.028142,0.016303],[0.010411,0.02816,0.013954],[0.01046,0.028342,0.013304],[0.012185,0.026905,0.02399],[0.011639,0.028063,0.018109],[0.010564,0.028658,0.013242],[0.010432,0.028553,0.013218],[0.011831,0.026906,0.023429],[0.038038,0.042025,0.061796],[0.036789,0.043035,0.056965],[0.037344,0.042583,0.058689],[0.052044,0.051965,0.073442]]},{"date":"201801170010","rgb":[[0.013646,0.027507,0.016269],[0.013981,0.026093,0.017171],[0.014086,0.026453,0.015581],[0.015172,0.026872,0.025397],[0.01122,0.029324,0.014131],[0.010463,0.028755,0.01222],[0.010415,0.028537,0.012891],[0.012743,0.027934,0.021552],[0.012009,0.0286,0.01769],[0.010616,0.028908,0.013056],[0.010569,0.028396,0.014524],[0.012696,0.027521,0.022448],[0.038117,0.043039,0.058073],[0.036785,0.043116,0.055157],[0.037265,0.042467,0.058148],[0.053298,0.052051,0.071834]]},{"date":"201801170020","rgb":[[0.012983,0.028295,0.015074],[0.013806,0.027097,0.012986],[0.01274,0.027578,0.014168],[0.014673,0.027838,0.019929],[0.010962,0.029094,0.012773],[0.010464,0.028828,0.011011],[0.010429,0.028694,0.011798],[0.012166,0.028005,0.020495],[0.011285,0.029176,0.014777],[0.010575,0.02892,0.012254],[0.010544,0.028848,0.013008],[0.011929,0.027811,0.019574],[0.037669,0.043306,0.056255],[0.036783,0.043382,0.053839],[0.037094,0.043333,0.054755],[0.052566,0.052765,0.067547]]},{"date":"201801170030","rgb":[[0.012872,0.027888,0.019575],[0.013075,0.027223,0.015377],[0.012395,0.026966,0.018995],[0.013883,0.027005,0.026545],[0.011562,0.027569,0.019283],[0.010589,0.028886,0.013168],[0.010591,0.028314,0.014047],[0.01266,0.027059,0.024192],[0.011618,0.02857,0.017619],[0.010639,0.028906,0.013182],[0.010718,0.028521,0.0144],[0.011697,0.02707,0.022393],[0.037918,0.042418,0.060016],[0.03673,0.04314,0.055543],[0.03705,0.042971,0.05703],[0.052566,0.052218,0.071008]]},{"date":"201801170040","rgb":[[0.013235,0.027675,0.018791],[0.012638,0.027057,0.015286],[0.01272,0.026904,0.017148],[0.01496,0.026702,0.024514],[0.011177,0.02878,0.015307],[0.010429,0.028794,0.011731],[0.010418,0.02867,0.012041],[0.012715,0.027469,0.02156],[0.011499,0.029125,0.014678],[0.010396,0.028865,0.011612],[0.010353,0.028667,0.011891],[0.01147,0.027879,0.019553],[0.03767,0.04319,0.057387],[0.036557,0.043196,0.054148],[0.036741,0.043075,0.056044],[0.052875,0.052537,0.069855]]},{"date":"201801170050","rgb":[[0.012753,0.028211,0.018089],[0.012956,0.027557,0.015585],[0.013268,0.0269,0.018255],[0.014668,0.027087,0.02529],[0.011423,0.028565,0.016179],[0.010515,0.028929,0.011613],[0.010538,0.028174,0.013937],[0.012485,0.02717,0.023114],[0.011087,0.028911,0.013982],[0.010466,0.028847,0.011603],[0.010449,0.028661,0.012496],[0.011941,0.02737,0.020992],[0.037416,0.043161,0.056981],[0.036657,0.043351,0.054494],[0.036909,0.043379,0.055485],[0.052645,0.052385,0.070775]]},{"date":"201801170110","rgb":[[0.014104,0.026812,0.021448],[0.013909,0.025639,0.020963],[0.015021,0.026169,0.01843],[0.014897,0.026856,0.026593],[0.01129,0.027799,0.018207],[0.01054,0.028819,0.012473],[0.010633,0.02838,0.013771],[0.013291,0.027073,0.023927],[0.011105,0.028989,0.014004],[0.010416,0.028833,0.01203],[0.010441,0.028724,0.012596],[0.012876,0.027137,0.022426],[0.037377,0.042654,0.058582],[0.036451,0.043159,0.054263],[0.037001,0.042976,0.056276],[0.052587,0.051917,0.072652]]},{"date":"201801170120","rgb":[[0.012846,0.027433,0.021478],[0.012043,0.027642,0.016264],[0.01271,0.026425,0.022085],[0.016123,0.026751,0.029781],[0.011464,0.027502,0.019661],[0.01068,0.028441,0.013602],[0.010769,0.027497,0.016945],[0.012778,0.02728,0.026339],[0.011609,0.027926,0.018706],[0.010632,0.028818,0.012872],[0.010672,0.027755,0.01642],[0.013111,0.027049,0.026375],[0.037684,0.042349,0.060584],[0.036755,0.043142,0.055537],[0.037302,0.042449,0.059056],[0.053134,0.05202,0.073973]]},{"date":"201801170130","rgb":[[0.013305,0.02777,0.020002],[0.012355,0.027633,0.016881],[0.014316,0.02606,0.021308],[0.01597,0.026815,0.027041],[0.011998,0.028383,0.01745],[0.010681,0.028898,0.01258],[0.010812,0.028387,0.015174],[0.013501,0.027342,0.023844],[0.012025,0.027607,0.020595],[0.010577,0.028688,0.013654],[0.010972,0.028487,0.015303],[0.012765,0.026989,0.024455],[0.037742,0.042141,0.062101],[0.036685,0.043029,0.05584],[0.037288,0.0427,0.05748],[0.053364,0.051803,0.072533]]},{"date":"201801170140","rgb":[[0.013357,0.027965,0.019716],[0.015552,0.025707,0.017671],[0.013953,0.027095,0.016139],[0.015173,0.027221,0.025228],[0.011568,0.028801,0.016485],[0.010489,0.028779,0.012311],[0.010747,0.028527,0.013925],[0.01271,0.027173,0.023983],[0.011659,0.028736,0.016891],[0.01043,0.028798,0.011538],[0.010636,0.028946,0.012762],[0.011944,0.027592,0.020986],[0.038042,0.042353,0.059643],[0.036754,0.043116,0.054742],[0.03721,0.04294,0.056124],[0.052215,0.052082,0.071209]]},{"date":"201801170150","rgb":[[0.01286,0.026948,0.022503],[0.0119,0.027194,0.017958],[0.012591,0.026103,0.021406],[0.014706,0.026829,0.027035],[0.011535,0.028128,0.017216],[0.010567,0.028831,0.012994],[0.01056,0.02724,0.016847],[0.012826,0.026934,0.024307],[0.011378,0.02852,0.017013],[0.010458,0.028838,0.011852],[0.010511,0.028661,0.012731],[0.012287,0.027444,0.02224],[0.03753,0.042691,0.059958],[0.03664,0.043153,0.056003],[0.036987,0.042906,0.056853],[0.051903,0.052261,0.072393]]},{"date":"201801170200","rgb":[[0.01231,0.027951,0.016422],[0.013028,0.026974,0.015904],[0.013369,0.026868,0.015258],[0.014477,0.02687,0.024241],[0.011123,0.028627,0.01459],[0.010428,0.028785,0.011416],[0.010428,0.028633,0.01245],[0.012641,0.026981,0.023965],[0.011374,0.02847,0.016655],[0.010492,0.02883,0.011736],[0.01045,0.028776,0.012002],[0.012663,0.027571,0.022826],[0.037809,0.04312,0.058303],[0.036812,0.043258,0.054627],[0.036898,0.043103,0.054689],[0.052834,0.052235,0.071688]]},{"date":"201801170210","rgb":[[0.012865,0.026915,0.02291],[0.012346,0.026089,0.019748],[0.012629,0.025999,0.019393],[0.014667,0.026999,0.025131],[0.011496,0.027983,0.017914],[0.010495,0.028765,0.012601],[0.010434,0.028322,0.013438],[0.012371,0.027392,0.023299],[0.011786,0.027842,0.019513],[0.010523,0.028742,0.013089],[0.010489,0.028559,0.013559],[0.012485,0.027022,0.024555],[0.038398,0.041979,0.062574],[0.036891,0.043022,0.056751],[0.037373,0.042655,0.058432],[0.053243,0.051788,0.073969]]},{"date":"201801170220","rgb":[[0.012234,0.026726,0.019934],[0.014388,0.026137,0.014916],[0.014857,0.025864,0.015949],[0.013895,0.027076,0.022593],[0.011297,0.028094,0.016059],[0.01051,0.028843,0.011726],[0.010446,0.028694,0.01203],[0.01279,0.028024,0.019612],[0.011756,0.028585,0.016961],[0.010505,0.02886,0.012198],[0.010414,0.028709,0.012686],[0.012123,0.027784,0.020268],[0.03818,0.042579,0.059723],[0.036812,0.043236,0.055019],[0.036947,0.042978,0.055896],[0.052128,0.052434,0.070906]]},{"date":"201801170230","rgb":[[0.012712,0.027688,0.016165],[0.014277,0.026274,0.014598],[0.012683,0.026114,0.017757],[0.013308,0.027052,0.022172],[0.010922,0.028743,0.014477],[0.010385,0.02875,0.011603],[0.010401,0.028723,0.011996],[0.011642,0.02719,0.021585],[0.011231,0.028306,0.017287],[0.010387,0.028653,0.012339],[0.010433,0.028616,0.013358],[0.01184,0.026791,0.024307],[0.037729,0.042341,0.058848],[0.036631,0.043099,0.054919],[0.036771,0.042796,0.055737],[0.051283,0.052313,0.071508]]},{"date":"201801170250","rgb":[[0.012182,0.026831,0.020655],[0.012698,0.025154,0.021535],[0.013176,0.02626,0.016721],[0.013689,0.026875,0.025773],[0.011165,0.027445,0.017571],[0.010421,0.027241,0.015941],[0.010369,0.028569,0.012121],[0.012282,0.026896,0.023575],[0.01133,0.028212,0.017144],[0.010507,0.028745,0.012364],[0.010409,0.02864,0.012155],[0.012551,0.026768,0.025347],[0.037765,0.041922,0.061836],[0.036773,0.04291,0.056613],[0.037167,0.042551,0.057093],[0.051857,0.052128,0.073696]]},{"date":"201801170320","rgb":[[0.012869,0.027697,0.018554],[0.012814,0.027003,0.014951],[0.013345,0.025004,0.021615],[0.014997,0.026766,0.024751],[0.011417,0.028498,0.016437],[0.010464,0.028677,0.012162],[0.010436,0.027587,0.01549],[0.012319,0.026934,0.024296],[0.01142,0.028646,0.016667],[0.010439,0.028826,0.01194],[0.010472,0.028341,0.014352],[0.012271,0.026943,0.024649],[0.037884,0.043024,0.058581],[0.036555,0.043142,0.05501],[0.036876,0.042494,0.057681],[0.052278,0.052146,0.071854]]},{"date":"201801170330","rgb":[[0.01225,0.026821,0.021713],[0.011843,0.027146,0.016485],[0.0128,0.026657,0.017557],[0.014158,0.02665,0.027105],[0.011514,0.027716,0.018916],[0.010522,0.028812,0.012696],[0.010549,0.028185,0.014706],[0.012328,0.026848,0.02534],[0.011733,0.027854,0.020151],[0.01066,0.028757,0.013079],[0.010527,0.028167,0.01459],[0.012388,0.026712,0.026315],[0.037991,0.042558,0.060257],[0.037039,0.043133,0.056415],[0.037164,0.042311,0.058244],[0.052516,0.052039,0.072822]]},{"date":"201801170340","rgb":[[0.012624,0.0281,0.015703],[0.012336,0.026957,0.015539],[0.012735,0.026693,0.017028],[0.014092,0.026897,0.023943],[0.011081,0.028964,0.014637],[0.010373,0.028716,0.010942],[0.010422,0.028624,0.012135],[0.011748,0.027032,0.022728],[0.011963,0.028408,0.016552],[0.010462,0.028833,0.011689],[0.010411,0.028672,0.01267],[0.011914,0.026975,0.022862],[0.038219,0.042817,0.058152],[0.036644,0.043188,0.054642],[0.036766,0.042622,0.056805],[0.051736,0.052128,0.071699]]},{"date":"201801170350","rgb":[[0.012184,0.02777,0.018339],[0.012661,0.027243,0.014779],[0.013473,0.026626,0.015231],[0.014084,0.026747,0.026182],[0.01119,0.028188,0.015936],[0.010434,0.028853,0.010806],[0.01046,0.028683,0.012071],[0.012427,0.027266,0.022289],[0.011602,0.028252,0.018365],[0.0105,0.028869,0.012104],[0.010465,0.028488,0.013491],[0.012536,0.027141,0.023648],[0.038158,0.042443,0.060703],[0.036876,0.043435,0.05528],[0.036915,0.042882,0.056265],[0.052211,0.052026,0.072663]]},{"date":"201801170400","rgb":[[0.013083,0.02777,0.017384],[0.013094,0.026975,0.014767],[0.012726,0.027198,0.015083],[0.014322,0.027146,0.023402],[0.011347,0.028969,0.014476],[0.010447,0.028773,0.010892],[0.010457,0.02879,0.011504],[0.012309,0.028153,0.019598],[0.011648,0.028856,0.016362],[0.010555,0.028921,0.012528],[0.010441,0.028786,0.012325],[0.012541,0.027659,0.021369],[0.03821,0.042808,0.059312],[0.037058,0.043338,0.054731],[0.037115,0.042756,0.056531],[0.052399,0.052521,0.071987]]},{"date":"201801170410","rgb":[[0.012717,0.027906,0.017413],[0.015477,0.025448,0.016553],[0.013243,0.026879,0.016065],[0.014359,0.026915,0.024274],[0.011131,0.027702,0.017748],[0.010478,0.028821,0.011533],[0.010511,0.02858,0.012376],[0.012024,0.027065,0.022769],[0.011615,0.028568,0.016769],[0.010379,0.028712,0.011715],[0.010516,0.028807,0.012314],[0.012288,0.027194,0.02282],[0.037734,0.042865,0.058137],[0.036521,0.043255,0.054082],[0.037162,0.043171,0.055528],[0.051689,0.052467,0.070279]]},{"date":"201801170430","rgb":[[0.016893,0.027509,0.02147],[0.014134,0.027611,0.021518],[0.016034,0.027207,0.022338],[0.019414,0.026374,0.028475],[0.015239,0.028064,0.020581],[0.012182,0.027816,0.020383],[0.013605,0.027582,0.023011],[0.017261,0.026764,0.026507],[0.01601,0.027988,0.020472],[0.012023,0.02873,0.017067],[0.013314,0.028319,0.02041],[0.014549,0.027558,0.022404],[0.039505,0.042467,0.059774],[0.037234,0.042922,0.05631],[0.03773,0.042593,0.058605],[0.054076,0.052069,0.072184]]},{"date":"201801170440","rgb":[[0.01467,0.027351,0.022428],[0.013975,0.026861,0.01921],[0.014034,0.027173,0.022668],[0.017973,0.026491,0.026859],[0.01314,0.028155,0.019462],[0.011062,0.028703,0.015282],[0.011692,0.028331,0.017931],[0.013804,0.027513,0.023739],[0.013011,0.028205,0.019521],[0.010932,0.029095,0.013584],[0.011495,0.028301,0.017378],[0.012422,0.027167,0.023242],[0.038399,0.042146,0.060272],[0.036612,0.043207,0.054962],[0.037519,0.042556,0.058165],[0.052515,0.052334,0.071325]]},{"date":"201801170450","rgb":[[0.0138,0.027591,0.019176],[0.014449,0.026393,0.016145],[0.015707,0.026086,0.016582],[0.014647,0.026936,0.024775],[0.011491,0.028172,0.017076],[0.010591,0.028709,0.013179],[0.010521,0.028398,0.013928],[0.012409,0.027036,0.023737],[0.011735,0.028925,0.015222],[0.010544,0.028794,0.012733],[0.010625,0.028564,0.013721],[0.012125,0.027381,0.020914],[0.038017,0.04247,0.06034],[0.036515,0.043111,0.054595],[0.037004,0.04269,0.057603],[0.052716,0.051854,0.073361]]},{"date":"201801170500","rgb":[[0.012709,0.026949,0.021403],[0.013279,0.026522,0.017987],[0.012796,0.026638,0.017437],[0.014135,0.0271,0.026986],[0.01144,0.028746,0.015105],[0.010658,0.028591,0.013873],[0.010488,0.028577,0.013324],[0.012902,0.027146,0.02351],[0.011521,0.028286,0.017646],[0.010646,0.028363,0.01443],[0.010731,0.027607,0.016888],[0.012702,0.026641,0.025158],[0.0384,0.042419,0.06226],[0.036991,0.042675,0.057296],[0.037274,0.042734,0.059078],[0.052882,0.052269,0.073461]]},{"date":"201801170510","rgb":[[0.012336,0.027363,0.018442],[0.012409,0.027556,0.013005],[0.013127,0.026407,0.016717],[0.014623,0.02715,0.02417],[0.011206,0.029032,0.013764],[0.010452,0.028829,0.010817],[0.010389,0.028633,0.012036],[0.013823,0.027784,0.021149],[0.01166,0.029053,0.015589],[0.010542,0.02887,0.012057],[0.010453,0.028434,0.013296],[0.012261,0.02777,0.020291],[0.038242,0.042601,0.059677],[0.037058,0.043305,0.055019],[0.037159,0.042373,0.057376],[0.052729,0.052045,0.072607]]},{"date":"201801170520","rgb":[[0.012175,0.026665,0.021313],[0.012127,0.027029,0.015411],[0.012838,0.026621,0.016717],[0.013857,0.026757,0.026096],[0.010908,0.028881,0.013256],[0.010398,0.028832,0.010178],[0.010391,0.028758,0.011302],[0.012091,0.027532,0.021508],[0.01152,0.028612,0.016574],[0.010458,0.028844,0.011171],[0.010392,0.028758,0.012073],[0.011702,0.027617,0.020511],[0.037868,0.042263,0.060595],[0.036667,0.043031,0.054812],[0.036694,0.042823,0.055154],[0.051337,0.05227,0.071178]]},{"date":"201801170540","rgb":[[0.012018,0.027553,0.018955],[0.012297,0.026883,0.016573],[0.011886,0.026623,0.018193],[0.014422,0.027187,0.025326],[0.01139,0.028341,0.016118],[0.010476,0.028805,0.011981],[0.01048,0.02862,0.012842],[0.013698,0.026746,0.024579],[0.012128,0.028284,0.0193],[0.010528,0.028865,0.01264],[0.01056,0.028698,0.013187],[0.012324,0.027129,0.022957],[0.038452,0.041841,0.062981],[0.036959,0.042846,0.056421],[0.037131,0.042895,0.056493],[0.05229,0.052196,0.072684]]},{"date":"201801170600","rgb":[[0.012556,0.027415,0.01937],[0.012741,0.026972,0.016245],[0.012736,0.027025,0.016546],[0.015156,0.02707,0.025402],[0.011461,0.028509,0.015964],[0.01049,0.028743,0.012241],[0.010643,0.028646,0.013551],[0.013631,0.027289,0.023833],[0.011945,0.02814,0.019778],[0.010677,0.028877,0.01294],[0.011031,0.027945,0.016869],[0.012734,0.027116,0.024045],[0.038907,0.042139,0.062784],[0.037215,0.043221,0.056232],[0.037248,0.04257,0.058618],[0.052981,0.052238,0.073513]]},{"date":"201801170610","rgb":[[0.012245,0.02626,0.022471],[0.012728,0.026727,0.016795],[0.011792,0.026021,0.020061],[0.0135,0.02644,0.026229],[0.011003,0.027034,0.0196],[0.010504,0.02863,0.013185],[0.010474,0.028105,0.014174],[0.011902,0.026777,0.024264],[0.011844,0.027867,0.019712],[0.010608,0.028744,0.01349],[0.01053,0.028274,0.014508],[0.011811,0.026586,0.023814],[0.037975,0.041836,0.062835],[0.036964,0.04267,0.057409],[0.036814,0.042437,0.058241],[0.051952,0.05206,0.073458]]},{"date":"201801170620","rgb":[[0.013363,0.026932,0.023527],[0.014169,0.025673,0.020236],[0.012924,0.026235,0.021742],[0.015215,0.026602,0.028103],[0.011911,0.026962,0.024114],[0.010751,0.026088,0.021215],[0.011,0.026451,0.021342],[0.012894,0.027203,0.025656],[0.012206,0.026944,0.023663],[0.010792,0.026224,0.021072],[0.011267,0.026574,0.021477],[0.012334,0.026771,0.023859],[0.038207,0.04196,0.062041],[0.036943,0.042682,0.057337],[0.037314,0.041537,0.060669],[0.052291,0.052465,0.072526]]},{"date":"201801170630","rgb":[[0.013487,0.026804,0.031448],[0.013069,0.02685,0.030234],[0.012695,0.027011,0.03207],[0.016443,0.027046,0.038913],[0.012456,0.027144,0.028341],[0.01199,0.026774,0.026943],[0.012422,0.027049,0.029918],[0.013925,0.027058,0.034274],[0.012719,0.026948,0.028303],[0.012096,0.027029,0.026707],[0.012547,0.027048,0.030446],[0.012802,0.026957,0.02792],[0.039131,0.041387,0.065568],[0.037863,0.041832,0.063875],[0.038369,0.041535,0.067376],[0.053437,0.052293,0.076207]]},{"date":"201801170640","rgb":[[0.041139,0.033691,0.22751],[0.033419,0.032652,0.17845],[0.029024,0.031874,0.15378],[0.030513,0.032918,0.15588],[0.05179,0.036547,0.34413],[0.045253,0.033979,0.2628],[0.038636,0.033683,0.20684],[0.029694,0.031839,0.14292],[0.079317,0.053839,0.5035],[0.058334,0.04105,0.39331],[0.045131,0.034775,0.2752],[0.019259,0.028698,0.068847],[0.063451,0.050756,0.22785],[0.068899,0.061235,0.26361],[0.056136,0.046575,0.19572],[0.057561,0.053484,0.10413]]},{"date":"201801170650","rgb":[[0.12198,0.16853,0.73389],[0.097759,0.14907,0.64874],[0.085188,0.1168,0.58545],[0.079255,0.072515,0.56221],[0.17904,0.2823,0.9322],[0.15165,0.23183,0.80594],[0.12662,0.18349,0.70465],[0.089489,0.1064,0.51619],[0.22542,0.43526,0.99452],[0.19947,0.33213,0.95774],[0.1699,0.24806,0.8465],[0.055481,0.060529,0.29061],[0.13514,0.2103,0.51841],[0.1221,0.17937,0.47549],[0.10686,0.1316,0.44011],[0.082581,0.059349,0.31733]]},{"date":"201801170710","rgb":[[0.39539,0.99857,0.99827],[0.37011,0.95661,0.99673],[0.36676,0.86417,0.99662],[0.34253,0.73605,0.99451],[0.62283,0.99915,0.99848],[0.44004,0.99184,0.99739],[0.38423,0.90039,0.9965],[0.30474,0.63125,0.92064],[0.88458,0.98939,0.9988],[0.64349,0.99644,0.99785],[0.45646,0.94874,0.99299],[0.22399,0.36765,0.81196],[0.501,0.6116,0.92065],[0.50884,0.54413,0.79944],[0.44297,0.55489,0.80869],[0.28401,0.41122,0.90571]]},{"date":"201801170720","rgb":[[0.56816,0.99919,0.9985],[0.64838,0.9992,0.99885],[0.66378,0.99934,0.99794],[0.64735,0.99911,0.99871],[0.54537,0.99934,0.99854],[0.61182,0.99921,0.9989],[0.60965,0.99918,0.99892],[0.45442,0.8112,0.95332],[0.47055,0.99902,0.99858],[0.47989,0.9959,0.99827],[0.52062,0.98247,0.99409],[0.2439,0.37231,0.84043],[0.25717,0.45906,0.84615],[0.30518,0.52968,0.83888],[0.29453,0.47119,0.86507],[0.28416,0.39565,0.91558]]},{"date":"201801170730","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99331,0.97759,0.99938],[0.8469,0.93592,0.99216],[0.99568,0.97661,1],[0.9891,0.97979,0.99644],[0.97151,0.98005,0.98593],[0.52596,0.83627,0.99097],[0.65909,0.91072,0.94299],[0.71834,0.90388,0.93478],[0.64776,0.82538,0.92766],[0.64615,0.89898,0.94228]]},{"date":"201801170740","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99241,0.97796,0.9991],[0.99608,0.97647,1],[0.99596,0.97651,1],[0.99094,0.97963,0.9945],[0.9595,0.98661,0.98756],[0.92996,0.90553,0.95109],[0.92372,0.90983,0.94339],[0.90145,0.91365,0.93909],[0.92036,0.91058,0.93132]]},{"date":"201801170750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93126,0.90483,0.95161],[0.92706,0.9066,0.95161],[0.92767,0.9046,0.94489]]},{"date":"201801170800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90338,0.94494]]},{"date":"201801170820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90337,0.945]]},{"date":"201801170830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90339,0.94502]]},{"date":"201801170840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.9034,0.94494]]},{"date":"201801170900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90336,0.94492]]},{"date":"201801170910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99466,0.97696,1],[0.99558,0.97665,1],[0.99608,0.97647,1],[0.99103,0.97818,1],[0.98482,0.98024,1],[0.98598,0.97985,1],[0.99321,0.97745,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92123,0.90682,0.9449]]},{"date":"201801170920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90335,0.94499]]},{"date":"201801170930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90337,0.94501]]},{"date":"201801170940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94498]]},{"date":"201801170950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90334,0.94487]]},{"date":"201801171000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90332,0.94494]]},{"date":"201801171010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94499]]},{"date":"201801171020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90333,0.94493]]},{"date":"201801171030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90333,0.94502]]},{"date":"201801171040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90335,0.94494]]},{"date":"201801171050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90329,0.94488]]},{"date":"201801171100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94499]]},{"date":"201801171110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90331,0.94494]]},{"date":"201801171120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90332,0.94497]]},{"date":"201801171130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90333,0.94498]]},{"date":"201801171150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99504,0.97683,1],[0.99577,0.97657,1],[0.99608,0.97647,1],[0.99175,0.97795,1],[0.98514,0.98013,1],[0.98645,0.97969,1],[0.99375,0.97724,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92134,0.90674,0.9449]]},{"date":"201801171200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90332,0.94492]]},{"date":"201801171210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.9033,0.94496]]},{"date":"201801171220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99536,0.97673,1],[0.99588,0.97654,1],[0.99608,0.97647,1],[0.99252,0.97769,1],[0.98553,0.98001,1],[0.98679,0.97959,1],[0.99419,0.9771,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92157,0.90671,0.94498]]},{"date":"201801171230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90334,0.94501]]},{"date":"201801171250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90331,0.94488]]},{"date":"201801171300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90333,0.94495]]},{"date":"201801171310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90333,0.94502]]},{"date":"201801171320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99416,0.97713,1],[0.99526,0.97675,1],[0.99608,0.97647,1],[0.99019,0.97846,1],[0.98458,0.98031,1],[0.98551,0.98001,1],[0.9925,0.97769,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92116,0.90683,0.94499]]},{"date":"201801171330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90334,0.94503]]},{"date":"201801171340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9955,0.97667,1],[0.99598,0.97651,1],[0.99608,0.97647,1],[0.99252,0.97769,1],[0.98553,0.98001,1],[0.98715,0.97947,1],[0.99438,0.97705,1],[0.9219,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92167,0.9067,0.945]]},{"date":"201801171350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90331,0.9449]]},{"date":"201801171400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90334,0.94496]]},{"date":"201801171410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99558,0.97664,1],[0.99598,0.97651,1],[0.99608,0.97647,1],[0.99275,0.9776,1],[0.98553,0.98001,1],[0.98712,0.97949,1],[0.99438,0.97705,1],[0.92195,0.90829,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92168,0.9067,0.94497]]},{"date":"201801171420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90334,0.94502]]},{"date":"201801171430","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90336,0.94502]]},{"date":"201801171440","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90335,0.94502]]},{"date":"201801171450","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90332,0.9449]]},{"date":"201801171500","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90331,0.94489]]},{"date":"201801171510","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90329,0.94493]]},{"date":"201801171520","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90329,0.94496]]},{"date":"201801171530","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.9033,0.94498]]},{"date":"201801171540","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99489,0.97689,1],[0.99608,0.97647,1],[0.99609,0.97646,1],[0.9919,0.97807,0.99937],[0.97997,0.982,0.99839],[0.93116,0.9049,0.95161],[0.92511,0.90784,0.9495],[0.92083,0.91153,0.94026],[0.92041,0.91035,0.9322]]},{"date":"201801171550","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.95577,0.98036,0.99854],[0.99608,0.97647,1],[0.99526,0.97686,0.99964],[0.9882,0.98113,0.99211],[0.88051,0.98567,0.99376],[0.87667,0.91399,0.94694],[0.90893,0.91279,0.94227],[0.88343,0.91461,0.93981],[0.88608,0.90962,0.9437]]},{"date":"201801171600","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99539,0.97671,1],[0.99556,0.97677,0.99945],[0.85808,0.89019,0.98464],[0.9924,0.97771,1],[0.98548,0.98092,0.99661],[0.97626,0.97924,0.98576],[0.55298,0.72389,0.9656],[0.61907,0.71493,0.93833],[0.71581,0.76188,0.93265],[0.67339,0.72155,0.92158],[0.74661,0.84234,0.93486]]},{"date":"201801171610","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9941,0.97716,1],[0.99438,0.9772,0.99938],[0.83999,0.86776,0.98388],[0.99019,0.97846,1],[0.98458,0.98129,0.99627],[0.9747,0.97825,0.98595],[0.47149,0.65673,0.96835],[0.5417,0.61375,0.94124],[0.64795,0.69803,0.93533],[0.60954,0.6644,0.92728],[0.59109,0.82315,0.93632]]},{"date":"201801171620","rgb":[[0.49705,0.99927,0.99876],[0.62015,0.99923,0.99836],[0.68632,0.99906,0.99817],[0.724,0.99904,0.99798],[0.47204,0.99917,0.99909],[0.6578,0.99917,0.99829],[0.73545,0.99919,0.99813],[0.59751,0.80292,0.9091],[0.44742,0.99381,0.99869],[0.61605,0.99484,0.99812],[0.86508,0.98353,0.9902],[0.2941,0.30857,0.68833],[0.26365,0.39618,0.66651],[0.33014,0.48911,0.71829],[0.36934,0.43363,0.69742],[0.27502,0.33307,0.83893]]},{"date":"201801171630","rgb":[[0.30894,0.42193,0.99346],[0.25324,0.35618,0.99633],[0.26159,0.35773,0.99687],[0.28671,0.37552,0.99511],[0.31486,0.4628,0.99385],[0.26592,0.40828,0.99712],[0.27274,0.41377,0.99634],[0.25119,0.37246,0.83271],[0.3114,0.45051,0.99418],[0.29124,0.46314,0.99603],[0.32078,0.53256,0.98267],[0.10543,0.13993,0.38751],[0.15173,0.16877,0.48427],[0.19005,0.2412,0.55802],[0.18953,0.26209,0.51374],[0.14645,0.072537,0.46395]]},{"date":"201801171640","rgb":[[0.061938,0.039843,0.40598],[0.05876,0.041162,0.39032],[0.06526,0.042515,0.42338],[0.084987,0.049921,0.50252],[0.069364,0.047161,0.4323],[0.078989,0.077611,0.42818],[0.08821,0.092631,0.4665],[0.090281,0.089172,0.44158],[0.084596,0.06636,0.44865],[0.094939,0.10252,0.44182],[0.12597,0.14142,0.52259],[0.040001,0.049973,0.15376],[0.067086,0.058226,0.2208],[0.078959,0.08077,0.26759],[0.083599,0.084176,0.26583],[0.064908,0.055974,0.15222]]},{"date":"201801171650","rgb":[[0.021605,0.028853,0.072082],[0.019038,0.028385,0.06114],[0.025616,0.029896,0.10209],[0.031446,0.032847,0.1436],[0.023231,0.028878,0.085227],[0.022732,0.028667,0.087082],[0.025018,0.028937,0.10546],[0.027733,0.032352,0.12671],[0.024913,0.029165,0.095057],[0.024796,0.02893,0.10273],[0.026,0.029899,0.10658],[0.016248,0.028211,0.049394],[0.04201,0.042483,0.085126],[0.043302,0.042718,0.095759],[0.043928,0.042998,0.096698],[0.055196,0.052277,0.081501]]},{"date":"201801171700","rgb":[[0.012934,0.027007,0.031468],[0.012424,0.026941,0.029195],[0.012717,0.026978,0.030105],[0.015909,0.027293,0.03902],[0.01267,0.027119,0.031405],[0.012201,0.026931,0.029601],[0.012495,0.027128,0.031631],[0.015167,0.027439,0.038291],[0.013137,0.027002,0.030748],[0.0125,0.027192,0.028786],[0.012832,0.027202,0.033155],[0.012277,0.027013,0.026908],[0.03934,0.041106,0.065995],[0.038112,0.041046,0.06567],[0.037791,0.041776,0.065313],[0.051919,0.051608,0.073097]]},{"date":"201801171710","rgb":[[0.012554,0.026787,0.023077],[0.01207,0.027041,0.017694],[0.012371,0.025713,0.022146],[0.014022,0.026636,0.029252],[0.011599,0.027019,0.021851],[0.010569,0.028031,0.015169],[0.010697,0.025868,0.021678],[0.012736,0.027208,0.026303],[0.013029,0.027748,0.021508],[0.011158,0.028442,0.015248],[0.011412,0.026765,0.021594],[0.012812,0.027185,0.023644],[0.039345,0.042442,0.060998],[0.037314,0.042291,0.059232],[0.037986,0.04213,0.060339],[0.052898,0.051842,0.07136]]},{"date":"201801171720","rgb":[[0.012689,0.026872,0.02305],[0.013594,0.026647,0.017121],[0.012574,0.026093,0.021258],[0.014962,0.026349,0.027836],[0.011647,0.027897,0.018884],[0.010544,0.028463,0.013547],[0.010482,0.027663,0.015535],[0.01241,0.027086,0.024725],[0.012163,0.027467,0.021816],[0.010762,0.028493,0.014749],[0.011017,0.027316,0.01884],[0.012442,0.027106,0.024534],[0.038385,0.041401,0.064013],[0.036923,0.042696,0.056799],[0.037277,0.041661,0.06124],[0.052093,0.051558,0.07306]]},{"date":"201801171730","rgb":[[0.012136,0.027324,0.020763],[0.013903,0.025779,0.018948],[0.012134,0.025904,0.021852],[0.015217,0.026576,0.026254],[0.011063,0.028597,0.014951],[0.010474,0.028372,0.013648],[0.010652,0.026193,0.020381],[0.01299,0.027179,0.024267],[0.011347,0.028756,0.015768],[0.010454,0.028813,0.012209],[0.010734,0.028091,0.015396],[0.012419,0.027104,0.021673],[0.038377,0.042313,0.059836],[0.037085,0.043094,0.055562],[0.03776,0.042166,0.059266],[0.053062,0.051974,0.07006]]},{"date":"201801171740","rgb":[[0.013261,0.027816,0.015523],[0.013155,0.026838,0.015267],[0.014326,0.026495,0.015867],[0.014165,0.027102,0.023333],[0.011324,0.028804,0.01389],[0.010444,0.02872,0.01172],[0.010538,0.028618,0.012731],[0.012428,0.027666,0.020572],[0.0126,0.028609,0.017394],[0.010724,0.028948,0.013304],[0.011046,0.028806,0.014499],[0.012076,0.027509,0.02128],[0.038529,0.043257,0.05662],[0.037044,0.043126,0.05525],[0.037794,0.043377,0.056568],[0.05271,0.052254,0.068908]]},{"date":"201801171750","rgb":[[0.013068,0.027816,0.015883],[0.013646,0.026905,0.013007],[0.013566,0.026508,0.015504],[0.016111,0.02656,0.023733],[0.010909,0.028849,0.013857],[0.010408,0.028794,0.010194],[0.010414,0.028726,0.011632],[0.012316,0.027877,0.020521],[0.011318,0.028899,0.014504],[0.010363,0.028826,0.01107],[0.010441,0.028766,0.012677],[0.01197,0.027851,0.01892],[0.038643,0.042816,0.057937],[0.03667,0.043238,0.05349],[0.036903,0.043416,0.054724],[0.052951,0.052217,0.068012]]},{"date":"201801171800","rgb":[[0.012084,0.028138,0.016296],[0.012699,0.027285,0.013863],[0.013743,0.026143,0.015923],[0.013615,0.027014,0.023743],[0.010751,0.029013,0.012502],[0.010369,0.028845,0.009003],[0.010398,0.028842,0.010724],[0.011438,0.027652,0.019192],[0.011266,0.028759,0.015055],[0.010366,0.028719,0.011021],[0.010367,0.028572,0.012318],[0.01185,0.02742,0.020788],[0.037237,0.043051,0.057028],[0.036447,0.043238,0.053391],[0.036513,0.043257,0.054085],[0.052265,0.052537,0.068914]]},{"date":"201801171810","rgb":[[0.013433,0.026692,0.01663],[0.014272,0.025985,0.014934],[0.013479,0.026508,0.014643],[0.016145,0.027302,0.022752],[0.010763,0.028941,0.013248],[0.010386,0.028742,0.0097436],[0.010351,0.028692,0.010538],[0.012343,0.027912,0.020329],[0.011061,0.028703,0.014238],[0.010379,0.028787,0.010348],[0.010342,0.028702,0.011909],[0.0118,0.027614,0.019614],[0.037445,0.042657,0.057719],[0.036541,0.043249,0.053579],[0.036692,0.043088,0.054143],[0.052061,0.052086,0.070197]]},{"date":"201801171820","rgb":[[0.013108,0.026136,0.021835],[0.013359,0.026375,0.01628],[0.012368,0.025902,0.020863],[0.015893,0.026704,0.026681],[0.010869,0.027145,0.018432],[0.010406,0.028557,0.012709],[0.010424,0.028401,0.013056],[0.014048,0.027342,0.02359],[0.011016,0.027939,0.017337],[0.010372,0.028675,0.012437],[0.010404,0.028456,0.013529],[0.012948,0.026968,0.023255],[0.037864,0.042552,0.059208],[0.036731,0.043194,0.054311],[0.037168,0.04267,0.057016],[0.051968,0.052601,0.07156]]},{"date":"201801171830","rgb":[[0.012518,0.027815,0.016534],[0.01249,0.027426,0.014158],[0.012903,0.026921,0.016604],[0.017117,0.026085,0.027904],[0.010955,0.028944,0.013997],[0.010399,0.028731,0.011669],[0.010416,0.028735,0.012163],[0.013775,0.027331,0.023396],[0.011094,0.028803,0.01506],[0.010463,0.028834,0.012374],[0.010423,0.028634,0.012968],[0.013748,0.027355,0.022894],[0.037753,0.042586,0.059148],[0.036573,0.043141,0.054493],[0.036849,0.042415,0.057972],[0.052631,0.051861,0.0725]]},{"date":"201801171840","rgb":[[0.012368,0.028013,0.016446],[0.014971,0.026164,0.013702],[0.012376,0.02724,0.01535],[0.014256,0.026949,0.023719],[0.011094,0.028896,0.013572],[0.010406,0.02879,0.010914],[0.010422,0.028676,0.012091],[0.013029,0.027164,0.022376],[0.011085,0.028849,0.01428],[0.010488,0.028854,0.011634],[0.010414,0.028691,0.012333],[0.012396,0.028116,0.01873],[0.037735,0.043173,0.056907],[0.036596,0.043254,0.053936],[0.037424,0.042898,0.057157],[0.05301,0.05259,0.069913]]},{"date":"201801171850","rgb":[[0.012409,0.02719,0.019417],[0.012648,0.026041,0.018872],[0.012429,0.02698,0.016799],[0.013963,0.02704,0.024967],[0.010951,0.028067,0.016367],[0.01045,0.028763,0.011395],[0.010411,0.028633,0.012145],[0.012505,0.027291,0.023154],[0.011259,0.028146,0.017722],[0.010491,0.028709,0.012532],[0.01048,0.028038,0.014437],[0.012351,0.026886,0.024845],[0.037637,0.04201,0.062404],[0.036941,0.042193,0.058537],[0.037174,0.042064,0.059423],[0.053577,0.051857,0.073836]]},{"date":"201801171900","rgb":[[0.011989,0.02779,0.018799],[0.011623,0.026314,0.018771],[0.012714,0.025603,0.020047],[0.014104,0.026808,0.025582],[0.011185,0.02829,0.016113],[0.010374,0.02845,0.012143],[0.010477,0.027597,0.015303],[0.012354,0.02717,0.023026],[0.011205,0.028455,0.016401],[0.010547,0.028739,0.01263],[0.01077,0.028299,0.015391],[0.012259,0.027418,0.022736],[0.037701,0.042455,0.059744],[0.036753,0.043244,0.055388],[0.037201,0.042297,0.058198],[0.052682,0.052086,0.072476]]},{"date":"201801171910","rgb":[[0.012066,0.027347,0.018009],[0.0157,0.024975,0.01702],[0.013345,0.025892,0.017589],[0.013655,0.027066,0.025865],[0.010836,0.028678,0.013571],[0.010403,0.028852,0.010971],[0.010402,0.028398,0.012709],[0.012054,0.026828,0.023568],[0.010955,0.028552,0.014692],[0.0104,0.028734,0.011784],[0.010516,0.02845,0.013816],[0.012105,0.026838,0.02318],[0.037445,0.042665,0.05891],[0.036676,0.042939,0.055623],[0.037121,0.042078,0.059718],[0.051978,0.052237,0.0717]]},{"date":"201801171920","rgb":[[0.011845,0.027344,0.018019],[0.014751,0.025784,0.015389],[0.013211,0.026225,0.016907],[0.013453,0.02656,0.025158],[0.010927,0.02806,0.016388],[0.010432,0.028732,0.012147],[0.010393,0.028495,0.013027],[0.011879,0.026521,0.024343],[0.011127,0.028496,0.015648],[0.010537,0.028898,0.01262],[0.010536,0.028547,0.013547],[0.011748,0.026692,0.02333],[0.037273,0.042748,0.05873],[0.036619,0.043322,0.054618],[0.037033,0.042678,0.057534],[0.051277,0.052116,0.071614]]},{"date":"201801171930","rgb":[[0.012227,0.026959,0.019161],[0.013165,0.025895,0.017712],[0.011374,0.026871,0.017625],[0.013169,0.026562,0.026282],[0.01085,0.027881,0.016728],[0.010412,0.028634,0.012398],[0.010445,0.028386,0.013175],[0.011876,0.026757,0.024043],[0.010999,0.028138,0.016376],[0.010443,0.028751,0.012574],[0.010521,0.028259,0.014362],[0.011718,0.027078,0.022401],[0.038048,0.042114,0.061955],[0.036867,0.042638,0.057535],[0.037476,0.041531,0.061592],[0.052068,0.052334,0.071534]]},{"date":"201801171940","rgb":[[0.014328,0.027077,0.024438],[0.012353,0.02677,0.02115],[0.015287,0.026458,0.018826],[0.016502,0.026623,0.027781],[0.012143,0.02748,0.021606],[0.010821,0.028633,0.014363],[0.010901,0.028468,0.015043],[0.0136,0.027292,0.025425],[0.012173,0.027368,0.022073],[0.010865,0.02868,0.014791],[0.010901,0.02851,0.015203],[0.012423,0.026941,0.024621],[0.038417,0.042511,0.059435],[0.037272,0.043197,0.055705],[0.037367,0.043161,0.056189],[0.053341,0.052055,0.072029]]},{"date":"201801171950","rgb":[[0.01227,0.028626,0.015161],[0.016702,0.025352,0.014006],[0.013971,0.026635,0.015165],[0.01373,0.027941,0.020829],[0.011092,0.029221,0.012878],[0.010415,0.028836,0.0099494],[0.010419,0.02876,0.012125],[0.012504,0.028212,0.018279],[0.012017,0.028985,0.014194],[0.010544,0.028943,0.011106],[0.010483,0.028807,0.012624],[0.012368,0.028278,0.018587],[0.037705,0.043232,0.056872],[0.037177,0.043347,0.054735],[0.037065,0.043324,0.055275],[0.05282,0.052931,0.066713]]},{"date":"201801172000","rgb":[[0.011927,0.027921,0.017062],[0.013592,0.025639,0.01841],[0.011715,0.025599,0.02115],[0.013463,0.026573,0.02641],[0.010899,0.028505,0.014936],[0.010422,0.028655,0.012627],[0.010385,0.027238,0.016036],[0.012258,0.027222,0.022937],[0.011112,0.028676,0.015773],[0.010434,0.028787,0.012107],[0.010376,0.028708,0.012441],[0.012171,0.027419,0.021205],[0.037518,0.042693,0.058581],[0.036532,0.043037,0.05502],[0.036923,0.042708,0.056689],[0.051999,0.052434,0.071396]]},{"date":"201801172010","rgb":[[0.012508,0.028064,0.015215],[0.011711,0.027615,0.014584],[0.01248,0.026606,0.016842],[0.013755,0.026738,0.02482],[0.010721,0.028817,0.013416],[0.010368,0.028712,0.011154],[0.0104,0.028695,0.011681],[0.011867,0.027618,0.020624],[0.010938,0.02881,0.013536],[0.010385,0.028778,0.011514],[0.010337,0.028639,0.012517],[0.012006,0.02772,0.019614],[0.037195,0.043154,0.057714],[0.036498,0.043152,0.054115],[0.036997,0.042775,0.057425],[0.051782,0.052053,0.070853]]},{"date":"201801172020","rgb":[[0.012278,0.027523,0.017402],[0.01267,0.027118,0.013639],[0.013167,0.026698,0.015822],[0.013357,0.027357,0.022289],[0.010876,0.028976,0.013833],[0.010408,0.028834,0.010149],[0.010438,0.028757,0.011678],[0.012512,0.028007,0.019964],[0.011351,0.028773,0.015221],[0.010448,0.028903,0.011428],[0.010618,0.028596,0.014012],[0.012611,0.027295,0.022367],[0.03784,0.043134,0.057061],[0.036768,0.043223,0.054571],[0.037293,0.042492,0.057771],[0.051938,0.052628,0.070315]]},{"date":"201801172030","rgb":[[0.013035,0.027251,0.017271],[0.013175,0.026062,0.017709],[0.012418,0.026701,0.016383],[0.012958,0.02703,0.024452],[0.010793,0.028857,0.013289],[0.010416,0.028781,0.010822],[0.010349,0.028654,0.01245],[0.011886,0.027412,0.021865],[0.011089,0.028696,0.014872],[0.010415,0.028777,0.012264],[0.010395,0.028671,0.012328],[0.012155,0.027258,0.022002],[0.037484,0.042851,0.058146],[0.036513,0.043106,0.054698],[0.036951,0.042685,0.056968],[0.051272,0.051882,0.072805]]},{"date":"201801172040","rgb":[[0.013331,0.027689,0.017923],[0.012975,0.027043,0.015279],[0.011968,0.02664,0.018158],[0.014105,0.027196,0.025124],[0.011154,0.028597,0.015317],[0.010502,0.028889,0.010775],[0.010412,0.028562,0.011649],[0.012441,0.027808,0.020725],[0.012074,0.029012,0.01641],[0.010805,0.029097,0.0127],[0.010579,0.02891,0.012621],[0.012104,0.027683,0.020734],[0.038164,0.042972,0.057803],[0.037158,0.043472,0.054445],[0.037308,0.043317,0.055311],[0.052306,0.05293,0.068047]]},{"date":"201801172050","rgb":[[0.012414,0.027297,0.01859],[0.012301,0.026577,0.01733],[0.011581,0.027219,0.016306],[0.013886,0.026919,0.024708],[0.011125,0.028862,0.014672],[0.01042,0.028811,0.010807],[0.010363,0.028548,0.011668],[0.012566,0.027529,0.020747],[0.011637,0.028559,0.016631],[0.010422,0.02879,0.011517],[0.010455,0.028708,0.012588],[0.011731,0.027054,0.021836],[0.037662,0.042707,0.059113],[0.036687,0.043246,0.053652],[0.036834,0.043054,0.055354],[0.051875,0.052516,0.070306]]},{"date":"201801172100","rgb":[[0.012952,0.027671,0.015661],[0.011953,0.026857,0.016642],[0.013992,0.025785,0.017756],[0.013749,0.026872,0.022655],[0.010874,0.028974,0.01324],[0.010397,0.028791,0.010385],[0.010397,0.028729,0.012128],[0.012203,0.027503,0.021334],[0.010918,0.028679,0.014835],[0.010413,0.028819,0.011195],[0.010448,0.028744,0.012764],[0.012114,0.027675,0.020727],[0.037886,0.043189,0.056779],[0.036544,0.043192,0.054258],[0.036862,0.042833,0.055587],[0.052507,0.052439,0.06949]]},{"date":"201801172110","rgb":[[0.012587,0.027608,0.017231],[0.015432,0.024425,0.020628],[0.014656,0.024461,0.021394],[0.013921,0.026788,0.024441],[0.010978,0.029146,0.01356],[0.01041,0.028223,0.012612],[0.010417,0.027114,0.016908],[0.012017,0.027449,0.021179],[0.011229,0.028478,0.017061],[0.010535,0.028881,0.011761],[0.010529,0.028448,0.013227],[0.011995,0.027095,0.022672],[0.037563,0.042567,0.059072],[0.036876,0.043124,0.054629],[0.03695,0.043039,0.055744],[0.051494,0.051988,0.070473]]},{"date":"201801172120","rgb":[[0.012962,0.027983,0.015719],[0.014053,0.026299,0.01431],[0.015471,0.02549,0.015957],[0.013672,0.026798,0.023808],[0.010831,0.028878,0.012933],[0.010412,0.02879,0.010765],[0.010437,0.028717,0.012254],[0.012222,0.027714,0.02105],[0.011,0.028756,0.014427],[0.010391,0.028745,0.011231],[0.010476,0.028776,0.012509],[0.012165,0.027442,0.02081],[0.037655,0.042997,0.057245],[0.036519,0.043175,0.054591],[0.037119,0.042491,0.056835],[0.051851,0.052043,0.070726]]},{"date":"201801172130","rgb":[[0.012411,0.027673,0.017167],[0.013699,0.026981,0.014033],[0.011597,0.026096,0.020121],[0.013845,0.026867,0.024671],[0.011156,0.028799,0.014551],[0.010496,0.028856,0.012015],[0.010438,0.028547,0.013247],[0.012113,0.027471,0.021998],[0.011369,0.028945,0.015145],[0.010593,0.028967,0.012293],[0.010504,0.028721,0.012443],[0.012053,0.02778,0.019449],[0.037699,0.04308,0.057965],[0.036993,0.043383,0.054248],[0.037046,0.043441,0.055836],[0.051295,0.052772,0.068261]]},{"date":"201801172140","rgb":[[0.01343,0.027092,0.019163],[0.014472,0.025789,0.016664],[0.011854,0.026161,0.019813],[0.014466,0.026745,0.026239],[0.011233,0.028252,0.016463],[0.010495,0.028832,0.012369],[0.010476,0.028586,0.012843],[0.012757,0.027631,0.022333],[0.011364,0.028437,0.016969],[0.010714,0.028983,0.012759],[0.010703,0.028833,0.013317],[0.012043,0.027238,0.021895],[0.038333,0.041954,0.062184],[0.03697,0.042985,0.056015],[0.037352,0.04289,0.057448],[0.052201,0.051997,0.072064]]},{"date":"201801172150","rgb":[[0.012365,0.028018,0.016706],[0.01175,0.027306,0.015183],[0.013189,0.025964,0.018889],[0.014042,0.026879,0.024486],[0.011098,0.028735,0.014311],[0.010415,0.028792,0.010814],[0.010428,0.028609,0.012489],[0.01253,0.027099,0.023518],[0.011699,0.029044,0.015898],[0.010813,0.028963,0.012265],[0.010542,0.028625,0.013167],[0.012233,0.02719,0.022903],[0.037662,0.042895,0.058082],[0.036794,0.043332,0.055303],[0.036912,0.043125,0.055975],[0.051997,0.052027,0.071392]]},{"date":"201801172200","rgb":[[0.012086,0.027914,0.017765],[0.013327,0.026359,0.016763],[0.013938,0.026191,0.017818],[0.014192,0.026819,0.025452],[0.011267,0.028608,0.016058],[0.010498,0.028812,0.012689],[0.010478,0.028334,0.014134],[0.012938,0.027468,0.023362],[0.011913,0.028414,0.018563],[0.010865,0.029021,0.013703],[0.010885,0.028188,0.015802],[0.012411,0.02702,0.023823],[0.038329,0.042225,0.060414],[0.037169,0.04254,0.057741],[0.037543,0.042078,0.06008],[0.053007,0.051991,0.071884]]},{"date":"201801172210","rgb":[[0.014392,0.027215,0.025191],[0.013699,0.02703,0.020848],[0.013602,0.027185,0.020618],[0.016102,0.026892,0.027638],[0.01258,0.027339,0.022608],[0.010946,0.027781,0.017102],[0.011134,0.026678,0.020919],[0.013764,0.02709,0.026509],[0.012478,0.0275,0.022948],[0.011033,0.028065,0.017017],[0.011226,0.027745,0.018528],[0.012254,0.02703,0.025169],[0.038929,0.042107,0.061628],[0.037329,0.042462,0.059168],[0.037676,0.041178,0.063462],[0.052781,0.051665,0.073364]]},{"date":"201801172220","rgb":[[0.012498,0.027749,0.017215],[0.014198,0.026432,0.015792],[0.015062,0.025386,0.017586],[0.014249,0.027417,0.022256],[0.011205,0.028996,0.014314],[0.010526,0.02883,0.011669],[0.010435,0.028648,0.012104],[0.0122,0.0277,0.021912],[0.011682,0.028926,0.016658],[0.010626,0.028972,0.013007],[0.010813,0.028172,0.016328],[0.012512,0.027504,0.021808],[0.037742,0.042945,0.058348],[0.037264,0.043239,0.054498],[0.037272,0.043063,0.057247],[0.052184,0.052303,0.069678]]},{"date":"201801172230","rgb":[[0.012456,0.028181,0.016746],[0.015605,0.0249,0.018286],[0.016762,0.025292,0.016595],[0.01711,0.027202,0.023874],[0.011232,0.029154,0.013976],[0.010467,0.028795,0.011152],[0.010484,0.028694,0.011943],[0.015625,0.02706,0.022924],[0.011765,0.028813,0.016664],[0.010803,0.029052,0.012965],[0.010674,0.02882,0.012978],[0.013284,0.027296,0.022118],[0.038062,0.042814,0.058895],[0.036911,0.043415,0.054765],[0.036981,0.043532,0.05438],[0.052232,0.05251,0.06936]]},{"date":"201801172240","rgb":[[0.012563,0.027483,0.018253],[0.014622,0.025338,0.018871],[0.012903,0.026605,0.016744],[0.013999,0.026991,0.024996],[0.011038,0.028868,0.014373],[0.01046,0.028801,0.011879],[0.010444,0.028717,0.011772],[0.012132,0.027766,0.020636],[0.011944,0.028501,0.018122],[0.010794,0.028854,0.013422],[0.010795,0.028677,0.01428],[0.011977,0.027359,0.02198],[0.037942,0.042161,0.060953],[0.037061,0.042986,0.056884],[0.03736,0.042142,0.059676],[0.051552,0.052151,0.071513]]},{"date":"201801172250","rgb":[[0.012532,0.027807,0.01699],[0.015758,0.025757,0.013446],[0.013676,0.02656,0.015614],[0.014437,0.02729,0.023298],[0.011579,0.02901,0.014854],[0.010546,0.028932,0.012014],[0.010497,0.028672,0.012061],[0.01302,0.027902,0.020961],[0.012329,0.02904,0.016748],[0.010912,0.02911,0.012921],[0.010883,0.028661,0.013945],[0.01259,0.02747,0.021737],[0.038202,0.042673,0.059328],[0.037255,0.043112,0.056318],[0.037512,0.042969,0.057217],[0.051991,0.052499,0.069952]]},{"date":"201801172300","rgb":[[0.013537,0.027437,0.017956],[0.013197,0.027158,0.014136],[0.013827,0.027123,0.015439],[0.017732,0.027101,0.024018],[0.011251,0.029188,0.013391],[0.010524,0.02892,0.011069],[0.010474,0.028817,0.011473],[0.014972,0.028028,0.020586],[0.012419,0.029136,0.014993],[0.010621,0.029003,0.012504],[0.010578,0.028887,0.012616],[0.013177,0.027882,0.020372],[0.038279,0.043314,0.057079],[0.03714,0.043375,0.054773],[0.0372,0.043497,0.055024],[0.05243,0.052647,0.068654]]},{"date":"201801172310","rgb":[[0.01277,0.027107,0.020662],[0.013232,0.026796,0.015398],[0.013688,0.026765,0.016991],[0.017753,0.02665,0.026283],[0.011535,0.028824,0.016243],[0.01056,0.028848,0.01184],[0.010578,0.028779,0.012836],[0.01634,0.027275,0.024185],[0.012787,0.027977,0.020586],[0.01076,0.028788,0.013852],[0.011028,0.028631,0.015369],[0.013906,0.027157,0.024846],[0.038915,0.042357,0.060962],[0.037191,0.04318,0.056464],[0.037551,0.042626,0.058535],[0.052785,0.051791,0.071694]]},{"date":"201801172320","rgb":[[0.012317,0.02811,0.016643],[0.012801,0.026954,0.015151],[0.012631,0.027098,0.016289],[0.015556,0.02742,0.023822],[0.011284,0.029091,0.014558],[0.010514,0.028871,0.010999],[0.010499,0.02881,0.01155],[0.014843,0.027852,0.020663],[0.012274,0.029071,0.015926],[0.010775,0.02898,0.012252],[0.010618,0.028779,0.012926],[0.013169,0.027237,0.02215],[0.038577,0.043259,0.057345],[0.037251,0.043583,0.055044],[0.037174,0.043598,0.055249],[0.052402,0.052802,0.068297]]},{"date":"201801172330","rgb":[[0.012535,0.026705,0.022285],[0.012913,0.026292,0.018397],[0.013884,0.02584,0.019264],[0.015498,0.026636,0.026549],[0.011412,0.027708,0.018531],[0.010555,0.028387,0.013757],[0.010586,0.02809,0.014638],[0.013543,0.027022,0.024622],[0.012911,0.027708,0.020684],[0.011025,0.028918,0.013728],[0.010887,0.028531,0.014656],[0.012936,0.027592,0.022458],[0.038624,0.042055,0.061864],[0.037172,0.042312,0.058778],[0.037623,0.043009,0.057247],[0.05266,0.052134,0.071154]]},{"date":"201801172340","rgb":[[0.012756,0.02774,0.018651],[0.015314,0.025836,0.01476],[0.013173,0.026318,0.017962],[0.015429,0.027316,0.024173],[0.01136,0.028534,0.01632],[0.010534,0.028926,0.01086],[0.010492,0.028794,0.011508],[0.012884,0.027506,0.022123],[0.012474,0.028711,0.0178],[0.010736,0.029065,0.012859],[0.010784,0.02883,0.013317],[0.012441,0.027121,0.022972],[0.038632,0.042811,0.05979],[0.037388,0.043615,0.055156],[0.037602,0.043228,0.056313],[0.052525,0.0523,0.070597]]},{"date":"201801172350","rgb":[[0.012795,0.02796,0.017691],[0.013843,0.02676,0.016009],[0.012438,0.027013,0.018419],[0.016056,0.026711,0.026594],[0.01165,0.02899,0.015764],[0.010536,0.028863,0.012273],[0.010508,0.028571,0.012901],[0.012846,0.027408,0.022966],[0.012281,0.028764,0.017402],[0.010759,0.028998,0.012524],[0.010681,0.028739,0.013713],[0.012381,0.027168,0.021862],[0.038533,0.042881,0.058085],[0.037374,0.043474,0.054606],[0.037313,0.043096,0.055889],[0.052173,0.05211,0.071468]]},{"date":"201801180000","rgb":[[0.013457,0.02727,0.019061],[0.012605,0.026928,0.016347],[0.013119,0.026423,0.017165],[0.014264,0.026924,0.025316],[0.0112,0.028826,0.014893],[0.010448,0.028775,0.011664],[0.010406,0.028554,0.012059],[0.012729,0.027481,0.021463],[0.011907,0.028684,0.017726],[0.010596,0.028905,0.013097],[0.010482,0.028689,0.012966],[0.011569,0.027016,0.022244],[0.037891,0.042577,0.059566],[0.037279,0.043219,0.055519],[0.037031,0.04325,0.055555],[0.052612,0.052505,0.071807]]},{"date":"201801180010","rgb":[[0.012718,0.028373,0.014352],[0.014139,0.026835,0.011675],[0.013545,0.027092,0.013956],[0.014672,0.02764,0.021661],[0.011401,0.029399,0.012995],[0.010531,0.028962,0.010429],[0.010477,0.028821,0.011615],[0.012523,0.028124,0.020338],[0.011915,0.029269,0.015753],[0.010809,0.028979,0.012396],[0.010626,0.028878,0.012315],[0.012441,0.027874,0.020658],[0.038362,0.04298,0.057332],[0.037099,0.04347,0.055162],[0.037366,0.043283,0.055705],[0.053051,0.052617,0.070896]]},{"date":"201801180020","rgb":[[0.012565,0.027358,0.019857],[0.01223,0.026695,0.017269],[0.012339,0.026467,0.018021],[0.013704,0.026799,0.024905],[0.011207,0.028494,0.016318],[0.010534,0.028908,0.01219],[0.010491,0.028329,0.013573],[0.012323,0.027418,0.022865],[0.012222,0.027742,0.019888],[0.010716,0.028929,0.013645],[0.010886,0.028398,0.015683],[0.012037,0.027052,0.023662],[0.038724,0.042058,0.061299],[0.036882,0.043233,0.055414],[0.03721,0.042766,0.057919],[0.052295,0.05248,0.071744]]},{"date":"201801180030","rgb":[[0.013089,0.027483,0.018297],[0.017442,0.024811,0.015082],[0.01326,0.02689,0.016068],[0.014354,0.027215,0.023532],[0.011223,0.028848,0.014637],[0.010517,0.028827,0.012056],[0.010433,0.028721,0.012172],[0.01238,0.02799,0.020614],[0.012112,0.028672,0.017195],[0.010621,0.028966,0.012665],[0.010673,0.028845,0.01324],[0.012301,0.027532,0.021439],[0.03838,0.042505,0.059135],[0.037139,0.042703,0.0568],[0.037144,0.042674,0.0573],[0.052365,0.052991,0.069984]]},{"date":"201801180040","rgb":[[0.012412,0.027267,0.019786],[0.012355,0.027065,0.015727],[0.011645,0.027369,0.016587],[0.014654,0.026463,0.026207],[0.011031,0.028343,0.015844],[0.010499,0.02881,0.012299],[0.010398,0.028641,0.011877],[0.012028,0.02737,0.022354],[0.011833,0.028551,0.017662],[0.010601,0.028762,0.013535],[0.010659,0.028735,0.014047],[0.012457,0.027188,0.022633],[0.038104,0.042524,0.059482],[0.037031,0.043094,0.055004],[0.037008,0.042935,0.056257],[0.052152,0.052817,0.071134]]},{"date":"201801180050","rgb":[[0.01286,0.027121,0.019892],[0.014485,0.026187,0.016307],[0.012952,0.026113,0.019536],[0.014068,0.027283,0.02451],[0.011043,0.02864,0.014988],[0.010485,0.02885,0.011014],[0.010425,0.0283,0.013063],[0.012396,0.027529,0.021788],[0.011758,0.028698,0.016451],[0.010662,0.029012,0.012322],[0.010635,0.028806,0.013245],[0.012486,0.027145,0.021992],[0.038732,0.043036,0.057934],[0.037048,0.043516,0.054378],[0.037167,0.043112,0.05613],[0.052717,0.052566,0.071155]]},{"date":"201801180100","rgb":[[0.012797,0.027452,0.018708],[0.014055,0.026597,0.014962],[0.013205,0.026616,0.017484],[0.014296,0.0269,0.025358],[0.01122,0.028649,0.01526],[0.010473,0.028807,0.011649],[0.010517,0.028671,0.013239],[0.012294,0.027376,0.022824],[0.012091,0.02875,0.016872],[0.010673,0.028932,0.012736],[0.010728,0.028219,0.015146],[0.012141,0.02742,0.022117],[0.038676,0.042636,0.059442],[0.037097,0.043113,0.055305],[0.037215,0.042901,0.057753],[0.052536,0.052344,0.072016]]},{"date":"201801180110","rgb":[[0.012681,0.027141,0.019347],[0.014494,0.026366,0.013735],[0.013954,0.026539,0.014532],[0.013345,0.026865,0.02397],[0.01107,0.028682,0.014706],[0.010553,0.028886,0.012239],[0.010454,0.028719,0.012283],[0.012566,0.027431,0.020976],[0.011882,0.02847,0.017636],[0.010561,0.028857,0.011661],[0.010653,0.02863,0.013602],[0.012163,0.027373,0.022132],[0.038056,0.042054,0.060416],[0.036738,0.043365,0.05481],[0.036865,0.043116,0.055982],[0.052362,0.052546,0.069458]]},{"date":"201801180120","rgb":[[0.013364,0.027211,0.018461],[0.014849,0.02637,0.013761],[0.014384,0.025583,0.018506],[0.015115,0.026674,0.025279],[0.011449,0.028333,0.016877],[0.010609,0.028886,0.01209],[0.010593,0.02829,0.014063],[0.012965,0.027262,0.023868],[0.011856,0.028047,0.019119],[0.01084,0.028932,0.013746],[0.010812,0.028292,0.015673],[0.012232,0.026845,0.023863],[0.038564,0.042502,0.059795],[0.037366,0.043031,0.056492],[0.037431,0.042053,0.060808],[0.052695,0.052215,0.071823]]},{"date":"201801180130","rgb":[[0.012236,0.027792,0.018837],[0.011994,0.026888,0.017588],[0.013217,0.026698,0.016608],[0.014301,0.027176,0.025225],[0.011347,0.028802,0.014829],[0.01056,0.028935,0.011846],[0.010539,0.028673,0.01302],[0.01273,0.027396,0.02275],[0.012149,0.028566,0.01741],[0.010716,0.028904,0.012752],[0.010842,0.028631,0.0146],[0.012295,0.027226,0.022289],[0.038472,0.04239,0.060499],[0.037154,0.043211,0.056087],[0.037274,0.042599,0.057908],[0.053276,0.052358,0.070343]]},{"date":"201801180140","rgb":[[0.012535,0.028372,0.015879],[0.013654,0.025428,0.020101],[0.012689,0.027321,0.015066],[0.015597,0.027099,0.021586],[0.011259,0.029054,0.014365],[0.010506,0.028724,0.012102],[0.010508,0.028766,0.012347],[0.012244,0.028094,0.019219],[0.011611,0.028975,0.015201],[0.010594,0.02898,0.011777],[0.010567,0.028926,0.012401],[0.011857,0.027961,0.01946],[0.038189,0.042988,0.057911],[0.036823,0.043376,0.054864],[0.037086,0.04339,0.05556],[0.052408,0.053003,0.06793]]},{"date":"201801180150","rgb":[[0.013097,0.027494,0.018891],[0.011715,0.026989,0.017619],[0.013343,0.025975,0.019884],[0.014023,0.026967,0.025917],[0.011128,0.027534,0.018639],[0.01049,0.028692,0.013107],[0.010492,0.027564,0.015932],[0.012428,0.026768,0.025835],[0.011838,0.028639,0.016814],[0.010646,0.028847,0.013337],[0.010621,0.027873,0.015761],[0.01266,0.026836,0.023199],[0.037876,0.043145,0.057639],[0.036888,0.04332,0.055045],[0.037049,0.042674,0.057208],[0.052592,0.052531,0.070621]]},{"date":"201801180200","rgb":[[0.013058,0.028352,0.015498],[0.012321,0.027082,0.015696],[0.012346,0.027335,0.014846],[0.014185,0.027296,0.022776],[0.01123,0.029176,0.014144],[0.010451,0.028806,0.0106],[0.010405,0.028718,0.011541],[0.012289,0.027392,0.02124],[0.012508,0.028745,0.017035],[0.010603,0.02891,0.012813],[0.010499,0.02871,0.012779],[0.012057,0.027278,0.022305],[0.03859,0.043107,0.057796],[0.036892,0.043419,0.054408],[0.037116,0.043363,0.055279],[0.053104,0.052995,0.068352]]},{"date":"201801180210","rgb":[[0.012588,0.02731,0.020014],[0.012282,0.027159,0.016301],[0.013701,0.026497,0.016634],[0.014423,0.02703,0.024318],[0.011544,0.028826,0.015699],[0.010516,0.028733,0.012858],[0.010567,0.028765,0.012803],[0.012802,0.027148,0.023181],[0.012271,0.028504,0.017858],[0.01067,0.028847,0.013454],[0.011032,0.028332,0.015402],[0.012276,0.027297,0.02259],[0.038052,0.042744,0.059019],[0.036888,0.043228,0.055232],[0.036988,0.042054,0.059729],[0.05296,0.052501,0.070583]]},{"date":"201801180220","rgb":[[0.012344,0.028156,0.017319],[0.012395,0.027492,0.013811],[0.015393,0.024932,0.018003],[0.013601,0.027045,0.023273],[0.011192,0.029033,0.014568],[0.01045,0.028831,0.010989],[0.010436,0.028565,0.012398],[0.012316,0.027446,0.020511],[0.011496,0.02874,0.016452],[0.010542,0.028944,0.012028],[0.010489,0.028772,0.012324],[0.012356,0.027386,0.020356],[0.037439,0.042658,0.058635],[0.036518,0.043339,0.053636],[0.036826,0.043187,0.055402],[0.051813,0.053043,0.069373]]},{"date":"201801180230","rgb":[[0.012657,0.027267,0.020883],[0.012237,0.027348,0.016101],[0.013841,0.026615,0.017982],[0.014617,0.026798,0.027624],[0.01113,0.028349,0.017177],[0.010466,0.028779,0.011531],[0.010561,0.028377,0.013972],[0.012756,0.027006,0.024562],[0.011446,0.028429,0.016873],[0.01044,0.028802,0.012505],[0.010688,0.028387,0.014863],[0.012653,0.02679,0.025589],[0.038105,0.042956,0.058996],[0.036701,0.043166,0.054904],[0.037389,0.04311,0.057169],[0.053498,0.052143,0.073519]]},{"date":"201801180240","rgb":[[0.012837,0.027627,0.018872],[0.012471,0.02723,0.015967],[0.013329,0.026184,0.017493],[0.014146,0.026504,0.026286],[0.011117,0.028999,0.014443],[0.010468,0.028806,0.01223],[0.010365,0.028512,0.012386],[0.012156,0.027232,0.022219],[0.011267,0.028912,0.014692],[0.010492,0.02881,0.011956],[0.010409,0.028718,0.011988],[0.012242,0.027665,0.020702],[0.037453,0.042954,0.057929],[0.036555,0.043176,0.054333],[0.036835,0.042854,0.055859],[0.05257,0.052283,0.071737]]},{"date":"201801180250","rgb":[[0.012992,0.027267,0.020727],[0.015219,0.026272,0.015006],[0.013384,0.026267,0.018834],[0.014268,0.026898,0.026033],[0.011215,0.028449,0.016313],[0.010466,0.028719,0.011647],[0.010505,0.02841,0.013142],[0.012293,0.02685,0.023735],[0.011218,0.028276,0.016648],[0.010484,0.028831,0.012187],[0.010451,0.028721,0.012939],[0.012022,0.027037,0.023086],[0.037829,0.042371,0.061041],[0.036573,0.043339,0.054146],[0.037042,0.042932,0.056113],[0.053433,0.052103,0.072415]]},{"date":"201801180300","rgb":[[0.013155,0.027754,0.017942],[0.017924,0.023458,0.021496],[0.015802,0.024465,0.021446],[0.014575,0.027184,0.024192],[0.011268,0.028787,0.014747],[0.010468,0.027494,0.015133],[0.010459,0.028173,0.013491],[0.012355,0.028207,0.019445],[0.011159,0.028329,0.015999],[0.010405,0.028758,0.01165],[0.010366,0.028621,0.012516],[0.01223,0.027019,0.021794],[0.037727,0.043016,0.058158],[0.036479,0.043135,0.054489],[0.036784,0.042945,0.055203],[0.052634,0.052796,0.069757]]},{"date":"201801180310","rgb":[[0.012381,0.027149,0.019158],[0.013107,0.026081,0.018608],[0.012137,0.026788,0.017362],[0.013509,0.026739,0.026844],[0.0111,0.027868,0.01691],[0.010566,0.028611,0.012797],[0.010497,0.028047,0.014774],[0.012419,0.027195,0.024919],[0.01126,0.028394,0.016896],[0.010431,0.028704,0.012618],[0.010549,0.028217,0.014182],[0.012495,0.026937,0.024363],[0.037132,0.04247,0.058556],[0.03648,0.043141,0.053967],[0.03678,0.042684,0.056422],[0.052301,0.052443,0.072272]]},{"date":"201801180320","rgb":[[0.012519,0.028052,0.017248],[0.011723,0.027543,0.015509],[0.012312,0.027457,0.016452],[0.01444,0.027089,0.026017],[0.011289,0.028289,0.016238],[0.010467,0.028819,0.012368],[0.010546,0.028694,0.013017],[0.013566,0.027081,0.024958],[0.011379,0.028403,0.016697],[0.01047,0.028814,0.012208],[0.010671,0.028826,0.013083],[0.012466,0.027255,0.023238],[0.037707,0.042597,0.05931],[0.036532,0.043218,0.054351],[0.037167,0.043259,0.055204],[0.053324,0.05236,0.072103]]},{"date":"201801180330","rgb":[[0.012804,0.02694,0.02259],[0.012693,0.026762,0.018033],[0.012641,0.025891,0.021782],[0.014948,0.026849,0.028481],[0.011625,0.028319,0.017536],[0.010536,0.028858,0.012534],[0.010491,0.027314,0.016242],[0.013445,0.027205,0.023723],[0.011774,0.027733,0.018832],[0.010558,0.028556,0.013868],[0.010579,0.028248,0.014856],[0.012935,0.026768,0.025723],[0.037873,0.042364,0.060504],[0.036663,0.042975,0.055642],[0.037147,0.04208,0.05896],[0.053319,0.052427,0.074615]]},{"date":"201801180340","rgb":[[0.012848,0.027431,0.019294],[0.015701,0.025891,0.014446],[0.01424,0.026673,0.014405],[0.014681,0.026833,0.024532],[0.010996,0.028613,0.014551],[0.01045,0.028872,0.010196],[0.010441,0.028723,0.011689],[0.011762,0.0277,0.019768],[0.010986,0.028618,0.015063],[0.010425,0.028821,0.010863],[0.01038,0.028638,0.012249],[0.011799,0.027625,0.019907],[0.037094,0.042823,0.056902],[0.036391,0.043206,0.053512],[0.036679,0.043144,0.05489],[0.051989,0.052946,0.070859]]},{"date":"201801180350","rgb":[[0.014294,0.026833,0.020959],[0.015635,0.026224,0.015197],[0.014319,0.026284,0.016848],[0.015944,0.026604,0.025388],[0.011356,0.02841,0.016756],[0.010512,0.028556,0.012397],[0.010499,0.028538,0.012678],[0.012707,0.027922,0.020876],[0.011563,0.028466,0.016629],[0.010524,0.02891,0.01171],[0.010522,0.028802,0.012415],[0.012663,0.027766,0.020921],[0.03768,0.043143,0.057768],[0.03657,0.043314,0.054306],[0.037022,0.042955,0.056557],[0.053724,0.052955,0.069064]]},{"date":"201801180400","rgb":[[0.013123,0.027657,0.019671],[0.014124,0.026553,0.015271],[0.012478,0.026661,0.018482],[0.015302,0.02661,0.028015],[0.011537,0.027667,0.019426],[0.010573,0.028914,0.01261],[0.010553,0.027958,0.01518],[0.013465,0.027262,0.025157],[0.011522,0.028907,0.015275],[0.010457,0.028866,0.011938],[0.010443,0.028531,0.013176],[0.012655,0.027152,0.023391],[0.037526,0.042869,0.058264],[0.036433,0.043191,0.053828],[0.036986,0.042758,0.0569],[0.052667,0.052612,0.075126]]},{"date":"201801180410","rgb":[[0.014848,0.027756,0.019444],[0.013169,0.028135,0.015139],[0.013628,0.027482,0.018302],[0.017087,0.026537,0.026921],[0.012239,0.028486,0.018617],[0.010895,0.029044,0.013083],[0.010674,0.028716,0.013921],[0.013972,0.027401,0.023876],[0.01212,0.02887,0.016661],[0.010809,0.029095,0.01328],[0.010837,0.028873,0.013737],[0.013427,0.027238,0.023526],[0.037736,0.043063,0.058807],[0.037114,0.043244,0.054433],[0.037407,0.043366,0.056501],[0.054123,0.052745,0.070081]]},{"date":"201801180420","rgb":[[0.013244,0.027872,0.019084],[0.013718,0.026373,0.01824],[0.01314,0.026727,0.019328],[0.015524,0.026879,0.025812],[0.01182,0.027807,0.019644],[0.01076,0.028716,0.014153],[0.010685,0.02785,0.015997],[0.013307,0.026905,0.025372],[0.011719,0.028162,0.017944],[0.010762,0.028873,0.013234],[0.010765,0.028493,0.014707],[0.012409,0.026654,0.024513],[0.037423,0.042772,0.057863],[0.03671,0.04304,0.056057],[0.037146,0.0425,0.057404],[0.052453,0.052373,0.072524]]},{"date":"201801180430","rgb":[[0.013146,0.027679,0.018813],[0.012109,0.026711,0.018114],[0.014394,0.025854,0.019767],[0.015059,0.027134,0.025048],[0.011473,0.02856,0.016553],[0.010506,0.028749,0.012528],[0.010608,0.028529,0.013497],[0.01292,0.027294,0.02366],[0.011613,0.028455,0.016536],[0.010442,0.0288,0.012208],[0.010591,0.028544,0.013377],[0.011916,0.027611,0.020799],[0.037571,0.042623,0.058473],[0.036628,0.043068,0.054779],[0.036912,0.043175,0.055288],[0.052884,0.052557,0.07194]]},{"date":"201801180440","rgb":[[0.013932,0.027579,0.021239],[0.013204,0.027859,0.016136],[0.014085,0.027171,0.019781],[0.016743,0.026483,0.027088],[0.012142,0.027827,0.019284],[0.010848,0.028528,0.01506],[0.011021,0.027981,0.016995],[0.013969,0.027075,0.02556],[0.011899,0.027986,0.018665],[0.010681,0.02848,0.014122],[0.01101,0.02783,0.0173],[0.012849,0.0269,0.024836],[0.037515,0.042615,0.058975],[0.036815,0.043342,0.054867],[0.037368,0.04246,0.058222],[0.053464,0.05262,0.076057]]},{"date":"201801180450","rgb":[[0.013555,0.027066,0.021212],[0.015737,0.025404,0.015715],[0.013676,0.026059,0.016257],[0.013947,0.026983,0.022725],[0.011172,0.028253,0.015496],[0.01041,0.028814,0.010677],[0.010398,0.028731,0.011958],[0.011677,0.027244,0.021443],[0.010701,0.028736,0.013617],[0.010343,0.028796,0.010779],[0.010341,0.028515,0.01293],[0.012217,0.02739,0.022299],[0.037442,0.042894,0.058714],[0.036473,0.043177,0.054279],[0.036808,0.042856,0.056694],[0.052251,0.05274,0.071851]]},{"date":"201801180500","rgb":[[0.013276,0.027141,0.023486],[0.012063,0.026924,0.017205],[0.012871,0.025357,0.020479],[0.013634,0.026514,0.025238],[0.01157,0.02776,0.018745],[0.010406,0.02872,0.010948],[0.010432,0.028361,0.013148],[0.011972,0.026838,0.024085],[0.010919,0.028289,0.015361],[0.010411,0.028781,0.011583],[0.010437,0.028443,0.01319],[0.012025,0.026986,0.024031],[0.037736,0.0424,0.060572],[0.036692,0.042934,0.056046],[0.037496,0.042209,0.05999],[0.052084,0.05252,0.074163]]},{"date":"201801180510","rgb":[[0.013421,0.027188,0.022897],[0.012123,0.026721,0.017843],[0.012842,0.026438,0.017247],[0.013263,0.026855,0.026618],[0.011153,0.027997,0.016647],[0.010387,0.028707,0.011744],[0.010438,0.02792,0.014362],[0.011705,0.026506,0.023923],[0.01098,0.028503,0.015471],[0.010406,0.028709,0.012138],[0.010457,0.02837,0.013118],[0.011918,0.027012,0.024151],[0.037921,0.0425,0.061266],[0.036593,0.042913,0.055637],[0.037223,0.041965,0.060478],[0.052174,0.052212,0.073641]]},{"date":"201801180520","rgb":[[0.013589,0.027278,0.023755],[0.012137,0.027254,0.016114],[0.013162,0.02617,0.016984],[0.012978,0.026886,0.023619],[0.011186,0.028196,0.016025],[0.010401,0.028831,0.010192],[0.010362,0.028628,0.011337],[0.011617,0.027328,0.020955],[0.010809,0.02841,0.01537],[0.01037,0.028773,0.012067],[0.010407,0.028567,0.013006],[0.011691,0.027247,0.021962],[0.037776,0.04265,0.059637],[0.036854,0.04309,0.055521],[0.037037,0.042616,0.05776],[0.052126,0.052639,0.071355]]},{"date":"201801180530","rgb":[[0.013306,0.027828,0.020223],[0.011942,0.0271,0.015664],[0.014591,0.025143,0.018524],[0.013165,0.027213,0.021884],[0.011356,0.028416,0.016221],[0.010373,0.02882,0.010821],[0.010353,0.028761,0.01154],[0.011507,0.027711,0.019811],[0.010925,0.028787,0.014172],[0.010386,0.028764,0.011334],[0.010453,0.028756,0.011584],[0.012177,0.027749,0.019994],[0.037762,0.043038,0.057765],[0.036573,0.0432,0.053439],[0.036816,0.042889,0.056316],[0.052086,0.052913,0.069942]]},{"date":"201801180540","rgb":[[0.014625,0.027117,0.023593],[0.013296,0.02696,0.014419],[0.012716,0.026519,0.016581],[0.013777,0.026637,0.025212],[0.011301,0.02834,0.016406],[0.010398,0.028795,0.011524],[0.010434,0.028704,0.012248],[0.011636,0.027279,0.022183],[0.011104,0.028308,0.01682],[0.010489,0.028799,0.012664],[0.01053,0.028163,0.014733],[0.012121,0.027098,0.024587],[0.038068,0.042741,0.060608],[0.036855,0.043187,0.055657],[0.037203,0.042529,0.05867],[0.052029,0.052526,0.073257]]},{"date":"201801180550","rgb":[[0.013698,0.027046,0.026104],[0.0123,0.026682,0.018257],[0.01226,0.025952,0.020027],[0.014473,0.026686,0.027212],[0.011402,0.027473,0.0181],[0.010382,0.028713,0.012217],[0.01042,0.028491,0.013005],[0.01236,0.027143,0.023311],[0.010877,0.028308,0.015967],[0.010384,0.02869,0.012587],[0.010488,0.028408,0.013906],[0.012634,0.027036,0.024901],[0.037994,0.042164,0.061658],[0.036826,0.043014,0.056684],[0.037308,0.042205,0.059675],[0.052693,0.052538,0.073812]]},{"date":"201801180600","rgb":[[0.014074,0.028258,0.019158],[0.01463,0.026383,0.01419],[0.012942,0.027176,0.013457],[0.013783,0.027628,0.020737],[0.011147,0.02883,0.013794],[0.010403,0.028822,0.0096818],[0.010443,0.02881,0.010863],[0.012057,0.028102,0.01875],[0.010798,0.028902,0.012615],[0.010407,0.028883,0.0098888],[0.010524,0.028731,0.010665],[0.01286,0.028203,0.018301],[0.038316,0.043009,0.058336],[0.036801,0.043208,0.052956],[0.03695,0.043368,0.054432],[0.052689,0.05331,0.069082]]},{"date":"201801180610","rgb":[[0.015171,0.026661,0.025699],[0.012388,0.026965,0.016843],[0.013523,0.026562,0.015911],[0.013579,0.026937,0.023873],[0.011513,0.02831,0.016231],[0.01035,0.028689,0.011267],[0.01039,0.028513,0.01188],[0.012116,0.027723,0.020498],[0.010911,0.028637,0.015384],[0.010373,0.028711,0.012274],[0.010585,0.028012,0.014778],[0.012339,0.027223,0.02244],[0.038612,0.042123,0.062152],[0.036765,0.043094,0.055205],[0.037362,0.042121,0.059388],[0.053031,0.052401,0.072638]]},{"date":"201801180620","rgb":[[0.012908,0.027193,0.023229],[0.013143,0.027427,0.013685],[0.015307,0.025607,0.016565],[0.014774,0.026848,0.024295],[0.011265,0.027923,0.017317],[0.010373,0.02877,0.0096253],[0.010402,0.028722,0.011322],[0.013344,0.028117,0.019066],[0.010982,0.028464,0.015625],[0.010426,0.028864,0.011115],[0.010464,0.028481,0.01273],[0.012808,0.027575,0.022669],[0.038036,0.042945,0.060279],[0.036804,0.043115,0.055105],[0.037489,0.043052,0.056634],[0.053729,0.052882,0.069684]]},{"date":"201801180630","rgb":[[0.01382,0.02716,0.024642],[0.01209,0.027244,0.014577],[0.011839,0.026898,0.016123],[0.013502,0.026739,0.023557],[0.011108,0.028307,0.015938],[0.010384,0.028817,0.01048],[0.010371,0.028706,0.011539],[0.011854,0.028022,0.019073],[0.010894,0.028562,0.014903],[0.010322,0.028749,0.010531],[0.010412,0.028759,0.011692],[0.011985,0.027304,0.02189],[0.03779,0.042674,0.060478],[0.036659,0.043202,0.054578],[0.037014,0.0425,0.057324],[0.052538,0.052417,0.072208]]},{"date":"201801180640","rgb":[[0.018873,0.028495,0.056736],[0.011844,0.027312,0.019406],[0.011463,0.027657,0.01571],[0.013726,0.026789,0.027298],[0.012226,0.026918,0.026495],[0.010461,0.027488,0.015435],[0.010511,0.027723,0.015216],[0.012339,0.026956,0.025054],[0.011356,0.027691,0.020196],[0.01055,0.028411,0.013454],[0.010854,0.02721,0.019001],[0.012884,0.026966,0.026136],[0.038471,0.042356,0.06388],[0.037311,0.041728,0.060458],[0.03771,0.041403,0.063734],[0.05238,0.052586,0.075303]]},{"date":"201801180650","rgb":[[0.042023,0.034429,0.27137],[0.01419,0.027223,0.041597],[0.012399,0.026519,0.027101],[0.014584,0.027375,0.036453],[0.01758,0.028098,0.06956],[0.012342,0.026871,0.031987],[0.012178,0.026868,0.030423],[0.013648,0.027059,0.034315],[0.014019,0.027243,0.03845],[0.012826,0.026959,0.032957],[0.01586,0.027269,0.048206],[0.014589,0.027507,0.0402],[0.042845,0.042664,0.093435],[0.042186,0.042103,0.091026],[0.043299,0.042342,0.095819],[0.056832,0.053751,0.097603]]},{"date":"201801180700","rgb":[[0.10707,0.085345,0.6264],[0.024789,0.031797,0.11171],[0.01826,0.02798,0.060402],[0.024382,0.029323,0.088593],[0.035262,0.036572,0.1865],[0.024473,0.029799,0.10759],[0.021914,0.028991,0.087356],[0.022316,0.029203,0.083957],[0.026117,0.030606,0.11719],[0.025083,0.030418,0.11182],[0.035578,0.032805,0.18073],[0.025715,0.030658,0.10944],[0.061554,0.045915,0.22741],[0.06215,0.04685,0.22723],[0.061359,0.046774,0.22393],[0.069348,0.057157,0.18917]]},{"date":"201801180710","rgb":[[0.48742,0.90634,0.98435],[0.12386,0.17894,0.56894],[0.080849,0.066572,0.43939],[0.1,0.058143,0.51122],[0.19927,0.31015,0.69655],[0.12737,0.15891,0.58696],[0.12173,0.13621,0.52691],[0.10231,0.080445,0.49766],[0.12962,0.14702,0.61043],[0.13012,0.16143,0.58548],[0.16564,0.20599,0.72089],[0.12749,0.11243,0.54423],[0.19109,0.22896,0.74703],[0.20961,0.25987,0.83209],[0.19392,0.22421,0.77875],[0.19074,0.16739,0.67418]]},{"date":"201801180720","rgb":[[0.3996,0.89604,0.9858],[0.15031,0.24059,0.67084],[0.12253,0.14782,0.55888],[0.14975,0.15354,0.63996],[0.1936,0.34394,0.74717],[0.18052,0.27682,0.76071],[0.1809,0.24824,0.70832],[0.14824,0.16611,0.63554],[0.18352,0.27778,0.76702],[0.17517,0.27421,0.72293],[0.22896,0.36402,0.90104],[0.19407,0.23706,0.73898],[0.25165,0.39198,0.82532],[0.24716,0.38148,0.88676],[0.24491,0.36727,0.8931],[0.25349,0.31116,0.82197]]},{"date":"201801180730","rgb":[[0.8656,0.93731,0.99518],[0.23755,0.34581,0.80875],[0.17454,0.21937,0.7181],[0.19559,0.20154,0.77479],[0.31507,0.46285,0.88265],[0.23602,0.38736,0.89128],[0.22581,0.33313,0.85256],[0.18797,0.21632,0.75101],[0.25874,0.44123,0.89683],[0.23867,0.40695,0.82222],[0.29356,0.51785,0.93923],[0.23811,0.31526,0.85438],[0.32862,0.63963,0.89547],[0.32223,0.59827,0.91747],[0.30912,0.54301,0.91101],[0.29721,0.39723,0.86679]]},{"date":"201801180740","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99327,0.97732,0.99976],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.81577,0.91439,0.94434],[0.88805,0.91234,0.94812],[0.89665,0.90979,0.94683],[0.9054,0.90976,0.94023]]},{"date":"201801180750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.91817,0.90799,0.95131],[0.9289,0.90579,0.95153],[0.92931,0.9059,0.95159],[0.92709,0.90501,0.94442]]},{"date":"201801180800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92852,0.90544,0.9513],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90342,0.94488]]},{"date":"201801180810","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92804,0.90556,0.95137],[0.93121,0.90484,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90342,0.94492]]},{"date":"201801180820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99488,0.9769,1],[0.99557,0.97665,1],[0.99608,0.97647,1],[0.99097,0.97821,1],[0.98482,0.98024,1],[0.98595,0.97988,1],[0.99321,0.97745,1],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92189,0.9083,0.95161],[0.92128,0.9069,0.94491]]},{"date":"201801180830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93067,0.90343,0.94496]]},{"date":"201801180840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93068,0.90344,0.94488]]},{"date":"201801180850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.9034,0.94482]]},{"date":"201801180900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90341,0.94486]]},{"date":"201801180910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90339,0.94488]]},{"date":"201801180920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.9034,0.94493]]},{"date":"201801181600","rgb":[[0.23289,0.4406,0.99871],[0.2353,0.43194,0.99555],[0.24829,0.43507,0.99893],[0.24959,0.43049,0.99835],[0.24794,0.47682,0.99648],[0.2493,0.4633,0.99663],[0.2543,0.45136,0.99467],[0.25383,0.43762,0.99589],[0.22237,0.41266,0.88297],[0.23754,0.42311,0.94284],[0.22743,0.37317,0.8749],[0.22144,0.35245,0.86147],[0.090344,0.1183,0.32784],[0.11778,0.16143,0.40568],[0.11637,0.15094,0.39104],[0.10578,0.11606,0.30401]]},{"date":"201801181610","rgb":[[0.082538,0.17531,0.42422],[0.092136,0.18257,0.44332],[0.098392,0.18165,0.45314],[0.075719,0.14514,0.37714],[0.077992,0.17332,0.40689],[0.08972,0.18175,0.42787],[0.098576,0.1812,0.44481],[0.080154,0.15595,0.38824],[0.069099,0.15141,0.35495],[0.079745,0.16089,0.38522],[0.087508,0.16145,0.40225],[0.069894,0.13161,0.34868],[0.051234,0.065476,0.14258],[0.05431,0.071559,0.16902],[0.061339,0.081944,0.19188],[0.065751,0.069628,0.14578]]},{"date":"201801181620","rgb":[[0.05982,0.12781,0.34459],[0.063766,0.1362,0.35184],[0.077959,0.14418,0.36936],[0.088346,0.1584,0.40784],[0.063685,0.14437,0.36507],[0.06905,0.15277,0.37247],[0.08003,0.15454,0.37874],[0.08926,0.15912,0.40367],[0.07364,0.15485,0.37535],[0.084536,0.1704,0.40903],[0.088466,0.16434,0.40138],[0.089358,0.15381,0.39451],[0.051095,0.064882,0.13678],[0.056568,0.076904,0.1763],[0.059936,0.077024,0.18303],[0.064848,0.067702,0.14345]]},{"date":"201801181630","rgb":[[0.026663,0.033226,0.13209],[0.03031,0.032757,0.15685],[0.031409,0.032678,0.16033],[0.032116,0.032971,0.15946],[0.028518,0.033058,0.14557],[0.029689,0.032491,0.14778],[0.031731,0.031465,0.14742],[0.032067,0.032289,0.15212],[0.02736,0.033529,0.1236],[0.026558,0.032151,0.124],[0.029591,0.030905,0.12706],[0.02973,0.031057,0.121],[0.041255,0.044032,0.075417],[0.041474,0.041855,0.092034],[0.041815,0.041401,0.091312],[0.053798,0.052728,0.089733]]},{"date":"201801181640","rgb":[[0.036047,0.043417,0.23769],[0.03835,0.051317,0.24872],[0.038852,0.048608,0.25],[0.04042,0.051752,0.25396],[0.035858,0.042962,0.23206],[0.035363,0.040685,0.21997],[0.037721,0.053842,0.25125],[0.040528,0.054477,0.25947],[0.038507,0.039784,0.17681],[0.036432,0.036939,0.20169],[0.037355,0.045294,0.22812],[0.045621,0.072156,0.28039],[0.052953,0.049546,0.099518],[0.046303,0.046669,0.1294],[0.053446,0.068312,0.1727],[0.063483,0.076383,0.15353]]},{"date":"201801181700","rgb":[[0.011387,0.026324,0.01989],[0.011088,0.025518,0.021401],[0.012589,0.024895,0.021331],[0.011735,0.026093,0.02338],[0.010605,0.026272,0.02013],[0.010368,0.025538,0.021343],[0.010373,0.025541,0.02136],[0.011028,0.026066,0.022992],[0.016968,0.030319,0.024691],[0.010623,0.025851,0.021769],[0.010559,0.025755,0.022351],[0.011739,0.026578,0.027705],[0.04715,0.048316,0.060374],[0.036486,0.040625,0.062214],[0.036455,0.040502,0.062939],[0.049104,0.051332,0.069475]]},{"date":"201801181730","rgb":[[0.013368,0.026654,0.012039],[0.013952,0.025759,0.014872],[0.011641,0.025924,0.018461],[0.011933,0.025796,0.019885],[0.010366,0.028913,0.0074571],[0.010326,0.028897,0.0064221],[0.01035,0.028921,0.0066581],[0.01038,0.028485,0.010656],[0.016445,0.032945,0.010123],[0.010294,0.028929,0.0064566],[0.010318,0.02893,0.0070259],[0.010366,0.028725,0.010492],[0.046881,0.048992,0.055704],[0.036285,0.043283,0.049317],[0.03623,0.04325,0.049756],[0.048871,0.053593,0.060108]]},{"date":"201801181740","rgb":[[0.012478,0.02768,0.0097198],[0.011838,0.027443,0.011137],[0.013155,0.024823,0.020441],[0.011416,0.02583,0.020488],[0.010392,0.02895,0.0079604],[0.010326,0.028896,0.0064268],[0.01035,0.028517,0.0083738],[0.01037,0.028107,0.012613],[0.016712,0.033015,0.010757],[0.010303,0.028939,0.0064507],[0.010316,0.028952,0.0065562],[0.010378,0.028726,0.010392],[0.047081,0.049043,0.055824],[0.03623,0.043276,0.049149],[0.036308,0.043224,0.050045],[0.048618,0.053255,0.059854]]},{"date":"201801181750","rgb":[[0.011774,0.027673,0.0108],[0.012819,0.026413,0.014235],[0.012949,0.024906,0.021224],[0.011023,0.026269,0.019612],[0.010382,0.028941,0.0073361],[0.010326,0.028897,0.0064624],[0.01035,0.028067,0.010154],[0.010348,0.028444,0.011282],[0.016654,0.033007,0.010844],[0.010294,0.028905,0.0066645],[0.010318,0.028894,0.0070097],[0.010358,0.028478,0.012072],[0.047069,0.049318,0.055951],[0.036286,0.043256,0.049293],[0.036253,0.043227,0.049966],[0.048757,0.053374,0.059788]]},{"date":"201801181800","rgb":[[0.012481,0.027244,0.012009],[0.016895,0.024551,0.014663],[0.015302,0.02384,0.021224],[0.012281,0.025588,0.020343],[0.010382,0.028903,0.0077453],[0.010336,0.028906,0.0064344],[0.010355,0.028076,0.010497],[0.010372,0.028063,0.013056],[0.016747,0.033065,0.010984],[0.010305,0.02894,0.0065667],[0.010326,0.028962,0.00708],[0.010338,0.028396,0.011951],[0.047224,0.049221,0.055371],[0.036284,0.043256,0.049048],[0.036246,0.043291,0.050026],[0.049157,0.053677,0.060694]]},{"date":"201801181810","rgb":[[0.013459,0.024569,0.02138],[0.013584,0.024499,0.021313],[0.012392,0.024983,0.021336],[0.011778,0.025849,0.02017],[0.010349,0.025517,0.021336],[0.010326,0.025494,0.021313],[0.010347,0.025586,0.021026],[0.010355,0.027489,0.015107],[0.016705,0.029824,0.023233],[0.010294,0.026098,0.01886],[0.010321,0.028232,0.0097911],[0.010389,0.028506,0.012776],[0.046945,0.048509,0.056995],[0.036297,0.043157,0.050124],[0.036307,0.043196,0.050849],[0.049083,0.053507,0.061504]]},{"date":"201801181820","rgb":[[0.013061,0.027216,0.010685],[0.011432,0.027537,0.011461],[0.014668,0.024325,0.020333],[0.011405,0.025405,0.021386],[0.010374,0.02892,0.0071579],[0.010326,0.028897,0.0064598],[0.01035,0.02854,0.0082572],[0.010376,0.026248,0.01848],[0.016615,0.032997,0.010919],[0.010294,0.028905,0.0065139],[0.010318,0.028904,0.0069373],[0.010344,0.028414,0.011557],[0.047015,0.049023,0.05599],[0.036286,0.043271,0.049171],[0.036249,0.043253,0.04963],[0.049059,0.053831,0.060369]]},{"date":"201801181830","rgb":[[0.011883,0.027371,0.012694],[0.013336,0.027183,0.0097351],[0.012774,0.02631,0.01639],[0.019858,0.026658,0.024268],[0.010379,0.028887,0.0073108],[0.010326,0.028873,0.0065461],[0.010348,0.028894,0.006924],[0.024869,0.028477,0.027085],[0.016962,0.032961,0.011323],[0.010297,0.028915,0.0067287],[0.010316,0.028927,0.0079603],[0.010722,0.027568,0.015554],[0.047289,0.049079,0.055681],[0.036292,0.04331,0.048911],[0.036317,0.043247,0.050452],[0.04928,0.053831,0.060316]]},{"date":"201801181850","rgb":[[0.014227,0.026738,0.011085],[0.013958,0.025796,0.014485],[0.012389,0.026808,0.015799],[0.020199,0.026551,0.024627],[0.010379,0.028925,0.0078695],[0.010323,0.028894,0.0064956],[0.010351,0.028921,0.0066343],[0.023139,0.028711,0.026779],[0.016873,0.032403,0.011438],[0.010294,0.028917,0.0065246],[0.010316,0.028928,0.0065649],[0.010709,0.027926,0.013688],[0.046192,0.048063,0.056103],[0.03629,0.043274,0.049716],[0.036307,0.0433,0.049574],[0.049136,0.053931,0.059771]]},{"date":"201801181900","rgb":[[0.012158,0.027223,0.012246],[0.012829,0.02635,0.014604],[0.01279,0.02627,0.017184],[0.020389,0.027147,0.023981],[0.010367,0.028879,0.008083],[0.010323,0.028894,0.0066108],[0.01036,0.028919,0.0068064],[0.023027,0.028536,0.027327],[0.016841,0.032385,0.011237],[0.010294,0.028929,0.0064839],[0.01031,0.028881,0.0072507],[0.01064,0.028012,0.014041],[0.046271,0.047997,0.056069],[0.036289,0.043192,0.050103],[0.036322,0.043234,0.050441],[0.049345,0.053225,0.063202]]},{"date":"201801181910","rgb":[[0.011496,0.025326,0.021387],[0.013469,0.024525,0.021313],[0.012988,0.025806,0.01865],[0.0204,0.026478,0.02126],[0.010379,0.027379,0.014003],[0.010326,0.026973,0.01497],[0.010347,0.028803,0.0071289],[0.022163,0.027573,0.021787],[0.017132,0.032805,0.011391],[0.010294,0.028926,0.0064411],[0.010325,0.028929,0.0066589],[0.010585,0.028267,0.013014],[0.046751,0.048451,0.055074],[0.036232,0.043243,0.049612],[0.036247,0.043204,0.050234],[0.049009,0.053513,0.060462]]},{"date":"201801181920","rgb":[[0.01206,0.027367,0.012219],[0.012283,0.026537,0.014324],[0.013386,0.025542,0.020036],[0.020312,0.026843,0.021888],[0.010393,0.028901,0.0079337],[0.010326,0.028897,0.0065755],[0.010359,0.028818,0.0074729],[0.022527,0.027374,0.023768],[0.017414,0.032944,0.012151],[0.010303,0.028839,0.0069842],[0.010313,0.028835,0.007603],[0.010759,0.02792,0.01448],[0.046792,0.048697,0.05668],[0.0363,0.04329,0.049654],[0.036295,0.043222,0.050316],[0.049197,0.05325,0.062366]]},{"date":"201801181930","rgb":[[0.012625,0.025068,0.021413],[0.013406,0.024613,0.02121],[0.014629,0.026082,0.015257],[0.019264,0.027438,0.021253],[0.010365,0.025879,0.019842],[0.010326,0.028003,0.010327],[0.01035,0.028921,0.0065459],[0.02174,0.027692,0.021472],[0.017073,0.032873,0.011945],[0.010294,0.028929,0.0065091],[0.010318,0.028931,0.0067251],[0.010652,0.028502,0.012004],[0.046847,0.049011,0.056079],[0.036284,0.043302,0.049177],[0.036311,0.043289,0.049843],[0.049068,0.053675,0.060773]]},{"date":"201801181940","rgb":[[0.012438,0.025092,0.021441],[0.012407,0.024945,0.021291],[0.014346,0.025868,0.016201],[0.020056,0.026869,0.020155],[0.010372,0.027025,0.015042],[0.010327,0.027781,0.011415],[0.010352,0.028862,0.0068948],[0.022529,0.027573,0.020625],[0.017451,0.033269,0.011665],[0.010294,0.028917,0.0066035],[0.01032,0.028919,0.0069816],[0.01064,0.028395,0.012187],[0.047156,0.048924,0.055465],[0.036286,0.043281,0.048923],[0.036295,0.043277,0.049252],[0.04912,0.05384,0.060035]]},{"date":"201801181950","rgb":[[0.012362,0.025066,0.021422],[0.017105,0.023333,0.020893],[0.014524,0.026317,0.013884],[0.019484,0.027335,0.020154],[0.010401,0.026125,0.019128],[0.010323,0.028186,0.0094534],[0.010352,0.028923,0.0067799],[0.021844,0.027604,0.022511],[0.017415,0.033032,0.012895],[0.010294,0.028929,0.0065828],[0.010318,0.028941,0.0066784],[0.010617,0.027995,0.013691],[0.046894,0.048948,0.056303],[0.036225,0.043275,0.04935],[0.036297,0.043254,0.050094],[0.049021,0.053424,0.060548]]},{"date":"201801182000","rgb":[[0.014574,0.025359,0.017306],[0.012897,0.024838,0.021259],[0.012245,0.02673,0.016115],[0.020531,0.026458,0.022045],[0.010413,0.028897,0.0078439],[0.010326,0.028403,0.0088195],[0.010344,0.028903,0.0070027],[0.023165,0.027503,0.024144],[0.017295,0.033123,0.011273],[0.010294,0.028917,0.0064793],[0.010321,0.028945,0.0071215],[0.01086,0.027936,0.013999],[0.047019,0.048911,0.05616],[0.036289,0.043312,0.048966],[0.036299,0.043263,0.049758],[0.04912,0.053695,0.061071]]},{"date":"201801182010","rgb":[[0.011814,0.027422,0.01179],[0.013338,0.025979,0.015067],[0.012002,0.026779,0.015483],[0.019248,0.026806,0.020852],[0.010367,0.028901,0.0074625],[0.010326,0.028897,0.0064221],[0.010349,0.028919,0.0067541],[0.023199,0.02773,0.022114],[0.017138,0.033183,0.010645],[0.010294,0.028906,0.0065423],[0.010316,0.028927,0.0070051],[0.010729,0.02786,0.013778],[0.046857,0.048829,0.055347],[0.036281,0.043265,0.049244],[0.036306,0.043246,0.050239],[0.049049,0.053629,0.060256]]},{"date":"201801182020","rgb":[[0.012072,0.027363,0.012274],[0.015843,0.025045,0.014669],[0.013197,0.025624,0.019048],[0.018988,0.027074,0.021085],[0.010371,0.028918,0.0074737],[0.010326,0.028897,0.0064221],[0.01035,0.028894,0.0069065],[0.022447,0.027931,0.021587],[0.017378,0.033374,0.011428],[0.010294,0.028917,0.0067038],[0.010318,0.028918,0.0069834],[0.010709,0.027967,0.013757],[0.046999,0.049089,0.055644],[0.036281,0.043302,0.048854],[0.036314,0.043279,0.049949],[0.049131,0.053583,0.060677]]},{"date":"201801182030","rgb":[[0.013593,0.024625,0.0214],[0.018075,0.022828,0.021323],[0.013405,0.025923,0.017988],[0.019879,0.026688,0.02195],[0.010362,0.02557,0.021138],[0.010326,0.027207,0.013921],[0.010347,0.028839,0.0073169],[0.023873,0.027847,0.022741],[0.017194,0.032194,0.015039],[0.010302,0.028922,0.0065655],[0.010315,0.028833,0.0075019],[0.010777,0.028145,0.014022],[0.046654,0.048751,0.055701],[0.036286,0.043278,0.049718],[0.03626,0.043212,0.051075],[0.049136,0.053412,0.061596]]},{"date":"201801182040","rgb":[[0.011439,0.027542,0.013003],[0.011749,0.026541,0.015614],[0.012252,0.026767,0.015791],[0.020785,0.026383,0.022311],[0.010391,0.028899,0.0075853],[0.010326,0.028885,0.0064731],[0.010352,0.028923,0.0065697],[0.025334,0.02817,0.023949],[0.017127,0.033292,0.01207],[0.010313,0.028921,0.0068056],[0.010332,0.028908,0.0075684],[0.010987,0.028004,0.014977],[0.047048,0.04888,0.056188],[0.036283,0.043253,0.049894],[0.03631,0.043187,0.050595],[0.04922,0.053566,0.061698]]},{"date":"201801182050","rgb":[[0.012592,0.026882,0.013589],[0.015861,0.023844,0.02007],[0.014127,0.026625,0.013281],[0.020522,0.026809,0.019104],[0.010405,0.028938,0.0072134],[0.010326,0.02884,0.0068876],[0.010352,0.028898,0.0069441],[0.024719,0.028349,0.021219],[0.017197,0.033301,0.011075],[0.010297,0.02892,0.0065087],[0.01031,0.028923,0.0070949],[0.010846,0.028634,0.011909],[0.046658,0.048906,0.055317],[0.036297,0.043318,0.049146],[0.036306,0.043263,0.049592],[0.049073,0.053844,0.059473]]},{"date":"201801182100","rgb":[[0.013958,0.026621,0.011525],[0.013287,0.026001,0.015075],[0.013998,0.02576,0.016734],[0.019108,0.027135,0.019428],[0.010383,0.028904,0.0073007],[0.010326,0.028897,0.0065894],[0.010347,0.028918,0.0065252],[0.023807,0.028311,0.022134],[0.017192,0.033306,0.010554],[0.010292,0.028928,0.0064445],[0.010318,0.028929,0.0066192],[0.010723,0.02839,0.012099],[0.047002,0.049057,0.056137],[0.036292,0.043313,0.049261],[0.036293,0.043292,0.049844],[0.049185,0.053582,0.059712]]},{"date":"201801182120","rgb":[[0.012403,0.027047,0.012607],[0.012133,0.026468,0.014981],[0.014269,0.024629,0.021214],[0.018954,0.02698,0.022278],[0.010384,0.028894,0.0074411],[0.010326,0.028885,0.0065184],[0.01035,0.028497,0.0083909],[0.024325,0.028273,0.022465],[0.017152,0.033312,0.011626],[0.010306,0.028942,0.0064886],[0.010316,0.028925,0.0067958],[0.010677,0.028472,0.012533],[0.046727,0.048886,0.056371],[0.036284,0.043289,0.049337],[0.036309,0.043244,0.050495],[0.048928,0.053488,0.060258]]},{"date":"201801182130","rgb":[[0.01255,0.027074,0.011832],[0.013718,0.02654,0.011364],[0.01315,0.026364,0.015618],[0.020241,0.026797,0.021542],[0.010396,0.028905,0.0071664],[0.010326,0.028897,0.0065035],[0.010349,0.028907,0.0065564],[0.025248,0.02828,0.022229],[0.01723,0.033246,0.011019],[0.010294,0.028929,0.0064338],[0.010321,0.028954,0.0067493],[0.010779,0.028488,0.012491],[0.046657,0.048872,0.055469],[0.036299,0.043314,0.049024],[0.036294,0.043293,0.049642],[0.049002,0.053554,0.060527]]},{"date":"201801182140","rgb":[[0.012598,0.026952,0.012858],[0.011916,0.026656,0.014519],[0.012373,0.026599,0.016333],[0.021434,0.026737,0.021467],[0.010395,0.028859,0.0080129],[0.010326,0.028897,0.0065534],[0.010352,0.028911,0.0069242],[0.025246,0.028426,0.023795],[0.017158,0.033362,0.012573],[0.010297,0.028895,0.0067744],[0.010329,0.028868,0.0076489],[0.011004,0.0279,0.014783],[0.047011,0.049103,0.056343],[0.036233,0.043285,0.049321],[0.036257,0.043285,0.050655],[0.049316,0.053364,0.061636]]},{"date":"201801182200","rgb":[[0.011989,0.027365,0.013416],[0.014837,0.024332,0.020259],[0.013014,0.024725,0.021289],[0.011383,0.026306,0.019738],[0.010406,0.028939,0.0076537],[0.010327,0.028365,0.0088615],[0.010352,0.027856,0.011211],[0.010408,0.028475,0.011743],[0.017059,0.03342,0.012288],[0.01031,0.028945,0.0068165],[0.010316,0.0289,0.007951],[0.010527,0.02845,0.013407],[0.04671,0.049011,0.056861],[0.036287,0.043295,0.049493],[0.036306,0.043239,0.050419],[0.049174,0.053633,0.061587]]},{"date":"201801182210","rgb":[[0.011742,0.027429,0.012333],[0.013577,0.026064,0.01415],[0.016606,0.023493,0.021047],[0.011548,0.025892,0.019314],[0.010384,0.028907,0.0074473],[0.010328,0.028898,0.0065268],[0.01035,0.028224,0.009558],[0.010351,0.028515,0.010992],[0.017091,0.033492,0.010411],[0.010298,0.028934,0.006456],[0.01032,0.028943,0.0068948],[0.010404,0.028763,0.010402],[0.046715,0.04909,0.055266],[0.036292,0.043303,0.049218],[0.036327,0.043309,0.049601],[0.048953,0.053559,0.059776]]},{"date":"201801182220","rgb":[[0.012154,0.025072,0.021374],[0.013542,0.024553,0.021329],[0.013166,0.024697,0.021332],[0.011319,0.025716,0.020528],[0.010369,0.025537,0.021356],[0.01032,0.025487,0.021306],[0.010334,0.025874,0.019657],[0.010347,0.028027,0.012882],[0.017213,0.030478,0.023538],[0.010295,0.02645,0.017293],[0.010311,0.028613,0.0082445],[0.010381,0.028663,0.011951],[0.0468,0.048818,0.056013],[0.036282,0.043223,0.049238],[0.036238,0.043227,0.04971],[0.04909,0.053674,0.059693]]},{"date":"201801182230","rgb":[[0.01172,0.027531,0.012837],[0.013961,0.025684,0.015478],[0.014425,0.024234,0.02097],[0.011421,0.026643,0.017898],[0.010393,0.02889,0.0085404],[0.010326,0.028884,0.0066092],[0.010351,0.028548,0.0083063],[0.010424,0.028597,0.011569],[0.0172,0.033489,0.01269],[0.010295,0.028915,0.0069129],[0.01032,0.028905,0.0075881],[0.010515,0.028354,0.013637],[0.046725,0.049121,0.056206],[0.036291,0.043246,0.049719],[0.036297,0.043226,0.050536],[0.049138,0.0534,0.062001]]},{"date":"201801182240","rgb":[[0.011704,0.027384,0.012551],[0.016977,0.024387,0.01484],[0.014289,0.024226,0.021258],[0.011984,0.025272,0.02088],[0.010389,0.028947,0.0072912],[0.010326,0.028897,0.0064221],[0.01035,0.028016,0.010663],[0.010368,0.028256,0.012443],[0.017091,0.033495,0.011351],[0.010297,0.028919,0.0065453],[0.010318,0.028954,0.0065747],[0.010385,0.028677,0.011545],[0.046807,0.049061,0.055941],[0.036283,0.043291,0.049056],[0.036294,0.043228,0.049709],[0.049022,0.053569,0.059998]]},{"date":"201801182250","rgb":[[0.011678,0.027459,0.012025],[0.017493,0.02487,0.011554],[0.01625,0.023719,0.020489],[0.011842,0.025381,0.02135],[0.010372,0.028917,0.0071838],[0.010328,0.028898,0.0065063],[0.01035,0.028401,0.0088702],[0.010405,0.02607,0.019405],[0.017162,0.0335,0.010919],[0.010295,0.028905,0.0067112],[0.010308,0.028866,0.0071305],[0.010341,0.028089,0.013206],[0.04658,0.04912,0.055554],[0.036284,0.04329,0.048936],[0.0363,0.04328,0.050177],[0.049091,0.053426,0.060979]]},{"date":"201801182300","rgb":[[0.011397,0.027758,0.011652],[0.012857,0.026146,0.015358],[0.012729,0.024837,0.021188],[0.011095,0.026122,0.019255],[0.010374,0.02892,0.0074257],[0.010326,0.028897,0.0065773],[0.01035,0.028392,0.0093418],[0.010359,0.028542,0.011333],[0.017202,0.03358,0.011637],[0.010303,0.028939,0.0065614],[0.010317,0.028949,0.0070403],[0.01039,0.028617,0.011609],[0.046917,0.049302,0.055421],[0.036287,0.043308,0.049196],[0.036305,0.043246,0.050313],[0.049081,0.053658,0.060231]]},{"date":"201801182310","rgb":[[0.013956,0.02623,0.013554],[0.013591,0.024549,0.020848],[0.012967,0.024821,0.020918],[0.011572,0.027244,0.016215],[0.010405,0.028914,0.0075964],[0.010326,0.02824,0.0093857],[0.010349,0.028146,0.010034],[0.010365,0.028582,0.010443],[0.017257,0.033528,0.011587],[0.0103,0.028924,0.0065784],[0.010316,0.028915,0.0069898],[0.010364,0.028623,0.01149],[0.046933,0.049162,0.055373],[0.036284,0.043289,0.0491],[0.036235,0.043261,0.04959],[0.049022,0.053664,0.060669]]},{"date":"201801182320","rgb":[[0.011661,0.027571,0.012446],[0.014357,0.025563,0.014874],[0.015151,0.023856,0.021306],[0.011445,0.025555,0.021171],[0.010416,0.028948,0.0076774],[0.010326,0.028897,0.0065019],[0.01035,0.028106,0.010007],[0.010374,0.028245,0.012158],[0.017079,0.033534,0.011343],[0.01029,0.028926,0.0065306],[0.010315,0.028926,0.0068626],[0.010334,0.028624,0.011586],[0.046453,0.048963,0.055384],[0.03629,0.043315,0.049041],[0.036309,0.043304,0.049566],[0.04921,0.05379,0.060009]]},{"date":"201801182330","rgb":[[0.011438,0.02748,0.013619],[0.013625,0.025836,0.015601],[0.011888,0.025124,0.021311],[0.011057,0.025662,0.021494],[0.010377,0.028836,0.0083554],[0.010326,0.028884,0.0068254],[0.010354,0.027709,0.011995],[0.01036,0.025631,0.020841],[0.017049,0.033392,0.01223],[0.0103,0.028923,0.0066714],[0.010317,0.02894,0.0070732],[0.010337,0.027911,0.013868],[0.046487,0.048667,0.055982],[0.036279,0.043274,0.049181],[0.036304,0.043219,0.04952],[0.049068,0.053638,0.060487]]},{"date":"201801182340","rgb":[[0.011952,0.027607,0.012477],[0.012336,0.025649,0.018604],[0.01298,0.024714,0.021327],[0.011098,0.025592,0.021439],[0.010426,0.028933,0.0083907],[0.010336,0.028779,0.0071674],[0.010347,0.026725,0.01605],[0.010406,0.025574,0.021393],[0.016877,0.033162,0.011693],[0.010308,0.028932,0.0068352],[0.01032,0.028901,0.0074576],[0.010383,0.027242,0.015745],[0.04556,0.048198,0.056152],[0.036303,0.043323,0.049341],[0.036248,0.043245,0.050217],[0.049048,0.053801,0.059628]]},{"date":"201801182350","rgb":[[0.012444,0.02749,0.012189],[0.013575,0.025774,0.016011],[0.01295,0.025157,0.020259],[0.011375,0.027273,0.015367],[0.010466,0.028959,0.0083226],[0.010326,0.028897,0.0065649],[0.010346,0.028741,0.0078061],[0.010389,0.028623,0.011427],[0.016609,0.032946,0.011675],[0.010294,0.028929,0.0065025],[0.01032,0.02888,0.0070967],[0.010413,0.028643,0.011764],[0.045628,0.048146,0.055879],[0.036275,0.043192,0.049594],[0.036306,0.043212,0.050127],[0.049075,0.053745,0.060649]]},{"date":"201801190000","rgb":[[0.0129,0.026158,0.017],[0.013,0.026808,0.012366],[0.012085,0.025281,0.020621],[0.011581,0.026285,0.019211],[0.010435,0.02886,0.0092305],[0.010326,0.028872,0.0067169],[0.010349,0.02838,0.0091156],[0.010357,0.028055,0.01299],[0.016347,0.033031,0.01224],[0.010305,0.028922,0.0068088],[0.010313,0.028883,0.0079782],[0.010385,0.028234,0.013025],[0.045472,0.048198,0.055722],[0.036294,0.043237,0.049581],[0.036354,0.043214,0.050382],[0.049111,0.053392,0.062014]]},{"date":"201801190010","rgb":[[0.011591,0.027447,0.013129],[0.013728,0.024689,0.020143],[0.013383,0.024555,0.021331],[0.012073,0.025255,0.021313],[0.010361,0.028859,0.0080909],[0.010323,0.028491,0.0082079],[0.01035,0.026221,0.018272],[0.010328,0.025496,0.021315],[0.016505,0.032922,0.011621],[0.010294,0.028929,0.0069242],[0.010321,0.028818,0.0076781],[0.010332,0.026594,0.017618],[0.045499,0.048085,0.055153],[0.036292,0.043267,0.04935],[0.036295,0.043264,0.049765],[0.048999,0.053094,0.061597]]},{"date":"201801190020","rgb":[[0.012512,0.025584,0.019138],[0.016218,0.023516,0.021311],[0.012772,0.024817,0.021336],[0.011832,0.025248,0.021401],[0.010396,0.028631,0.0094588],[0.010336,0.026642,0.016257],[0.01035,0.025518,0.021337],[0.010379,0.025547,0.021366],[0.016568,0.032981,0.011279],[0.010294,0.028926,0.0066124],[0.010318,0.02763,0.012483],[0.010331,0.025717,0.020684],[0.045767,0.04834,0.055321],[0.036282,0.043269,0.049231],[0.036307,0.043211,0.049767],[0.048989,0.052604,0.062961]]},{"date":"201801190030","rgb":[[0.011974,0.026837,0.014905],[0.01619,0.023541,0.020978],[0.015448,0.023736,0.021342],[0.011511,0.02626,0.018678],[0.010366,0.028875,0.0080724],[0.010323,0.028161,0.0095596],[0.01035,0.027027,0.014781],[0.010361,0.028637,0.010598],[0.016692,0.032895,0.011281],[0.010303,0.028939,0.0064829],[0.010316,0.028949,0.0066679],[0.010351,0.028674,0.010909],[0.045881,0.048055,0.05511],[0.036282,0.043291,0.049002],[0.036291,0.043276,0.049325],[0.049051,0.053783,0.059906]]},{"date":"201801190040","rgb":[[0.011008,0.028111,0.011756],[0.011351,0.026841,0.015085],[0.012757,0.025812,0.01739],[0.011402,0.027701,0.01578],[0.010377,0.028824,0.0089181],[0.010326,0.028897,0.0064988],[0.010355,0.028902,0.007196],[0.010561,0.028675,0.011825],[0.016848,0.03301,0.011251],[0.010332,0.028968,0.0064554],[0.01032,0.028849,0.0072455],[0.010399,0.02842,0.012247],[0.045676,0.048407,0.054711],[0.036288,0.043297,0.048953],[0.036299,0.043277,0.049463],[0.049187,0.05384,0.059429]]},{"date":"201801190050","rgb":[[0.011463,0.027607,0.012796],[0.011802,0.026588,0.015052],[0.011719,0.025241,0.021273],[0.011689,0.025884,0.021122],[0.010443,0.028914,0.0089193],[0.010326,0.028884,0.0065977],[0.010354,0.027822,0.011765],[0.010348,0.026847,0.017239],[0.016471,0.032804,0.011265],[0.010294,0.028929,0.0066249],[0.010316,0.028913,0.0068843],[0.010372,0.028647,0.011659],[0.045228,0.047856,0.054184],[0.036283,0.043302,0.049172],[0.036308,0.043281,0.049681],[0.049093,0.05385,0.059934]]},{"date":"201801190110","rgb":[[0.01155,0.027449,0.013372],[0.011702,0.026754,0.014677],[0.012194,0.026947,0.013301],[0.011302,0.027123,0.017052],[0.010386,0.028922,0.0080046],[0.010328,0.028898,0.0066263],[0.010354,0.028913,0.0067016],[0.010395,0.028694,0.010676],[0.016466,0.032675,0.011109],[0.010295,0.028931,0.0065806],[0.010315,0.028938,0.0065979],[0.010354,0.02874,0.011193],[0.045067,0.047851,0.053699],[0.036282,0.043276,0.049183],[0.036304,0.043284,0.049652],[0.048837,0.053534,0.059063]]},{"date":"201801190120","rgb":[[0.012044,0.027243,0.012989],[0.012257,0.026477,0.014824],[0.012672,0.024993,0.020959],[0.011208,0.027024,0.016888],[0.010396,0.02884,0.0089076],[0.010326,0.028872,0.0067193],[0.010352,0.028534,0.0084303],[0.010355,0.028624,0.010531],[0.016265,0.032714,0.011546],[0.010313,0.028946,0.0065423],[0.010316,0.028952,0.0066156],[0.010344,0.028656,0.011031],[0.045324,0.047918,0.055373],[0.036333,0.04325,0.049417],[0.036306,0.04325,0.049897],[0.049026,0.053657,0.059762]]},{"date":"201801190130","rgb":[[0.01139,0.02782,0.01294],[0.012974,0.026273,0.015382],[0.012347,0.024966,0.021313],[0.011345,0.025605,0.021474],[0.010409,0.028867,0.0081891],[0.010326,0.028897,0.0067265],[0.010347,0.027776,0.011719],[0.010355,0.025704,0.020576],[0.016205,0.032684,0.011402],[0.010302,0.028926,0.0066255],[0.010321,0.028919,0.006985],[0.010397,0.028285,0.011905],[0.045023,0.047738,0.054602],[0.036237,0.043311,0.049032],[0.03631,0.043256,0.049654],[0.04903,0.053579,0.059769]]},{"date":"201801190140","rgb":[[0.011943,0.026554,0.016194],[0.012064,0.025084,0.021259],[0.012924,0.024718,0.021336],[0.011168,0.026376,0.018928],[0.010398,0.028887,0.008542],[0.010321,0.027801,0.01142],[0.010349,0.027127,0.014563],[0.010388,0.02816,0.012597],[0.01658,0.032936,0.012226],[0.010319,0.028932,0.0068284],[0.010321,0.028882,0.0080229],[0.010369,0.028338,0.013121],[0.044567,0.04768,0.05456],[0.036302,0.043259,0.049371],[0.036301,0.04323,0.049993],[0.049023,0.053565,0.060543]]},{"date":"201801190150","rgb":[[0.012281,0.027421,0.012463],[0.012773,0.02731,0.010073],[0.0134,0.025606,0.016703],[0.012132,0.025451,0.021266],[0.010398,0.028912,0.0083736],[0.010326,0.028897,0.0064994],[0.010352,0.028911,0.0067644],[0.010354,0.026818,0.016489],[0.016813,0.033119,0.011428],[0.010294,0.028929,0.0065113],[0.010326,0.028959,0.0070252],[0.01033,0.028287,0.01198],[0.045073,0.04782,0.05456],[0.0363,0.04327,0.049381],[0.036238,0.043275,0.049873],[0.049028,0.053648,0.060033]]},{"date":"201801190200","rgb":[[0.01298,0.027195,0.012439],[0.013623,0.026917,0.010059],[0.01228,0.026348,0.015464],[0.011538,0.026912,0.01668],[0.010409,0.028932,0.0082323],[0.010323,0.028894,0.0065771],[0.010352,0.028911,0.0067466],[0.010374,0.028744,0.010722],[0.016723,0.033204,0.011017],[0.0103,0.028936,0.0065657],[0.010318,0.028954,0.0066726],[0.010348,0.028613,0.011534],[0.045045,0.047975,0.055523],[0.03631,0.043277,0.04943],[0.036293,0.043206,0.050322],[0.049066,0.05371,0.060445]]},{"date":"201801190210","rgb":[[0.011749,0.027923,0.011123],[0.013416,0.027176,0.0093655],[0.01385,0.025363,0.016789],[0.011125,0.025663,0.021506],[0.010395,0.02888,0.0087925],[0.010336,0.028906,0.0066331],[0.01035,0.028854,0.0071889],[0.010397,0.026805,0.016702],[0.016759,0.032936,0.011287],[0.010294,0.028929,0.00652],[0.01032,0.028943,0.006889],[0.010343,0.028505,0.011931],[0.045398,0.047976,0.055229],[0.036288,0.043306,0.049121],[0.036298,0.043275,0.05007],[0.048982,0.053675,0.060078]]},{"date":"201801190230","rgb":[[0.011911,0.027117,0.014666],[0.011178,0.026263,0.017243],[0.012737,0.024835,0.021342],[0.011554,0.026233,0.019724],[0.010417,0.028882,0.0085938],[0.010326,0.028868,0.0067189],[0.01036,0.027692,0.012156],[0.010435,0.028577,0.011642],[0.016935,0.033169,0.010978],[0.010302,0.028924,0.0065695],[0.010326,0.028937,0.0069576],[0.010381,0.028776,0.011134],[0.04568,0.048292,0.054299],[0.036291,0.043286,0.049044],[0.036311,0.043244,0.049579],[0.049134,0.053748,0.05915]]},{"date":"201801190240","rgb":[[0.011349,0.027599,0.013459],[0.013645,0.027014,0.0096545],[0.013973,0.02541,0.016846],[0.011652,0.02678,0.018031],[0.010427,0.028899,0.0082161],[0.010332,0.028903,0.0064697],[0.010354,0.028858,0.0071217],[0.010451,0.028819,0.010534],[0.01692,0.033072,0.012093],[0.010303,0.028926,0.0067243],[0.010333,0.028922,0.0070418],[0.010422,0.028596,0.012027],[0.045473,0.048039,0.054765],[0.036288,0.043283,0.04902],[0.036295,0.043241,0.049676],[0.049157,0.053834,0.060392]]},{"date":"201801190250","rgb":[[0.012767,0.027073,0.013471],[0.011838,0.026604,0.015413],[0.013501,0.024579,0.021311],[0.011604,0.026104,0.020516],[0.010365,0.028861,0.0081439],[0.01034,0.02891,0.0066303],[0.010341,0.027832,0.011457],[0.010531,0.02802,0.014458],[0.016962,0.033166,0.011573],[0.010302,0.028937,0.0067148],[0.01031,0.028933,0.0070752],[0.01047,0.028681,0.012335],[0.044795,0.047437,0.055327],[0.036287,0.04323,0.049596],[0.036288,0.043215,0.050609],[0.049158,0.053691,0.060781]]},{"date":"201801190300","rgb":[[0.012041,0.027047,0.013866],[0.01239,0.026282,0.015939],[0.012747,0.026713,0.013137],[0.011273,0.026773,0.017544],[0.010412,0.02893,0.0079618],[0.010326,0.028885,0.0066347],[0.010352,0.028885,0.0069622],[0.010438,0.028598,0.011621],[0.017159,0.03316,0.011595],[0.010295,0.028928,0.0068276],[0.010316,0.028952,0.0070025],[0.010397,0.028649,0.011284],[0.044896,0.047637,0.054682],[0.036284,0.043265,0.049469],[0.036299,0.043253,0.049889],[0.049144,0.053653,0.060458]]},{"date":"201801190310","rgb":[[0.011357,0.027742,0.012987],[0.011976,0.02641,0.015525],[0.012183,0.025044,0.02136],[0.012042,0.025849,0.020375],[0.010422,0.028892,0.008847],[0.010336,0.028894,0.0066406],[0.010354,0.027543,0.012716],[0.010429,0.027665,0.01521],[0.016562,0.032908,0.01198],[0.0103,0.028936,0.0068634],[0.010318,0.028954,0.0071829],[0.010468,0.028638,0.012198],[0.045377,0.047824,0.055126],[0.036303,0.043275,0.049293],[0.036295,0.04315,0.050332],[0.049107,0.053346,0.061232]]},{"date":"201801190320","rgb":[[0.011667,0.025963,0.018946],[0.014169,0.02671,0.009984],[0.012191,0.026136,0.016754],[0.011384,0.025652,0.021572],[0.010432,0.028862,0.007833],[0.010336,0.028906,0.0064668],[0.01035,0.028892,0.0068686],[0.010474,0.027019,0.015696],[0.016907,0.032993,0.010883],[0.010294,0.028929,0.0065119],[0.010321,0.028933,0.0069912],[0.010392,0.028663,0.010837],[0.045137,0.047819,0.054955],[0.036314,0.043312,0.049243],[0.036246,0.043305,0.049769],[0.049147,0.053648,0.060378]]},{"date":"201801190330","rgb":[[0.012385,0.026905,0.013248],[0.014318,0.026762,0.0094185],[0.011895,0.026096,0.01727],[0.011872,0.025365,0.021483],[0.010373,0.028868,0.0077984],[0.010326,0.028897,0.0065061],[0.010351,0.028868,0.006918],[0.010392,0.027004,0.015896],[0.01694,0.032993,0.011345],[0.010294,0.028892,0.0065906],[0.010318,0.02895,0.006581],[0.010345,0.02864,0.01098],[0.045343,0.048033,0.055425],[0.036284,0.043282,0.049088],[0.036298,0.043254,0.049354],[0.04908,0.053693,0.060717]]},{"date":"201801190340","rgb":[[0.011797,0.028078,0.010942],[0.011562,0.026551,0.015952],[0.01158,0.025243,0.021308],[0.011964,0.026316,0.018675],[0.01047,0.028889,0.0091266],[0.010323,0.028894,0.0067809],[0.010342,0.027927,0.011061],[0.010508,0.028557,0.012388],[0.01665,0.032762,0.012092],[0.010295,0.028931,0.0064232],[0.010313,0.028949,0.0068968],[0.01039,0.028602,0.012296],[0.044865,0.047574,0.05441],[0.036289,0.043283,0.04907],[0.036259,0.043283,0.049525],[0.049101,0.053632,0.060403]]},{"date":"201801190350","rgb":[[0.011999,0.027401,0.01246],[0.01185,0.026735,0.014531],[0.013563,0.025233,0.01851],[0.011243,0.027615,0.015166],[0.01039,0.028899,0.0078561],[0.010326,0.028873,0.0066277],[0.010344,0.028889,0.0068761],[0.010388,0.028512,0.011612],[0.016703,0.033003,0.010311],[0.010306,0.028936,0.006435],[0.01032,0.028937,0.0067249],[0.010417,0.028745,0.010627],[0.045233,0.047698,0.054268],[0.036287,0.043294,0.049082],[0.036244,0.04327,0.049611],[0.049079,0.053654,0.059968]]},{"date":"201801190400","rgb":[[0.01162,0.027098,0.013813],[0.013181,0.026031,0.015868],[0.012016,0.026112,0.017172],[0.011236,0.027327,0.016233],[0.010413,0.028958,0.0081227],[0.010328,0.028898,0.0064862],[0.010354,0.028874,0.0070496],[0.010455,0.028624,0.011996],[0.016891,0.033156,0.010852],[0.0103,0.028936,0.0066083],[0.010321,0.028947,0.0067517],[0.010322,0.028644,0.010999],[0.045212,0.047716,0.054201],[0.036277,0.043223,0.049333],[0.036253,0.043263,0.049868],[0.049099,0.053714,0.060262]]},{"date":"201801190410","rgb":[[0.012249,0.027778,0.012594],[0.013904,0.025381,0.017083],[0.012409,0.02499,0.021345],[0.01163,0.025899,0.021834],[0.010424,0.028856,0.0086799],[0.010326,0.028867,0.0067648],[0.010349,0.027746,0.012063],[0.010459,0.026993,0.016881],[0.017072,0.033126,0.012703],[0.010292,0.028927,0.0070045],[0.01032,0.02892,0.0074892],[0.010442,0.028212,0.013526],[0.045047,0.047906,0.054372],[0.036237,0.043313,0.048788],[0.036259,0.043294,0.049858],[0.049041,0.053801,0.059686]]},{"date":"201801190420","rgb":[[0.011977,0.027302,0.014449],[0.012878,0.025984,0.016461],[0.012773,0.024907,0.021335],[0.011467,0.025924,0.021818],[0.010436,0.028898,0.0093672],[0.010353,0.028872,0.0070935],[0.010349,0.027133,0.014582],[0.010504,0.026686,0.018426],[0.016798,0.032951,0.012552],[0.010311,0.028872,0.0072519],[0.010316,0.028813,0.0074846],[0.010461,0.028535,0.012263],[0.044927,0.047766,0.055417],[0.036294,0.043275,0.049601],[0.036301,0.043233,0.050784],[0.049166,0.053412,0.061626]]},{"date":"201801190430","rgb":[[0.011324,0.027699,0.014033],[0.011851,0.026457,0.016276],[0.014378,0.024188,0.021354],[0.01117,0.026775,0.019179],[0.010444,0.028875,0.0095667],[0.010323,0.028853,0.007329],[0.010352,0.027599,0.012895],[0.010483,0.028329,0.013414],[0.017248,0.033104,0.013403],[0.010302,0.028926,0.00686],[0.010326,0.028845,0.0080493],[0.010499,0.028604,0.012865],[0.045395,0.047734,0.055013],[0.036298,0.043273,0.049848],[0.036249,0.043265,0.05084],[0.049022,0.053502,0.060581]]},{"date":"201801190440","rgb":[[0.0125,0.027402,0.010724],[0.018694,0.024633,0.010647],[0.016587,0.023743,0.019803],[0.011526,0.026839,0.016353],[0.010364,0.028896,0.007297],[0.010323,0.02891,0.006465],[0.010349,0.028846,0.0069087],[0.010396,0.028667,0.010747],[0.016892,0.033263,0.011275],[0.010294,0.028905,0.0066496],[0.01032,0.028916,0.0067468],[0.0104,0.028782,0.010829],[0.045405,0.047956,0.054608],[0.036228,0.043289,0.048935],[0.036322,0.043227,0.050108],[0.049148,0.053685,0.060196]]},{"date":"201801190450","rgb":[[0.012361,0.027167,0.013146],[0.015963,0.024877,0.015168],[0.013037,0.026189,0.015427],[0.011608,0.027505,0.017286],[0.01037,0.028755,0.0093008],[0.010337,0.02887,0.006891],[0.010357,0.028814,0.0073828],[0.010488,0.028518,0.012601],[0.017405,0.03317,0.013203],[0.010294,0.028881,0.0074327],[0.010324,0.028876,0.0074693],[0.010439,0.028543,0.011944],[0.045636,0.048,0.055615],[0.036303,0.043319,0.04938],[0.036302,0.043284,0.050006],[0.049188,0.053709,0.060762]]},{"date":"201801190500","rgb":[[0.01338,0.026892,0.012037],[0.011573,0.026713,0.014815],[0.011761,0.025217,0.021266],[0.011989,0.025383,0.021505],[0.010399,0.028863,0.0083019],[0.010324,0.028882,0.0066021],[0.010351,0.027848,0.011413],[0.010408,0.02572,0.020737],[0.017069,0.033329,0.011184],[0.010316,0.028937,0.0067513],[0.010335,0.028942,0.007578],[0.010435,0.028117,0.013165],[0.045125,0.047833,0.05522],[0.036298,0.04331,0.049518],[0.036243,0.043195,0.050728],[0.04915,0.05355,0.06177]]},{"date":"201801190540","rgb":[[0.01176,0.026431,0.0179],[0.011316,0.025321,0.021316],[0.011678,0.025152,0.021326],[0.011496,0.027,0.017692],[0.010378,0.028795,0.0092742],[0.010326,0.027136,0.014286],[0.010358,0.027486,0.012898],[0.010414,0.028177,0.012906],[0.016727,0.032996,0.012309],[0.010294,0.028928,0.0068888],[0.010313,0.028924,0.0069638],[0.010388,0.028239,0.013353],[0.045321,0.047842,0.055117],[0.036306,0.043301,0.049615],[0.036298,0.043267,0.050095],[0.049119,0.053433,0.061033]]},{"date":"201801190550","rgb":[[0.011841,0.027464,0.012794],[0.013546,0.026025,0.01484],[0.01326,0.02474,0.021207],[0.011651,0.02625,0.019488],[0.010408,0.028838,0.0088527],[0.010336,0.028882,0.0066387],[0.010366,0.028046,0.01053],[0.01051,0.028321,0.012807],[0.017162,0.033345,0.012558],[0.010309,0.028928,0.0069157],[0.01031,0.028903,0.0075227],[0.010521,0.028821,0.011537],[0.045054,0.047959,0.054377],[0.036294,0.043303,0.048889],[0.036243,0.043264,0.04935],[0.049143,0.05396,0.058486]]},{"date":"201801190600","rgb":[[0.012985,0.025506,0.018831],[0.013749,0.0269,0.01022],[0.012473,0.025793,0.017797],[0.011131,0.02569,0.021528],[0.010375,0.028838,0.0087423],[0.010326,0.028885,0.0066416],[0.010347,0.028811,0.0077364],[0.010371,0.026916,0.016691],[0.016895,0.033296,0.011801],[0.010294,0.028917,0.0065608],[0.010326,0.028899,0.0074492],[0.010347,0.028447,0.012364],[0.044771,0.04776,0.055338],[0.036319,0.043318,0.04963],[0.036259,0.043231,0.050475],[0.049103,0.053575,0.060998]]},{"date":"201801190610","rgb":[[0.011284,0.027685,0.012279],[0.013205,0.027016,0.010519],[0.012116,0.025508,0.019342],[0.01196,0.025391,0.02167],[0.010394,0.028927,0.0078407],[0.010328,0.028898,0.0065135],[0.010344,0.028747,0.007416],[0.010447,0.026531,0.017682],[0.017034,0.033192,0.011174],[0.010311,0.028922,0.0066955],[0.010321,0.028922,0.0072173],[0.010394,0.028657,0.011591],[0.044992,0.047875,0.053867],[0.036294,0.043302,0.049058],[0.036311,0.043266,0.049644],[0.049039,0.053839,0.05976]]},{"date":"201801190620","rgb":[[0.012232,0.027056,0.014519],[0.016373,0.024662,0.016671],[0.014527,0.024231,0.021329],[0.01146,0.025617,0.021587],[0.010362,0.028835,0.0090034],[0.010339,0.028897,0.0071422],[0.010342,0.027192,0.014301],[0.010443,0.025663,0.021319],[0.016982,0.033173,0.01227],[0.010304,0.028904,0.0071819],[0.010313,0.028857,0.0081884],[0.010381,0.026805,0.017471],[0.045023,0.047778,0.055522],[0.036289,0.043255,0.050125],[0.036257,0.043243,0.051261],[0.049106,0.052907,0.062742]]},{"date":"201801190640","rgb":[[0.013678,0.026287,0.043172],[0.015,0.026311,0.049141],[0.016539,0.026662,0.054012],[0.017901,0.027884,0.059751],[0.01255,0.026997,0.035891],[0.012926,0.026738,0.039902],[0.014157,0.026344,0.045081],[0.016968,0.02715,0.054347],[0.019284,0.031525,0.037004],[0.012371,0.027027,0.034004],[0.012853,0.026569,0.039479],[0.0147,0.026517,0.046829],[0.045784,0.046755,0.065078],[0.037058,0.040937,0.067166],[0.037032,0.041017,0.066514],[0.050223,0.051916,0.073223]]},{"date":"201801190650","rgb":[[0.042434,0.071034,0.3187],[0.039045,0.066068,0.3066],[0.043647,0.074169,0.32534],[0.058924,0.12116,0.4239],[0.038667,0.060821,0.28546],[0.042463,0.075181,0.31242],[0.047975,0.089656,0.34387],[0.06617,0.14413,0.46758],[0.039564,0.042839,0.21528],[0.03491,0.042807,0.25058],[0.0397,0.058287,0.29039],[0.068297,0.14523,0.46231],[0.051942,0.048254,0.1074],[0.046297,0.044388,0.13384],[0.047995,0.048001,0.15539],[0.064223,0.069229,0.1727]]},{"date":"201801190700","rgb":[[0.16305,0.28876,0.88458],[0.19281,0.3488,0.97592],[0.21964,0.4013,0.99798],[0.22037,0.38824,0.99777],[0.15628,0.27923,0.84348],[0.18293,0.32425,0.92175],[0.22011,0.40108,0.99778],[0.21259,0.36594,0.98936],[0.15036,0.25617,0.7655],[0.16702,0.28583,0.84282],[0.18186,0.30574,0.88801],[0.18144,0.2942,0.90179],[0.084612,0.09494,0.32099],[0.092129,0.11851,0.39345],[0.10402,0.13105,0.43778],[0.10879,0.129,0.41713]]},{"date":"201801190710","rgb":[[0.84465,0.99839,0.99807],[0.8435,0.99911,0.99822],[0.79736,0.99926,0.9985],[0.70282,0.99916,0.99818],[0.97816,0.9828,0.99986],[0.98216,0.98165,0.99998],[0.94749,0.98901,0.99908],[0.79234,0.99914,0.99834],[0.78764,0.95297,0.99518],[0.94555,0.9854,0.99902],[0.98259,0.98351,0.99039],[0.92269,0.99368,0.9943],[0.2638,0.43333,0.82513],[0.37746,0.54434,0.86722],[0.47835,0.57008,0.89014],[0.43633,0.54341,0.90247]]},{"date":"201801190720","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.98312,0.97843,0.99974],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.59722,0.88425,0.94836],[0.72156,0.91075,0.95007],[0.79167,0.91555,0.95007],[0.81801,0.91322,0.94273]]},{"date":"201801190730","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99578,0.9766,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.82977,0.91683,0.9501],[0.91752,0.90753,0.95137],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94497]]},{"date":"201801190740","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99122,0.97751,0.99986],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.69221,0.908,0.94687],[0.75574,0.91471,0.94934],[0.79516,0.9158,0.94906],[0.89819,0.91047,0.94188]]},{"date":"201801190750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.91832,0.90826,0.95089],[0.93053,0.90517,0.95156],[0.93127,0.9048,0.95161],[0.93059,0.90333,0.94483]]},{"date":"201801190800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90339,0.94486]]},{"date":"201801190810","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90339,0.94489]]},{"date":"201801190820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90339,0.94491]]},{"date":"201801190830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.9034,0.94493]]},{"date":"201801190840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90341,0.94486]]},{"date":"201801190850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90336,0.94479]]},{"date":"201801190900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90338,0.94483]]},{"date":"201801190910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90336,0.94485]]},{"date":"201801190920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90337,0.9449]]},{"date":"201801190930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90339,0.94492]]},{"date":"201801190940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90337,0.94489]]},{"date":"201801190950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90335,0.94478]]},{"date":"201801191000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.94486]]},{"date":"201801191010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90333,0.9449]]},{"date":"201801191020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94485]]},{"date":"201801191040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90337,0.94486]]},{"date":"201801191050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90332,0.9448]]},{"date":"201801191100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90333,0.94491]]},{"date":"201801191110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90333,0.94486]]},{"date":"201801191120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.94489]]},{"date":"201801191130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90335,0.94489]]},{"date":"201801191140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90336,0.94489]]},{"date":"201801191150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90331,0.94484]]},{"date":"201801191200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94484]]},{"date":"201801191210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90333,0.94488]]},{"date":"201801191220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94492]]},{"date":"201801191230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90337,0.94493]]},{"date":"201801191240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90336,0.94491]]},{"date":"201801191300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90336,0.94487]]},{"date":"201801191310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90335,0.94494]]},{"date":"201801191330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90336,0.94495]]},{"date":"201801191350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.94481]]},{"date":"201801191400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90336,0.94488]]},{"date":"201801191410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90337,0.94492]]},{"date":"201801191420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90337,0.94494]]},{"date":"201801191430","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93067,0.90338,0.94494]]},{"date":"201801191440","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93066,0.90338,0.94494]]},{"date":"201801191450","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90335,0.94482]]},{"date":"201801191500","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90333,0.9448]]},{"date":"201801191510","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92996,0.90553,0.95128],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90331,0.94485]]},{"date":"201801191520","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.91853,0.90797,0.95074],[0.93029,0.90505,0.95144],[0.93127,0.9048,0.95161],[0.9306,0.90332,0.94488]]},{"date":"201801191530","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99527,0.97675,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.90674,0.89709,0.9433],[0.92585,0.90524,0.95049],[0.92821,0.90612,0.95144],[0.93034,0.9035,0.94485]]},{"date":"201801191540","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.98613,0.97471,0.99952],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.78481,0.8059,0.90524],[0.87079,0.86834,0.93661],[0.90075,0.89464,0.94236],[0.91313,0.89433,0.93838]]},{"date":"201801191550","rgb":[[0.81713,0.99931,0.99874],[0.85713,0.99963,0.99866],[0.87766,0.99743,0.99875],[0.87377,0.99818,0.99854],[0.93853,0.99323,0.99923],[0.97543,0.98462,0.99973],[0.98069,0.982,0.99991],[0.98387,0.98073,1],[0.90224,0.92787,0.9603],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.39233,0.41888,0.5544],[0.53745,0.54763,0.66692],[0.55377,0.56463,0.68966],[0.51196,0.47367,0.61108]]},{"date":"201801191600","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.95351,0.95427,0.99382],[0.99521,0.97676,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.58576,0.61274,0.87189],[0.68703,0.67598,0.89353],[0.69754,0.67992,0.89126],[0.76207,0.65622,0.89267]]},{"date":"201801191630","rgb":[[0.10684,0.20984,0.5584],[0.1669,0.28565,0.73675],[0.22271,0.38758,0.95493],[0.22704,0.39543,0.9943],[0.12611,0.23382,0.60463],[0.1207,0.22339,0.58404],[0.14913,0.25673,0.6798],[0.18243,0.29955,0.81147],[0.1576,0.25919,0.66881],[0.16872,0.28193,0.73426],[0.16761,0.27905,0.74842],[0.16374,0.27214,0.75991],[0.083229,0.094434,0.25274],[0.095247,0.12411,0.34843],[0.10577,0.14122,0.4032],[0.10155,0.11994,0.33988]]},{"date":"201801191640","rgb":[[0.025338,0.031861,0.115],[0.032607,0.039945,0.18408],[0.038161,0.051098,0.23377],[0.025713,0.030701,0.10858],[0.016997,0.027728,0.05507],[0.022088,0.029448,0.087859],[0.023052,0.030021,0.093598],[0.017487,0.027833,0.055227],[0.018775,0.031291,0.036599],[0.012641,0.026953,0.035922],[0.012758,0.02688,0.039526],[0.013274,0.026887,0.040165],[0.047604,0.047933,0.065928],[0.037163,0.041047,0.067209],[0.037433,0.041346,0.06903],[0.050172,0.051826,0.072773]]},{"date":"201801191650","rgb":[[0.012082,0.026793,0.025888],[0.011992,0.026588,0.026823],[0.014152,0.026383,0.029215],[0.026759,0.027414,0.043333],[0.012166,0.026783,0.030163],[0.012391,0.026806,0.0353],[0.012301,0.026846,0.033735],[0.030463,0.031318,0.048422],[0.018404,0.031203,0.034598],[0.012471,0.026884,0.034266],[0.012232,0.02672,0.03495],[0.013296,0.026825,0.039166],[0.047132,0.048489,0.060678],[0.03661,0.04077,0.06228],[0.03692,0.040986,0.066438],[0.049652,0.051636,0.071344]]},{"date":"201801191700","rgb":[[0.011302,0.026202,0.02123],[0.011093,0.025549,0.021405],[0.012221,0.025725,0.021693],[0.020168,0.026609,0.027742],[0.010474,0.027749,0.014693],[0.010336,0.025562,0.020997],[0.010346,0.025514,0.021333],[0.024503,0.028343,0.030617],[0.016606,0.033095,0.014831],[0.010302,0.027822,0.013368],[0.010312,0.025579,0.021201],[0.010989,0.02582,0.021772],[0.046899,0.04918,0.056489],[0.03633,0.043299,0.050764],[0.036257,0.041754,0.0563],[0.048856,0.051196,0.067351]]},{"date":"201801191710","rgb":[[0.011035,0.026469,0.018613],[0.011077,0.02548,0.021342],[0.012072,0.025975,0.019876],[0.01895,0.026917,0.024333],[0.010395,0.028432,0.01192],[0.010329,0.026679,0.016665],[0.010339,0.028368,0.010783],[0.024273,0.028102,0.028034],[0.016555,0.032984,0.013635],[0.010316,0.028847,0.0081022],[0.010314,0.028803,0.0093263],[0.010753,0.027067,0.017957],[0.047116,0.049154,0.056825],[0.036224,0.043272,0.05027],[0.036259,0.043234,0.051439],[0.048727,0.052407,0.062798]]},{"date":"201801191720","rgb":[[0.01126,0.027479,0.014347],[0.012468,0.026689,0.013889],[0.013309,0.02707,0.013574],[0.019159,0.026763,0.022624],[0.010399,0.028907,0.0089145],[0.010349,0.028907,0.0071174],[0.010342,0.028875,0.0075643],[0.024907,0.028118,0.024881],[0.01674,0.033188,0.012625],[0.0103,0.028873,0.0074657],[0.010315,0.028815,0.0089992],[0.010938,0.0281,0.015078],[0.047212,0.049495,0.05501],[0.036308,0.043294,0.049894],[0.036322,0.043238,0.050862],[0.048712,0.053306,0.060106]]},{"date":"201801191730","rgb":[[0.012355,0.027601,0.01068],[0.015312,0.025139,0.014652],[0.012757,0.026653,0.015766],[0.022163,0.027071,0.022999],[0.010396,0.028917,0.0076142],[0.010326,0.028897,0.0065492],[0.010354,0.0289,0.0067428],[0.026968,0.02906,0.024753],[0.016675,0.03315,0.010368],[0.010294,0.028905,0.0065041],[0.010326,0.02891,0.0072221],[0.010706,0.027928,0.014173],[0.047294,0.049267,0.055895],[0.036297,0.043319,0.04933],[0.036304,0.043304,0.050144],[0.048743,0.05321,0.060327]]},{"date":"201801191740","rgb":[[0.011339,0.025613,0.021551],[0.012077,0.025137,0.021254],[0.013546,0.026423,0.015518],[0.02613,0.026348,0.026599],[0.01052,0.025749,0.021191],[0.010338,0.027631,0.012472],[0.01036,0.028906,0.0074609],[0.027849,0.028465,0.026418],[0.016814,0.032289,0.014914],[0.010321,0.028954,0.007546],[0.010326,0.028936,0.0076759],[0.011003,0.028216,0.013936],[0.046191,0.048599,0.055574],[0.036301,0.043322,0.049601],[0.036239,0.043222,0.050331],[0.048741,0.053364,0.059976]]},{"date":"201801191750","rgb":[[0.012522,0.024993,0.021387],[0.012656,0.024877,0.021316],[0.012805,0.025725,0.019608],[0.024444,0.026137,0.025125],[0.010372,0.025539,0.021359],[0.010326,0.026478,0.017028],[0.01034,0.028623,0.0081095],[0.026981,0.028053,0.025628],[0.016651,0.03154,0.017033],[0.010297,0.028901,0.0069188],[0.010316,0.02887,0.0077568],[0.010819,0.027685,0.015233],[0.046456,0.048557,0.056354],[0.036284,0.043254,0.049549],[0.036251,0.043185,0.050896],[0.048827,0.052401,0.062963]]},{"date":"201801191800","rgb":[[0.012565,0.026696,0.014388],[0.013789,0.024487,0.02103],[0.012842,0.026193,0.017463],[0.023309,0.026444,0.023114],[0.010389,0.02891,0.0078217],[0.010336,0.028444,0.0085867],[0.01035,0.028919,0.0067014],[0.025977,0.028021,0.02416],[0.016873,0.032551,0.012079],[0.010295,0.028918,0.0065176],[0.01032,0.028932,0.006715],[0.010875,0.02847,0.012988],[0.046319,0.048392,0.055934],[0.036289,0.043285,0.048999],[0.036311,0.04323,0.050261],[0.049296,0.053673,0.061057]]},{"date":"201801191810","rgb":[[0.011928,0.027189,0.013772],[0.011794,0.025714,0.019025],[0.013469,0.026202,0.016107],[0.023442,0.02652,0.024789],[0.010373,0.028906,0.0073906],[0.010326,0.028836,0.0067438],[0.010352,0.028923,0.0068344],[0.024576,0.028231,0.023407],[0.016716,0.032682,0.011777],[0.010295,0.028931,0.0066031],[0.010318,0.028891,0.0069731],[0.010879,0.02819,0.013835],[0.046376,0.048293,0.056058],[0.036223,0.043234,0.049723],[0.036308,0.043201,0.050744],[0.048989,0.053346,0.061404]]},{"date":"201801191820","rgb":[[0.012,0.027483,0.013244],[0.012999,0.024986,0.020442],[0.014655,0.025334,0.018349],[0.02498,0.025742,0.026628],[0.010414,0.028909,0.0087735],[0.010336,0.028611,0.0081598],[0.010348,0.028877,0.0076845],[0.026183,0.028199,0.027715],[0.016585,0.032759,0.011323],[0.010294,0.028889,0.0069804],[0.0103,0.028911,0.0076805],[0.010881,0.027586,0.016786],[0.046228,0.048671,0.055942],[0.036259,0.043261,0.050487],[0.036291,0.043249,0.050743],[0.049252,0.0525,0.064519]]},{"date":"201801191830","rgb":[[0.011402,0.027415,0.013811],[0.013151,0.025752,0.015868],[0.014519,0.026194,0.015215],[0.025514,0.025963,0.023806],[0.010418,0.028883,0.0084324],[0.01032,0.028866,0.0068586],[0.010358,0.028893,0.0073799],[0.026963,0.028166,0.023269],[0.016615,0.032874,0.011949],[0.010295,0.028913,0.0067668],[0.010305,0.028861,0.0075897],[0.010752,0.028502,0.012865],[0.046551,0.048746,0.055499],[0.036303,0.043273,0.049531],[0.036322,0.043217,0.051106],[0.049222,0.053826,0.060545]]},{"date":"201801191840","rgb":[[0.011526,0.027761,0.01395],[0.011989,0.027428,0.011552],[0.01229,0.027203,0.01198],[0.011522,0.026194,0.019847],[0.010409,0.028904,0.009127],[0.01034,0.028887,0.0069701],[0.010349,0.028882,0.0070391],[0.010399,0.027989,0.013387],[0.016664,0.033083,0.012391],[0.01031,0.028906,0.007692],[0.010321,0.028872,0.0089952],[0.010541,0.02792,0.015529],[0.04683,0.048739,0.057881],[0.036298,0.043286,0.0507],[0.036245,0.043242,0.051448],[0.049332,0.052966,0.063567]]},{"date":"201801191910","rgb":[[0.01319,0.02696,0.011749],[0.015552,0.025062,0.01472],[0.01282,0.024894,0.021282],[0.011915,0.026267,0.018946],[0.010389,0.028858,0.0079207],[0.010326,0.028897,0.0066166],[0.010347,0.028071,0.010345],[0.01038,0.028605,0.011181],[0.016547,0.032895,0.011512],[0.010294,0.028929,0.0064672],[0.010318,0.028915,0.0067952],[0.010375,0.028626,0.011603],[0.046601,0.048545,0.055654],[0.03629,0.043271,0.049127],[0.036296,0.043227,0.050112],[0.048988,0.053423,0.060713]]},{"date":"201801191920","rgb":[[0.012237,0.027572,0.01221],[0.013347,0.026054,0.014968],[0.013782,0.024372,0.021273],[0.013503,0.024686,0.021451],[0.010411,0.028843,0.0088971],[0.010326,0.028884,0.0065699],[0.010356,0.027698,0.011992],[0.010388,0.02564,0.021037],[0.016718,0.033057,0.010903],[0.01029,0.028923,0.0067142],[0.010328,0.028928,0.0071331],[0.010394,0.027956,0.013437],[0.046657,0.048745,0.056013],[0.036295,0.043279,0.049489],[0.036305,0.043224,0.050228],[0.049098,0.053479,0.060438]]},{"date":"201801191930","rgb":[[0.011768,0.027161,0.013673],[0.017495,0.025156,0.010551],[0.016097,0.023823,0.019939],[0.011214,0.025727,0.020935],[0.010373,0.028859,0.0074996],[0.010326,0.028897,0.0064634],[0.010354,0.028554,0.0082343],[0.010447,0.027643,0.013863],[0.016551,0.033041,0.011644],[0.0103,0.028935,0.0066247],[0.01032,0.028906,0.0069222],[0.010398,0.028405,0.012454],[0.04672,0.04899,0.05538],[0.036295,0.04332,0.049407],[0.036252,0.043247,0.04991],[0.049022,0.053492,0.060238]]},{"date":"201801191940","rgb":[[0.011644,0.02542,0.021436],[0.011676,0.025196,0.021326],[0.011892,0.025126,0.021321],[0.010996,0.025745,0.020411],[0.010378,0.025546,0.021365],[0.010327,0.025495,0.021314],[0.010349,0.025627,0.020796],[0.010367,0.027557,0.014612],[0.016653,0.030143,0.023715],[0.010294,0.025966,0.019591],[0.010312,0.02821,0.010563],[0.010342,0.028327,0.013166],[0.046689,0.048765,0.056789],[0.036279,0.043067,0.050215],[0.036298,0.043187,0.050708],[0.048906,0.053229,0.060505]]},{"date":"201801191950","rgb":[[0.011103,0.028096,0.011953],[0.011911,0.026769,0.01457],[0.013188,0.024862,0.021234],[0.011425,0.026779,0.017952],[0.010394,0.028853,0.008749],[0.010326,0.02886,0.0067978],[0.01035,0.028513,0.0086703],[0.010372,0.028623,0.011501],[0.016766,0.03326,0.012195],[0.010281,0.028898,0.0068068],[0.010316,0.028902,0.0075537],[0.010366,0.028465,0.012344],[0.046845,0.04919,0.056331],[0.036301,0.043271,0.049976],[0.0363,0.043217,0.050538],[0.048981,0.053543,0.060304]]},{"date":"201801192000","rgb":[[0.01195,0.027377,0.013066],[0.012483,0.02742,0.010125],[0.015011,0.024979,0.016721],[0.012522,0.025169,0.021323],[0.010381,0.028902,0.00764],[0.010326,0.028884,0.006581],[0.010347,0.028877,0.0069828],[0.010378,0.027895,0.01329],[0.016973,0.033116,0.010861],[0.010295,0.028928,0.0064755],[0.010321,0.028945,0.0067239],[0.010352,0.028644,0.011506],[0.046663,0.049053,0.055396],[0.036286,0.043295,0.049336],[0.036249,0.043224,0.050282],[0.049074,0.053725,0.060137]]},{"date":"201801192010","rgb":[[0.011721,0.02748,0.012732],[0.012316,0.027608,0.0098037],[0.013314,0.025696,0.016734],[0.011373,0.026464,0.018468],[0.010394,0.028904,0.0075664],[0.010328,0.028898,0.0065357],[0.01035,0.028921,0.0066504],[0.010398,0.028587,0.011423],[0.016655,0.033005,0.011296],[0.010313,0.028924,0.0067656],[0.010321,0.028933,0.0070106],[0.010394,0.028748,0.011129],[0.046958,0.048908,0.056194],[0.036292,0.043286,0.049376],[0.036293,0.043197,0.050418],[0.048999,0.053584,0.060844]]},{"date":"201801192020","rgb":[[0.012687,0.027249,0.0117],[0.013362,0.026886,0.011019],[0.01397,0.026347,0.012694],[0.011226,0.027184,0.0148],[0.010361,0.028909,0.0070074],[0.010326,0.028897,0.0064221],[0.01035,0.028921,0.0066009],[0.01035,0.028758,0.010112],[0.016848,0.032932,0.010565],[0.010294,0.028929,0.0064548],[0.010321,0.028933,0.0066508],[0.010312,0.028688,0.010133],[0.046662,0.048718,0.055607],[0.036229,0.043253,0.049338],[0.036294,0.043224,0.049907],[0.04907,0.053669,0.060313]]},{"date":"201801192050","rgb":[[0.013677,0.024577,0.021373],[0.01474,0.024093,0.021313],[0.014665,0.024099,0.021345],[0.011613,0.026032,0.019651],[0.010385,0.025553,0.021372],[0.010326,0.025494,0.02131],[0.010352,0.02685,0.015621],[0.010394,0.028508,0.011753],[0.016849,0.030105,0.023476],[0.010294,0.027648,0.012157],[0.01032,0.028925,0.0068851],[0.01038,0.0282,0.012739],[0.046834,0.048623,0.05788],[0.036281,0.043269,0.049574],[0.036309,0.0432,0.050758],[0.04904,0.052983,0.062558]]},{"date":"201801192100","rgb":[[0.012895,0.024894,0.021364],[0.016405,0.02334,0.021327],[0.016014,0.023573,0.021337],[0.011929,0.025805,0.0194],[0.01039,0.025558,0.021377],[0.010326,0.025507,0.021205],[0.010352,0.026991,0.014987],[0.01035,0.028448,0.011199],[0.016794,0.03016,0.022671],[0.010294,0.028014,0.010421],[0.010318,0.028954,0.0065824],[0.010354,0.028715,0.010975],[0.046924,0.048999,0.056494],[0.036282,0.043292,0.049155],[0.036297,0.04329,0.049333],[0.048869,0.05356,0.05942]]},{"date":"201801192110","rgb":[[0.013373,0.026736,0.012176],[0.013884,0.02541,0.016821],[0.015382,0.023797,0.021346],[0.012658,0.025971,0.018357],[0.010392,0.028912,0.0079029],[0.010326,0.028873,0.0065671],[0.01035,0.028118,0.010261],[0.010384,0.028699,0.01006],[0.016758,0.03313,0.011683],[0.010294,0.028924,0.0064799],[0.010323,0.028895,0.0070242],[0.010337,0.028618,0.011745],[0.046971,0.049045,0.057048],[0.036235,0.04327,0.049467],[0.036263,0.043189,0.050979],[0.048791,0.053293,0.060834]]},{"date":"201801192120","rgb":[[0.012307,0.027378,0.011453],[0.013786,0.025886,0.014168],[0.013509,0.025309,0.01771],[0.012087,0.02695,0.015482],[0.010382,0.028867,0.0075346],[0.010326,0.028897,0.0064586],[0.01035,0.028909,0.0066806],[0.010363,0.028776,0.009517],[0.016943,0.033226,0.01067],[0.010294,0.028929,0.0064199],[0.010313,0.028937,0.0065959],[0.01035,0.028801,0.0099401],[0.046945,0.049192,0.054502],[0.036286,0.043296,0.049015],[0.036299,0.043304,0.049102],[0.048759,0.053599,0.058997]]},{"date":"201801192200","rgb":[[0.013136,0.024821,0.021413],[0.015117,0.023868,0.021313],[0.014256,0.024185,0.021342],[0.010794,0.025658,0.021032],[0.010382,0.02555,0.021369],[0.010328,0.025495,0.021314],[0.010354,0.025631,0.0208],[0.010325,0.027517,0.014761],[0.016726,0.031347,0.018842],[0.010294,0.026222,0.018481],[0.010316,0.028267,0.0098129],[0.010413,0.028541,0.012254],[0.047069,0.049113,0.056339],[0.036282,0.043264,0.049619],[0.036306,0.043225,0.050293],[0.049131,0.053599,0.061271]]},{"date":"201801192210","rgb":[[0.01363,0.026811,0.012054],[0.013359,0.026134,0.014896],[0.018741,0.022612,0.021215],[0.013683,0.024502,0.021411],[0.010376,0.028922,0.0072389],[0.010326,0.028897,0.006456],[0.01035,0.027976,0.010714],[0.010354,0.025778,0.020147],[0.016877,0.033196,0.011567],[0.010294,0.028916,0.0064866],[0.01031,0.028921,0.0067221],[0.010366,0.027823,0.0134],[0.046893,0.049252,0.056747],[0.036308,0.04324,0.050044],[0.036247,0.043208,0.051049],[0.04896,0.053272,0.060816]]},{"date":"201801192220","rgb":[[0.011337,0.025429,0.021395],[0.012088,0.025117,0.02131],[0.013869,0.024367,0.021327],[0.011625,0.025373,0.021446],[0.010371,0.025539,0.021358],[0.010326,0.025494,0.021313],[0.010355,0.025523,0.021342],[0.010349,0.025516,0.021335],[0.016869,0.030104,0.02327],[0.010294,0.025534,0.021297],[0.010315,0.025573,0.02128],[0.010361,0.025872,0.020324],[0.046718,0.048872,0.057009],[0.036301,0.042049,0.054842],[0.036255,0.042107,0.055151],[0.048927,0.05306,0.061816]]},{"date":"201801192230","rgb":[[0.013333,0.02572,0.017431],[0.015607,0.024049,0.019863],[0.014337,0.026397,0.011489],[0.013077,0.026033,0.0166],[0.01042,0.028941,0.0075369],[0.010326,0.02872,0.0073908],[0.010353,0.028912,0.0065395],[0.010362,0.02875,0.0097873],[0.016826,0.033399,0.010666],[0.010292,0.028904,0.0067171],[0.010318,0.028895,0.0073365],[0.010386,0.028558,0.011697],[0.047157,0.049159,0.055299],[0.03629,0.043311,0.04899],[0.036237,0.043246,0.049625],[0.048904,0.053595,0.059555]]},{"date":"201801192240","rgb":[[0.011961,0.027092,0.013591],[0.012558,0.026416,0.0145],[0.011595,0.026868,0.014222],[0.011365,0.027367,0.016224],[0.010411,0.028906,0.0084796],[0.010328,0.028898,0.0065047],[0.010349,0.028857,0.0076008],[0.010419,0.028418,0.012207],[0.017051,0.03318,0.011782],[0.010307,0.02887,0.0068988],[0.01032,0.028879,0.0077817],[0.010417,0.028344,0.013456],[0.046985,0.049069,0.057115],[0.036279,0.043222,0.049771],[0.03631,0.043199,0.050742],[0.049033,0.053102,0.062469]]},{"date":"201801192250","rgb":[[0.011781,0.026004,0.018596],[0.01167,0.025177,0.021311],[0.011763,0.02573,0.018852],[0.011129,0.025999,0.020264],[0.01039,0.028869,0.0080273],[0.010326,0.027738,0.011286],[0.010349,0.02884,0.007082],[0.010365,0.027741,0.01356],[0.016747,0.033158,0.01099],[0.010311,0.028947,0.0065304],[0.010321,0.028957,0.006614],[0.010405,0.028514,0.012338],[0.046711,0.049061,0.05559],[0.036294,0.043291,0.049403],[0.036253,0.043226,0.050515],[0.049032,0.05354,0.060373]]},{"date":"201801192300","rgb":[[0.012508,0.025136,0.021337],[0.01308,0.024709,0.021313],[0.01264,0.024853,0.021342],[0.011919,0.025305,0.021384],[0.010365,0.027803,0.012055],[0.010326,0.02576,0.020098],[0.01035,0.025532,0.021229],[0.010361,0.027437,0.015167],[0.016738,0.033354,0.011039],[0.010294,0.028542,0.0084056],[0.010326,0.028018,0.011114],[0.010357,0.028324,0.01291],[0.04678,0.049077,0.056299],[0.036289,0.043258,0.049437],[0.036304,0.043196,0.05022],[0.049021,0.053304,0.06144]]},{"date":"201801192310","rgb":[[0.011932,0.027536,0.011906],[0.013941,0.026634,0.010849],[0.012881,0.025202,0.020301],[0.012684,0.026629,0.015863],[0.010392,0.028901,0.0077242],[0.010326,0.028885,0.0066748],[0.010364,0.028769,0.0078838],[0.010377,0.028698,0.010526],[0.016685,0.03332,0.010427],[0.010294,0.028926,0.0064256],[0.010318,0.028893,0.0069959],[0.010393,0.028752,0.010619],[0.046681,0.049231,0.055597],[0.036286,0.043294,0.04908],[0.036238,0.043238,0.049895],[0.048841,0.053522,0.05987]]},{"date":"201801192320","rgb":[[0.011468,0.025325,0.021386],[0.013946,0.024333,0.021319],[0.015285,0.023832,0.021332],[0.011822,0.025321,0.021427],[0.010385,0.025553,0.021372],[0.010327,0.025495,0.021314],[0.010352,0.02552,0.021339],[0.010372,0.02554,0.021359],[0.016821,0.031124,0.018893],[0.010294,0.025982,0.019369],[0.010312,0.025544,0.021331],[0.010339,0.025572,0.021359],[0.046781,0.04933,0.05542],[0.036275,0.04309,0.050113],[0.036307,0.041107,0.058569],[0.048949,0.051237,0.06732]]},{"date":"201801192330","rgb":[[0.011588,0.027721,0.011933],[0.014312,0.025686,0.014528],[0.014173,0.024403,0.021224],[0.011416,0.026395,0.018149],[0.010382,0.028915,0.0074765],[0.010326,0.028897,0.0064236],[0.010354,0.028202,0.0095761],[0.010387,0.028705,0.010801],[0.016696,0.033278,0.010536],[0.010294,0.028905,0.0066327],[0.010318,0.028916,0.0069256],[0.010376,0.028792,0.010688],[0.047086,0.049327,0.054629],[0.03628,0.0433,0.04878],[0.036302,0.043271,0.049233],[0.048955,0.053825,0.058674]]},{"date":"201801192340","rgb":[[0.012902,0.024904,0.021406],[0.012073,0.025074,0.021326],[0.012507,0.024943,0.021339],[0.011793,0.02604,0.02003],[0.01041,0.025577,0.021396],[0.010326,0.025494,0.021313],[0.010347,0.025809,0.020144],[0.010443,0.028042,0.013199],[0.0169,0.031293,0.018894],[0.010294,0.026749,0.015927],[0.010316,0.028583,0.0086582],[0.010371,0.02858,0.011807],[0.046999,0.049336,0.055497],[0.036277,0.04326,0.049134],[0.036246,0.043183,0.049879],[0.049078,0.053846,0.060346]]},{"date":"201801192350","rgb":[[0.01243,0.026948,0.013251],[0.016861,0.025447,0.0098283],[0.013151,0.02587,0.016617],[0.01116,0.025626,0.021367],[0.010403,0.02894,0.0075869],[0.010332,0.028891,0.0065604],[0.010352,0.028911,0.00677],[0.010411,0.027046,0.015582],[0.016693,0.03302,0.010968],[0.01029,0.028923,0.0065441],[0.010314,0.028912,0.0069622],[0.010451,0.028653,0.011435],[0.046551,0.048811,0.055266],[0.036279,0.043274,0.049332],[0.036298,0.043205,0.050289],[0.049057,0.053628,0.060004]]},{"date":"201801200000","rgb":[[0.011074,0.02559,0.020931],[0.013091,0.024809,0.021313],[0.011803,0.02527,0.021339],[0.011082,0.02559,0.021453],[0.010398,0.028423,0.0097],[0.010326,0.026277,0.017785],[0.01035,0.025518,0.021337],[0.010375,0.026214,0.019321],[0.016598,0.033256,0.010854],[0.010294,0.028904,0.006616],[0.010312,0.027666,0.012063],[0.010337,0.028559,0.011938],[0.045208,0.047728,0.054174],[0.036295,0.043285,0.049254],[0.036295,0.043237,0.049562],[0.04919,0.053968,0.060261]]},{"date":"201801200020","rgb":[[0.011914,0.027589,0.01149],[0.013356,0.026129,0.014638],[0.013136,0.025011,0.020376],[0.01168,0.02747,0.014925],[0.010426,0.028935,0.0075545],[0.010324,0.028895,0.0066329],[0.010358,0.028787,0.0075812],[0.010406,0.028784,0.010509],[0.016775,0.03321,0.011456],[0.0103,0.028936,0.0064952],[0.01032,0.028913,0.007291],[0.010356,0.028719,0.011589],[0.044993,0.047922,0.054566],[0.036289,0.043229,0.049311],[0.036303,0.043194,0.050288],[0.049126,0.053857,0.059671]]},{"date":"201801200030","rgb":[[0.011518,0.026999,0.015185],[0.012129,0.025101,0.021036],[0.015366,0.023825,0.021337],[0.011599,0.025412,0.021474],[0.010408,0.028956,0.0078053],[0.010328,0.028182,0.0096116],[0.010352,0.026008,0.019285],[0.010359,0.025526,0.021345],[0.016697,0.033063,0.011317],[0.010294,0.028918,0.0065592],[0.01032,0.028739,0.0079631],[0.010352,0.027537,0.014841],[0.046014,0.048577,0.054712],[0.036282,0.043277,0.049211],[0.036252,0.043264,0.049256],[0.049197,0.053922,0.060074]]},{"date":"201801200040","rgb":[[0.013766,0.026227,0.014323],[0.01227,0.0253,0.020408],[0.014847,0.024157,0.021353],[0.011901,0.025569,0.021693],[0.010409,0.028878,0.0089973],[0.010326,0.028629,0.0079341],[0.01035,0.026446,0.01722],[0.010541,0.025928,0.020666],[0.016909,0.033029,0.012605],[0.010294,0.028878,0.0069602],[0.010328,0.028856,0.007787],[0.010435,0.027794,0.015105],[0.045809,0.048308,0.056332],[0.036241,0.04327,0.04992],[0.036297,0.043242,0.050492],[0.049336,0.053069,0.063285]]},{"date":"201801200110","rgb":[[0.011675,0.027886,0.010762],[0.012612,0.027432,0.0091146],[0.015182,0.025477,0.014698],[0.011449,0.025819,0.020237],[0.010388,0.028959,0.0070908],[0.010326,0.028897,0.0064616],[0.010354,0.028912,0.006715],[0.010414,0.028279,0.011784],[0.016336,0.032458,0.011225],[0.010295,0.02893,0.006682],[0.010315,0.028923,0.0070649],[0.010412,0.028442,0.012707],[0.045622,0.048039,0.055139],[0.036274,0.043282,0.049018],[0.036293,0.043242,0.050066],[0.048883,0.053321,0.060972]]},{"date":"201801200120","rgb":[[0.013298,0.024618,0.021377],[0.019114,0.022403,0.021319],[0.015796,0.023725,0.021331],[0.011288,0.025608,0.020932],[0.01036,0.025527,0.021347],[0.010326,0.025494,0.021313],[0.010352,0.025613,0.020815],[0.010395,0.027602,0.014995],[0.016716,0.029575,0.023129],[0.010305,0.026223,0.018381],[0.010316,0.028392,0.0091788],[0.010356,0.028527,0.011544],[0.045573,0.047615,0.056186],[0.036285,0.043201,0.049453],[0.036299,0.043241,0.049955],[0.048916,0.053684,0.059939]]},{"date":"201801200130","rgb":[[0.012154,0.025488,0.019771],[0.011832,0.027241,0.012184],[0.012262,0.025606,0.018827],[0.01146,0.025574,0.021657],[0.010372,0.028563,0.0087838],[0.010326,0.028897,0.0065011],[0.01035,0.028734,0.007456],[0.010389,0.026676,0.017202],[0.016454,0.032089,0.010673],[0.010294,0.028917,0.006492],[0.010323,0.028943,0.0068402],[0.010347,0.02858,0.011465],[0.045741,0.047439,0.054706],[0.036282,0.0433,0.048906],[0.036303,0.043241,0.049912],[0.049022,0.053769,0.059879]]},{"date":"201801200140","rgb":[[0.012122,0.025192,0.021363],[0.013363,0.024659,0.021318],[0.012346,0.025486,0.019296],[0.011567,0.026744,0.017205],[0.010395,0.025563,0.021379],[0.010326,0.026814,0.015433],[0.01035,0.028761,0.0073661],[0.010406,0.028658,0.010891],[0.016715,0.030327,0.015569],[0.010294,0.028876,0.0067686],[0.010318,0.028904,0.0070625],[0.010403,0.028666,0.011356],[0.044344,0.0462,0.055412],[0.036232,0.04331,0.049142],[0.036305,0.043305,0.04995],[0.049014,0.053657,0.060709]]},{"date":"201801200150","rgb":[[0.011698,0.027479,0.012092],[0.016886,0.024542,0.014799],[0.016235,0.023556,0.021248],[0.011918,0.026369,0.018129],[0.010379,0.028925,0.0070649],[0.010326,0.028897,0.0064221],[0.01035,0.028287,0.0092029],[0.010382,0.028656,0.010796],[0.016423,0.031253,0.010466],[0.010294,0.028929,0.0063972],[0.010321,0.028929,0.0067352],[0.010333,0.028679,0.010482],[0.044117,0.045899,0.055108],[0.036279,0.043277,0.048915],[0.036298,0.043258,0.050031],[0.049019,0.05343,0.06102]]},{"date":"201801200200","rgb":[[0.012789,0.027084,0.012173],[0.012112,0.026455,0.015116],[0.015484,0.023741,0.021261],[0.011682,0.025357,0.021416],[0.010397,0.028919,0.0076934],[0.010326,0.028897,0.0064618],[0.010344,0.027891,0.011081],[0.010381,0.025706,0.020615],[0.01632,0.031139,0.01052],[0.010294,0.028929,0.0066206],[0.01032,0.028902,0.0070252],[0.010374,0.027996,0.012998],[0.044031,0.045968,0.054069],[0.036308,0.0433,0.049126],[0.036234,0.043244,0.049572],[0.049064,0.053799,0.060006]]},{"date":"201801200210","rgb":[[0.011602,0.027594,0.011594],[0.012342,0.026503,0.015088],[0.01272,0.024824,0.021206],[0.013301,0.025241,0.019707],[0.01037,0.028917,0.0070955],[0.010326,0.028897,0.0064125],[0.010352,0.027993,0.01074],[0.010379,0.028372,0.011687],[0.017994,0.032137,0.010891],[0.010303,0.028939,0.0064966],[0.01032,0.028937,0.0067386],[0.010362,0.028794,0.010506],[0.045343,0.046755,0.054115],[0.036305,0.043293,0.048995],[0.036261,0.04328,0.050064],[0.049088,0.053692,0.060244]]},{"date":"201801200220","rgb":[[0.011526,0.027819,0.011665],[0.011401,0.026898,0.014136],[0.012602,0.025657,0.018436],[0.011649,0.026281,0.01775],[0.010364,0.028872,0.0076134],[0.010326,0.028897,0.0064215],[0.010351,0.028921,0.0065498],[0.010345,0.028631,0.010138],[0.018108,0.032873,0.011658],[0.010295,0.028931,0.0064695],[0.01032,0.02893,0.0067509],[0.01037,0.02864,0.011203],[0.046242,0.048083,0.055461],[0.036282,0.043239,0.049308],[0.036299,0.043203,0.050212],[0.049047,0.053708,0.06084]]},{"date":"201801200230","rgb":[[0.012396,0.027638,0.010565],[0.011714,0.02654,0.015193],[0.013506,0.024469,0.021311],[0.012127,0.02582,0.019797],[0.010394,0.028927,0.0075583],[0.010324,0.028895,0.0064205],[0.010355,0.027877,0.011172],[0.010359,0.028345,0.011075],[0.017506,0.033133,0.010861],[0.010302,0.028937,0.0065828],[0.010316,0.028952,0.0066474],[0.010332,0.028771,0.01003],[0.045901,0.047879,0.055464],[0.036283,0.043292,0.048987],[0.036302,0.043283,0.049383],[0.049079,0.053883,0.059388]]},{"date":"201801200240","rgb":[[0.013561,0.02462,0.021386],[0.015491,0.02379,0.021313],[0.014048,0.024367,0.021352],[0.010922,0.026455,0.018188],[0.010366,0.025534,0.021353],[0.010326,0.025546,0.02104],[0.01035,0.027165,0.014247],[0.010365,0.028669,0.010692],[0.017853,0.029451,0.022396],[0.0103,0.028084,0.010269],[0.010313,0.028938,0.0066536],[0.01033,0.028721,0.010529],[0.045585,0.046633,0.055858],[0.036284,0.043252,0.04953],[0.036242,0.043207,0.049651],[0.048978,0.05369,0.060352]]},{"date":"201801200250","rgb":[[0.012608,0.025129,0.021277],[0.011547,0.025287,0.021314],[0.012035,0.025014,0.021334],[0.012359,0.025073,0.021436],[0.010373,0.027929,0.012139],[0.010326,0.02571,0.020364],[0.01035,0.025518,0.021337],[0.010389,0.025557,0.021376],[0.017151,0.031614,0.011137],[0.010294,0.028544,0.0081759],[0.010315,0.026409,0.017518],[0.01034,0.025573,0.021359],[0.044587,0.04605,0.05541],[0.036292,0.043245,0.049527],[0.036312,0.043152,0.050511],[0.04909,0.052055,0.065403]]},{"date":"201801200300","rgb":[[0.013179,0.026976,0.011638],[0.013902,0.025899,0.01422],[0.012356,0.025,0.021173],[0.011237,0.026752,0.018021],[0.010381,0.028941,0.0073396],[0.010326,0.028897,0.0065139],[0.010352,0.028512,0.0084509],[0.010387,0.028623,0.010286],[0.016078,0.031171,0.010329],[0.010295,0.028919,0.0064717],[0.010318,0.028929,0.0065548],[0.010361,0.028357,0.011307],[0.043726,0.045665,0.054392],[0.036296,0.043259,0.049409],[0.036306,0.043221,0.049938],[0.049169,0.053679,0.060522]]},{"date":"201801200310","rgb":[[0.01471,0.024839,0.018412],[0.018236,0.025069,0.0094589],[0.012813,0.025947,0.016132],[0.012504,0.026458,0.01656],[0.01036,0.028722,0.0082776],[0.010326,0.028897,0.0064221],[0.010352,0.028923,0.006524],[0.010394,0.028601,0.010788],[0.016459,0.031277,0.010966],[0.01029,0.028926,0.0064906],[0.01032,0.028955,0.0066404],[0.010359,0.028657,0.010917],[0.044192,0.045835,0.055196],[0.036294,0.043227,0.049393],[0.0363,0.043247,0.049859],[0.048998,0.053562,0.06077]]},{"date":"201801200320","rgb":[[0.011727,0.027441,0.012391],[0.01555,0.025054,0.015843],[0.015135,0.023896,0.021321],[0.011831,0.025831,0.020535],[0.010395,0.028941,0.0078701],[0.010326,0.028897,0.0064749],[0.010342,0.027766,0.011631],[0.010363,0.028124,0.012451],[0.018006,0.033039,0.012131],[0.010306,0.028942,0.0068044],[0.010307,0.028894,0.0070788],[0.010357,0.02829,0.012462],[0.046208,0.048189,0.055021],[0.036277,0.043288,0.049276],[0.036235,0.043209,0.049886],[0.049047,0.05383,0.06024]]},{"date":"201801200330","rgb":[[0.011951,0.025205,0.021443],[0.014956,0.023942,0.021327],[0.013057,0.024724,0.021325],[0.011339,0.026226,0.019751],[0.010382,0.026217,0.018789],[0.010326,0.025606,0.020766],[0.010355,0.027693,0.012132],[0.010408,0.028409,0.011855],[0.017419,0.032995,0.012369],[0.010323,0.028491,0.0090326],[0.010326,0.028916,0.0072509],[0.010451,0.028563,0.012355],[0.04605,0.048125,0.055213],[0.036285,0.043291,0.049426],[0.036309,0.04326,0.050641],[0.049234,0.053524,0.061799]]},{"date":"201801200340","rgb":[[0.011532,0.027075,0.015412],[0.011921,0.026146,0.017311],[0.01177,0.026573,0.015954],[0.011367,0.026557,0.020233],[0.01042,0.028849,0.0093095],[0.010326,0.028866,0.0069645],[0.010347,0.028894,0.0071647],[0.010503,0.027834,0.014624],[0.017084,0.033282,0.011784],[0.010294,0.028917,0.0067022],[0.010312,0.028882,0.0071082],[0.010519,0.028246,0.013516],[0.045776,0.048251,0.055399],[0.03629,0.043289,0.049043],[0.036305,0.043276,0.049377],[0.049119,0.053199,0.0609]]},{"date":"201801200350","rgb":[[0.011313,0.027263,0.014512],[0.011759,0.026486,0.015467],[0.011816,0.026955,0.01417],[0.011513,0.027604,0.015759],[0.010392,0.028852,0.0090601],[0.010326,0.028875,0.0067014],[0.010357,0.028915,0.0071599],[0.010462,0.02866,0.012266],[0.016953,0.033148,0.010629],[0.01029,0.028912,0.0066391],[0.01032,0.028943,0.0065689],[0.010383,0.02879,0.010838],[0.045284,0.047863,0.054884],[0.036282,0.043253,0.049224],[0.036298,0.043292,0.049452],[0.04911,0.053851,0.059497]]},{"date":"201801200410","rgb":[[0.012692,0.025716,0.018461],[0.013266,0.027137,0.0094166],[0.015902,0.024712,0.016588],[0.012364,0.02517,0.021434],[0.010371,0.028832,0.0075632],[0.010324,0.028895,0.006464],[0.01035,0.028909,0.0066083],[0.010387,0.027184,0.014812],[0.017083,0.0331,0.010389],[0.0103,0.028936,0.0064644],[0.010321,0.028957,0.0066106],[0.010341,0.028788,0.01012],[0.045761,0.047894,0.054935],[0.036282,0.043304,0.049068],[0.036309,0.04326,0.049896],[0.049007,0.053634,0.060217]]},{"date":"201801200420","rgb":[[0.012865,0.027317,0.011275],[0.013113,0.026252,0.014624],[0.013528,0.024651,0.021222],[0.01247,0.025059,0.021414],[0.010382,0.028902,0.0074226],[0.010326,0.028897,0.0064157],[0.01035,0.028004,0.010579],[0.01037,0.025805,0.020146],[0.017288,0.03219,0.01077],[0.010294,0.028917,0.0065051],[0.010321,0.028907,0.0069296],[0.010331,0.028092,0.012649],[0.044998,0.046916,0.05451],[0.036282,0.043226,0.049298],[0.036315,0.043279,0.049553],[0.048996,0.053809,0.060001]]},{"date":"201801200430","rgb":[[0.014364,0.024193,0.021374],[0.018489,0.022629,0.021314],[0.013966,0.024446,0.021331],[0.01218,0.025529,0.020023],[0.010401,0.025569,0.021388],[0.010326,0.025605,0.02077],[0.01035,0.02744,0.013045],[0.010364,0.028531,0.010998],[0.017155,0.029543,0.019972],[0.010294,0.028277,0.0093249],[0.010318,0.028948,0.0066311],[0.010359,0.028656,0.011021],[0.044334,0.046073,0.055222],[0.036288,0.043244,0.049272],[0.036302,0.043229,0.049748],[0.049164,0.053816,0.059813]]},{"date":"201801200440","rgb":[[0.011991,0.027462,0.012412],[0.014821,0.025398,0.015013],[0.013217,0.024784,0.02121],[0.011479,0.025454,0.021422],[0.010377,0.028888,0.0082456],[0.010326,0.028897,0.0064994],[0.010352,0.027919,0.011069],[0.010375,0.026003,0.01963],[0.016509,0.031224,0.01176],[0.010294,0.028929,0.0065009],[0.010315,0.028935,0.0067503],[0.010324,0.028324,0.012547],[0.043848,0.045929,0.055527],[0.036233,0.04326,0.049473],[0.036287,0.043242,0.050374],[0.049029,0.053127,0.062687]]},{"date":"201801200450","rgb":[[0.013386,0.024782,0.021412],[0.011504,0.02525,0.021326],[0.013485,0.024568,0.021349],[0.011311,0.026143,0.019602],[0.010382,0.025575,0.021265],[0.010332,0.0255,0.021319],[0.010344,0.026348,0.0177],[0.010454,0.028462,0.012089],[0.016206,0.029918,0.015677],[0.010294,0.027307,0.013666],[0.010318,0.028891,0.0069351],[0.010374,0.028699,0.011229],[0.043891,0.045445,0.054165],[0.036292,0.043314,0.048945],[0.036308,0.043287,0.049478],[0.049105,0.054003,0.059706]]},{"date":"201801200500","rgb":[[0.011975,0.027215,0.01243],[0.014656,0.025542,0.014943],[0.018735,0.022865,0.020068],[0.013474,0.026371,0.016463],[0.01038,0.028903,0.0076499],[0.010328,0.028898,0.0065349],[0.010349,0.028814,0.007175],[0.010387,0.028402,0.011087],[0.016405,0.031122,0.011533],[0.010294,0.028917,0.0065906],[0.010318,0.028941,0.0066114],[0.010347,0.028548,0.011931],[0.044014,0.045737,0.054692],[0.036287,0.043256,0.049279],[0.036301,0.043257,0.049498],[0.049166,0.053463,0.061299]]},{"date":"201801200510","rgb":[[0.011684,0.027481,0.01201],[0.011671,0.026796,0.014334],[0.01242,0.027222,0.010716],[0.011565,0.026728,0.016118],[0.010384,0.028918,0.0070116],[0.010336,0.028906,0.0064318],[0.010352,0.028899,0.0066088],[0.01033,0.02857,0.010338],[0.015824,0.030917,0.010655],[0.010316,0.028952,0.006486],[0.010321,0.028954,0.0067358],[0.010343,0.028669,0.010678],[0.043554,0.045512,0.054163],[0.036275,0.043273,0.04907],[0.036306,0.043209,0.049708],[0.048957,0.053748,0.059605]]},{"date":"201801200520","rgb":[[0.012821,0.027226,0.011349],[0.012659,0.026171,0.015314],[0.012133,0.026388,0.015431],[0.011915,0.025342,0.021409],[0.01039,0.0289,0.0075004],[0.010326,0.028897,0.0065478],[0.01035,0.028909,0.0070204],[0.010405,0.02725,0.015084],[0.015923,0.030882,0.011003],[0.010294,0.028929,0.0063571],[0.010329,0.028953,0.0068515],[0.010362,0.028572,0.011831],[0.043366,0.045557,0.053631],[0.036289,0.043299,0.049293],[0.036309,0.043268,0.049956],[0.048975,0.053713,0.060198]]},{"date":"201801200530","rgb":[[0.011176,0.027579,0.012998],[0.012675,0.027439,0.0094345],[0.013204,0.025612,0.017219],[0.011351,0.025599,0.021537],[0.010397,0.028918,0.008004],[0.010326,0.028897,0.0065798],[0.010352,0.028871,0.0067452],[0.010391,0.026996,0.016131],[0.017597,0.031892,0.011374],[0.0103,0.028923,0.0066335],[0.010316,0.028952,0.0065824],[0.010393,0.028018,0.012974],[0.044859,0.046493,0.054222],[0.036308,0.043294,0.049358],[0.036264,0.043228,0.049551],[0.049152,0.053452,0.061233]]},{"date":"201801200550","rgb":[[0.013037,0.024905,0.021413],[0.014141,0.024322,0.021323],[0.012007,0.025054,0.021342],[0.010899,0.025531,0.021375],[0.010398,0.025566,0.021385],[0.010326,0.025494,0.021313],[0.010352,0.02552,0.021339],[0.010385,0.025982,0.019657],[0.017102,0.028828,0.022811],[0.010294,0.025578,0.021209],[0.010316,0.027063,0.014773],[0.010328,0.028642,0.010965],[0.045164,0.046419,0.055105],[0.036282,0.042765,0.051219],[0.036248,0.043247,0.050051],[0.04912,0.054016,0.059516]]},{"date":"201801200600","rgb":[[0.013352,0.026977,0.011377],[0.018065,0.024048,0.014909],[0.013966,0.02443,0.021261],[0.011315,0.025341,0.021332],[0.01037,0.028843,0.0078314],[0.010332,0.028903,0.0065939],[0.01035,0.027816,0.011575],[0.010356,0.025682,0.020575],[0.016357,0.031056,0.011195],[0.010306,0.028942,0.0064695],[0.010321,0.028957,0.0068125],[0.010322,0.02792,0.012987],[0.044019,0.045742,0.05381],[0.036283,0.043281,0.049344],[0.036289,0.043233,0.049755],[0.049155,0.054137,0.059607]]},{"date":"201801200610","rgb":[[0.013094,0.026811,0.012381],[0.013639,0.025938,0.014754],[0.011326,0.02527,0.021269],[0.011047,0.025657,0.021451],[0.010376,0.028872,0.0082711],[0.010332,0.028903,0.0064705],[0.010355,0.027638,0.012294],[0.010355,0.026288,0.018648],[0.015997,0.030819,0.012663],[0.0103,0.02891,0.0069171],[0.010325,0.028896,0.0072726],[0.010358,0.028546,0.011764],[0.043637,0.045554,0.054623],[0.036294,0.043275,0.049475],[0.036309,0.043276,0.049545],[0.048984,0.053785,0.059793]]},{"date":"201801200620","rgb":[[0.012724,0.026303,0.017382],[0.016558,0.02403,0.018891],[0.015335,0.023861,0.021336],[0.012385,0.025641,0.022378],[0.010472,0.02848,0.012723],[0.010326,0.028481,0.0099365],[0.010368,0.026244,0.018497],[0.010526,0.025694,0.021615],[0.01806,0.031838,0.014896],[0.010313,0.028781,0.0093406],[0.010319,0.028478,0.011632],[0.010498,0.026357,0.0195],[0.045395,0.046664,0.055634],[0.036321,0.043263,0.051048],[0.036312,0.043201,0.051473],[0.049327,0.05302,0.063702]]},{"date":"201801200630","rgb":[[0.012112,0.02629,0.024705],[0.012674,0.025802,0.024171],[0.011502,0.025548,0.021704],[0.012214,0.026433,0.025727],[0.011424,0.026488,0.024979],[0.010788,0.025922,0.022549],[0.010411,0.025579,0.021398],[0.011313,0.026299,0.024637],[0.018907,0.030284,0.024574],[0.010421,0.025653,0.02144],[0.010335,0.025567,0.021354],[0.010873,0.026029,0.022615],[0.046589,0.047143,0.059423],[0.036386,0.040512,0.061745],[0.036315,0.040363,0.062324],[0.04928,0.051488,0.068322]]},{"date":"201801200640","rgb":[[0.029883,0.03235,0.15698],[0.02812,0.032099,0.14783],[0.026975,0.032556,0.13909],[0.027125,0.03252,0.13804],[0.034298,0.036003,0.20276],[0.032131,0.032323,0.17176],[0.030968,0.032342,0.1646],[0.028675,0.032814,0.1478],[0.035514,0.037144,0.14376],[0.027512,0.032108,0.14266],[0.025924,0.030471,0.1231],[0.023921,0.029185,0.10171],[0.048902,0.046802,0.07888],[0.040038,0.041494,0.080594],[0.040384,0.041647,0.082306],[0.052695,0.052814,0.085679]]},{"date":"201801200650","rgb":[[0.10309,0.21277,0.65418],[0.089691,0.19656,0.59183],[0.0818,0.18019,0.55223],[0.081297,0.17337,0.55258],[0.14804,0.27577,0.78925],[0.11938,0.22934,0.6737],[0.10553,0.20776,0.6214],[0.10345,0.19647,0.61624],[0.15295,0.27002,0.72688],[0.096752,0.20172,0.58025],[0.093652,0.19008,0.56343],[0.10562,0.19683,0.59984],[0.077201,0.088027,0.25018],[0.067927,0.093898,0.2767],[0.067231,0.088941,0.28514],[0.079943,0.086307,0.28324]]},{"date":"201801200710","rgb":[[0.94889,0.9913,0.99916],[0.93467,0.99405,0.99893],[0.81774,0.99921,0.99836],[0.73535,0.99914,0.99872],[0.98342,0.98097,1],[0.96525,0.98562,0.99926],[0.84854,0.99932,0.99818],[0.84253,0.9994,0.99847],[0.78938,0.95566,0.99586],[0.69612,0.99859,0.99829],[0.7634,0.99901,0.99806],[0.82209,0.99934,0.99813],[0.29151,0.45601,0.8517],[0.32583,0.54373,0.86583],[0.36709,0.59085,0.92141],[0.39274,0.55646,0.93297]]},{"date":"201801200720","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.97783,0.97888,0.9997],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.65218,0.82873,0.94233],[0.71723,0.85008,0.94454],[0.77014,0.88992,0.94706],[0.79756,0.90446,0.94221]]},{"date":"201801200730","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99605,0.97648,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.85667,0.9138,0.94844],[0.90837,0.90999,0.95079],[0.92938,0.90577,0.95152],[0.93046,0.90341,0.94491]]},{"date":"201801200750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92891,0.90571,0.95128],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90335,0.94479]]},{"date":"201801200800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90341,0.94482]]},{"date":"201801200810","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90341,0.94486]]},{"date":"201801200830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90342,0.94489]]},{"date":"201801200840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90344,0.94482]]},{"date":"201801200910","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90338,0.94482]]},{"date":"201801200920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90339,0.94486]]},{"date":"201801200930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90341,0.94488]]},{"date":"201801200940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90339,0.94486]]},{"date":"201801200950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90338,0.94474]]},{"date":"201801201000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90335,0.9449]]},{"date":"201801201010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90333,0.94495]]},{"date":"201801201020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90336,0.94489]]},{"date":"201801201030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90336,0.94498]]},{"date":"201801201040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90338,0.9449]]},{"date":"201801201050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90332,0.94484]]},{"date":"201801201100","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90334,0.94495]]},{"date":"201801201110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.9449]]},{"date":"201801201120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90335,0.94493]]},{"date":"201801201130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90336,0.94494]]},{"date":"201801201140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90336,0.94493]]},{"date":"201801201150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90331,0.94488]]},{"date":"201801201200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90335,0.94488]]},{"date":"201801201210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90333,0.94492]]},{"date":"201801201220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90335,0.94496]]},{"date":"201801201230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90337,0.94497]]},{"date":"201801201240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90336,0.94495]]},{"date":"201801201250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90334,0.94484]]},{"date":"201801201300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90336,0.94491]]},{"date":"201801201310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94498]]},{"date":"201801201320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90335,0.94498]]},{"date":"201801201330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90337,0.94499]]},{"date":"201801201340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90337,0.94499]]},{"date":"201801201400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90337,0.94492]]},{"date":"201801201410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90337,0.94496]]},{"date":"201801201420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90337,0.94498]]},{"date":"201801201430","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90339,0.94498]]},{"date":"201801201440","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90338,0.94498]]},{"date":"201801201450","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93121,0.90483,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90335,0.94486]]},{"date":"201801201500","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9312,0.90483,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90333,0.94485]]},{"date":"201801201510","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90332,0.94489]]},{"date":"201801201520","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93117,0.90485,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90332,0.94492]]},{"date":"201801201530","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92693,0.90625,0.95118],[0.93,0.90545,0.9516],[0.93127,0.9048,0.95161],[0.93059,0.90333,0.94494]]},{"date":"201801201540","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9952,0.97682,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.86832,0.91309,0.94868],[0.90761,0.91051,0.94703],[0.91822,0.90946,0.94642],[0.92234,0.90647,0.94232]]},{"date":"201801201550","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.97977,0.98075,0.99603],[0.99598,0.97651,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.71082,0.90868,0.94443],[0.77435,0.91238,0.94786],[0.84563,0.91423,0.94852],[0.86808,0.91086,0.93863]]},{"date":"201801201600","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92955,0.981,0.99795],[0.99456,0.97703,0.99998],[0.99608,0.97647,1],[0.99607,0.97647,1],[0.48889,0.81421,0.94122],[0.61978,0.82191,0.93956],[0.6668,0.89153,0.94554],[0.71025,0.8799,0.93651]]},{"date":"201801201610","rgb":[[0.99568,0.97664,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.98579,0.98001,1],[0.99322,0.97745,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.88445,0.97416,0.99732],[0.97605,0.98201,0.99976],[0.98811,0.97907,0.99993],[0.99209,0.97727,0.99984],[0.39802,0.66033,0.93472],[0.54529,0.6901,0.9389],[0.59128,0.78037,0.94253],[0.57824,0.76532,0.93486]]},{"date":"201801201620","rgb":[[0.40409,0.98236,0.99733],[0.45376,0.99945,0.99974],[0.49424,0.99951,0.9989],[0.51409,0.99933,0.99831],[0.40329,0.95542,0.99755],[0.44297,0.99266,0.99895],[0.47139,0.99932,0.99956],[0.48151,0.99687,0.99921],[0.34864,0.7051,0.97768],[0.41127,0.87034,0.9974],[0.44271,0.93418,0.99764],[0.45693,0.9602,0.99853],[0.19474,0.29228,0.69561],[0.23596,0.38282,0.72268],[0.26401,0.42308,0.78775],[0.26917,0.37569,0.78519]]},{"date":"201801201630","rgb":[[0.1579,0.27739,0.84266],[0.18116,0.3186,0.91311],[0.18919,0.3229,0.93704],[0.19243,0.32121,0.96448],[0.14921,0.26549,0.79243],[0.16616,0.2844,0.83041],[0.18114,0.30546,0.89159],[0.18518,0.30513,0.91808],[0.11747,0.21261,0.62955],[0.14436,0.25036,0.73867],[0.16347,0.26666,0.79986],[0.1718,0.27986,0.84783],[0.076604,0.088026,0.29964],[0.086168,0.11469,0.36824],[0.094168,0.12379,0.41453],[0.098218,0.12123,0.38103]]},{"date":"201801201640","rgb":[[0.033933,0.037312,0.22913],[0.034318,0.039668,0.24868],[0.037048,0.041524,0.26604],[0.039783,0.045664,0.28353],[0.035227,0.035755,0.21671],[0.032948,0.038024,0.23013],[0.035332,0.040202,0.25618],[0.036745,0.040522,0.2595],[0.035701,0.03523,0.16117],[0.035005,0.033618,0.20072],[0.034056,0.037564,0.2277],[0.035312,0.038555,0.24217],[0.048174,0.046158,0.094907],[0.044881,0.043008,0.11911],[0.046304,0.044194,0.13303],[0.057843,0.054338,0.12518]]},{"date":"201801201650","rgb":[[0.0147,0.02597,0.046899],[0.015976,0.026332,0.053024],[0.016882,0.026734,0.054736],[0.017902,0.027776,0.058825],[0.01366,0.02587,0.043474],[0.014726,0.026018,0.048829],[0.016186,0.026494,0.053594],[0.017328,0.027372,0.056101],[0.017707,0.029505,0.039247],[0.013392,0.026442,0.041913],[0.014437,0.026128,0.046776],[0.015678,0.02698,0.050541],[0.043698,0.045275,0.063067],[0.037086,0.0412,0.067328],[0.037097,0.04091,0.067884],[0.050078,0.051933,0.072779]]},{"date":"201801201700","rgb":[[0.011208,0.027143,0.017987],[0.011706,0.025701,0.019744],[0.011421,0.025454,0.021433],[0.012058,0.026652,0.023341],[0.010521,0.028773,0.012918],[0.010391,0.028348,0.0125],[0.010404,0.025721,0.020793],[0.011149,0.026278,0.021654],[0.01569,0.031686,0.015179],[0.010337,0.028703,0.010848],[0.01031,0.027354,0.015674],[0.011072,0.026259,0.022358],[0.043314,0.046604,0.055564],[0.036299,0.043274,0.050758],[0.036344,0.042891,0.052686],[0.049099,0.051521,0.066912]]},{"date":"201801201710","rgb":[[0.011445,0.025589,0.021546],[0.011612,0.025177,0.021323],[0.011473,0.025233,0.021332],[0.011758,0.025906,0.021913],[0.010516,0.025683,0.021503],[0.010324,0.025492,0.021311],[0.010355,0.025523,0.021342],[0.010554,0.02582,0.021233],[0.01548,0.028557,0.022989],[0.010292,0.025525,0.021311],[0.010321,0.025554,0.02134],[0.010532,0.026492,0.019825],[0.043557,0.045965,0.056427],[0.036308,0.041291,0.057816],[0.036286,0.040437,0.062341],[0.048713,0.051061,0.06707]]},{"date":"201801201720","rgb":[[0.011233,0.025746,0.021573],[0.011418,0.025277,0.021349],[0.011139,0.025407,0.021376],[0.011386,0.026197,0.021652],[0.010472,0.026224,0.019713],[0.010329,0.025497,0.021316],[0.010358,0.025526,0.021345],[0.010782,0.025917,0.021447],[0.015396,0.031443,0.013272],[0.010308,0.026341,0.017979],[0.010304,0.025536,0.021323],[0.010945,0.026113,0.021877],[0.043316,0.046376,0.054573],[0.036296,0.043246,0.049672],[0.03633,0.041384,0.057577],[0.04874,0.050971,0.067673]]},{"date":"201801201730","rgb":[[0.01159,0.027329,0.017149],[0.011748,0.025366,0.021359],[0.012017,0.025121,0.021356],[0.012489,0.026227,0.02261],[0.010555,0.028878,0.012025],[0.01041,0.02722,0.015028],[0.010371,0.025537,0.02136],[0.011016,0.026306,0.02135],[0.015806,0.031738,0.013499],[0.010348,0.028877,0.0088466],[0.010333,0.027668,0.013915],[0.01119,0.0277,0.01776],[0.043599,0.046491,0.055292],[0.036365,0.043349,0.05067],[0.036245,0.043101,0.051966],[0.048888,0.052645,0.063446]]},{"date":"201801201740","rgb":[[0.011734,0.027687,0.014425],[0.01228,0.026096,0.017199],[0.011621,0.026628,0.01622],[0.011598,0.027353,0.018521],[0.010504,0.028912,0.0099941],[0.01032,0.028866,0.0074188],[0.010361,0.028883,0.0081362],[0.010823,0.028281,0.014792],[0.015436,0.031598,0.013116],[0.010308,0.028838,0.0078659],[0.010317,0.028849,0.008837],[0.010817,0.027904,0.015953],[0.043614,0.046424,0.054937],[0.036282,0.043304,0.049216],[0.036313,0.043202,0.051159],[0.048887,0.052428,0.064101]]},{"date":"201801201750","rgb":[[0.011447,0.028319,0.013245],[0.011073,0.027145,0.014223],[0.01181,0.025598,0.019343],[0.011712,0.0266,0.0216],[0.010486,0.028907,0.0098789],[0.010342,0.028873,0.007453],[0.010354,0.02845,0.010225],[0.011071,0.026545,0.020628],[0.015557,0.031661,0.012733],[0.010364,0.028938,0.008102],[0.010612,0.028916,0.0093825],[0.011036,0.027784,0.016636],[0.04323,0.04629,0.054305],[0.036474,0.043315,0.050073],[0.036661,0.04334,0.051396],[0.048938,0.05298,0.062663]]},{"date":"201801201800","rgb":[[0.011733,0.028041,0.012511],[0.012253,0.027365,0.010789],[0.01169,0.026214,0.017561],[0.011584,0.026101,0.021589],[0.010544,0.02891,0.010037],[0.010336,0.028858,0.0073824],[0.010352,0.028677,0.0093068],[0.010914,0.026674,0.019511],[0.015685,0.031815,0.013144],[0.010368,0.028941,0.0084225],[0.010317,0.02877,0.0098793],[0.011036,0.027807,0.016592],[0.043452,0.046459,0.054732],[0.036321,0.043317,0.049964],[0.036277,0.043299,0.051391],[0.049455,0.053382,0.062661]]},{"date":"201801201810","rgb":[[0.012075,0.02583,0.021494],[0.01104,0.026721,0.017349],[0.012118,0.027303,0.013867],[0.012466,0.027496,0.019667],[0.010721,0.028625,0.012584],[0.010396,0.028791,0.0087754],[0.010371,0.028815,0.0093422],[0.011244,0.027885,0.017833],[0.016065,0.031835,0.014147],[0.01035,0.028826,0.0090218],[0.010348,0.028735,0.010832],[0.011368,0.026994,0.020755],[0.043818,0.046411,0.054819],[0.036531,0.043432,0.051034],[0.036299,0.043243,0.05147],[0.049331,0.052515,0.064798]]},{"date":"201801201820","rgb":[[0.012402,0.028268,0.017828],[0.011954,0.026161,0.020563],[0.011866,0.025765,0.021743],[0.014321,0.02705,0.024382],[0.011307,0.029102,0.013912],[0.010542,0.028263,0.013527],[0.010563,0.025785,0.021332],[0.01268,0.027437,0.022402],[0.017025,0.031883,0.015512],[0.01065,0.029002,0.011415],[0.010658,0.028246,0.014634],[0.013436,0.027397,0.02278],[0.043923,0.046233,0.056076],[0.03658,0.043416,0.05131],[0.036461,0.043178,0.053148],[0.049761,0.052347,0.067013]]},{"date":"201801201830","rgb":[[0.011348,0.027444,0.01625],[0.011288,0.026619,0.016997],[0.011205,0.025394,0.021374],[0.011916,0.02648,0.02244],[0.010854,0.029041,0.011862],[0.010409,0.028879,0.0084388],[0.01038,0.026801,0.016579],[0.011705,0.026554,0.022378],[0.016395,0.031692,0.015408],[0.010491,0.028985,0.010175],[0.01045,0.028687,0.011911],[0.012138,0.026906,0.022241],[0.04442,0.046259,0.055677],[0.0365,0.04341,0.050733],[0.03638,0.043293,0.051429],[0.049751,0.052509,0.065513]]},{"date":"201801201840","rgb":[[0.011461,0.027852,0.017174],[0.011229,0.027665,0.013974],[0.011058,0.025953,0.019744],[0.012204,0.026821,0.022959],[0.010944,0.028951,0.01342],[0.010406,0.028826,0.0098006],[0.010376,0.028262,0.012693],[0.011695,0.026863,0.021926],[0.016587,0.031839,0.015685],[0.010442,0.028864,0.010959],[0.010419,0.028696,0.012405],[0.011752,0.027566,0.020094],[0.043984,0.046255,0.056531],[0.036528,0.043497,0.051508],[0.036368,0.042575,0.055197],[0.04986,0.051873,0.068267]]},{"date":"201801201850","rgb":[[0.011799,0.027874,0.01666],[0.012218,0.025374,0.020955],[0.011322,0.025406,0.021389],[0.012584,0.026689,0.023014],[0.010744,0.028973,0.011978],[0.010382,0.02821,0.01125],[0.010355,0.025669,0.020745],[0.011438,0.026448,0.022192],[0.01605,0.031845,0.01496],[0.010424,0.028917,0.0099651],[0.010343,0.027743,0.014181],[0.011621,0.026544,0.023013],[0.044175,0.046305,0.055879],[0.036398,0.043378,0.050809],[0.036319,0.043173,0.051448],[0.049774,0.052422,0.066374]]},{"date":"201801201900","rgb":[[0.011396,0.028127,0.014808],[0.011813,0.02721,0.014263],[0.012683,0.024988,0.021321],[0.011763,0.0264,0.022167],[0.010587,0.028981,0.0099735],[0.010352,0.028848,0.0079166],[0.010365,0.027623,0.013265],[0.01086,0.026033,0.021584],[0.016007,0.031623,0.013609],[0.010379,0.028944,0.0081117],[0.010312,0.028753,0.0095186],[0.011539,0.027512,0.019426],[0.043683,0.046349,0.055037],[0.036293,0.04332,0.049951],[0.036246,0.043174,0.050794],[0.04957,0.053502,0.062666]]},{"date":"201801201910","rgb":[[0.011794,0.028262,0.015269],[0.011593,0.026098,0.019287],[0.012194,0.025662,0.019605],[0.012571,0.026915,0.022109],[0.0109,0.029239,0.011301],[0.010428,0.028664,0.0094336],[0.010383,0.028477,0.012287],[0.011894,0.027854,0.019313],[0.016175,0.031867,0.013919],[0.010431,0.028924,0.0095049],[0.010484,0.028872,0.012052],[0.012264,0.028505,0.018376],[0.043821,0.046481,0.054669],[0.036578,0.043474,0.050542],[0.036508,0.043268,0.05167],[0.049748,0.052809,0.063992]]},{"date":"201801201920","rgb":[[0.011545,0.028025,0.016216],[0.011968,0.026307,0.017525],[0.011356,0.025396,0.021342],[0.011746,0.026355,0.022868],[0.01075,0.029063,0.011698],[0.010372,0.028737,0.0085869],[0.010361,0.026575,0.017067],[0.010906,0.026098,0.021627],[0.015824,0.031718,0.014461],[0.010334,0.028889,0.0082053],[0.010312,0.028723,0.010064],[0.011049,0.027108,0.019401],[0.043757,0.046403,0.055459],[0.036335,0.043342,0.049839],[0.036261,0.043249,0.051712],[0.049208,0.053261,0.062099]]},{"date":"201801201940","rgb":[[0.011172,0.026396,0.019132],[0.011339,0.025479,0.021381],[0.010797,0.025532,0.021357],[0.01127,0.026025,0.021688],[0.010453,0.028606,0.01086],[0.010348,0.026225,0.018134],[0.010336,0.026708,0.016253],[0.010631,0.027936,0.015005],[0.015468,0.03148,0.013011],[0.010294,0.02881,0.008187],[0.010334,0.028773,0.0091657],[0.010673,0.02768,0.016402],[0.043359,0.046305,0.054881],[0.036321,0.043329,0.049809],[0.03626,0.043254,0.050796],[0.049097,0.052913,0.062571]]},{"date":"201801201950","rgb":[[0.011144,0.0277,0.014672],[0.011926,0.02516,0.021025],[0.011326,0.025366,0.021344],[0.011663,0.025955,0.021791],[0.010444,0.028904,0.0097103],[0.010342,0.027897,0.011305],[0.010357,0.025739,0.020298],[0.010653,0.025823,0.021538],[0.015233,0.031542,0.012396],[0.010348,0.028939,0.0071044],[0.01034,0.028478,0.0094038],[0.010625,0.026063,0.020752],[0.043204,0.046375,0.054983],[0.036375,0.043344,0.050367],[0.036295,0.043236,0.050543],[0.04929,0.052804,0.063733]]},{"date":"201801202000","rgb":[[0.011423,0.027365,0.015043],[0.012166,0.025163,0.02094],[0.013304,0.026438,0.01438],[0.012222,0.026163,0.021083],[0.010498,0.028939,0.010303],[0.010334,0.028603,0.008818],[0.010342,0.028862,0.0083935],[0.010875,0.027257,0.017904],[0.015597,0.031466,0.012205],[0.01031,0.02886,0.0077739],[0.010326,0.028826,0.0085644],[0.010752,0.027915,0.015991],[0.043682,0.046355,0.055024],[0.036331,0.043298,0.050493],[0.03636,0.043223,0.051283],[0.049314,0.05333,0.062918]]},{"date":"201801202010","rgb":[[0.011957,0.026827,0.018312],[0.013409,0.024732,0.021397],[0.012111,0.025077,0.021334],[0.011685,0.02633,0.02052],[0.010604,0.029101,0.0087672],[0.010332,0.027523,0.012802],[0.010371,0.027199,0.014693],[0.011006,0.027919,0.01572],[0.016042,0.031648,0.013241],[0.010346,0.028911,0.0076918],[0.010335,0.028883,0.0088193],[0.011226,0.028348,0.015689],[0.043875,0.046395,0.054556],[0.036379,0.043386,0.049431],[0.036311,0.043309,0.050286],[0.049336,0.053797,0.06073]]},{"date":"201801202030","rgb":[[0.011467,0.027511,0.014019],[0.011391,0.026491,0.016456],[0.011416,0.025359,0.021383],[0.011983,0.026527,0.021552],[0.010453,0.028859,0.010109],[0.010362,0.02892,0.0070283],[0.01036,0.027241,0.014472],[0.010919,0.026921,0.018592],[0.015743,0.031695,0.012944],[0.010338,0.028949,0.0072883],[0.010324,0.028892,0.008195],[0.010857,0.027891,0.016446],[0.043533,0.046571,0.054737],[0.036324,0.043318,0.049849],[0.036306,0.043226,0.050497],[0.04936,0.05306,0.062997]]},{"date":"201801202040","rgb":[[0.011603,0.028267,0.011842],[0.011254,0.026464,0.016897],[0.012109,0.025061,0.021353],[0.011708,0.026232,0.021917],[0.010421,0.028894,0.008687],[0.010332,0.02885,0.0070532],[0.010357,0.027025,0.015375],[0.010745,0.026519,0.019864],[0.015316,0.031624,0.011148],[0.0103,0.028921,0.0071829],[0.010344,0.02886,0.0087917],[0.010726,0.027847,0.015844],[0.043535,0.046645,0.054357],[0.036327,0.043283,0.049497],[0.036295,0.043213,0.050938],[0.049165,0.053172,0.062424]]},{"date":"201801202050","rgb":[[0.011952,0.025415,0.021553],[0.011942,0.025141,0.021329],[0.012261,0.025035,0.021345],[0.011903,0.026561,0.022349],[0.010457,0.026136,0.020007],[0.010362,0.025529,0.021349],[0.010361,0.025529,0.021348],[0.011267,0.026416,0.021752],[0.015699,0.031337,0.013776],[0.010381,0.026312,0.0186],[0.010325,0.025557,0.021344],[0.011148,0.026303,0.022054],[0.043987,0.046547,0.055312],[0.03632,0.04325,0.049958],[0.036353,0.041277,0.058351],[0.049581,0.052317,0.066427]]},{"date":"201801202100","rgb":[[0.012177,0.025946,0.018866],[0.011622,0.027231,0.013304],[0.011735,0.025632,0.020121],[0.011662,0.026416,0.022286],[0.01041,0.02842,0.011614],[0.01034,0.028899,0.0073183],[0.010378,0.028289,0.01104],[0.010939,0.026141,0.02157],[0.015499,0.031781,0.012644],[0.0103,0.02892,0.0071444],[0.010313,0.028881,0.0083627],[0.010707,0.026919,0.018581],[0.043701,0.046663,0.055859],[0.036315,0.043296,0.050383],[0.036299,0.043215,0.051577],[0.049045,0.052589,0.06387]]},{"date":"201801202110","rgb":[[0.011108,0.027681,0.014132],[0.011691,0.026614,0.015563],[0.011797,0.02515,0.021316],[0.01124,0.025897,0.021709],[0.010447,0.028888,0.010193],[0.010334,0.028905,0.0069733],[0.010348,0.027565,0.012818],[0.010601,0.025825,0.02123],[0.015399,0.031593,0.012031],[0.010319,0.028944,0.0067913],[0.010323,0.028876,0.0081463],[0.010528,0.027452,0.016596],[0.043699,0.046436,0.055849],[0.036304,0.043273,0.050309],[0.036294,0.043147,0.051498],[0.048839,0.05265,0.06356]]},{"date":"201801202120","rgb":[[0.011586,0.028085,0.012659],[0.012715,0.027508,0.0094487],[0.011662,0.02599,0.018102],[0.011884,0.025972,0.022038],[0.010441,0.028898,0.010354],[0.010345,0.028892,0.0076759],[0.010345,0.028715,0.0087979],[0.010698,0.026675,0.019005],[0.015482,0.031604,0.011885],[0.010308,0.028929,0.0066989],[0.010315,0.028846,0.0079279],[0.010567,0.028233,0.013959],[0.043745,0.046555,0.055104],[0.036284,0.043301,0.049645],[0.03629,0.043247,0.050504],[0.049193,0.053122,0.062107]]},{"date":"201801202130","rgb":[[0.011733,0.027558,0.013862],[0.012893,0.027247,0.010991],[0.011518,0.026096,0.017663],[0.011764,0.026527,0.020599],[0.010409,0.028883,0.0089752],[0.010342,0.028901,0.0068167],[0.010352,0.028796,0.0074892],[0.01061,0.028011,0.014533],[0.015382,0.031592,0.010896],[0.010316,0.028915,0.0071164],[0.01032,0.028914,0.0073675],[0.010494,0.028525,0.012447],[0.04361,0.046553,0.054099],[0.036299,0.04329,0.049234],[0.036309,0.043252,0.049805],[0.049035,0.053613,0.059846]]},{"date":"201801202140","rgb":[[0.011799,0.026841,0.016596],[0.014404,0.024205,0.021334],[0.012058,0.02513,0.02137],[0.011785,0.026201,0.02191],[0.010501,0.028919,0.010571],[0.010326,0.027592,0.012672],[0.010354,0.025657,0.020776],[0.010673,0.02582,0.021623],[0.015454,0.031672,0.011582],[0.010306,0.028904,0.0073997],[0.010322,0.028229,0.01096],[0.010545,0.025897,0.020951],[0.043497,0.046543,0.055128],[0.036284,0.043266,0.049594],[0.036244,0.043206,0.050321],[0.048974,0.052515,0.063272]]},{"date":"201801202150","rgb":[[0.011286,0.027911,0.01306],[0.011286,0.027,0.014484],[0.013177,0.026731,0.012308],[0.012076,0.026749,0.019696],[0.010409,0.028844,0.0094545],[0.010352,0.028922,0.0067136],[0.010362,0.02887,0.0076169],[0.010671,0.027936,0.014322],[0.015518,0.031616,0.01216],[0.010331,0.028943,0.0069524],[0.010316,0.028785,0.0086145],[0.010639,0.028422,0.013722],[0.04375,0.046717,0.054857],[0.03629,0.043285,0.049151],[0.036255,0.043255,0.0503],[0.049095,0.053358,0.06086]]},{"date":"201801202200","rgb":[[0.01189,0.027912,0.012146],[0.011143,0.026867,0.015464],[0.011891,0.025217,0.021314],[0.011997,0.026035,0.021879],[0.010442,0.028861,0.009274],[0.010342,0.028888,0.006933],[0.010354,0.027637,0.012202],[0.01065,0.025879,0.021324],[0.015398,0.031782,0.012372],[0.010337,0.028961,0.0071096],[0.01032,0.028893,0.0077222],[0.010674,0.027508,0.016245],[0.043884,0.046678,0.054815],[0.036304,0.043319,0.04934],[0.036295,0.043302,0.049893],[0.049095,0.05331,0.062112]]},{"date":"201801202210","rgb":[[0.011585,0.027445,0.012712],[0.013265,0.025995,0.015249],[0.011774,0.025151,0.021327],[0.011946,0.02533,0.021626],[0.010438,0.028959,0.0081934],[0.010326,0.028897,0.0065097],[0.010355,0.027699,0.011973],[0.010389,0.025692,0.020811],[0.015459,0.03158,0.011263],[0.0103,0.028936,0.0066263],[0.010321,0.028931,0.0074232],[0.010381,0.02771,0.014609],[0.043732,0.046572,0.054455],[0.036298,0.043258,0.049721],[0.036251,0.043227,0.050177],[0.048946,0.05339,0.06107]]},{"date":"201801202220","rgb":[[0.011863,0.025282,0.021193],[0.011948,0.025199,0.021324],[0.012696,0.02482,0.021337],[0.011039,0.026193,0.020392],[0.010385,0.027746,0.013186],[0.010326,0.025688,0.020414],[0.010348,0.025618,0.020815],[0.010363,0.027603,0.014928],[0.015376,0.03154,0.011089],[0.01031,0.028396,0.0094254],[0.010323,0.028198,0.010505],[0.010369,0.02846,0.012861],[0.043657,0.046563,0.054772],[0.036286,0.043272,0.049323],[0.036312,0.043244,0.050233],[0.048949,0.053328,0.061049]]},{"date":"201801202230","rgb":[[0.011848,0.027243,0.013655],[0.01538,0.026137,0.0098593],[0.01443,0.025125,0.016422],[0.01127,0.025572,0.021482],[0.010392,0.028939,0.0075652],[0.010328,0.028886,0.0065377],[0.010352,0.028898,0.0067154],[0.010398,0.027105,0.015758],[0.015296,0.031543,0.010777],[0.010294,0.028905,0.0065411],[0.010321,0.028908,0.0068628],[0.01033,0.028621,0.011301],[0.043715,0.04673,0.054905],[0.036279,0.043295,0.049363],[0.036297,0.043312,0.049358],[0.048948,0.053682,0.06019]]},{"date":"201801202250","rgb":[[0.012682,0.025073,0.02146],[0.012162,0.025088,0.021321],[0.012739,0.024837,0.021344],[0.011756,0.026496,0.018922],[0.010418,0.025586,0.021405],[0.010326,0.025546,0.021041],[0.010352,0.027178,0.014266],[0.010466,0.028495,0.011754],[0.015575,0.02925,0.019917],[0.01031,0.02805,0.010499],[0.010324,0.028872,0.0077149],[0.010451,0.028712,0.012334],[0.043835,0.046845,0.054801],[0.036299,0.043295,0.049193],[0.036244,0.043282,0.049742],[0.049121,0.053752,0.06037]]},{"date":"201801202300","rgb":[[0.012325,0.027519,0.010921],[0.01176,0.026539,0.015159],[0.013404,0.025016,0.019379],[0.012969,0.026205,0.017182],[0.010401,0.028897,0.0082438],[0.010336,0.028906,0.0066156],[0.010349,0.028801,0.0075909],[0.010469,0.028681,0.011329],[0.015494,0.031418,0.010506],[0.010299,0.028935,0.0066311],[0.010316,0.028937,0.0066106],[0.010432,0.028582,0.011564],[0.044057,0.04673,0.054394],[0.036321,0.043314,0.049202],[0.036308,0.043292,0.049784],[0.049154,0.053828,0.060525]]},{"date":"201801202310","rgb":[[0.011834,0.02758,0.012715],[0.012439,0.026427,0.015396],[0.01146,0.02535,0.021289],[0.012878,0.02605,0.018178],[0.010397,0.02892,0.0079112],[0.010345,0.028916,0.0065538],[0.01035,0.028086,0.010128],[0.010393,0.02871,0.011415],[0.015257,0.031609,0.010645],[0.010294,0.028929,0.006498],[0.010318,0.028941,0.0066247],[0.010345,0.028768,0.010756],[0.04398,0.046822,0.054955],[0.036295,0.043312,0.049557],[0.036245,0.04327,0.049748],[0.049142,0.053584,0.060221]]},{"date":"201801202320","rgb":[[0.012233,0.027444,0.011806],[0.012248,0.026507,0.014745],[0.014038,0.024435,0.021222],[0.011796,0.025356,0.021493],[0.010405,0.028915,0.0082983],[0.010326,0.028884,0.006615],[0.010354,0.027953,0.011003],[0.010374,0.025762,0.020374],[0.01546,0.031566,0.01109],[0.010303,0.028873,0.0070305],[0.01032,0.028942,0.0069957],[0.010363,0.027784,0.013647],[0.043985,0.046858,0.054693],[0.036319,0.043317,0.049163],[0.036293,0.043262,0.049799],[0.049102,0.053708,0.060492]]},{"date":"201801202330","rgb":[[0.011571,0.027726,0.011463],[0.013155,0.026143,0.014451],[0.0156,0.025562,0.012378],[0.011154,0.026987,0.015639],[0.010377,0.028923,0.0072608],[0.010326,0.028897,0.0065266],[0.010352,0.028923,0.0064938],[0.010377,0.02855,0.010044],[0.015359,0.031419,0.010231],[0.010303,0.028939,0.006517],[0.010318,0.028917,0.0069659],[0.010345,0.028623,0.011253],[0.043818,0.046832,0.054091],[0.036288,0.043253,0.049244],[0.036302,0.043208,0.050168],[0.048937,0.053619,0.060378]]},{"date":"201801202340","rgb":[[0.014737,0.026081,0.012513],[0.017124,0.025487,0.0094617],[0.014682,0.024975,0.016727],[0.011331,0.027038,0.015491],[0.010402,0.028913,0.0078891],[0.010326,0.028897,0.0066619],[0.01035,0.028921,0.0066498],[0.010384,0.028745,0.0095127],[0.015538,0.031443,0.010736],[0.010303,0.028914,0.0066468],[0.01032,0.028919,0.0066023],[0.010377,0.028708,0.010509],[0.043703,0.046716,0.054245],[0.036282,0.043251,0.049504],[0.036258,0.043294,0.049588],[0.048981,0.053746,0.059514]]},{"date":"201801202350","rgb":[[0.01413,0.026445,0.013019],[0.011652,0.026761,0.014875],[0.013803,0.024394,0.021287],[0.014297,0.024414,0.02145],[0.010411,0.028944,0.0079959],[0.010345,0.028916,0.0065208],[0.010354,0.027776,0.01167],[0.010413,0.026891,0.017223],[0.015494,0.031506,0.010724],[0.01029,0.028926,0.0065053],[0.010316,0.028918,0.0070744],[0.01035,0.028639,0.011332],[0.044301,0.046789,0.055567],[0.036298,0.043281,0.049675],[0.036315,0.04321,0.050443],[0.049092,0.053292,0.061557]]},{"date":"201801210000","rgb":[[0.01145,0.027644,0.013107],[0.01246,0.026159,0.015875],[0.012047,0.02503,0.021326],[0.011941,0.026774,0.017634],[0.010412,0.028896,0.0084445],[0.010326,0.028885,0.0065457],[0.010357,0.027942,0.010834],[0.010361,0.028551,0.012039],[0.015661,0.031531,0.011209],[0.010298,0.028921,0.0065582],[0.010321,0.028945,0.0068487],[0.010458,0.028779,0.012144],[0.044239,0.046958,0.054386],[0.036319,0.043304,0.049194],[0.036304,0.043234,0.050278],[0.049145,0.053663,0.060891]]},{"date":"201801210010","rgb":[[0.011171,0.026883,0.015957],[0.011428,0.027575,0.011258],[0.012704,0.025253,0.020125],[0.011639,0.025858,0.020761],[0.010389,0.028896,0.0083388],[0.010336,0.028906,0.0065492],[0.01035,0.028526,0.0085638],[0.010416,0.027352,0.01535],[0.015576,0.031663,0.011205],[0.010294,0.028917,0.0065423],[0.010315,0.028901,0.0069641],[0.010429,0.0285,0.012499],[0.044434,0.046844,0.055248],[0.036302,0.043296,0.049117],[0.036254,0.043219,0.049938],[0.048926,0.05338,0.06121]]},{"date":"201801210020","rgb":[[0.01316,0.024818,0.021436],[0.013359,0.024622,0.021319],[0.015933,0.0236,0.021345],[0.011857,0.025247,0.021397],[0.010393,0.02556,0.021379],[0.010326,0.025494,0.021313],[0.010349,0.025516,0.021336],[0.010365,0.025533,0.021352],[0.015567,0.02856,0.022852],[0.010303,0.025536,0.021323],[0.010318,0.02555,0.021337],[0.010323,0.025556,0.021343],[0.044089,0.046281,0.056123],[0.036293,0.041589,0.056476],[0.036345,0.040393,0.062249],[0.048901,0.051067,0.067958]]},{"date":"201801210030","rgb":[[0.014812,0.026215,0.013194],[0.012233,0.026541,0.01454],[0.01432,0.024379,0.021209],[0.011684,0.025353,0.021476],[0.010353,0.028863,0.0083246],[0.010326,0.028897,0.0065928],[0.010352,0.027941,0.01135],[0.010353,0.026315,0.018548],[0.015366,0.031544,0.011546],[0.0103,0.028936,0.0066514],[0.010315,0.02886,0.0075565],[0.010388,0.028027,0.013808],[0.043795,0.046706,0.054849],[0.036284,0.043225,0.049567],[0.03625,0.043196,0.0505],[0.048973,0.05282,0.062556]]},{"date":"201801210040","rgb":[[0.013178,0.026897,0.012138],[0.012654,0.027434,0.0095313],[0.01365,0.025437,0.016997],[0.012976,0.025763,0.01903],[0.010385,0.028918,0.0080858],[0.010326,0.028897,0.0067629],[0.01035,0.028876,0.0071418],[0.010361,0.028529,0.01119],[0.015253,0.031658,0.010099],[0.0103,0.028935,0.0066259],[0.010313,0.028913,0.0068829],[0.010384,0.028617,0.011241],[0.044066,0.046828,0.054075],[0.036225,0.043291,0.049235],[0.036301,0.043257,0.049452],[0.048914,0.053648,0.059792]]},{"date":"201801210050","rgb":[[0.011797,0.027875,0.010195],[0.01274,0.027088,0.010796],[0.012778,0.025086,0.020054],[0.011152,0.026018,0.020078],[0.01039,0.028924,0.0080485],[0.010326,0.028897,0.0064272],[0.01035,0.028619,0.0081441],[0.010349,0.028377,0.012159],[0.015537,0.031626,0.010165],[0.010305,0.028929,0.0066283],[0.010323,0.028958,0.0067452],[0.010364,0.028782,0.010288],[0.043988,0.046735,0.054429],[0.036302,0.04327,0.049595],[0.036242,0.043205,0.050432],[0.049104,0.053472,0.0611]]},{"date":"201801210100","rgb":[[0.013573,0.026732,0.012522],[0.012798,0.026374,0.014102],[0.012371,0.024987,0.021058],[0.012233,0.025155,0.021468],[0.010402,0.028911,0.0085985],[0.010326,0.028885,0.0066218],[0.010352,0.028156,0.010082],[0.01045,0.025794,0.020479],[0.015547,0.031593,0.010681],[0.010292,0.028925,0.00656],[0.010324,0.028924,0.0073667],[0.010367,0.027935,0.012893],[0.044146,0.046768,0.054727],[0.036285,0.043294,0.049091],[0.036301,0.043206,0.05004],[0.048851,0.053131,0.060852]]},{"date":"201801210110","rgb":[[0.012496,0.024993,0.021379],[0.012655,0.024869,0.021323],[0.011678,0.02534,0.021362],[0.011112,0.026547,0.01846],[0.010398,0.025566,0.021385],[0.010326,0.025604,0.02077],[0.010357,0.027531,0.012778],[0.010354,0.028744,0.010191],[0.015367,0.029455,0.019717],[0.010313,0.028323,0.009187],[0.010315,0.028947,0.0066836],[0.010317,0.028576,0.011618],[0.044019,0.04682,0.054811],[0.036302,0.04331,0.049034],[0.036248,0.04322,0.049587],[0.048667,0.053332,0.059501]]},{"date":"201801210120","rgb":[[0.011798,0.025747,0.02057],[0.012218,0.027368,0.010862],[0.011771,0.026131,0.017298],[0.011392,0.025689,0.021707],[0.010404,0.028162,0.011202],[0.010339,0.028859,0.0069073],[0.010347,0.02884,0.0073399],[0.010487,0.026836,0.017357],[0.015548,0.031728,0.011465],[0.010306,0.028942,0.0066555],[0.010321,0.028914,0.0070923],[0.010457,0.028306,0.013168],[0.044389,0.047,0.055069],[0.036287,0.04327,0.04927],[0.036247,0.04326,0.050192],[0.048942,0.053391,0.060917]]},{"date":"201801210130","rgb":[[0.012629,0.027371,0.012971],[0.012651,0.026596,0.014626],[0.015963,0.025609,0.012148],[0.011524,0.025864,0.020316],[0.010461,0.028926,0.0089619],[0.010326,0.028897,0.0065592],[0.010349,0.028896,0.0070033],[0.010409,0.028005,0.01291],[0.015589,0.03164,0.010695],[0.010323,0.028958,0.0067358],[0.010318,0.028954,0.0065421],[0.010349,0.028564,0.011914],[0.044194,0.046843,0.055209],[0.03631,0.043308,0.049331],[0.036243,0.043254,0.050716],[0.0489,0.053053,0.061999]]},{"date":"201801210140","rgb":[[0.01148,0.027571,0.013831],[0.012163,0.026344,0.01599],[0.011881,0.025157,0.021319],[0.0118,0.026408,0.019694],[0.010398,0.028888,0.0082499],[0.010326,0.028897,0.0066838],[0.010353,0.028464,0.0089879],[0.010456,0.028245,0.012887],[0.015623,0.031785,0.010901],[0.010327,0.028963,0.0069006],[0.010318,0.028926,0.0071605],[0.010405,0.028574,0.011527],[0.044271,0.046972,0.05409],[0.036313,0.043312,0.049035],[0.036253,0.043245,0.049903],[0.048816,0.053412,0.060554]]},{"date":"201801210150","rgb":[[0.01164,0.025286,0.02138],[0.012384,0.024957,0.021311],[0.013264,0.024634,0.021332],[0.011986,0.025134,0.021384],[0.010393,0.02556,0.021379],[0.010336,0.025503,0.021323],[0.010347,0.025515,0.021334],[0.010384,0.025551,0.021371],[0.015416,0.028597,0.022705],[0.010306,0.025541,0.021323],[0.01032,0.025552,0.021339],[0.010341,0.026338,0.018847],[0.043977,0.04658,0.055639],[0.036306,0.041804,0.055536],[0.036267,0.041149,0.058661],[0.04877,0.053404,0.059665]]},{"date":"201801210200","rgb":[[0.012044,0.025997,0.018124],[0.016878,0.025639,0.0095595],[0.017618,0.024945,0.011168],[0.012767,0.025433,0.019733],[0.010373,0.028912,0.0072752],[0.010326,0.028897,0.0065123],[0.01035,0.028921,0.0067332],[0.010337,0.028383,0.010402],[0.01569,0.031318,0.010573],[0.010294,0.028929,0.0063773],[0.010323,0.028946,0.0066641],[0.010411,0.028504,0.011401],[0.044365,0.046622,0.055305],[0.036273,0.043244,0.049751],[0.036245,0.043248,0.049885],[0.049112,0.053263,0.062408]]},{"date":"201801210210","rgb":[[0.014385,0.026978,0.0087406],[0.018055,0.02402,0.014183],[0.015479,0.023925,0.021011],[0.011049,0.026173,0.018979],[0.010363,0.028934,0.0069979],[0.010326,0.028897,0.0064246],[0.01035,0.028362,0.0090578],[0.010353,0.02869,0.0099568],[0.015221,0.030758,0.010092],[0.010295,0.02893,0.0063734],[0.010318,0.028941,0.0065323],[0.010332,0.028748,0.010087],[0.043024,0.04571,0.053847],[0.036284,0.043265,0.049259],[0.036298,0.043266,0.049664],[0.048662,0.053461,0.05976]]},{"date":"201801210220","rgb":[[0.014609,0.02634,0.010736],[0.013197,0.026065,0.0148],[0.015113,0.023874,0.021263],[0.0116,0.025322,0.021404],[0.010384,0.028905,0.0070465],[0.010323,0.028869,0.006586],[0.010354,0.028034,0.010303],[0.010355,0.026782,0.016604],[0.014574,0.030167,0.010154],[0.010309,0.028939,0.0065834],[0.01032,0.028943,0.006521],[0.010328,0.028761,0.010457],[0.042899,0.045115,0.054448],[0.036278,0.043278,0.049247],[0.0363,0.043242,0.04968],[0.048844,0.053612,0.059843]]},{"date":"201801210230","rgb":[[0.01241,0.026602,0.014739],[0.016789,0.025306,0.011219],[0.020115,0.022141,0.020028],[0.013604,0.024623,0.02142],[0.010374,0.028884,0.0076495],[0.010326,0.028897,0.0065047],[0.010564,0.028422,0.0084396],[0.010373,0.026043,0.01934],[0.014048,0.030112,0.010057],[0.010295,0.028918,0.0064513],[0.010312,0.028887,0.0070361],[0.010356,0.028309,0.01185],[0.042031,0.044733,0.053789],[0.036288,0.043265,0.049288],[0.036245,0.043207,0.049726],[0.048873,0.053447,0.060676]]},{"date":"201801210240","rgb":[[0.012272,0.027369,0.011558],[0.01377,0.025946,0.014174],[0.015069,0.024264,0.01998],[0.011316,0.025621,0.020999],[0.010394,0.028883,0.0075184],[0.010326,0.028897,0.0064234],[0.010347,0.02886,0.0069407],[0.010384,0.027887,0.012959],[0.013782,0.030025,0.010286],[0.010294,0.028929,0.0064342],[0.010315,0.02895,0.0067195],[0.010347,0.028788,0.010533],[0.041768,0.044583,0.054177],[0.036249,0.04331,0.049118],[0.036251,0.043287,0.049318],[0.048974,0.053463,0.060175]]},{"date":"201801210250","rgb":[[0.012845,0.026848,0.011969],[0.014051,0.025905,0.014188],[0.012651,0.02492,0.02121],[0.012288,0.024989,0.021343],[0.010396,0.028941,0.0074605],[0.010328,0.028898,0.0064988],[0.010349,0.027945,0.010858],[0.010358,0.025741,0.020407],[0.013325,0.029695,0.0098442],[0.010303,0.028939,0.0064101],[0.010315,0.028938,0.0065753],[0.010357,0.028027,0.012909],[0.041339,0.044316,0.054203],[0.036294,0.043281,0.049512],[0.036297,0.043271,0.049886],[0.048909,0.053532,0.059794]]},{"date":"201801210300","rgb":[[0.011212,0.027706,0.012282],[0.013268,0.027214,0.0090653],[0.016861,0.024438,0.015558],[0.012049,0.026219,0.017982],[0.010412,0.028883,0.0086151],[0.010336,0.028906,0.0067185],[0.010352,0.02891,0.0068799],[0.010416,0.028534,0.011369],[0.012823,0.02959,0.010423],[0.010294,0.028929,0.0065618],[0.010323,0.028943,0.006739],[0.010348,0.028535,0.011503],[0.041045,0.04375,0.054533],[0.036286,0.043301,0.048989],[0.03631,0.043216,0.050246],[0.048967,0.053459,0.061509]]},{"date":"201801210310","rgb":[[0.01133,0.025447,0.021394],[0.015,0.023923,0.021319],[0.012809,0.024827,0.021337],[0.01309,0.025963,0.017336],[0.010376,0.025543,0.021362],[0.010332,0.025586,0.020878],[0.010355,0.027386,0.013353],[0.010371,0.028665,0.010525],[0.012924,0.026641,0.020255],[0.010303,0.028245,0.0095325],[0.010317,0.028912,0.0066772],[0.010341,0.02866,0.010632],[0.040359,0.043609,0.05325],[0.036288,0.043307,0.049199],[0.036248,0.043315,0.049607],[0.048725,0.053391,0.059746]]},{"date":"201801210320","rgb":[[0.012479,0.027451,0.010618],[0.017377,0.024272,0.01491],[0.015287,0.0243,0.019389],[0.013048,0.026692,0.014813],[0.0104,0.028886,0.0080161],[0.010328,0.028898,0.0064757],[0.010346,0.028775,0.0076565],[0.010357,0.028459,0.011628],[0.012486,0.029192,0.010174],[0.0103,0.028936,0.0064391],[0.01032,0.028946,0.00686],[0.010346,0.028725,0.01072],[0.04024,0.043374,0.053935],[0.036289,0.043256,0.049306],[0.036299,0.043238,0.049941],[0.048896,0.05357,0.060586]]},{"date":"201801210330","rgb":[[0.013383,0.024675,0.021366],[0.020016,0.022032,0.021319],[0.019607,0.022257,0.02135],[0.012969,0.025215,0.019726],[0.010377,0.025545,0.021364],[0.010864,0.025412,0.021313],[0.010675,0.026157,0.01835],[0.010369,0.028325,0.011441],[0.012244,0.026152,0.02146],[0.010296,0.026883,0.015414],[0.010318,0.028866,0.0069838],[0.010365,0.028825,0.0099214],[0.040381,0.043017,0.054219],[0.036306,0.04329,0.049279],[0.036315,0.043298,0.049292],[0.048835,0.053789,0.058933]]},{"date":"201801210340","rgb":[[0.012523,0.027317,0.012094],[0.011898,0.026702,0.014731],[0.011454,0.025274,0.02121],[0.011719,0.025317,0.021407],[0.010416,0.028901,0.0082096],[0.010326,0.028896,0.006465],[0.010355,0.027998,0.010616],[0.010388,0.025938,0.019706],[0.012307,0.029293,0.0095558],[0.010294,0.028929,0.0066269],[0.010312,0.028921,0.0067267],[0.010343,0.028626,0.011337],[0.040358,0.043391,0.054314],[0.036313,0.043272,0.049663],[0.036292,0.043208,0.049608],[0.048988,0.053489,0.060403]]},{"date":"201801210350","rgb":[[0.012202,0.027534,0.012096],[0.012184,0.026227,0.016518],[0.013964,0.024346,0.021327],[0.01171,0.026271,0.018637],[0.010369,0.028902,0.0075448],[0.010326,0.028897,0.0065679],[0.010351,0.027909,0.010825],[0.010348,0.028497,0.011211],[0.012334,0.029107,0.0097683],[0.010295,0.028919,0.0065788],[0.010323,0.028943,0.0069683],[0.010357,0.028473,0.012395],[0.040018,0.043178,0.054809],[0.036306,0.043253,0.04969],[0.036304,0.043251,0.050168],[0.049077,0.053172,0.061389]]},{"date":"201801210400","rgb":[[0.011648,0.025295,0.021408],[0.013334,0.024631,0.02131],[0.013405,0.024539,0.021344],[0.011885,0.025955,0.019089],[0.010413,0.025581,0.0214],[0.010326,0.025494,0.021313],[0.010352,0.026481,0.017231],[0.01037,0.028399,0.012322],[0.011904,0.026017,0.021451],[0.010318,0.027288,0.013886],[0.010318,0.028944,0.0070828],[0.010344,0.028473,0.012022],[0.039348,0.04254,0.055765],[0.036288,0.043215,0.050203],[0.036301,0.043239,0.050202],[0.048975,0.053127,0.062134]]},{"date":"201801210410","rgb":[[0.015871,0.025792,0.011579],[0.013154,0.026075,0.01502],[0.012509,0.024941,0.021202],[0.01112,0.025464,0.021371],[0.010389,0.028947,0.0070465],[0.010326,0.028897,0.0064221],[0.010349,0.027913,0.011098],[0.010365,0.026498,0.017589],[0.011764,0.029109,0.0087656],[0.010294,0.028929,0.0065023],[0.010316,0.028939,0.0066693],[0.010338,0.028712,0.011036],[0.039069,0.043205,0.053388],[0.036282,0.043267,0.049385],[0.036245,0.043294,0.049452],[0.048771,0.05342,0.060354]]},{"date":"201801210420","rgb":[[0.012903,0.026379,0.014952],[0.013757,0.0268,0.010487],[0.012418,0.025367,0.019829],[0.011546,0.025451,0.021496],[0.010412,0.028921,0.0086173],[0.010326,0.028897,0.0064608],[0.010347,0.028534,0.0081658],[0.010366,0.026501,0.017723],[0.011804,0.028971,0.0091539],[0.010297,0.028882,0.0067507],[0.010318,0.028929,0.0066075],[0.010317,0.028284,0.012209],[0.039403,0.043003,0.054492],[0.036296,0.043284,0.04953],[0.03626,0.043211,0.050659],[0.048949,0.052991,0.061809]]},{"date":"201801210430","rgb":[[0.013264,0.025624,0.018413],[0.013353,0.024615,0.021313],[0.015721,0.023668,0.021217],[0.011322,0.026915,0.016324],[0.010406,0.028925,0.0077461],[0.010326,0.027409,0.013061],[0.010352,0.027906,0.011194],[0.01038,0.028792,0.0095329],[0.01177,0.029061,0.0082385],[0.010303,0.028939,0.0065542],[0.010315,0.02895,0.006527],[0.010343,0.028841,0.0091693],[0.03914,0.043204,0.05333],[0.036312,0.043324,0.049005],[0.03624,0.043225,0.050083],[0.048769,0.053733,0.05881]]},{"date":"201801210440","rgb":[[0.011735,0.025303,0.021391],[0.016883,0.023243,0.021319],[0.016097,0.024258,0.017992],[0.012482,0.025392,0.020051],[0.010383,0.025605,0.021057],[0.010336,0.027149,0.014232],[0.010352,0.028891,0.0068058],[0.01036,0.028147,0.011786],[0.011531,0.028099,0.012924],[0.010297,0.028932,0.0065693],[0.01032,0.028955,0.0068519],[0.010341,0.028537,0.011439],[0.039015,0.043032,0.054082],[0.036302,0.0433,0.049082],[0.036238,0.043212,0.049922],[0.048986,0.053392,0.061461]]},{"date":"201801210450","rgb":[[0.012709,0.026966,0.01191],[0.013353,0.0262,0.014409],[0.016299,0.023464,0.021212],[0.011273,0.025423,0.021397],[0.010374,0.028895,0.0076426],[0.010326,0.028897,0.0064242],[0.01035,0.028034,0.010378],[0.010361,0.025885,0.019711],[0.011449,0.028985,0.0083422],[0.010303,0.028927,0.0065051],[0.010331,0.028966,0.0064791],[0.01035,0.028196,0.011799],[0.038598,0.043171,0.05339],[0.036237,0.0433,0.049078],[0.036294,0.043277,0.049409],[0.048929,0.053518,0.059398]]},{"date":"201801210500","rgb":[[0.011605,0.02757,0.011974],[0.012284,0.02628,0.015173],[0.014346,0.025622,0.015533],[0.011961,0.025701,0.019539],[0.010354,0.028826,0.0084741],[0.010332,0.028903,0.0065862],[0.010352,0.028911,0.0067817],[0.010392,0.028215,0.012368],[0.011731,0.028961,0.009513],[0.010315,0.02895,0.0065534],[0.010318,0.028929,0.0068103],[0.010353,0.028701,0.011851],[0.039123,0.043168,0.053462],[0.036264,0.043298,0.04946],[0.036257,0.043278,0.050137],[0.048913,0.053356,0.060906]]},{"date":"201801210520","rgb":[[0.012984,0.02698,0.0119],[0.016289,0.024864,0.014348],[0.012846,0.026559,0.014143],[0.011152,0.02673,0.017295],[0.010362,0.028859,0.0076163],[0.010326,0.028886,0.0066432],[0.010352,0.028923,0.0065985],[0.010388,0.028514,0.011473],[0.011864,0.028921,0.0099311],[0.010302,0.028937,0.0064487],[0.010315,0.02895,0.0066023],[0.010381,0.02857,0.011768],[0.039731,0.043129,0.053789],[0.036326,0.043299,0.049628],[0.0363,0.043243,0.050068],[0.048881,0.053238,0.061299]]},{"date":"201801210530","rgb":[[0.012294,0.026427,0.01556],[0.01198,0.027385,0.011073],[0.014634,0.024434,0.019978],[0.011626,0.02601,0.019165],[0.010375,0.028909,0.0078367],[0.010326,0.028897,0.0066015],[0.01035,0.028685,0.0076706],[0.010395,0.02869,0.010826],[0.012055,0.029016,0.0096518],[0.010305,0.02894,0.0065141],[0.010313,0.028937,0.0065796],[0.010337,0.028682,0.0098703],[0.039686,0.043316,0.053858],[0.03634,0.043309,0.049848],[0.03631,0.043258,0.049515],[0.04894,0.053553,0.059847]]},{"date":"201801210540","rgb":[[0.012435,0.027251,0.012391],[0.012506,0.026353,0.014655],[0.012761,0.024837,0.021219],[0.01168,0.025756,0.020188],[0.0104,0.028908,0.0080171],[0.010326,0.028897,0.0066118],[0.010354,0.028081,0.010382],[0.010387,0.027608,0.014092],[0.012078,0.028986,0.0099447],[0.010311,0.028934,0.0067303],[0.01032,0.028955,0.0067219],[0.01037,0.0288,0.010824],[0.039833,0.043374,0.053511],[0.036324,0.043286,0.049626],[0.036307,0.043262,0.049517],[0.04897,0.05338,0.060593]]},{"date":"201801210550","rgb":[[0.011525,0.026737,0.015618],[0.011901,0.027396,0.010872],[0.012354,0.025123,0.020404],[0.011525,0.025539,0.02158],[0.010392,0.028951,0.007579],[0.010326,0.028897,0.0065045],[0.010352,0.028469,0.008742],[0.010376,0.026255,0.018412],[0.012233,0.029251,0.010192],[0.010339,0.028974,0.0066333],[0.010315,0.028896,0.0072594],[0.010381,0.028247,0.012652],[0.040841,0.043314,0.053861],[0.036337,0.043297,0.049472],[0.036254,0.043204,0.050168],[0.049023,0.053547,0.0595]]},{"date":"201801210600","rgb":[[0.01151,0.027743,0.011916],[0.016325,0.025592,0.010887],[0.01702,0.023572,0.019979],[0.011572,0.025485,0.021463],[0.010423,0.028933,0.0075782],[0.010326,0.028897,0.0064618],[0.010349,0.028536,0.0083969],[0.010388,0.026311,0.01853],[0.012284,0.029148,0.0098134],[0.01031,0.028933,0.0065969],[0.010323,0.028945,0.0065767],[0.010322,0.028266,0.012233],[0.040319,0.043436,0.054699],[0.036345,0.043252,0.049799],[0.036231,0.04319,0.050394],[0.049161,0.05348,0.061843]]},{"date":"201801210610","rgb":[[0.011536,0.02801,0.011408],[0.012329,0.026166,0.01626],[0.011818,0.025318,0.020832],[0.011083,0.026987,0.016861],[0.010367,0.028865,0.009052],[0.010326,0.028846,0.0071182],[0.010352,0.028493,0.0094179],[0.010361,0.028073,0.013494],[0.012648,0.029218,0.011111],[0.010316,0.028912,0.0072835],[0.010326,0.028885,0.0075237],[0.010363,0.028433,0.012028],[0.040621,0.043606,0.054715],[0.036331,0.043293,0.050124],[0.036263,0.043196,0.050509],[0.049169,0.053416,0.061127]]},{"date":"201801210620","rgb":[[0.011353,0.02555,0.021555],[0.011033,0.025534,0.021386],[0.01246,0.024999,0.021375],[0.011353,0.025902,0.0229],[0.010722,0.02589,0.021767],[0.010441,0.025609,0.021428],[0.010353,0.025521,0.02134],[0.010747,0.025895,0.022312],[0.013823,0.027025,0.024759],[0.01094,0.026018,0.02289],[0.010481,0.025713,0.021506],[0.010848,0.025993,0.022696],[0.041117,0.041869,0.065211],[0.036738,0.040786,0.063595],[0.036311,0.040461,0.062372],[0.049292,0.051403,0.069018]]},{"date":"201801210630","rgb":[[0.012907,0.026722,0.03847],[0.012855,0.02661,0.038649],[0.012972,0.026636,0.037591],[0.012965,0.026745,0.037812],[0.01326,0.026625,0.041114],[0.013937,0.026486,0.043987],[0.012757,0.026746,0.039846],[0.012621,0.026924,0.037896],[0.019583,0.029341,0.055195],[0.015726,0.027072,0.050795],[0.012521,0.02685,0.037605],[0.012579,0.027013,0.036366],[0.04444,0.043902,0.081033],[0.039409,0.041694,0.076505],[0.037223,0.041161,0.066223],[0.05006,0.05202,0.071731]]},{"date":"201801210640","rgb":[[0.035164,0.036032,0.21758],[0.034467,0.033477,0.19977],[0.033952,0.031896,0.18692],[0.033648,0.032276,0.18186],[0.034267,0.042329,0.23135],[0.033582,0.041323,0.23276],[0.034115,0.039847,0.2349],[0.03685,0.03528,0.2179],[0.038506,0.047588,0.21522],[0.038625,0.063264,0.259],[0.037188,0.05103,0.25449],[0.036066,0.036747,0.21834],[0.056082,0.054012,0.15817],[0.058271,0.064046,0.21939],[0.054639,0.050763,0.20076],[0.062658,0.05602,0.15561]]},{"date":"201801210650","rgb":[[0.1244,0.24226,0.77949],[0.12295,0.24082,0.75804],[0.11243,0.21916,0.7163],[0.10222,0.19971,0.68114],[0.17846,0.34592,0.95097],[0.18491,0.35121,0.95701],[0.17447,0.31193,0.91685],[0.15342,0.26385,0.84209],[0.20841,0.41935,0.98052],[0.22357,0.46038,0.99741],[0.21149,0.39401,0.99612],[0.18088,0.30951,0.91116],[0.16996,0.28411,0.7024],[0.20356,0.34987,0.81741],[0.17927,0.28815,0.77652],[0.14245,0.21423,0.61473]]},{"date":"201801210700","rgb":[[0.35591,0.8819,0.99698],[0.3773,0.87542,0.99758],[0.36597,0.8085,0.99727],[0.33128,0.72719,0.99664],[0.49089,0.99606,0.99829],[0.56405,0.99931,0.99858],[0.48922,0.9944,0.99869],[0.40848,0.93847,0.99731],[0.71141,0.9956,0.99815],[0.87308,0.9982,0.99817],[0.66673,0.99929,0.99826],[0.45787,0.96331,0.99772],[0.49714,0.76392,0.94881],[0.65406,0.86951,0.94954],[0.51335,0.80067,0.94832],[0.34783,0.55621,0.92652]]},{"date":"201801210710","rgb":[[0.9932,0.97746,1],[0.98581,0.97997,1],[0.98498,0.98022,1],[0.98022,0.98211,0.99981],[0.98441,0.98037,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98431,0.98039,1],[0.98151,0.98104,0.9999],[0.88194,0.91354,0.95103],[0.90538,0.91001,0.95133],[0.86773,0.91377,0.95092],[0.69782,0.89314,0.94277]]},{"date":"201801210720","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90334,0.94497]]},{"date":"201801210730","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90335,0.94498]]},{"date":"201801210740","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90334,0.94496]]},{"date":"201801210750","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90333,0.94483]]},{"date":"201801210800","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.9034,0.94486]]},{"date":"201801210810","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90339,0.9449]]},{"date":"201801210820","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90339,0.94492]]},{"date":"201801210830","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90341,0.94493]]},{"date":"201801210840","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90342,0.94486]]},{"date":"201801210850","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90337,0.9448]]},{"date":"201801210900","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90338,0.94484]]},{"date":"201801210920","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90337,0.9449]]},{"date":"201801210930","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90339,0.94492]]},{"date":"201801210940","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90337,0.9449]]},{"date":"201801210950","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90336,0.94479]]},{"date":"201801211000","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90334,0.94485]]},{"date":"201801211010","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90333,0.9449]]},{"date":"201801211020","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90335,0.94484]]},{"date":"201801211030","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94493]]},{"date":"201801211040","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90337,0.94486]]},{"date":"201801211050","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93057,0.90332,0.94479]]},{"date":"201801211110","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90334,0.94486]]},{"date":"201801211120","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90335,0.94488]]},{"date":"201801211130","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94489]]},{"date":"201801211140","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90336,0.94488]]},{"date":"201801211150","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90331,0.94484]]},{"date":"201801211200","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90335,0.94484]]},{"date":"201801211210","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90333,0.94487]]},{"date":"201801211220","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90335,0.94492]]},{"date":"201801211230","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90337,0.94492]]},{"date":"201801211240","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.9306,0.90336,0.9449]]},{"date":"201801211250","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90334,0.94479]]},{"date":"201801211300","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90336,0.94486]]},{"date":"201801211310","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90335,0.94493]]},{"date":"201801211320","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90335,0.94493]]},{"date":"201801211330","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93063,0.90336,0.94495]]},{"date":"201801211340","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90337,0.94494]]},{"date":"201801211350","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90334,0.94481]]},{"date":"201801211400","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93062,0.90336,0.94487]]},{"date":"201801211410","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90337,0.94491]]},{"date":"201801211420","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93064,0.90337,0.94493]]},{"date":"201801211430","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90338,0.94493]]},{"date":"201801211440","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93065,0.90338,0.94494]]},{"date":"201801211450","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93061,0.90335,0.94481]]},{"date":"201801211500","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93058,0.90333,0.9448]]},{"date":"201801211510","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93128,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90331,0.94484]]},{"date":"201801211520","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93117,0.90491,0.95161],[0.93127,0.9048,0.95161],[0.93127,0.9048,0.95161],[0.93059,0.90332,0.94487]]},{"date":"201801211530","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.92199,0.90859,0.94741],[0.93092,0.90499,0.9516],[0.93127,0.9048,0.95161],[0.93059,0.90333,0.94489]]},{"date":"201801211540","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99456,0.97695,0.99994],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.87968,0.91079,0.94808],[0.90631,0.91153,0.94769],[0.9076,0.91125,0.94777],[0.92671,0.90537,0.94397]]},{"date":"201801211550","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.97877,0.97943,0.99939],[0.99607,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.67413,0.89649,0.94323],[0.71298,0.90642,0.9453],[0.70929,0.90335,0.94335],[0.82287,0.91032,0.93568]]},{"date":"201801211600","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.93683,0.97958,0.99689],[0.99525,0.97676,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.48036,0.78736,0.93539],[0.59009,0.76205,0.93731],[0.59826,0.75716,0.93518],[0.64221,0.81928,0.92478]]},{"date":"201801211610","rgb":[[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.9169,0.96306,0.99557],[0.99432,0.97706,1],[0.99608,0.97647,1],[0.99608,0.97647,1],[0.40845,0.59951,0.92803],[0.52181,0.62075,0.93749],[0.52796,0.61312,0.93539],[0.53414,0.60139,0.92304]]},{"date":"201801211620","rgb":[[0.54328,0.99947,0.99883],[0.55478,0.99952,0.99894],[0.56939,0.99965,0.99922],[0.62516,0.99942,0.99929],[0.60059,0.99948,0.99943],[0.6252,0.9994,0.9997],[0.65773,0.99951,0.99913],[0.7337,0.99935,0.99826],[0.48044,0.9365,0.9903],[0.59597,0.9994,0.99935],[0.68553,0.99935,0.99838],[0.78207,0.99917,0.99885],[0.20351,0.40032,0.77402],[0.24697,0.49177,0.75127],[0.29239,0.49319,0.74409],[0.32335,0.41973,0.75959]]},{"date":"201801211630","rgb":[[0.19101,0.40632,0.99802],[0.19392,0.41102,0.99823],[0.20338,0.41329,0.99806],[0.20923,0.44559,0.99675],[0.18607,0.43487,0.997],[0.19369,0.43833,0.99716],[0.20315,0.4496,0.99779],[0.21387,0.51918,0.99677],[0.17935,0.39105,0.94111],[0.19596,0.45293,0.9984],[0.21471,0.50759,0.99733],[0.24211,0.62208,0.99664],[0.1037,0.14204,0.44197],[0.11776,0.18742,0.52109],[0.12961,0.21948,0.52701],[0.13034,0.20764,0.45744]]},{"date":"201801211640","rgb":[[0.054125,0.1061,0.42205],[0.053916,0.11754,0.42952],[0.055487,0.12645,0.45327],[0.063384,0.14564,0.51065],[0.05452,0.12176,0.44135],[0.05565,0.13199,0.45857],[0.059885,0.14312,0.48911],[0.065658,0.16062,0.54945],[0.056877,0.11465,0.3964],[0.05739,0.13822,0.46496],[0.062591,0.15757,0.51633],[0.0706,0.17436,0.582],[0.059516,0.064967,0.1611],[0.054318,0.077868,0.21944],[0.057592,0.087972,0.24631],[0.067597,0.083864,0.21093]]},{"date":"201801211650","rgb":[[0.020998,0.027705,0.081764],[0.020329,0.027361,0.079358],[0.022291,0.027361,0.091937],[0.024088,0.030424,0.11463],[0.022656,0.027465,0.093676],[0.022556,0.02697,0.094216],[0.023011,0.027631,0.10474],[0.025599,0.031972,0.13174],[0.027896,0.03155,0.091492],[0.023357,0.026855,0.10208],[0.023163,0.029423,0.1109],[0.027526,0.032509,0.1425],[0.049852,0.048709,0.076216],[0.041157,0.041485,0.088723],[0.04145,0.042344,0.094229],[0.052738,0.053197,0.09169]]},{"date":"201801211700","rgb":[[0.012376,0.0261,0.024242],[0.011882,0.025445,0.021916],[0.011734,0.02574,0.022923],[0.01255,0.026786,0.029669],[0.011377,0.026297,0.025471],[0.010737,0.025837,0.022151],[0.010891,0.025919,0.023933],[0.012197,0.026805,0.031624],[0.017728,0.030874,0.028074],[0.011281,0.02624,0.025594],[0.011652,0.026431,0.027845],[0.01249,0.026939,0.03508],[0.047574,0.048184,0.061824],[0.036563,0.040728,0.062043],[0.03673,0.040776,0.063975],[0.049031,0.051304,0.069772]]},{"date":"201801211710","rgb":[[0.012235,0.026635,0.016487],[0.011915,0.025929,0.018286],[0.011383,0.025324,0.021332],[0.012228,0.025734,0.021981],[0.01042,0.028659,0.010342],[0.010324,0.028587,0.0091951],[0.010343,0.026405,0.017525],[0.0106,0.025768,0.021587],[0.016507,0.033016,0.013776],[0.010303,0.028837,0.009461],[0.010308,0.028631,0.011243],[0.010873,0.02654,0.020128],[0.047523,0.049369,0.056656],[0.036255,0.043268,0.050389],[0.036308,0.04317,0.051922],[0.048504,0.052403,0.06258]]},{"date":"201801211720","rgb":[[0.011763,0.025308,0.021443],[0.013228,0.024632,0.021337],[0.012761,0.024781,0.021353],[0.011549,0.02621,0.019787],[0.010409,0.025603,0.021292],[0.010323,0.02549,0.02131],[0.010344,0.026245,0.018305],[0.010399,0.028265,0.013444],[0.016589,0.031968,0.015747],[0.010348,0.027002,0.01536],[0.010333,0.028851,0.0079615],[0.010776,0.028768,0.012602],[0.04753,0.0495,0.056384],[0.0363,0.043307,0.049752],[0.03631,0.043286,0.0505],[0.048619,0.053197,0.060362]]},{"date":"201801211730","rgb":[[0.011885,0.027475,0.012636],[0.012131,0.026545,0.01467],[0.013273,0.024671,0.021218],[0.011247,0.026283,0.019039],[0.010374,0.028895,0.0075871],[0.010325,0.028871,0.0065387],[0.010346,0.028133,0.010058],[0.010428,0.028447,0.011839],[0.01641,0.032978,0.011003],[0.010297,0.028853,0.0072956],[0.010315,0.028815,0.0083989],[0.01049,0.028515,0.013186],[0.047121,0.049432,0.055871],[0.036292,0.043295,0.049273],[0.03634,0.043228,0.051196],[0.048698,0.053124,0.060866]]},{"date":"201801211740","rgb":[[0.013556,0.026721,0.011697],[0.014437,0.026618,0.0093395],[0.012862,0.025864,0.017091],[0.01165,0.026497,0.017531],[0.010376,0.02891,0.0073631],[0.010326,0.028886,0.006522],[0.010352,0.028923,0.0067833],[0.010369,0.028736,0.010542],[0.016384,0.032866,0.011204],[0.010294,0.028915,0.0068588],[0.010321,0.028945,0.0072219],[0.01039,0.028633,0.011965],[0.047056,0.049166,0.055825],[0.036287,0.04324,0.04962],[0.0363,0.043265,0.050144],[0.048591,0.053183,0.059647]]},{"date":"201801211800","rgb":[[0.012503,0.027204,0.012313],[0.015988,0.024909,0.014606],[0.012769,0.024939,0.021259],[0.011087,0.025531,0.02144],[0.010373,0.028906,0.0075849],[0.010326,0.028897,0.006466],[0.010347,0.027879,0.01094],[0.01036,0.025774,0.020296],[0.016472,0.032945,0.010742],[0.010302,0.028925,0.0064431],[0.010316,0.028929,0.006901],[0.010374,0.02777,0.014173],[0.047307,0.049141,0.055872],[0.036235,0.043298,0.04897],[0.036317,0.043248,0.049877],[0.048987,0.05355,0.06021]]},{"date":"201801211810","rgb":[[0.013033,0.026999,0.011704],[0.012447,0.026469,0.014145],[0.011528,0.025296,0.02121],[0.011167,0.02638,0.018896],[0.010388,0.028897,0.0074836],[0.010323,0.028894,0.0064978],[0.010354,0.028219,0.0096394],[0.01041,0.028721,0.010817],[0.016664,0.032957,0.011325],[0.010297,0.028908,0.0065858],[0.010316,0.028914,0.0069548],[0.010399,0.028632,0.011673],[0.047406,0.04927,0.056688],[0.036267,0.043299,0.049566],[0.036295,0.043253,0.050135],[0.048986,0.053328,0.060932]]},{"date":"201801211820","rgb":[[0.01426,0.026356,0.013244],[0.015017,0.024162,0.020377],[0.012978,0.02611,0.018056],[0.022694,0.02711,0.021649],[0.010368,0.028829,0.0085059],[0.010326,0.0286,0.0079001],[0.010355,0.028871,0.007104],[0.029068,0.029305,0.023363],[0.016535,0.032934,0.011444],[0.010295,0.028919,0.0065629],[0.010318,0.028857,0.0078812],[0.010729,0.028238,0.013796],[0.047279,0.049161,0.056197],[0.036292,0.043287,0.049426],[0.036256,0.043235,0.050375],[0.049013,0.053541,0.060297]]},{"date":"201801211830","rgb":[[0.012163,0.02572,0.019056],[0.013953,0.026572,0.010297],[0.012928,0.027021,0.01367],[0.022548,0.026609,0.021907],[0.010372,0.028744,0.008385],[0.010323,0.028881,0.0065975],[0.010354,0.028849,0.0070752],[0.02809,0.028585,0.023815],[0.016752,0.032786,0.01159],[0.010289,0.028888,0.0067654],[0.010326,0.028952,0.0068133],[0.010969,0.028509,0.012822],[0.047433,0.049254,0.056303],[0.036346,0.043327,0.049771],[0.036328,0.043309,0.05012],[0.049127,0.053684,0.05985]]},{"date":"201801211840","rgb":[[0.011478,0.027573,0.012371],[0.01305,0.027269,0.0094211],[0.013737,0.026731,0.013258],[0.029224,0.026817,0.02936],[0.010378,0.028887,0.0079483],[0.010328,0.028898,0.0065606],[0.010352,0.028898,0.0070148],[0.026424,0.028025,0.026015],[0.016575,0.032885,0.011821],[0.010329,0.028941,0.0068749],[0.010321,0.02888,0.0079893],[0.010642,0.028281,0.014065],[0.04733,0.049193,0.056866],[0.036303,0.04321,0.049999],[0.036322,0.043191,0.050963],[0.049177,0.053511,0.061458]]},{"date":"201801211850","rgb":[[0.011524,0.026522,0.016862],[0.013147,0.025143,0.019232],[0.016104,0.024804,0.02029],[0.032455,0.028697,0.032328],[0.010443,0.028976,0.0087743],[0.010326,0.028675,0.0075861],[0.010349,0.028654,0.0082274],[0.040462,0.036014,0.038946],[0.016764,0.032951,0.012388],[0.010313,0.028896,0.006714],[0.010307,0.028881,0.0072978],[0.010937,0.027596,0.015946],[0.047534,0.049455,0.056723],[0.036326,0.043348,0.049529],[0.036316,0.04332,0.049999],[0.049138,0.053188,0.061582]]},{"date":"201801211900","rgb":[[0.01235,0.026896,0.013527],[0.013326,0.026254,0.014334],[0.014273,0.026006,0.017379],[0.033241,0.028449,0.031181],[0.010362,0.028832,0.0082375],[0.010331,0.028889,0.0064845],[0.010357,0.028928,0.0068745],[0.041363,0.035999,0.036871],[0.016836,0.033078,0.01213],[0.010318,0.0289,0.0069904],[0.010313,0.028784,0.0081413],[0.011107,0.028204,0.014239],[0.047718,0.049552,0.05668],[0.036327,0.043333,0.049396],[0.036317,0.043262,0.050079],[0.048963,0.05352,0.060357]]},{"date":"201801211910","rgb":[[0.011917,0.027484,0.013039],[0.012379,0.026326,0.015779],[0.014851,0.025628,0.018304],[0.034069,0.027793,0.035392],[0.010427,0.0289,0.0083698],[0.010324,0.028883,0.0065059],[0.010341,0.028862,0.0069383],[0.04173,0.034715,0.039328],[0.016915,0.033085,0.012882],[0.010321,0.028943,0.0071865],[0.010319,0.028856,0.0089121],[0.011219,0.027923,0.01634],[0.047955,0.049548,0.057321],[0.036389,0.043399,0.050185],[0.036315,0.043197,0.051321],[0.049086,0.053218,0.061647]]},{"date":"201801211920","rgb":[[0.011988,0.027698,0.011356],[0.012677,0.025854,0.016745],[0.015062,0.025772,0.017132],[0.030616,0.027925,0.026755],[0.0104,0.028886,0.0083536],[0.010326,0.028885,0.0065385],[0.010354,0.028886,0.0068779],[0.039092,0.035051,0.032451],[0.016772,0.033106,0.011773],[0.010295,0.028904,0.0070633],[0.01032,0.028866,0.0072877],[0.010857,0.028269,0.014109],[0.047608,0.049411,0.057349],[0.03633,0.043324,0.049936],[0.036316,0.043208,0.051071],[0.048973,0.053154,0.061905]]},{"date":"201801211930","rgb":[[0.012265,0.027666,0.010866],[0.012471,0.027218,0.01137],[0.014667,0.02571,0.017319],[0.032451,0.027843,0.026678],[0.010437,0.028933,0.0081188],[0.010336,0.028894,0.0064872],[0.010357,0.028906,0.0069018],[0.039502,0.035346,0.032156],[0.016681,0.033104,0.012024],[0.010316,0.028927,0.0071132],[0.010324,0.028944,0.0073604],[0.010976,0.028027,0.014588],[0.047738,0.049557,0.056579],[0.036353,0.043319,0.050323],[0.036307,0.04324,0.05023],[0.04903,0.053361,0.060965]]},{"date":"201801211940","rgb":[[0.011335,0.027594,0.013193],[0.012155,0.026561,0.015015],[0.014565,0.026039,0.016335],[0.031026,0.027998,0.028099],[0.010415,0.028949,0.0083526],[0.010326,0.028897,0.0066353],[0.01035,0.028896,0.006858],[0.038604,0.035472,0.032617],[0.016518,0.033137,0.012153],[0.010306,0.02893,0.0067173],[0.010318,0.028894,0.0074921],[0.010992,0.028158,0.014406],[0.047529,0.049576,0.05659],[0.036332,0.043342,0.049281],[0.036325,0.04324,0.050464],[0.048848,0.053252,0.061527]]},{"date":"201801211950","rgb":[[0.011925,0.027561,0.012877],[0.014714,0.025508,0.015144],[0.015123,0.025308,0.019092],[0.035167,0.026761,0.031421],[0.01043,0.028822,0.0082422],[0.010352,0.028886,0.0068237],[0.01041,0.028857,0.0074212],[0.040947,0.033771,0.036765],[0.016767,0.032989,0.012918],[0.0103,0.028896,0.0073807],[0.010321,0.028834,0.0089213],[0.011046,0.027862,0.016294],[0.04771,0.049443,0.057216],[0.036344,0.043351,0.05014],[0.036308,0.043223,0.051305],[0.049125,0.052901,0.063024]]},{"date":"201801212000","rgb":[[0.013336,0.027243,0.011752],[0.013961,0.025697,0.015587],[0.014921,0.025897,0.01605],[0.032789,0.027534,0.031141],[0.010401,0.028885,0.0090028],[0.010332,0.028903,0.006583],[0.010355,0.028901,0.0075565],[0.03983,0.034519,0.033966],[0.016403,0.032947,0.012099],[0.010305,0.028904,0.0068322],[0.010334,0.028867,0.0076285],[0.011082,0.027802,0.014989],[0.047152,0.049438,0.056129],[0.036246,0.043299,0.049777],[0.036315,0.043273,0.050488],[0.049018,0.053351,0.061312]]},{"date":"201801212010","rgb":[[0.011551,0.027497,0.014019],[0.011957,0.025342,0.020763],[0.015472,0.025029,0.020688],[0.033703,0.027627,0.030002],[0.010388,0.028846,0.0086992],[0.010327,0.028277,0.009335],[0.010344,0.028308,0.010036],[0.040282,0.034367,0.034944],[0.016472,0.032992,0.013043],[0.01031,0.028879,0.0073785],[0.01034,0.028874,0.0085932],[0.011039,0.027614,0.016434],[0.047296,0.049267,0.05727],[0.036267,0.043312,0.049876],[0.036299,0.043167,0.051683],[0.048915,0.053164,0.061726]]},{"date":"201801212020","rgb":[[0.011474,0.027573,0.013282],[0.011851,0.026374,0.016473],[0.012932,0.02634,0.017308],[0.024716,0.026509,0.027856],[0.010411,0.028894,0.0087881],[0.010332,0.028878,0.0067752],[0.010357,0.02888,0.0070126],[0.032705,0.030355,0.032541],[0.0166,0.032991,0.012235],[0.010305,0.028893,0.0070715],[0.010313,0.028798,0.0079663],[0.01099,0.028308,0.014198],[0.047599,0.049278,0.056404],[0.036275,0.043351,0.049877],[0.036292,0.043236,0.050939],[0.048933,0.053374,0.061321]]},{"date":"201801212030","rgb":[[0.011626,0.027653,0.012603],[0.011887,0.026586,0.015352],[0.013108,0.026756,0.014613],[0.023924,0.026808,0.028576],[0.010373,0.028895,0.0075912],[0.010326,0.028884,0.0065953],[0.010341,0.028875,0.0068793],[0.029601,0.030042,0.031787],[0.016455,0.03298,0.011673],[0.010316,0.028901,0.0070705],[0.010315,0.028879,0.007602],[0.010887,0.027893,0.015389],[0.047515,0.049322,0.057055],[0.036319,0.043254,0.049937],[0.036341,0.043249,0.050996],[0.048975,0.05325,0.06175]]},{"date":"201801212040","rgb":[[0.011676,0.027583,0.012276],[0.012842,0.026083,0.015098],[0.013681,0.026055,0.016836],[0.022567,0.026902,0.025553],[0.010379,0.028798,0.0085503],[0.010329,0.028887,0.0066428],[0.010354,0.028925,0.0067384],[0.027817,0.029465,0.028408],[0.016522,0.03304,0.01262],[0.010291,0.028914,0.0074063],[0.01032,0.02887,0.0077137],[0.010847,0.027906,0.015099],[0.047677,0.04936,0.05724],[0.03629,0.043271,0.050122],[0.036313,0.043213,0.050797],[0.049162,0.052857,0.062876]]},{"date":"201801212050","rgb":[[0.01159,0.026287,0.017585],[0.012185,0.027195,0.012295],[0.016458,0.024889,0.020306],[0.03455,0.027896,0.037269],[0.010405,0.028697,0.0096951],[0.010334,0.028905,0.0072481],[0.010351,0.028905,0.0075372],[0.04263,0.034857,0.042575],[0.016547,0.033093,0.012265],[0.010297,0.028881,0.0072183],[0.010328,0.028861,0.0079039],[0.011042,0.028074,0.01516],[0.047526,0.049592,0.057193],[0.036304,0.043262,0.050291],[0.036263,0.043202,0.051212],[0.049196,0.052957,0.063393]]},{"date":"201801212100","rgb":[[0.011886,0.027347,0.012726],[0.012237,0.026492,0.014885],[0.013793,0.026819,0.014131],[0.032324,0.028109,0.02575],[0.01039,0.02896,0.0074771],[0.010328,0.028898,0.0064753],[0.010357,0.028928,0.0064942],[0.040586,0.035204,0.032483],[0.016501,0.033132,0.010696],[0.010316,0.028951,0.0065212],[0.01032,0.028955,0.0066746],[0.010838,0.028504,0.012253],[0.047311,0.049431,0.056365],[0.036296,0.043318,0.049127],[0.036263,0.043279,0.049595],[0.04878,0.053235,0.060512]]},{"date":"201801212110","rgb":[[0.011632,0.027482,0.012368],[0.012542,0.027155,0.011241],[0.014797,0.025492,0.018145],[0.03307,0.027639,0.029568],[0.010403,0.028911,0.008053],[0.010329,0.028888,0.0065264],[0.010341,0.028907,0.0067787],[0.040802,0.035553,0.033474],[0.016579,0.033068,0.012275],[0.010327,0.028926,0.0070283],[0.010316,0.028877,0.0078089],[0.011038,0.02819,0.014269],[0.047489,0.04962,0.056429],[0.036311,0.043289,0.049454],[0.036234,0.043205,0.050579],[0.048858,0.053246,0.060657]]},{"date":"201801212120","rgb":[[0.013051,0.026755,0.012956],[0.012962,0.02628,0.014547],[0.014333,0.025519,0.018775],[0.032385,0.026921,0.032077],[0.010365,0.028911,0.0077554],[0.010331,0.028902,0.0065071],[0.010347,0.028868,0.0073133],[0.040381,0.033885,0.036539],[0.016372,0.03307,0.010895],[0.010302,0.028937,0.0066549],[0.010302,0.02889,0.0075412],[0.010926,0.02779,0.014569],[0.047468,0.049493,0.055724],[0.036289,0.043309,0.04902],[0.036235,0.043221,0.050187],[0.048698,0.053512,0.05926]]},{"date":"201801212130","rgb":[[0.011872,0.027775,0.010821],[0.011854,0.02722,0.012171],[0.013864,0.025828,0.018051],[0.032938,0.02756,0.029646],[0.010412,0.028957,0.0078632],[0.010339,0.02891,0.0065127],[0.010347,0.028894,0.0068721],[0.040212,0.035099,0.033414],[0.016454,0.033137,0.010815],[0.010294,0.028929,0.0065202],[0.010323,0.02892,0.0068535],[0.010888,0.028735,0.011647],[0.047424,0.049518,0.055398],[0.036292,0.043313,0.049009],[0.036291,0.043279,0.049489],[0.048933,0.053446,0.059334]]},{"date":"201801212140","rgb":[[0.012581,0.027208,0.012403],[0.011724,0.027501,0.011153],[0.015597,0.025915,0.015072],[0.033474,0.027832,0.029387],[0.010395,0.028906,0.0079325],[0.010327,0.028898,0.0065023],[0.01035,0.028909,0.0067756],[0.043468,0.036946,0.035166],[0.016665,0.033285,0.011455],[0.0103,0.028936,0.0065176],[0.010315,0.028947,0.0066456],[0.010927,0.028318,0.013011],[0.047138,0.04922,0.056376],[0.036304,0.043284,0.049074],[0.036293,0.043302,0.049194],[0.048891,0.053425,0.060019]]},{"date":"201801212150","rgb":[[0.014789,0.024147,0.021429],[0.013682,0.024533,0.021051],[0.014808,0.026025,0.016009],[0.035271,0.027485,0.029622],[0.010374,0.025842,0.02],[0.010328,0.028017,0.010458],[0.010343,0.028917,0.0067394],[0.043643,0.036175,0.035229],[0.016548,0.0329,0.012956],[0.010297,0.02892,0.0066524],[0.010321,0.028923,0.0072189],[0.011102,0.028515,0.012946],[0.047039,0.049175,0.056182],[0.036281,0.043303,0.049058],[0.03625,0.043237,0.049747],[0.048743,0.053573,0.059662]]},{"date":"201801212200","rgb":[[0.012281,0.027426,0.01255],[0.011815,0.026635,0.015033],[0.015712,0.025842,0.016178],[0.03315,0.027911,0.03107],[0.010406,0.028939,0.0081142],[0.010326,0.028897,0.0064578],[0.010349,0.02892,0.0069536],[0.042528,0.035982,0.036072],[0.016706,0.033149,0.01135],[0.01029,0.028914,0.0065723],[0.010324,0.028948,0.0069554],[0.010985,0.028391,0.013474],[0.047377,0.049279,0.056649],[0.036278,0.043287,0.048943],[0.036315,0.043299,0.049529],[0.048912,0.053368,0.060737]]},{"date":"201801212210","rgb":[[0.012574,0.024912,0.021394],[0.017928,0.022941,0.020896],[0.016491,0.025877,0.014992],[0.032743,0.027096,0.030889],[0.010381,0.026538,0.017678],[0.010328,0.028164,0.0097585],[0.01035,0.028846,0.0072614],[0.041779,0.034856,0.038453],[0.016701,0.033187,0.011547],[0.010311,0.028921,0.0067489],[0.010312,0.028885,0.0073387],[0.010887,0.028255,0.013986],[0.047522,0.049296,0.056261],[0.036284,0.043256,0.049374],[0.036294,0.04323,0.050345],[0.048826,0.053255,0.060958]]},{"date":"201801212220","rgb":[[0.011614,0.027582,0.011778],[0.011914,0.027765,0.009413],[0.015769,0.026307,0.013236],[0.034373,0.027502,0.027011],[0.01038,0.028915,0.0074631],[0.010326,0.028897,0.0064495],[0.010343,0.028913,0.0067251],[0.042056,0.035336,0.03453],[0.016661,0.033215,0.011084],[0.010294,0.028917,0.006525],[0.010318,0.028894,0.0072112],[0.010952,0.028109,0.013608],[0.047274,0.049181,0.056022],[0.036293,0.043271,0.049283],[0.036313,0.043268,0.049776],[0.048845,0.053422,0.060273]]},{"date":"201801212230","rgb":[[0.012781,0.027184,0.011924],[0.012224,0.026411,0.015336],[0.014955,0.02569,0.017395],[0.031683,0.027822,0.027892],[0.010395,0.028879,0.0080394],[0.010326,0.028897,0.0065778],[0.010349,0.028919,0.0064787],[0.039908,0.035693,0.032744],[0.016594,0.033026,0.011238],[0.01029,0.028926,0.0064833],[0.010315,0.028938,0.006895],[0.01082,0.027966,0.014074],[0.047275,0.049398,0.055718],[0.036287,0.043292,0.049358],[0.036307,0.043277,0.049928],[0.048768,0.053624,0.059672]]},{"date":"201801212240","rgb":[[0.011219,0.026299,0.018164],[0.012106,0.025107,0.021327],[0.014378,0.025493,0.01931],[0.031793,0.02856,0.030767],[0.010403,0.028899,0.007757],[0.010326,0.02771,0.011548],[0.010353,0.028654,0.00813],[0.03977,0.036852,0.041383],[0.016564,0.033168,0.011346],[0.010295,0.028919,0.0066184],[0.010313,0.028937,0.0069016],[0.010831,0.028426,0.012378],[0.047365,0.049359,0.054783],[0.036286,0.043303,0.048946],[0.036314,0.043293,0.049244],[0.04888,0.053713,0.058689]]}]

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactDom = __webpack_require__(2);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ImageTest = function (_React$Component) {
    _inherits(ImageTest, _React$Component);

    function ImageTest() {
        _classCallCheck(this, ImageTest);

        return _possibleConstructorReturn(this, (ImageTest.__proto__ || Object.getPrototypeOf(ImageTest)).apply(this, arguments));
    }

    _createClass(ImageTest, [{
        key: 'render',
        value: function render() {

            function getRandomInt(min, max) {
                min = Math.ceil(min);
                max = Math.floor(max);
                return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive
            }
            function test1() {
                var node = document.getElementById('img1');
                var height = node.height;
                var width = node.width;
                var canvas = document.createElement('canvas');
                canvas.height = height;
                canvas.width = width;

                canvas.getContext('2d').drawImage(node, 0, 0, width, height);

                var rgbData = [];
                var gradient = 'linear-gradient(';
                var w = Math.floor(width / 2);

                for (var i = 1; i < height; i++) {
                    var randomW = getRandomInt(0, width);
                    var test = canvas.getContext('2d').getImageData(randomW, i, 1, 1).data;
                    var rgb = 'rgb(' + test[0] + ',' + test[1] + ',' + test[2] + ')';
                    if (i < height - 1 && i % 20 == 0) {
                        gradient = gradient + rgb + ', ';
                    } else if (i < height - 1 && i % 20 != 0) {
                        gradient = gradient + '';
                    } else {
                        gradient = gradient + rgb + ')';
                    }

                    rgbData.push(rgb);
                }
                document.getElementById('imgGradient').style.background = gradient;
            }
            function test2() {
                // var node = document.getElementById('img2');
                // var height = node.height;
                // var width = node.width;
                // var canvas = document.createElement('canvas');
                // canvas.height = height;
                // canvas.width = width;

                // canvas.getContext('2d').drawImage(node, 0, 0, width, height);

                document.getElementById('imgGradient2').innerHTML = 'This doesn\'t do anything yet';
            }

            return _react2.default.createElement(
                'div',
                { className: 'testContainer' },
                _react2.default.createElement(
                    'div',
                    { className: 'test' },
                    _react2.default.createElement('img', { id: 'img1', src: '../img/sky1.jpeg', onClick: test1 }),
                    _react2.default.createElement('div', { id: 'imgGradient', className: 'gradient' })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'test2' },
                    _react2.default.createElement('img', { id: 'img2', src: '../img/sky1.jpeg', onClick: test2 }),
                    _react2.default.createElement('div', { id: 'imgGradient2', className: 'gradient' })
                )
            );
        }
    }]);

    return ImageTest;
}(_react2.default.Component);

exports.default = ImageTest;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(41);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {"hmr":true}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(44)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./base.scss", function() {
			var newContent = require("!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./base.scss");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

var escape = __webpack_require__(42);
exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, ".hidden {\n  display: none; }\n\nbody {\n  font-family: \"Helvetica Neue\", Helvetica, arial, sans-serif;\n  color: #000;\n  margin: 0;\n  padding: 0; }\n\n.control-box {\n  background: rgba(0, 0, 0, 0.7);\n  width: 20em;\n  margin: 2em 2em;\n  padding: 1em;\n  position: absolute;\n  color: #fff;\n  z-index: 10;\n  transition-delay: .2s;\n  transition: 0.6s;\n  /* Special styling for WebKit/Blink */\n  /* All the same stuff for Firefox */\n  /* All the same stuff for IE */ }\n  .control-box .controls {\n    transition: .03s;\n    transition-delay: .6s;\n    visibility: visible;\n    opacity: 1 !important;\n    padding-bottom: 1em; }\n    .control-box .controls .title {\n      margin-top: 1em;\n      margin-bottom: 1.5em; }\n    .control-box .controls .selects {\n      border-top: 2px solid;\n      margin-top: -2px; }\n    .control-box .controls .select-holder {\n      border-bottom: 2px solid #fff;\n      margin-right: .5em;\n      display: inline-block;\n      margin-top: 0.5em;\n      margin-bottom: 1em; }\n      .control-box .controls .select-holder select {\n        cursor: pointer; }\n      .control-box .controls .select-holder.select-day {\n        width: 20%; }\n      .control-box .controls .select-holder.select-month {\n        width: 55%; }\n        .control-box .controls .select-holder.select-month select {\n          text-transform: capitalize; }\n      .control-box .controls .select-holder span {\n        font-size: .7em;\n        text-transform: uppercase;\n        letter-spacing: 0.1em; }\n      .control-box .controls .select-holder.select-display {\n        width: 100%;\n        margin: 0; }\n    .control-box .controls select {\n      width: 100%;\n      font-size: .95em;\n      margin: .5em 0;\n      background: transparent;\n      border: none;\n      color: #fff;\n      outline: none;\n      font-weight: 900; }\n      .control-box .controls select hr {\n        position: absolute;\n        bottom: 0; }\n  .control-box .min-button {\n    width: 1.4em;\n    height: 1.4em;\n    text-align: center;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transition: 0.4s;\n    cursor: pointer; }\n    .control-box .min-button span {\n      transition: .6s;\n      transform: rotate(45deg);\n      display: block; }\n  .control-box.minimized {\n    left: -2em;\n    width: 0em;\n    padding: .75em 1.4em; }\n    .control-box.minimized .min-button {\n      right: 0; }\n      .control-box.minimized .min-button span {\n        transform: rotate(0); }\n    .control-box.minimized .controls {\n      transition: .1s;\n      visibility: hidden;\n      height: 0 !important;\n      opacity: 0 !important; }\n  .control-box h1 {\n    margin: 0;\n    font-size: 2.5em; }\n  .control-box h2 {\n    margin: 0;\n    font-weight: 400;\n    font-size: 1.2em;\n    margin-left: 0.15em; }\n  .control-box .time-slider {\n    width: 100%; }\n  .control-box input[type=range] {\n    position: relative;\n    z-index: 2;\n    -webkit-appearance: none;\n    /* Hides the slider so that custom slider can be made */\n    width: 100%;\n    /* Specific width is required for Firefox. */\n    background: transparent;\n    /* Otherwise white in Chrome */ }\n  .control-box input[type=range]::-webkit-slider-thumb {\n    -webkit-appearance: none; }\n  .control-box input[type=range]:focus {\n    outline: none;\n    /* Removes the blue border. You should probably do some kind of focus styling for accessibility reasons though. */ }\n  .control-box input[type=range]::-ms-track {\n    width: 100%;\n    cursor: pointer;\n    /* Hides the slider so custom styles can be added */\n    background: transparent;\n    border-color: transparent;\n    color: transparent; }\n  .control-box input[type=range]::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    border: none;\n    height: 25px;\n    width: 25px;\n    border-radius: 50%;\n    background: #ffffff;\n    cursor: pointer; }\n  .control-box input[type=range]::-moz-range-thumb {\n    border: none;\n    height: 25px;\n    width: 25px;\n    border-radius: 50%;\n    background: #ffffff;\n    cursor: pointer; }\n  .control-box input[type=range]::-ms-thumb {\n    border: none;\n    height: 25px;\n    width: 25px;\n    border-radius: 50%;\n    background: #ffffff;\n    cursor: pointer; }\n  .control-box .slider {\n    position: relative;\n    padding: 2em 0; }\n    .control-box .slider hr {\n      z-index: 1;\n      position: absolute;\n      top: 50%;\n      left: 0;\n      right: 0;\n      margin: 0;\n      border: 2px solid;\n      border-color: rgba(255, 255, 255, 0.3);\n      margin-top: -2px; }\n  .control-box .display-time {\n    font-size: 2em;\n    font-weight: 300;\n    position: absolute;\n    bottom: .5em; }\n  .control-box .view-option {\n    height: 100%;\n    width: 100%;\n    position: relative;\n    display: table;\n    margin-top: 1em; }\n    .control-box .view-option .option {\n      width: 50%;\n      float: left;\n      display: inline-block;\n      text-align: center;\n      background: transparent;\n      border: none;\n      color: #fff;\n      font-size: .83em;\n      transition: .2s;\n      opacity: .7;\n      outline: none;\n      padding: 0 0 1em 0;\n      cursor: pointer;\n      height: 2.6em; }\n      .control-box .view-option .option.selected {\n        font-weight: 900;\n        font-size: 0.85em;\n        opacity: 1; }\n    .control-box .view-option hr {\n      position: absolute;\n      bottom: 0em;\n      width: 50%;\n      margin: 0;\n      transition: 0.2s;\n      border: 3px solid #fff; }\n      .control-box .view-option hr.left {\n        left: 0;\n        right: 50%; }\n      .control-box .view-option hr.right {\n        right: 0;\n        left: 50%; }\n\n.testContainer img {\n  width: 500px;\n  height: auto; }\n\n.testContainer .gradient {\n  width: 500px;\n  height: 332px;\n  border: 1px solid red; }\n\n.tile {\n  display: inline-block;\n  float: left;\n  height: 100%;\n  padding: 0 1px;\n  margin: 0 -1px;\n  background: #000;\n  position: relative; }\n  .tile .tile-gradient {\n    height: 100%;\n    width: 25%;\n    display: inline-block;\n    float: left; }\n  .tile .date-time-container {\n    position: absolute;\n    z-index: 1;\n    background: rgba(0, 0, 0, 0.7);\n    color: #fff;\n    bottom: 1em;\n    left: 1em;\n    padding: 1em; }\n    .tile .date-time-container .date {\n      font-weight: 900; }\n\n.tile-container {\n  width: 100%;\n  height: 100%;\n  display: table;\n  background: black; }\n  .tile-container.week .tile {\n    width: 14.28%; }\n  .tile-container.day .tile {\n    width: 100%; }\n  .tile-container.day .date {\n    font-size: 6em; }\n  .tile-container.day .time {\n    font-size: 3.5em;\n    font-weight: 300; }\n  .tile-container .no-data {\n    color: #fff;\n    position: absolute;\n    top: 40%;\n    text-align: center;\n    width: 100%; }\n    .tile-container .no-data p {\n      background: rgba(0, 0, 0, 0.4);\n      padding: 0.5em 1em;\n      margin: 0 auto;\n      width: auto;\n      display: inline-block;\n      color: #b7b7b7; }\n  .tile-container .no-data-screen {\n    height: 100%;\n    width: 100%;\n    background: url(" + escape(__webpack_require__(17)) + ");\n    opacity: 0.5; }\n  .tile-container .tile-chunk {\n    position: absolute;\n    background: yellow;\n    width: 100%; }\n    .tile-container .tile-chunk.empty-chunk {\n      background: url(" + escape(__webpack_require__(17)) + ");\n      opacity: 0.5; }\n    .tile-container .tile-chunk .tile-gradient {\n      height: 100%;\n      width: 25%;\n      display: inline-block;\n      float: left; }\n\n.time-hover {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0; }\n  .time-hover .time {\n    border-top: 2px dashed #ccc;\n    width: 100%;\n    text-align: right;\n    padding: 10px 20px 0 0;\n    font-weight: 900;\n    color: #fff; }\n  .time-hover .time-text {\n    position: relative;\n    z-index: 2; }\n  .time-hover .time-background {\n    position: absolute;\n    background: rgba(0, 0, 0, 0.4);\n    right: 5px;\n    top: 7px;\n    bottom: -4px;\n    width: 5em;\n    z-index: 1; }\n", ""]);

// exports


/***/ }),
/* 42 */
/***/ (function(module, exports) {

module.exports = function escape(url) {
    // If url is already wrapped in quotes, remove them
    if (/^['"].*['"]$/.test(url)) {
        url = url.slice(1, -1);
    }
    // Should url be wrapped?
    // See https://drafts.csswg.org/css-values-3/#urls
    if (/["'() \t\n]/.test(url)) {
        return '"' + url.replace(/"/g, '\\"').replace(/\n/g, '\\n') + '"'
    }

    return url
}


/***/ }),
/* 43 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getElement = (function (fn) {
	var memo = {};

	return function(selector) {
		if (typeof memo[selector] === "undefined") {
			var styleTarget = fn.call(this, selector);
			// Special case to return head of iframe instead of iframe itself
			if (styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[selector] = styleTarget;
		}
		return memo[selector]
	};
})(function (target) {
	return document.querySelector(target)
});

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(45);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
	if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertInto + " " + options.insertAt.before);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	options.attrs.type = "text/css";

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	options.attrs.type = "text/css";
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 45 */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/***/ })
/******/ ]);